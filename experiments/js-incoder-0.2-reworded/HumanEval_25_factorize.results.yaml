name: HumanEval_25_factorize
language: js
results:
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = factorize;\n\
    \  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2, 2]);\n\
    \  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmppmldhucj.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppmldhucj.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tlet factors\
    \ = [];\n\tlet primes = [];\n\tlet primeFactors = [];\n\tlet factorization = [];\n\
    \tlet primeFactorsIndex = [];\n\tlet primeFactorsIndexLength = 0;\n\tlet primeFactorsIndexMaxLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLength = 0;\n\tlet primeFactorsIndexMaxLengthLengthLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLength = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLength = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLength = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLength = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\t\
    let primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\t\
    let primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\t\
    let primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\t\
    let primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\t\
    let primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\t\
    let primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\t\
    let primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength\
    \ = 0;\n\tlet primeFactorsIndexMaxLengthLengthLengthLengthLengthLength = 0;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = factorize;\n  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2,\
    \ 2]);\n  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp01u28tje.js:21\n\tlet primeFactorsIndexMaxLengthLengthLengthLength\
    \ = 0;\n\t    ^\n\nSyntaxError: Identifier 'primeFactorsIndexMaxLengthLengthLengthLength'\
    \ has already been declared\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = factorize;\n\
    \  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2, 2]);\n\
    \  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmppejxmz2y.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppejxmz2y.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n    var\
    \ factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        while(n\
    \ % i == 0){\n            factors.push(i);\n            n /= i;\n        }\n \
    \   }\n    return factors;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = factorize;\n  assert.deepEqual(candidate(2),[2]);\n\
    \  assert.deepEqual(candidate(4),[2, 2]);\n  assert.deepEqual(candidate(8),[2,\
    \ 2, 2]);\n  assert.deepEqual(candidate(57),[3, 19]);\n  assert.deepEqual(candidate(3249),[3,\
    \ 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3, 3, 3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n  assert.deepEqual(candidate(18),[2,\
    \ 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmpskq_w2p5.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpskq_w2p5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tlet factors\
    \ = [];\n\tlet factor = 1;\n\tlet factorization = [];\n\tlet factorizationIndex\
    \ = 0;\n\tlet factorizationArray = [];\n\tlet factorizationArrayIndex = 0;\n\t\
    let factorizationArrayLength = 0;\n\tlet factorizationArrayMaxLength = 0;\n\t\
    let factorizationArrayMaxLengthIndex = 0;\n\tlet factorizationArrayMaxLengthValue\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValue\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = factorize;\n  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2,\
    \ 2]);\n  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpc03m62fn.js:22\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\
    \t    ^\n\nSyntaxError: Identifier 'factorizationArrayMaxLengthValueIndex' has\
    \ already been declared\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n    var\
    \ factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i\
    \ == 0){\n            factors.push(i);\n            n = n / i;\n        }\n  \
    \  }\n    return factors;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = factorize;\n  assert.deepEqual(candidate(2),[2]);\n\
    \  assert.deepEqual(candidate(4),[2, 2]);\n  assert.deepEqual(candidate(8),[2,\
    \ 2, 2]);\n  assert.deepEqual(candidate(57),[3, 19]);\n  assert.deepEqual(candidate(3249),[3,\
    \ 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3, 3, 3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n  assert.deepEqual(candidate(18),[2,\
    \ 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmp0xel3qbt.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0xel3qbt.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\tvar factor = 1;\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tfactor *= i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = factorize;\n  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2,\
    \ 2]);\n  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmpmzt4m532.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmzt4m532.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\t\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\
    \tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\t\n\treturn factors;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = factorize;\n\
    \  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2, 2]);\n\
    \  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmptlkhyzy5.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptlkhyzy5.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n    var\
    \ factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i\
    \ == 0){\n            factors.push(i);\n            n = n / i;\n        }\n  \
    \  }\n    return factors;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = factorize;\n  assert.deepEqual(candidate(2),[2]);\n\
    \  assert.deepEqual(candidate(4),[2, 2]);\n  assert.deepEqual(candidate(8),[2,\
    \ 2, 2]);\n  assert.deepEqual(candidate(57),[3, 19]);\n  assert.deepEqual(candidate(3249),[3,\
    \ 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3, 3, 3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n  assert.deepEqual(candidate(18),[2,\
    \ 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmpjlwms8mu.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjlwms8mu.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\t\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\
    \tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\t\n\treturn factors;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = factorize;\n\
    \  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2, 2]);\n\
    \  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmpxe05m3ki.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxe05m3ki.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\tvar factor = 1;\n\twhile(factor*factor <= n){\n\t\tif(n % factor ==\
    \ 0){\n\t\t\tfactors.push(factor);\n\t\t\tn /= factor;\n\t\t}\n\t\tfactor++;\n\
    \t}\n\tif(n > 1){\n\t\tfactors.push(factor);\n\t}\n\treturn factors;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = factorize;\n\
    \  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2, 2]);\n\
    \  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmpshxcc9tt.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpshxcc9tt.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tlet factors\
    \ = [];\n\tlet factor = 1;\n\tlet factorization = [];\n\tlet i = 1;\n\tlet j =\
    \ 1;\n\tlet k = 1;\n\tlet temp;\n\tlet temp2;\n\tlet temp3;\n\tlet temp4;\n\t\
    let temp5;\n\tlet temp6;\n\tlet temp7;\n\tlet temp8;\n\tlet temp9;\n\tlet temp10;\n\
    \tlet temp11;\n\tlet temp12;\n\tlet temp13;\n\tlet temp14;\n\tlet temp15;\n\t\
    let temp16;\n\tlet temp17;\n\tlet temp18;\n\tlet temp19;\n\tlet temp20;\n\tlet\
    \ temp21;\n\tlet temp22;\n\tlet temp23;\n\tlet temp24;\n\tlet temp25;\n\tlet temp26;\n\
    \tlet temp27;\n\tlet temp28;\n\tlet temp29;\n\tlet temp30;\n\tlet temp31;\n\t\
    let temp32;\n\tlet temp33;\n\tlet temp34;\n\tlet temp35;\n\tlet temp36;\n\tlet\
    \ temp37;\n\tlet temp38;\n\tlet temp39;\n\tlet temp40;\n\tlet temp41;\n\tlet temp42;\n\
    \tlet temp43;\n\tlet temp44;\n\tlet temp45;\n\tlet temp46;\n\tlet temp47;\n\t\
    let temp48;\n\tlet temp49;\n\tlet temp50;\n\tlet temp51;\n\tlet temp52;\n\tlet\
    \ temp53;\n\tlet temp54;\n\tlet temp55;\n\tlet temp56;\n\tlet temp57;\n\tlet temp58;\n\
    \tlet temp59;\n\tlet temp60;\n\tlet temp61;\n\tlet temp62;\n\tlet temp63;\n\t\
    let temp64;\n\tlet temp65;\n\tlet temp66;\n\tlet temp67;\n\tlet temp68;\n\tlet\
    \ temp69;\n\tlet temp70;\n\tlet temp71;\n\tlet temp72;\n\tlet temp73;\n\tlet temp74;\n\
    \tlet temp75;\n\tlet temp76;\n\tlet temp77;\n\tlet temp78;\n\tlet temp79;\n\t\
    let temp80;\n\tlet temp81;\n\tlet temp82;\n\tlet temp83;\n\tlet temp\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = factorize;\n\
    \  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2, 2]);\n\
    \  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_b93i97a.js:100\n\tlet temp\n\t    ^\n\nSyntaxError: Identifier\
    \ 'temp' has already been declared\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = factorize;\n\
    \  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2, 2]);\n\
    \  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmp5d5dq1g1.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5d5dq1g1.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = factorize;\n\
    \  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2, 2]);\n\
    \  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmps70g_t7f.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps70g_t7f.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\tvar factor = 1;\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\twhile(n\
    \ % i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\tfactors.push(1);\n\
    \treturn factors;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = factorize;\n  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2,\
    \ 2]);\n  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmpm0ioz5i4.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm0ioz5i4.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = factorize;\n\
    \  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2, 2]);\n\
    \  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmpvax9j_u8.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvax9j_u8.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = factorize;\n\
    \  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2, 2]);\n\
    \  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmpbzuslpmu.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbzuslpmu.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\tvar factor = 1;\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\twhile(n\
    \ % i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\tfactors.push(factor);\n\
    \treturn factors;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = factorize;\n  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2,\
    \ 2]);\n  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmpxjbnfirj.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxjbnfirj.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n\tvar factors\
    \ = [];\n\t\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\
    \tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\t\n\treturn factors;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = factorize;\n\
    \  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2, 2]);\n\
    \  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
    \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
    \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmp_mlyq7a2.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_mlyq7a2.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return array of prime factors of given integer in the order from smallest\
    \ to largest.\n// Each of the factors should be arrayed number of times corresponding\
    \ to how many times it appeares in factorization.\n// Input number should be equal\
    \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
    // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n    var\
    \ factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i\
    \ == 0){\n            factors.push(i);\n            while(n % i == 0){\n     \
    \           n /= i;\n                factors.push(i);\n            }\n       \
    \ }\n    }\n    return factors;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = factorize;\n  assert.deepEqual(candidate(2),[2]);\n\
    \  assert.deepEqual(candidate(4),[2, 2]);\n  assert.deepEqual(candidate(8),[2,\
    \ 2, 2]);\n  assert.deepEqual(candidate(57),[3, 19]);\n  assert.deepEqual(candidate(3249),[3,\
    \ 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3, 3, 3, 19, 19, 19]);\n\
    \  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n  assert.deepEqual(candidate(18),[2,\
    \ 3, 3]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  2\n]\n    at test (/tmp/tmpyp649vmm.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyp649vmm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

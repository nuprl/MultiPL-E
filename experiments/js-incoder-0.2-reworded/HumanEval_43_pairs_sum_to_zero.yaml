name: HumanEval_43_pairs_sum_to_zero
language: js
prompt: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
  \ true if there are two distinct elements in the array that\n// sum to zero, and\
  \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
  \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
  \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
  // false\nfunction pairs_sum_to_zero(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
  \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
  \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
  \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
completions: ["    var pairs = _.zip(l, l.slice(1));\n    return _.all(pairs, function(pair){\n\
    \        return pair[0] === pair[1];\n    });\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n\
    \    return [x, l[0]];\n  });\n  var sum = 0;\n  for(var i = 0; i < pairs.length;\
    \ i++){\n    sum += pairs[i][0];\n  }\n  return sum === 0;\n}\n", "  var pairs\
    \ = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum\
    \ += pairs[i];\n  }\n  return sum === 0;\n}\n", "  var pairs = l.slice();\n  var\
    \ sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n  }\n\
    \  return sum === 0;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var\
    \ i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum === 0){\n     \
    \ return true;\n    }\n  }\n  return false;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n\
    \  return sum === 0;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var\
    \ i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum === 0){\n     \
    \ return true;\n    }\n  }\n  return false;\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n \
    \   sum += pair[1];\n  });\n  return sum === 0;\n}\n", "\tlet pairs = l.map(function(x){\n\
    \t\treturn [x, -x];\n\t});\n\tlet sums = pairs.map(function(x){\n\t\treturn x.reduce(function(a,\
    \ b){\n\t\t\treturn a + b;\n\t\t});\n\t});\n\treturn sums.filter(function(x){\n\
    \t\treturn x === 0;\n\t}).length === 0;\n}\n", "  if(l.length < 2){\n    return\
    \ false;\n  }\n  if(l.length == 2){\n    return l[0] === l[1];\n  }\n  var pairs\
    \ = l.slice(1).reduce(function(p,c){\n    return p + c;\n  });\n  return pairs\
    \ === 0;\n}\n", "    var sum = 0;\n    for(var i=0; i<l.length; i++){\n      \
    \  sum += l[i];\n    }\n    return sum === 0;\n}\n", "    var sum = 0;\n    for(var\
    \ i in l){\n        sum += l[i];\n    }\n    return sum == 0;\n}\n", "    var\
    \ sum = 0;\n    for(var i=0;i<l.length;i++){\n        sum += l[i];\n    }\n  \
    \  for(var i=0;i<l.length;i++){\n        sum += l[i];\n        if(sum === 0){\n\
    \            return true;\n        }\n    }\n    return false;\n}\n", "    var\
    \ pairs = [];\n    for(var i = 0; i < l.length; i++){\n        var pair = [l[i],\
    \ l[(i+1)%l.length]];\n        if(pairs.indexOf(pair) == -1){\n            pairs.push(pair);\n\
    \        }\n    }\n    return pairs.length == 2;\n}\n", "  var pairs = _.zip(l,\
    \ l.slice(1));\n  return _.all(pairs, function(pair){\n    return pair[0] ===\
    \ pair[1];\n  });\n}\n", "    var i, j, sum;\n    for(i = 0; i < l.length; i++){\n\
    \        sum = 0;\n        for(j = 0; j < l.length; j++){\n            sum +=\
    \ l[j];\n            if(sum === 0){\n                return false;\n         \
    \   }\n        }\n    }\n    return true;\n}\n", "  var pairs = l.slice(0);\n\
    \  var sum = 0;\n  for (var i = 0; i < pairs.length; i++){\n    sum += pairs[i];\n\
    \    if (sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).reduce(function(p,\
    \ c){\n    return p + c;\n  }, 0);\n  if(pairs === 0){\n    return true;\n  }\n\
    \  return false;\n}\n", "    var pairs = l.slice();\n    var sum = 0;\n    for(var\
    \ i = 0; i < pairs.length; i++){\n        sum += pairs[i];\n    }\n    return\
    \ sum === 0;\n}\n", "    var pairs = l.filter(function(elem, index, arr){\n  \
    \      return index > 0 && elem > arr[index-1];\n    });\n    return pairs.length\
    \ == 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return pair[0];\n  });\n  var sum = 0;\n  for(var i = 0; i < pairs.length;\
    \ i++){\n    sum += pairs[i];\n  }\n  for(var i = 0; i < pairs.length; i++){\n\
    \    if(pairs[i] != 0){\n      return false;\n    }\n  }\n  return sum == 0;\n\
    }\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  var i, j, sum;\n  for(i = 0; i < l.length; i++){\n\
    \    sum = 0;\n    for(j = 0; j < l.length; j++){\n      sum += l[j];\n      if(sum\
    \ === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n", " \
    \ var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n \
    \   sum += pair[1];\n  });\n  return sum === 0;\n}\n", "\tfor(var i=0; i<l.length;\
    \ i++){\n\t\tfor(var j=i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\
    \t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  var pairs =\
    \ l.slice();\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \   var pairs = l.slice();\n    var sum = 0;\n    for(var i=0; i<pairs.length;\
    \ i++){\n        sum += pairs[i];\n    }\n    return sum === 0;\n}\n", "  var\
    \ pairs = l.slice();\n  var sum = 0;\n  var first = true;\n  var pair;\n  while(pairs.length\
    \ > 0){\n    pair = pairs.shift();\n    sum += pair[0];\n    if(sum === 0){\n\
    \      return true;\n    }\n    pairs.unshift(pair);\n  }\n  return false;\n}\n",
  "    var pairs = l.slice();\n    var sum = 0;\n    for(var i=0; i<pairs.length;\
    \ i++){\n        sum += pairs[i];\n    }\n    return sum === 0;\n}\n", "  var\
    \ sum = 0;\n  var l = l.slice();\n  for(var i=0; i<l.length; i++){\n    sum +=\
    \ l[i];\n  }\n  return sum === 0;\n}\n", "\tfor(var i = 0; i<l.length; i++){\n\
    \t\tfor(var j = i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j] === 0){\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  if(l.length < 2){\n\
    \    return false;\n  }\n  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var\
    \ i=0; i<pairs.length; i++){\n    sum += pairs[i][1];\n  }\n  return sum === 0;\n\
    }\n", "    var pairs = _.pairs(l);\n    var sum = 0;\n    for(var i=0; i<pairs.length;\
    \ i++){\n        sum += pairs[i][1];\n    }\n    return sum === 0;\n}\n", "  var\
    \ sum = 0;\n  for (var i = 0; i < l.length; i++){\n    sum += l[i];\n  }\n  return\
    \ sum === 0;\n}\n", "    var pairs = l.slice();\n    var sum = 0;\n    for(var\
    \ i = 0; i < pairs.length; i++){\n        sum += pairs[i];\n        if(sum ===\
    \ 0){\n            return false;\n        }\n    }\n    return true;\n}\n", " \
    \ var pairs = l.map(function(i){\n    return [i,0];\n  });\n  pairs.forEach(function(pair){\n\
    \    var i = pair[0];\n    var j = pair[1];\n    pairs[i] = [j,0];\n  });\n  var\
    \ pairs2 = pairs.filter(function(pair){\n    return pair[1] === 0;\n  });\n  return\
    \ pairs2.length === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n \
    \ var pairs = l.slice(1).map(function(pair){\n    return [pair[0], pair[0]+pair[1]];\n\
    \  });\n  var zeros = pairs.filter(function(pair){\n    return pair[1] === 0;\n\
    \  });\n  return zeros.length === 0;\n}\n", "    var i, j, sum;\n    for(i = 0;\
    \ i < l.length; i++){\n        sum = 0;\n        for(j = 0; j < l.length; j++){\n\
    \            sum += l[j];\n        }\n        if(sum === 0){\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "  var sum = 0;\n  for (var\
    \ i = 0; i < l.length; i++){\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
  "    var pairs = l.slice();\n    var sum = 0;\n    for(var i=0; i<pairs.length;\
    \ i++){\n        sum += pairs[i];\n    }\n    return sum === 0;\n}\n", "  var\
    \ pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n \
    \   sum += pairs[i];\n  }\n  return sum === 0;\n}\n", "  var pairs = _.zip(l,\
    \ l.slice(1));\n  return _.all(pairs, function(pair){\n    return pair[0] ===\
    \ pair[1];\n  });\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs\
    \ = l.slice().sort();\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n\
    \    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "    var sum = 0;\n    for(var i=0; i<l.length; i++){\n      \
    \  sum += l[i];\n    }\n    return sum == 0;\n}\n", "    var pairs = _.zip(l,\
    \ l.slice(1));\n    return _.every(pairs, function(pair){\n        return pair[0]\
    \ === pair[1];\n    });\n}\n", "  if(l.length < 2){\n    return false;\n  }\n\
    \  if(l.length == 2){\n    return l[0] === l[1];\n  }\n  var pairs = l.slice(1).reduce(function(acc,\
    \ val, i){\n    if(val > 0){\n      acc.push([l[i], val]);\n    }\n    return\
    \ acc;\n  }, []);\n  return pairs.reduce(function(acc, pair){\n    return acc\
    \ && pair[1] === 0;\n  }, true);\n}\n", "  var pairs = l.map(function(x){\n  \
    \  return [x];\n  });\n  var zeros = pairs.map(function(x){\n    return x.filter(function(y){\n\
    \      return y === 0;\n    });\n  });\n  return zeros.filter(function(x){\n \
    \   return x.length === 1;\n  }).length === 0;\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return false;\n    }\n  }\n  return true;\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  var pairs = _.pairs(l);\n  var\
    \ sum = 0;\n  for(var i=0;i<pairs.length;i++){\n    sum += pairs[i][1];\n  }\n\
    \  return sum === 0;\n}\n", "    var i, j, sum;\n    for(i = 0; i < l.length;\
    \ i++){\n        sum = 0;\n        for(j = 0; j < l.length; j++){\n          \
    \  sum += l[j];\n        }\n        if(sum === 0){\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "  if(l.length < 2)\n    return false;\n\
    \  var pairs = l.slice(1).map(function(elem, index, arr){\n    return [elem, arr[index-1]];\n\
    \  });\n  pairs.sort();\n  if(pairs[0][0] === pairs[1][0])\n    return false;\n\
    \  else\n    return true;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n\
    \  var pairs = l.slice(1).map(function(v, i){\n    return [l[0], v];\n  });\n\
    \  pairs.forEach(function(pair){\n    var sum = 0;\n    for(var i=0; i<pair.length;\
    \ i++){\n      sum += pair[i];\n    }\n    if(sum === 0){\n      return true;\n\
    \    }\n  });\n  return false;\n}\n", "\tfor(var i=0;i<l.length;i++){\n\t\tfor(var\
    \ j=i+1;j<l.length;j++){\n\t\t\tif(l[i]+l[j]===0){\n\t\t\t\treturn false;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  var pairs = l.slice(1).reduce(function(p, c){\n    p[c] = p[c] || [];\n\
    \    p[c].push(c);\n    return p;\n  }, {});\n  var zeros = Object.keys(pairs).filter(function(k){\n\
    \    return pairs[k].length === 0;\n  });\n  return zeros.length === 0;\n}\n",
  "    var pairs = _.pairs(l);\n    var sum = 0;\n    for(var i=0;i<pairs.length;i++){\n\
    \        sum += pairs[i][1];\n    }\n    return sum === 0;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(v, i){\n\
    \    return [l[0], v];\n  });\n  var zeros = pairs.filter(function(v){\n    return\
    \ v[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "  var sum = 0;\n  for(var\
    \ i=0; i<l.length; i++){\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "\t\
    for(var i = 0; i<l.length; i++){\n\t\tfor(var j = i+1; j<l.length; j++){\n\t\t\
    \tif(l[i] + l[j] === 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(v,\
    \ i){\n    return [l[0], v];\n  });\n  var sum = 0;\n  for(var i = 0; i < pairs.length;\
    \ i++){\n    sum += pairs[i][1];\n  }\n  return sum === 0;\n}\n", "    var pairs\
    \ = _.pairs(l);\n    var sum = 0;\n    _.each(pairs, function(pair){\n       \
    \ sum += pair[1];\n    });\n    return sum === 0;\n}\n", "    var sum = 0;\n \
    \   var n = l.length;\n    for(var i=0; i<n; i++){\n        sum += l[i];\n   \
    \ }\n    return sum === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n\
    \  var pairs = l.slice(1).map(function(x){\n    return [x, l[0]];\n  });\n  var\
    \ sum = 0;\n  pairs.forEach(function(pair){\n    sum += pair[0];\n  });\n  return\
    \ sum === 0;\n}\n", "\tfor(var i=0;i<l.length;i++){\n\t\tfor(var j=i+1;j<l.length;j++){\n\
    \t\t\tif(l[i]+l[j]==0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n", "    var sum = 0;\n    for(var i=0; i<l.length; i++){\n       \
    \ sum += l[i];\n    }\n    return sum === 0;\n}\n", "  var pairs = _.zip(l, l.slice(1));\n\
    \  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[0];\n  });\n\
    \  return sum === 0;\n}\n", "  var pairs = l.slice();\n  pairs.sort(function(a,b){return\
    \ b-a});\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice();\n  pairs.sort(function(a,b){\n\
    \    return a - b;\n  });\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n\
    \    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return pair[0] + pair[1];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair === 0;\n  });\n  return zeros.length === 0;\n}\n", "  var pairs\
    \ = l.slice();\n  var sum = 0;\n  var i = 0;\n  var j = 0;\n  while(i < pairs.length\
    \ && j < pairs.length){\n    sum += pairs[i];\n    i++;\n    j++;\n  }\n  while(i\
    \ < pairs.length){\n    sum += pairs[i];\n    i++;\n  }\n  while(j < pairs.length){\n\
    \    sum -= pairs[j];\n    j++;\n  }\n  return sum === 0;\n}\n", "  var pairs\
    \ = _.pairs(l);\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n    sum +=\
    \ pairs[i][1];\n  }\n  return sum===0;\n}\n", "  var sum = 0;\n  for(var i=0;\
    \ i<l.length; i++){\n    sum += l[i];\n  }\n  return sum === 0;\n}\n", "    var\
    \ sum = 0;\n    for(var i = 0; i < l.length; i++){\n        sum += l[i];\n   \
    \ }\n    for(var i = 0; i < l.length; i++){\n        for(var j = i + 1; j < l.length;\
    \ j++){\n            if(l[i] + l[j] === 0){\n                return false;\n \
    \           }\n        }\n    }\n    return true;\n}\n", "    var pairs = l.slice();\n\
    \    var sum = 0;\n    for(var i = 0; i < pairs.length; i++){\n        sum +=\
    \ pairs[i];\n        if(sum === 0){\n            return false;\n        }\n  \
    \  }\n    return true;\n}\n", "  var sum = 0;\n  for (var i = 0; i < l.length;\
    \ i++){\n    sum += l[i];\n  }\n  for (var i = 0; i < l.length; i++){\n    for\
    \ (var j = i + 1; j < l.length; j++){\n      if (l[i] + l[j] === 0){\n       \
    \ return false;\n      }\n    }\n  }\n  return true;\n}\n", "  var i, j, sum;\n\
    \  for(i = 0; i < l.length; i++){\n    sum = 0;\n    for(j = 0; j < l.length;\
    \ j++){\n      sum += l[j];\n    }\n    if(sum === 0){\n      return true;\n \
    \   }\n  }\n  return false;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n\
    \  var i = 0;\n  var j = 0;\n  var pair;\n  while(i < pairs.length){\n    pair\
    \ = pairs[i];\n    j = i+1;\n    while(j < pairs.length){\n      if(pairs[j][0]\
    \ + pairs[j][1] !== 0){\n        pairs.splice(j,1);\n      }\n      j++;\n   \
    \ }\n    i++;\n  }\n  return pairs.length === 0;\n}\n", "\tfor(var i=0; i<l.length;\
    \ i++){\n\t\tfor(var j=i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j] === 0){\n\t\
    \t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", "    var pairs\
    \ = l.slice(0);\n    var sum = 0;\n    for(var i=0; i<pairs.length; i++){\n  \
    \      sum += pairs[i];\n    }\n    return sum === 0;\n}\n", "  if(l.length <\
    \ 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(v, i){\n\
    \    return [l[0], v];\n  });\n  var sum = 0;\n  pairs.forEach(function(pair){\n\
    \    sum += pair[1];\n  });\n  return sum === 0;\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \  }\n  return sum === 0;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n \
    \ for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum === 0){\n\
    \      return true;\n    }\n  }\n  return false;\n}\n", "  if(l.length < 2){\n\
    \    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n    return\
    \ [x, 0];\n  });\n  var pair = pairs[0];\n  for(var i = 1; i < pairs.length; i++){\n\
    \    pair = pairs.reduce(function(a, b){\n      if(a[0] + b[0] === 0){\n     \
    \   a[1] += b[1];\n      }\n      return a;\n    }, pair);\n  }\n  return pair[0]\
    \ === 0;\n}\n", "  var pairs = _.zip(l, l.slice(1).map(function(x){return -x}));\n\
    \  return _.all(pairs, function(pair){return pair[0] === 0 && pair[1] === 0;});\n\
    }\n", "    var i, j, sum;\n    for(i = 0; i < l.length; i++){\n        sum = 0;\n\
    \        for(j = 0; j < l.length; j++){\n            sum += l[j];\n          \
    \  if(sum === 0){\n                return false;\n            }\n        }\n \
    \   }\n    return true;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n\
    \  var pairs = l.slice(1).reduce(function(p,c){\n    return p + c;\n  }, 0);\n\
    \  if(pairs === 0){\n    return true;\n  }\n  if(pairs !== l.length){\n    return\
    \ false;\n  }\n  var pairs = l.slice(1).reduce(function(p,c){\n    return p +\
    \ c;\n  }, 0);\n  if(pairs === 0){\n    return true;\n  }\n  return false;\n}\n",
  "    var pairs = l.filter(function(x){\n        return l.indexOf(x) !== l.lastIndexOf(x);\n\
    \    });\n    return pairs.filter(function(x){\n        return l.indexOf(x) ===\
    \ l.lastIndexOf(x);\n    }).length === 0;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n\
    \  return sum === 0;\n}\n", "  var sum = 0;\n  for (var i = 0; i < l.length; i++){\n\
    \    sum += l[i];\n  }\n  return sum === 0;\n}\n", "    var sum = 0;\n    for(var\
    \ i=0;i<l.length;i++){\n        sum += l[i];\n    }\n    return sum === 0;\n}\n",
  "  var pairs = l.slice();\n  var sum = 0;\n  for (var i = 0; i < pairs.length; i++){\n\
    \    sum += pairs[i];\n  }\n  return sum === 0;\n}\n", "  if(l.length < 2)\n \
    \   return false;\n  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n\
    \    var pair = pairs[i];\n    sum += pair[1];\n    if(sum === 0)\n      return\
    \ false;\n  }\n  return true;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n\
    \  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n  return sum ===\
    \ 0;\n}\n", "\tfor(var i=0; i<l.length; i++){\n\t\tfor(var j=i+1; j<l.length;\
    \ j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn true;\n}\n", "    var sum = 0;\n    for(var i = 0; i < l.length; i++){\n\
    \        sum += l[i];\n    }\n    return sum == 0;\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ var pairs = l.slice();\n  var sum = 0;\n  for (var i = 0; i < pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if (sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var\
    \ pairs = l.slice(1).map(function(v, i){\n    return [l[0], v];\n  });\n  var\
    \ sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i][1];\n  }\n\
    \  return sum === 0;\n}\n", "  if(l.length == 0){\n    return false;\n  }\n  if(l.length\
    \ == 1){\n    return l[0] == 0;\n  }\n  var pairs = l.slice(1).map(function(v,\
    \ i){\n    return [v,l[i]];\n  });\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i][0];\n  }\n  return sum == 0;\n}\n", "    var pairs\
    \ = _.pairs(l);\n    var sum = 0;\n    for(var i=0;i<pairs.length;i++){\n    \
    \    sum += pairs[i][1];\n    }\n    return sum===0;\n}\n", "    var sum = 0;\n\
    \    for(var i=0; i<l.length; i++){\n        sum += l[i];\n    }\n    return sum\
    \ === 0;\n}\n", "    var pairs = _.zip(l, l.slice(1));\n    return _.every(pairs,\
    \ function(pair){\n        return pair[0] === pair[1];\n    });\n}\n", "  var\
    \ pairs = l.slice();\n  pairs.sort(function(a,b){return b-a});\n  var sum = 0;\n\
    \  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum === 0){\n\
    \      return true;\n    }\n  }\n  return false;\n}\n", "    var pairs = l.slice();\n\
    \    var sum = 0;\n    var first = true;\n    for(var i=0; i<pairs.length; i++){\n\
    \        sum += pairs[i];\n        if(sum === 0){\n            return first;\n\
    \        }\n        first = false;\n    }\n    return false;\n}\n", "  if(l.length\
    \ < 2) return false;\n  var pairs = l.slice(1).map(function(x){return [x[0], x[0]+x[1]];});\n\
    \  var zeros = pairs.filter(function(x){return x[1] == 0;});\n  return zeros.length\
    \ == pairs.length && zeros.length == pairs.length/2;\n}\n", "  if(l.length ==\
    \ 0){\n    return false;\n  }\n  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var\
    \ i=0;i<pairs.length;i++){\n    sum += pairs[i][1];\n  }\n  return sum == 0;\n\
    }\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n  }\n  return sum === 0;\n}\n", "    var pairs\
    \ = _.zip(l, l.slice(1).map(function(x){return -x}));\n    return _.all(pairs,\
    \ function(pair){return pair[0] === pair[1]});\n}\n", "  var pairs = l.slice();\n\
    \  pairs.sort(function(a,b){\n    return a - b;\n  });\n  var sum = 0;\n  for(var\
    \ i=0;i<pairs.length;i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n", "    var pairs = l.slice();\n    var\
    \ sum = 0;\n    for(var i = 0; i < pairs.length; i++){\n        sum += pairs[i];\n\
    \        if(sum === 0){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n\
    \    sum += pairs[i][1];\n  }\n  return sum===0;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n\
    \  return sum === 0;\n}\n", "    var pairs = l.map(function(x){\n        return\
    \ [x, -x];\n    });\n    var sums = pairs.map(function(pair){\n        return\
    \ pair.reduce(function(a, b){\n            return a + b;\n        });\n    });\n\
    \    return sums.filter(function(sum){\n        return sum === 0;\n    }).length\
    \ === 0;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n  }\n  return sum === 0;\n}\n", "  var pairs =\
    \ _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n\
    \  });\n  return sum === 0;\n}\n", "  var i, j, sum;\n  for(i=0, sum=0;i<l.length;i++){\n\
    \    for(j=i+1;j<l.length;j++){\n      if(l[i]+l[j] === 0){\n        sum++;\n\
    \      }\n    }\n  }\n  return sum === 2;\n}\n", "    var sum = 0;\n    for(var\
    \ i = 0; i < l.length; i++){\n        sum += l[i];\n    }\n    return sum ===\
    \ 0;\n}\n", "  var pairs = _.zip(l, _.tail(l));\n  return _.every(pairs, function(pair){\n\
    \    return pair[0] === pair[1];\n  });\n}\n", "  for(var i=0; i<l.length; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  var pairs = _.zip(l, l.slice(1).map(function(x){return\
    \ -x}));\n  return _.all(pairs, function(pair){return pair[0] === pair[1]});\n\
    }\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n  }\n  return sum === 0;\n}\n", "  for(var i=0;\
    \ i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j]\
    \ == 0){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n", " \
    \   var pairs = _.zip(l, l.slice(1).map(function(x){return -x}));\n    return\
    \ _.all(pairs, function(pair){\n        return pair[0] === pair[1];\n    });\n\
    }\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i = 0; i < pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "    var pairs = _.zip(l, l.slice(1));\n    return\
    \ _.every(pairs, function(pair){\n        return pair[0] === pair[1];\n    });\n\
    }\n", "    var pairs = l.slice();\n    var sum = 0;\n    for(var i = 0; i < pairs.length;\
    \ i++){\n        sum += pairs[i];\n    }\n    return sum === 0;\n}\n", "    var\
    \ i, j, sum;\n    for(i = 0; i < l.length; i++){\n        sum = 0;\n        for(j\
    \ = 0; j < l.length; j++){\n            sum += l[j];\n            if(sum === 0){\n\
    \                return false;\n            }\n        }\n    }\n    return true;\n\
    }\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n  }\n  return sum === 0;\n}\n", "  var sum = 0;\n\
    \  for (var i = 0; i < l.length; i++){\n    sum += l[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "  var pairs = _.zip(l, l.slice(1));\n  return _.all(pairs, function(pair){\n\
    \    return pair[0] === 0 && pair[1] === 0;\n  });\n}\n", "    var sum = 0;\n\
    \    for(var i=0; i<l.length; i++){\n        sum += l[i];\n    }\n    return sum\
    \ === 0;\n}\n", "    var pairs = l.slice();\n    var sum = 0;\n    for(var i =\
    \ 0; i < pairs.length; i++){\n        sum += pairs[i];\n        if(sum === 0){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "    var\
    \ sum = 0;\n    for(var i=0; i<l.length; i++){\n        sum += l[i];\n    }\n\
    \    for(var i=0; i<l.length; i++){\n        sum += l[i];\n        if(sum ===\
    \ 0){\n            return false;\n        }\n    }\n    return true;\n}\n", " \
    \ var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n \
    \   sum += pair[1];\n  });\n  return sum === 0;\n}\n", "    var i, j, sum;\n \
    \   for(i = 0; i < l.length; i++){\n        sum = 0;\n        for(j = 0; j < l.length;\
    \ j++){\n            sum += l[j];\n            if(sum === 0){\n              \
    \  return false;\n            }\n        }\n    }\n    return true;\n}\n", " \
    \ var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n\
    \    sum += pairs[i];\n  }\n  return sum === 0;\n}\n", "  var pairs = l.slice();\n\
    \  pairs.sort(function(a,b){return b-a});\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var\
    \ i=0;i<pairs.length;i++){\n    sum += pairs[i];\n    if(sum===0){\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n", "  var pairs = l.slice();\n  var sum\
    \ = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum\
    \ === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", "\tfor(var i=0;\
    \ i<l.length; i++){\n\t\tfor(var j=i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j]\
    \ === 0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", " \
    \ var pairs = l.slice();\n  pairs.sort(function(a,b){\n    return a - b;\n  });\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(i){\n\
    \    return [i[0], i[0]+i[1]];\n  });\n  var zeros = pairs.filter(function(i){\n\
    \    return i[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "    var pairs\
    \ = l.slice(0);\n    var sum = 0;\n    for(var i=0;i<pairs.length;i++){\n    \
    \    sum += pairs[i];\n    }\n    return sum === 0;\n}\n", "  if(l.length < 2){\n\
    \    return false;\n  }\n  if(l.length == 2){\n    return l[0] === l[1];\n  }\n\
    \  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n\
    \    sum += pairs[i][1];\n  }\n  return sum === 0;\n}\n", "  var pairs = _.zip(l,\
    \ l.slice(1));\n  return _.every(pairs, function(pair){\n    return pair[0] ===\
    \ pair[1];\n  });\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs\
    \ = l.slice(1).map(function(elem, index, arr){\n    return [elem, arr[index-1]];\n\
    \  });\n  return pairs.filter(function(pair){\n    return pair[0] === 0;\n  }).length\
    \ === 0;\n}\n", "  var pairs = _.zip(l, l.slice(1));\n  return _.every(pairs,\
    \ function(pair){\n    return pair[0] === pair[1];\n  });\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n \
    \   return [x, 0];\n  });\n  pairs.forEach(function(pair){\n    pair[1] += l[0];\n\
    \  });\n  return pairs.filter(function(pair){\n    return pair[1] === 0;\n  }).length\
    \ === 0;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  if(l.length < 2)\n    return false;\n  var pairs\
    \ = l.slice(1).map(function(x, i){\n    return [x[0], x[0] + l[i]];\n  });\n \
    \ return pairs.reduce(function(prev, curr){\n    return prev && curr[1] === 0;\n\
    \  }, true);\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0;\
    \ i<pairs.length; i++){\n    sum += pairs[i];\n  }\n  return sum === 0;\n}\n",
  "    var sum = 0;\n    for(var i=0; i<l.length; i++){\n        sum += l[i];\n  \
    \  }\n    return sum === 0;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n\
    \  for(var i=0;i<pairs.length;i++){\n    var pair = pairs[i];\n    if(pair[1]\
    \ > 0){\n      sum += pair[1];\n    }\n  }\n  return sum === 0;\n}\n", "  var\
    \ pairs = _.zip(l, l.slice(1));\n  var sum = 0;\n  _.each(pairs, function(pair){\n\
    \    sum += pair[0];\n  });\n  return sum === 0;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n\
    \  return sum === 0;\n}\n", "    var pairs = l.map(function(x){\n        return\
    \ [x, -x];\n    });\n    return pairs.reduce(function(prev, curr){\n        return\
    \ prev && curr[1] === 0;\n    }, true);\n}\n", "  if(l.length < 2) return false;\n\
    \  var pairs = l.slice(1).map(function(v, i){\n    return [l[0], v];\n  });\n\
    \  var sum = 0;\n  for(var i = 0; i < pairs.length; i++){\n    sum += pairs[i][1];\n\
    \  }\n  return sum === 0;\n}\n", "\tfor(var i=0;i<l.length;i++){\n\t\tfor(var\
    \ j=i+1;j<l.length;j++){\n\t\t\tif(l[i]+l[j]===0){\n\t\t\t\treturn false;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  if(l.length < 2) return false;\n  var\
    \ pairs = l.slice(1).map(function(pair){\n    return pair[0];\n  });\n  var sum\
    \ = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum\
    \ === 0) return true;\n  }\n  return false;\n}\n", "  if(l.length < 2)\n    return\
    \ false;\n  var pairs = l.slice(1).map(function(pair){\n    return pair[0] + pair[1];\n\
    \  });\n  return pairs.filter(function(pair){\n    return pair === 0;\n  }).length\
    \ === 0;\n}\n", "    var pairs = l.slice();\n    var sum = 0;\n    for(var i=0;\
    \ i<pairs.length; i++){\n        sum += pairs[i];\n    }\n    return sum === 0;\n\
    }\n", "  var sum = 0;\n  for(var i=0; i<l.length; i++){\n    sum += l[i];\n  }\n\
    \  return sum === 0;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var\
    \ i=0;i<pairs.length;i++){\n    sum += pairs[i][1];\n  }\n  return sum===0;\n\
    }\n", "  var sum = 0;\n  for (var i = 0; i < l.length; i++){\n    sum += l[i];\n\
    \  }\n  return sum === 0;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n \
    \ for(var i=0;i<pairs.length;i++){\n    sum += pairs[i];\n  }\n  return sum ===\
    \ 0;\n}\n", "\tfor(var i=0; i<l.length; i++){\n\t\tfor(var j=i+1; j<l.length;\
    \ j++){\n\t\t\tif(l[i] + l[j] === 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn true;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var\
    \ i=0; i<pairs.length; i++){\n    sum += pairs[i];\n  }\n  return sum === 0;\n\
    }\n", "  for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n\
    \      if(l[i] + l[j] == 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  var pairs = _.zip(l, l.slice(1).map(function(x){return -x}));\n\
    \  return _.any(pairs, function(pair){return pair[0] === 0 && pair[1] === 0;});\n\
    }\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n\
    \    sum += pair[1];\n  });\n  return sum === 0;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n    sum += pairs[i][1];\n\
    \  }\n  return sum===0;\n}\n", "  var pairs = _.zip(l, _.tail(l));\n  var sum\
    \ = _.sum(pairs);\n  return _.all(pairs, function(pair){\n    return pair[0] ===\
    \ 0 && pair[1] === sum;\n  });\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  var pairs = l.slice(1).map(function(v, i){\n    return [v,l[i]];\n  });\n\
    \  return pairs.filter(function(pair){\n    return pair[0] === 0;\n  }).length\
    \ === 0;\n}\n", "  var sum = 0;\n  for (var i = 0; i < l.length; i++){\n    sum\
    \ += l[i];\n  }\n  for (var i = 0; i < l.length; i++){\n    for (var j = i + 1;\
    \ j < l.length; j++){\n      if (l[i] + l[j] === 0){\n        return false;\n\
    \      }\n    }\n  }\n  return true;\n}\n", "    var pairs = l.slice();\n    var\
    \ sum = 0;\n    var pair;\n    for(var i=0; i<pairs.length; i++){\n        pair\
    \ = pairs[i];\n        if(pair < 0){\n            pair = -pair;\n        }\n \
    \       sum += pair;\n    }\n    return sum === 0;\n}\n", "  var sum = 0;\n  for\
    \ (var i = 0; i < l.length; i++){\n    sum += l[i];\n  }\n  return sum === 0;\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n\
    \    return [x, 0];\n  });\n  pairs.forEach(function(pair){\n    var sum = pair[0];\n\
    \    var index = pair[1];\n    pairs.forEach(function(pair){\n      if(pair[1]\
    \ > index){\n        pair[1]++;\n      }\n    });\n    if(sum === 0){\n      return\
    \ true;\n    }\n  });\n  return false;\n}\n", "    var pairs = _.zip(l, l.slice(1));\n\
    \    return _.all(pairs, function(pair){\n        return pair[0] === pair[1];\n\
    \    });\n}\n", "\tlet sum = 0;\n\tfor(let i = 0; i < l.length; i++){\n\t\tsum\
    \ += l[i];\n\t}\n\tfor(let i = 0; i < l.length; i++){\n\t\tfor(let j = i + 1;\
    \ j < l.length; j++){\n\t\t\tif(l[i] + l[j] === 0){\n\t\t\t\treturn false;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  var pairs = l.slice(0);\n  var sum\
    \ = 0;\n  for (var i = 0; i < pairs.length; i++){\n    sum += pairs[i];\n    if\
    \ (sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", "    var\
    \ i, j, sum;\n    for(i=0, sum=0;i<l.length;i++){\n        for(j=i+1;j<l.length;j++){\n\
    \            sum += l[i] + l[j];\n        }\n        if(sum===0){\n          \
    \  return false;\n        }\n    }\n    return true;\n}", "  var i, j, sum;\n\
    \  for(i=0, j=1; i<l.length; i++){\n    sum = l[i] + l[j];\n    if(sum === 0){\n\
    \      return true;\n    }\n    if(sum > 0){\n      j++;\n    }\n    else{\n \
    \     i++;\n    }\n  }\n  return false;\n}\n", "  var pairs = _.zip(_.range(l.length),\
    \ l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n\
    \  });\n  return sum === 0;\n}\n", "  if(l.length == 0){\n    return false;\n\
    \  }\n  if(l.length == 1){\n    return l[0] == 0;\n  }\n  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  for(var i in pairs){\n    sum += pairs[i][0];\n  }\n  return\
    \ sum == 0;\n}\n", "  var pairs = _.zip(l, l.slice(1));\n  return _.every(pairs,\
    \ function(pair){\n    return pair[0] === 0 && pair[1] === 0;\n  });\n}\n", " \
    \ var pairs = l.map(function(x){\n    return [x, -x];\n  });\n  return pairs.reduce(function(a,\
    \ b){\n    return a + b[0] === b[1];\n  }, 0) === 0;\n}\n", "    var sum = 0;\n\
    \    var n = l.length;\n    for(var i = 0; i < n; i++){\n        sum += l[i];\n\
    \        if(sum === 0){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n\
    \    return [x[0], x[0]];\n  });\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i][0];\n  }\n  return sum === 0;\n}\n", "\tfor(var i=0;\
    \ i<l.length; i++){\n\t\tfor(var j=i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j]\
    \ === 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", " \
    \ var pairs = l.slice();\n  var sum = 0;\n  for (var i = 0; i < pairs.length;\
    \ i++){\n    sum += pairs[i];\n  }\n  return sum === 0;\n}\n", "  var sum = 0;\n\
    \  for(var i=0;i<l.length;i++){\n    sum += l[i];\n  }\n  for(var i=0;i<l.length;i++){\n\
    \    sum += l[i];\n    if(sum===0){\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "  if(l.length == 0){\n    return false;\n  }\n  if(l.length ==\
    \ 1){\n    return l[0] == 0;\n  }\n  var pairs = l.slice(1).map(function(elem,\
    \ index, arr){\n    return [elem, arr[index-1]];\n  });\n  pairs.sort(function(a,\
    \ b){\n    return a[0] - b[0];\n  });\n  var zeros = pairs.filter(function(elem,\
    \ index, arr){\n    return elem[0] == 0;\n  });\n  return zeros.length == pairs.length;\n\
    }\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n\
    \    sum += pair[1];\n  });\n  return sum === 0;\n}\n", "  if(l.length < 2){\n\
    \    return false;\n  }\n  var pairs = _.zip(l, l.slice(1));\n  var sum = 0;\n\
    \  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i][0];\n    sum += pairs[i][1];\n\
    \  }\n  return sum === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n\
    \  var pairs = _.zip(l, l.slice(1));\n  for(var i=0; i<pairs.length; i++){\n \
    \   var pair = pairs[i];\n    if(pair[0] === 0 && pair[1] === 0){\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n", "  var sum = 0;\n  for(var i=0; i<l.length;\
    \ i++){\n    sum += l[i];\n  }\n  if(sum === 0){\n    return true;\n  }\n  else{\n\
    \    return false;\n  }\n}\n", "    var pairs = _.zip(l, l.slice(1).map(function(x){return\
    \ -x}));\n    return _.all(pairs, function(pair){return pair[0] === 0 && pair[1]\
    \ === 0;});\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var\
    \ i=0; i<pairs.length; i++){\n    sum += pairs[i];\n  }\n  if(sum === 0){\n  \
    \  return true;\n  }\n  else{\n    return false;\n  }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_114_minSubArraySum
language: js
prompt: "//Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n// of nums.\n// Example\n// >>> minSubArraySum([2, 3, 4, 1, 2, 4])\n\
  // 1\n// >>> minSubArraySum([-1, -2, -3])\n// -6\nfunction minSubArraySum(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = minSubArraySum;\n  assert.deepEqual(candidate([2, 3, 4, 1, 2, 4]),1);\n  assert.deepEqual(candidate([-1,\
  \ -2, -3]),-6);\n  assert.deepEqual(candidate([-1, -2, -3, 2, -10]),-14);\n  assert.deepEqual(candidate([-9999999999999999]),-9999999999999999);\n\
  \  assert.deepEqual(candidate([0, 10, 20, 1000000]),0);\n  assert.deepEqual(candidate([-1,\
  \ -2, -3, 10, -5]),-6);\n  assert.deepEqual(candidate([100, -1, -2, -3, 10, -5]),-6);\n\
  \  assert.deepEqual(candidate([10, 11, 13, 8, 3, 4]),3);\n  assert.deepEqual(candidate([100,\
  \ -33, 32, -1, 0, -2]),-33);\n  assert.deepEqual(candidate([-10]),-10);\n  assert.deepEqual(candidate([7]),7);\n\
  \  assert.deepEqual(candidate([1, -1]),-1);\n}\n\ntest();"
completions: ["    let minSum = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        let sum = 0;\n        for(let j = 0; j < nums.length; j++){\n\
    \            sum += nums[j];\n            if(sum < minSum){\n                minSum\
    \ = sum;\n            }\n        }\n    }\n    return minSum;\n}\n", "    var\
    \ minSum = Number.MAX_VALUE;\n    var minSumIndex = 0;\n    var numsLength = nums.length;\n\
    \    for(var i=0; i<numsLength; i++){\n        var currentSum = nums[i] + nums[minSumIndex];\n\
    \        if(currentSum < minSum){\n            minSum = currentSum;\n        \
    \    minSumIndex = i;\n        }\n    }\n    return nums[minSumIndex];\n}\n",
  "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i = 0; i\
    \ < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n    \
    \        min = sum;\n        }\n    }\n    return min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let minSum = nums[0];\n    for(let i = 1; i < nums.length;\
    \ i++){\n        minSum = Math.min(minSum, nums[i]);\n    }\n    return minSum;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "  let min =\
    \ Number.MAX_SAFE_INTEGER;\n  for(let i = 0; i < nums.length; i++){\n    min =\
    \ Math.min(min, nums[i]);\n  }\n  return min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    let minSumIndex = 0;\n    for(let i = 0; i < nums.length; i++){\n       \
    \ let currentSum = nums.reduce((acc, val) => acc + val, 0);\n        if(currentSum\
    \ < minSum){\n            minSum = currentSum;\n            minSumIndex = i;\n\
    \        }\n    }\n    return nums[minSumIndex];\n}\n", "    var min = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < nums.length; i++){\n        var curSum = 0;\n        for(var\
    \ j = 0; j < nums.length; j++){\n            if(j != i){\n                curSum\
    \ += nums[j];\n            }\n        }\n        if(curSum < min){\n         \
    \   min = curSum;\n        }\n    }\n    return min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    var min = Number.MAX_VALUE;\n    for(var i = 0; i < nums.length;\
    \ i++){\n        var sum = 0;\n        for(var j = 0; j < nums.length; j++){\n\
    \            sum += nums[j];\n            if(sum < min){\n                min\
    \ = sum;\n            }\n        }\n    }\n    return min;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let minSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        minSum\
    \ = Math.min(minSum, nums[i]);\n        min = Math.min(min, minSum);\n    }\n\
    \    return min;\n}\n", "  let min = Number.MAX_SAFE_INTEGER;\n  let sum = 0;\n\
    \  for(let i = 0; i < nums.length; i++){\n    sum += nums[i];\n    if(sum < min){\n\
    \      min = sum;\n    }\n  }\n  return min;\n}\n", "    var min = Number.MAX_VALUE;\n\
    \    for(var i=0; i<nums.length; i++){\n        var sum = nums.slice(0,i).reduce(function(a,b){return\
    \ a+b});\n        if(sum < min){\n            min = sum;\n        }\n    }\n \
    \   return min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum =\
    \ 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n   \
    \     if(sum < min){\n            min = sum;\n        }\n    }\n    return min;\n\
    }\n", "    let minSum = nums[0];\n    for(let i = 1; i < nums.length; i++){\n\
    \        minSum = Math.min(minSum, nums[i]);\n    }\n    return minSum;\n}\n",
  "    let minSum = nums[0];\n    for(let i = 1; i < nums.length; i++){\n        minSum\
    \ = Math.min(minSum + nums[i], nums[i]);\n    }\n    return minSum;\n}\n", " \
    \   let minSum = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        let sum = 0;\n        for(let j = 0; j < nums.length; j++){\n\
    \            if(j >= i){\n                sum += nums[j];\n            }\n   \
    \     }\n        if(sum < minSum){\n            minSum = sum;\n        }\n   \
    \ }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        let sum = 0;\n        for(let j = 0;\
    \ j < nums.length; j++){\n            if(j > i){\n                sum += nums[j];\n\
    \            }\n        }\n        if(sum < min){\n            min = sum;\n  \
    \      }\n    }\n    return min;\n}\n", "    var minSum = Number.MAX_SAFE_INTEGER;\n\
    \    var minSumIndex = 0;\n    var currentSum = 0;\n    for(var i=0; i<nums.length;\
    \ i++){\n        currentSum += nums[i];\n        if(currentSum < minSum){\n  \
    \          minSum = currentSum;\n            minSumIndex = i;\n        }\n   \
    \ }\n    return minSum;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

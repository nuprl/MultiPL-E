name: HumanEval_136_largest_smallest_integers
language: js
prompt: "//Create a function that returns an array (a, b), where 'a' is\n// the largest\
  \ of negative integers, and 'b' is the smallest\n// of positive integers in an array.\n\
  // If there is no negative or positive integers, return them as undefined.\n// Examples:\n\
  // >>> largest_smallest_integers([2, 4, 1, 3, 5, 7])\n// [undefined, 1]\n// >>>\
  \ largest_smallest_integers([])\n// [undefined, undefined]\n// >>> largest_smallest_integers([0])\n\
  // [undefined, undefined]\nfunction largest_smallest_integers(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = largest_smallest_integers;\n  assert.deepEqual(candidate([2, 4, 1, 3, 5, 7]),[undefined,\
  \ 1]);\n  assert.deepEqual(candidate([2, 4, 1, 3, 5, 7, 0]),[undefined, 1]);\n \
  \ assert.deepEqual(candidate([1, 3, 2, 4, 5, 6, -2]),[-2, 1]);\n  assert.deepEqual(candidate([4,\
  \ 5, 3, 6, 2, 7, -7]),[-7, 2]);\n  assert.deepEqual(candidate([7, 3, 8, 4, 9, 2,\
  \ 5, -9]),[-9, 2]);\n  assert.deepEqual(candidate([]),[undefined, undefined]);\n\
  \  assert.deepEqual(candidate([0]),[undefined, undefined]);\n  assert.deepEqual(candidate([-1,\
  \ -3, -5, -6]),[-1, undefined]);\n  assert.deepEqual(candidate([-1, -3, -5, -6,\
  \ 0]),[-1, undefined]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, 1]),[-3,\
  \ 1]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, -100, 1]),[-3, 1]);\n}\n\n\
  test();"
completions: ["  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n  }\n  return [smallest, largest];\n}\n", "  var smallest = Number.MAX_VALUE;\n\
    \  var largest = Number.MIN_VALUE;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  return [smallest, largest];\n}\n", "  var smallest = lst[0];\n  var\
    \ largest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n  }\n  return [smallest, largest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [smallest,largest];\n}\n", "  var\
    \ max_num = -Infinity;\n  var min_num = Infinity;\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i] > max_num){\n      max_num = lst[i];\n    }\n    if(lst[i]\
    \ < min_num){\n      min_num = lst[i];\n    }\n  }\n  return [max_num, min_num];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(largest === undefined || largest < lst[i]){\n\
    \      largest = lst[i];\n    }\n    if(smallest === undefined || smallest > lst[i]){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var max_negative = Number.NEGATIVE_INFINITY;\n  var min_positive = Number.POSITIVE_INFINITY;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i] < min_positive){\n      min_positive\
    \ = lst[i];\n    }\n    if(lst[i] > max_negative){\n      max_negative = lst[i];\n\
    \    }\n  }\n  return [max_negative, min_positive];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]\
    \ < 0){\n      if(largest === undefined){\n        largest = lst[i];\n      }else{\n\
    \        if(largest < lst[i]){\n          largest = lst[i];\n        }\n     \
    \ }\n    }else{\n      if(smallest === undefined){\n        smallest = lst[i];\n\
    \      }else{\n        if(smallest > lst[i]){\n          smallest = lst[i];\n\
    \        }\n      }\n    }\n  }\n  return [largest,smallest];\n}\n", "  var largest\
    \ = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i\
    \ < lst.length; i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n  \
    \  }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || largest\
    \ < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var smallest = Number.MAX_VALUE;\n  var largest = Number.MIN_VALUE;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n  }\n  return [smallest, largest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || lst[i] > largest){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var\
    \ smallest = Number.MAX_VALUE;\n  for (var i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for (var\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = undefined;\n  var\
    \ smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || largest < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest\
    \ = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined\
    \ || largest < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined\
    \ || smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  return [smallest, largest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(largest === undefined || largest < lst[i]){\n\
    \      largest = lst[i];\n    }\n    if(smallest === undefined || smallest > lst[i]){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n  }\n  return [smallest, largest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(largest === undefined || lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if(smallest === undefined || lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var smallest =\
    \ lst[0];\n  var largest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n \
    \   if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest\
    \ = Number.MAX_VALUE;\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if (lst[i] < smallest){\n \
    \     smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for (var\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  return [smallest, largest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i] <\
    \ smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var smallest;\n  var largest;\n  var i;\n  var j;\n  var k;\n  var num;\n\
    \  var result;\n  var arr = [];\n  for(i = 0; i < lst.length; i++){\n    num =\
    \ lst[i];\n    for(j = i; j < lst.length; j++){\n      if(num < lst[j]){\n   \
    \     smallest = num;\n        largest = lst[j];\n      }\n      else if(num >\
    \ lst[j]){\n        smallest = lst[j];\n        largest = num;\n      }\n    \
    \  else{\n        smallest = num;\n        largest = num;\n      }\n    }\n  \
    \  arr.push(smallest);\n    arr.push(largest);\n  }\n  if(arr.length == 0){\n\
    \    return [undefined, undefined];\n  }\n  if(arr.length == 1){\n    return [arr[0],\
    \ arr[0]];\n  }\n  if(arr.length == 2){\n    return [arr[0], arr[1]];\n  }\n \
    \ if(arr.length == 3){\n    return [arr[0], arr[1]];\n  }\n  if(arr.length ==\
    \ 4){\n    return [arr[0], arr[2]];\n  }\n  if(arr.length == 5){\n    return [arr[0],\
    \ arr[3]];\n  }\n  if(arr.length == 6){\n    return [arr[0], arr[4]];\n  }\n \
    \ if(arr.length == 7){\n    return [arr[0], arr[5]];\n  }\n  if(arr.length ==\
    \ 8){\n    return [arr[0], arr[6]];\n  }\n  if(arr.length == 9){\n    return [arr[0],\
    \ arr[7]];\n  }\n  if(arr.length == 10){\n    return [arr[0], arr[8], arr[9],\
    \ arr[10], arr[11]];\n  }\n  if(arr.length == 11){\n    return [arr[0], arr[8],\
    \ arr[9], arr[10], arr[11], arr[12], arr[13], arr[14], arr[15], arr[16], arr[17],\
    \ arr[18], arr[19], arr[20], arr[21], arr[22], arr[23], arr[24], arr[25], arr[26],\
    \ arr[27], arr[28], arr[29], arr[30], arr[31], arr[32], arr[33], arr[34], arr[35],\
    \ arr[36], arr[37], arr[38], arr[39], arr[40], arr[41], arr[42], arr[43], arr[44],\
    \ arr[45], arr[46], arr[47], arr[48], arr[49], arr[50], arr[51], arr[52], arr[53],\
    \ arr[54], arr[55], arr[56], arr[57], arr[58], arr[59], arr[60], arr[61], arr[62],\
    \ arr[63], arr[64", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || largest\
    \ < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  return [smallest, largest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var smallest = lst[0];\n  var largest = lst[0];\n  for(var i = 1; i <\
    \ lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest\
    \ = Number.MAX_VALUE;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var smallest =\
    \ Number.MAX_VALUE;\n  var largest = Number.MIN_VALUE;\n  for (var i = 0; i <\
    \ lst.length; i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n \
    \   }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var smallest = Number.MAX_VALUE;\n  var largest\
    \ = Number.MIN_VALUE;\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i <\
    \ lst.length; i++){\n    if(largest === undefined || largest < lst[i]){\n    \
    \  largest = lst[i];\n    }\n    if(smallest === undefined || smallest > lst[i]){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var\
    \ i=0;i<lst.length;i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var smallest = undefined;\n  var largest = undefined;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [smallest, largest];\n}\n", "  var largest = undefined;\n  var\
    \ smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || largest < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var smallest = lst[0];\n  var largest\
    \ = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n  }\n  return [smallest, largest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var\
    \ largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n  }\n  return [smallest, largest];\n}\n", "  var max_num = Number.NEGATIVE_INFINITY;\n\
    \  var min_num = Number.POSITIVE_INFINITY;\n  for(var i=0; i<lst.length; i++){\n\
    \    if(lst[i] < min_num){\n      min_num = lst[i];\n    }\n    if(lst[i] > max_num){\n\
    \      max_num = lst[i];\n    }\n  }\n  return [max_num, min_num];\n}\n", "  var\
    \ largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var smallest = -Infinity;\n  var largest = Infinity;\n  for(var i=0;i<lst.length;i++){\n\
    \    var num = lst[i];\n    if(num < smallest){\n      smallest = num;\n    }\n\
    \    if(num > largest){\n      largest = num;\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var i\
    \ = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var smallest = undefined;\n  var largest = undefined;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [smallest, largest];\n}\n", "  var smallest = -Infinity;\n  var\
    \ largest = Infinity;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n    \
    \  smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(largest === undefined || lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if(smallest === undefined || lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || largest < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var\
    \ smallest = Number.MAX_VALUE;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var\
    \ largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i] > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var smallest = undefined;\n  var largest = undefined;\n  for(var i = 0; i <\
    \ lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest\
    \ = Number.MAX_VALUE;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n  }\n  return [largest,smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var\
    \ smallest = undefined;\n  var largest = undefined;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var smallest = lst[0];\n  var largest = lst[0];\n  for(var i = 1; i <\
    \ lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest\
    \ = Number.MAX_VALUE;\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var\
    \ i=0;i<lst.length;i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ [smallest,largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var max_num = -Infinity;\n  var min_num = Infinity;\n  for(var\
    \ i=0; i<lst.length; i++){\n    var num = lst[i];\n    if(num < min_num){\n  \
    \    min_num = num;\n    }\n    if(num > max_num){\n      max_num = num;\n   \
    \ }\n  }\n  return [max_num, min_num];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i] <\
    \ smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var\
    \ largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var i=0;\
    \ i<lst.length; i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n  \
    \  }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var max_num = -Infinity;\n  var min_num = Infinity;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i] < min_num){\n      min_num\
    \ = lst[i];\n    }\n    if(lst[i] > max_num){\n      max_num = lst[i];\n    }\n\
    \  }\n  return [max_num, min_num];\n}\n", "  var largest = undefined;\n  var smallest\
    \ = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined\
    \ || largest < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined\
    \ || smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i=0;i<lst.length;i++){\n    if(lst[i] > largest){\n      largest =\
    \ lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var smallest = Number.MAX_VALUE;\n\
    \  var largest = Number.MIN_VALUE;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(largest === undefined || largest < lst[i]){\n\
    \      largest = lst[i];\n    }\n    if(smallest === undefined || smallest > lst[i]){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for (var\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var smallest = Number.POSITIVE_INFINITY;\n  var\
    \ largest = Number.NEGATIVE_INFINITY;\n  for(var i=0; i<lst.length; i++){\n  \
    \  if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i <\
    \ lst.length; i++){\n    if(largest === undefined || lst[i] > largest){\n    \
    \  largest = lst[i];\n    }\n    if(smallest === undefined || lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = undefined;\n  var smallest = undefined;\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(largest === undefined || lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n    if(smallest === undefined || lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for (var\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || largest\
    \ < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var smallest = lst[0];\n  var largest = lst[0];\n  for(var\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var smallest = lst[0];\n  var largest = lst[0];\n\
    \  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [smallest, largest];\n}\n", "  var max_int = -Infinity;\n  var\
    \ min_int = Infinity;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] >\
    \ max_int){\n      max_int = lst[i];\n    }\n    if(lst[i] < min_int){\n     \
    \ min_int = lst[i];\n    }\n  }\n  return [max_int, min_int];\n}\n", "  var smallest\
    \ = -Infinity;\n  var largest = Infinity;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ smallest = lst[0];\n  var largest = lst[0];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(largest === undefined || lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n    if(smallest === undefined || lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  return [smallest, largest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n  }\n  return [smallest, largest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || largest < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest\
    \ = undefined;\n  for(var i=0; i<lst.length; i++){\n    if(largest === undefined\
    \ || lst[i] > largest){\n      largest = lst[i];\n    }\n    if(smallest === undefined\
    \ || lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  return [smallest, largest];\n}\n", "  var smallest = lst[0];\n  var\
    \ largest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n  }\n  return [smallest, largest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ smallest = lst[0];\n  var largest = lst[0];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(largest === undefined || lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n    if(smallest === undefined || lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i <\
    \ lst.length; i++){\n    if(largest === undefined || lst[i] > largest){\n    \
    \  largest = lst[i];\n    }\n    if(smallest === undefined || lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var smallest = -Infinity;\n  var largest = Infinity;\n  for (var i = 0; i <\
    \ lst.length; i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n \
    \   }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = undefined;\n  var\
    \ smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || lst[i] > largest){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest\
    \ = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined\
    \ || largest < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined\
    \ || smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var smallest = lst[0];\n  var largest = lst[0];\n  for(var\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || largest\
    \ < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  return [smallest, largest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(largest === undefined || lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n    if(smallest === undefined || lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i=0;i<lst.length;i++){\n    if(lst[i]<smallest){\n      smallest =\
    \ lst[i];\n    }\n    if(lst[i]>largest){\n      largest = lst[i];\n    }\n  }\n\
    \  return [largest,smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var\
    \ smallest = Number.MAX_VALUE;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest,smallest];\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var smallest = lst[0];\n  var largest = lst[0];\n  for(var i = 1; i <\
    \ lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || largest\
    \ < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var smallest = lst[0];\n  var largest = lst[0];\n  for(var\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var smallest = Number.MAX_VALUE;\n  var largest = Number.MIN_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [smallest, largest];\n}\n", "  var smallest = Number.MAX_VALUE;\n\
    \  var largest = Number.MIN_VALUE;\n  for(var i = 0; i < lst.length; i++){\n \
    \   var num = lst[i];\n    if(num < smallest){\n      smallest = num;\n    }\n\
    \    if(num > largest){\n      largest = num;\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = undefined;\n  var\
    \ smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || largest < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest\
    \ = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest,smallest];\n}\n", "  var\
    \ smallest = Number.MAX_VALUE;\n  var largest = Number.MIN_VALUE;\n  for (var\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [smallest, largest];\n}\n", "  var largest = undefined;\n  var\
    \ smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || largest < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest\
    \ = undefined;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n  }\n  return [largest, smallest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(largest === undefined || lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if(smallest === undefined || lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var smallest =\
    \ -Infinity;\n  var largest = Infinity;\n  for(var i=0; i<lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i=0;\
    \ i<lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || largest\
    \ < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var max_num = -Infinity;\n  var min_num = Infinity;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    var num = lst[i];\n    if(num < min_num){\n\
    \      min_num = num;\n    }\n    if(num > max_num){\n      max_num = num;\n \
    \   }\n  }\n  return [max_num, min_num];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < 0){\n      if(largest === undefined){\n        largest = lst[i];\n      }\n\
    \      else if(largest < lst[i]){\n        largest = lst[i];\n      }\n    }\n\
    \    else{\n      if(smallest === undefined){\n        smallest = lst[i];\n  \
    \    }\n      else if(smallest > lst[i]){\n        smallest = lst[i];\n      }\n\
    \    }\n  }\n  return [largest, smallest];\n}\n", "  var smallest = lst[0];\n\
    \  var largest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(largest === undefined || lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if(smallest === undefined || lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var smallest =\
    \ lst[0],\n      largest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n \
    \   if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var smallest = lst[0];\n  var largest = lst[0];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest\
    \ = Number.MAX_VALUE;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var\
    \ smallest = undefined;\n  var largest = undefined;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(largest === undefined || largest < lst[i]){\n\
    \      largest = lst[i];\n    }\n    if(smallest === undefined || smallest > lst[i]){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i <\
    \ lst.length; i++){\n    if(largest === undefined || lst[i] > largest){\n    \
    \  largest = lst[i];\n    }\n    if(smallest === undefined || lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var smallest = undefined;\n  var largest = undefined;\n  for(var i = 0; i <\
    \ lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var smallest = lst[0],\n      largest = lst[0];\n\
    \  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [smallest, largest];\n}\n", "  var smallest = Number.POSITIVE_INFINITY;\n\
    \  var largest = Number.NEGATIVE_INFINITY;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [smallest,largest];\n\
    }\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = undefined;\n  var\
    \ smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || largest < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var smallest = lst[0];\n  var largest\
    \ = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n  }\n  return [smallest, largest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || largest < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest\
    \ = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined\
    \ || lst[i] > largest){\n      largest = lst[i];\n    }\n    if(smallest === undefined\
    \ || lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n  }\n  return [smallest, largest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || lst[i] > largest){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var smallest = -Infinity;\n  var largest\
    \ = Infinity;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n  }\n  return [smallest, largest];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var\
    \ largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var smallest = -Infinity;\n  var largest = Infinity;\n  for(var i=0;\
    \ i<lst.length; i++){\n    var n = lst[i];\n    if(n < smallest){\n      smallest\
    \ = n;\n    }\n    if(n > largest){\n      largest = n;\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var smallest = -Infinity;\n  var largest = Infinity;\n \
    \ for(var i=0;i<lst.length;i++){\n    var num = lst[i];\n    if(num < smallest\
    \ || smallest === -Infinity){\n      smallest = num;\n    }\n    if(num > largest\
    \ || largest === Infinity){\n      largest = num;\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || largest\
    \ < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i=0;i<lst.length;i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var smallest = Number.MAX_VALUE;\n\
    \  var largest = Number.MIN_VALUE;\n  for(var i = 0; i < lst.length; i++){\n \
    \   var num = lst[i];\n    if(num < smallest || smallest === Number.MAX_VALUE){\n\
    \      smallest = num;\n    }\n    if(num > largest || largest === Number.MIN_VALUE){\n\
    \      largest = num;\n    }\n  }\n  return [smallest, largest];\n}\n", "  var\
    \ largest = undefined;\n  var smallest = undefined;\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(largest === undefined || lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n    if(smallest === undefined || lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var smallest = lst[0];\n  var largest = lst[0];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [smallest, largest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i] > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i <\
    \ lst.length; i++){\n    if(largest === undefined || lst[i] > largest){\n    \
    \  largest = lst[i];\n    }\n    if(smallest === undefined || lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i <\
    \ lst.length; i++){\n    if(largest === undefined || largest < lst[i]){\n    \
    \  largest = lst[i];\n    }\n    if(smallest === undefined || smallest > lst[i]){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i <\
    \ lst.length; i++){\n    if(largest === undefined || largest < lst[i]){\n    \
    \  largest = lst[i];\n    }\n    if(smallest === undefined || smallest > lst[i]){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var\
    \ i=0; i<lst.length; i++){\n    var num = lst[i];\n    if(num < smallest || smallest\
    \ === Number.MAX_VALUE){\n      smallest = num;\n    }\n    if(num > largest ||\
    \ largest === Number.MIN_VALUE){\n      largest = num;\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", "  var\
    \ largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var i=0;\
    \ i<lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || largest\
    \ < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var smallest = lst[0];\n  var largest = lst[0];\n  for(var\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest\
    \ = Number.MAX_VALUE;\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if (lst[i] < smallest){\n \
    \     smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = undefined;\n  var smallest = undefined;\n  for(var i = 0; i <\
    \ lst.length; i++){\n    if(largest === undefined || largest < lst[i]){\n    \
    \  largest = lst[i];\n    }\n    if(smallest === undefined || smallest > lst[i]){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var\
    \ i=0;i<lst.length;i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ [smallest,largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || largest\
    \ < lst[i]){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(largest === undefined || lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i=0;i<lst.length;i++){\n    if(lst[i]<smallest){\n      smallest =\
    \ lst[i];\n    }\n    if(lst[i]>largest){\n      largest = lst[i];\n    }\n  }\n\
    \  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var\
    \ smallest = Number.MAX_VALUE;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = undefined;\n  var smallest = undefined;\n  for(var i =\
    \ 0; i < lst.length; i++){\n    if(largest === undefined || largest < lst[i]){\n\
    \      largest = lst[i];\n    }\n    if(smallest === undefined || smallest > lst[i]){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [smallest, largest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for (var\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = undefined;\n  var\
    \ smallest = undefined;\n  for(var i = 0; i < lst.length; i++){\n    if(largest\
    \ === undefined || lst[i] > largest){\n      largest = lst[i];\n    }\n    if(smallest\
    \ === undefined || lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n\
    \  return [smallest, largest];\n}\n", "  var smallest = lst[0];\n  var largest\
    \ = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n\
    \    }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var max_num = -Infinity;\n  var min_num = Infinity;\n  for(var i = 0;\
    \ i < lst.length; i++){\n    if(lst[i] > max_num){\n      max_num = lst[i];\n\
    \    }\n    if(lst[i] < min_num){\n      min_num = lst[i];\n    }\n  }\n  return\
    \ [max_num, min_num];\n}\n", "  var largest = undefined;\n  var smallest = undefined;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(largest === undefined || lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n    if(smallest === undefined ||\
    \ lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [smallest,\
    \ largest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n  \
    \    smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ smallest = Number.MAX_VALUE;\n  var largest = Number.MIN_VALUE;\n  for (var\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [smallest, largest];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

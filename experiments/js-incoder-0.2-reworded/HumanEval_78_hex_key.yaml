name: HumanEval_78_hex_key
language: js
prompt: "//You have been tasked to write a function that receives \n// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n// digits that are primes\
  \ (prime number, or a prime, is a natural number \n// greater than 1 that is not\
  \ a product of two smaller natural numbers).\n// Hexadecimal digits are 0, 1, 2,\
  \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers are 2, 3, 5, 7, 11, 13,\
  \ 17,...\n// So you have to determine a number of the following digits: 2, 3, 5,\
  \ 7, \n// B (=decimal 11), D (=decimal 13).\n// Note: you may assume the input is\
  \ always correct or empty string, \n// and symbols A,B,C,D,E,F are always uppercase.\n\
  // Examples:\n// >>> hex_key(\"AB\")\n// 1\n// >>> hex_key(\"1077E\")\n// 2\n//\
  \ >>> hex_key(\"ABED1A33\")\n// 4\n// >>> hex_key(\"123456789ABCDEF0\")\n// 6\n\
  // >>> hex_key(\"2020\")\n// 2\nfunction hex_key(num){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = hex_key;\n  assert.deepEqual(candidate(\"AB\"),1);\n  assert.deepEqual(candidate(\"\
  1077E\"),2);\n  assert.deepEqual(candidate(\"ABED1A33\"),4);\n  assert.deepEqual(candidate(\"\
  2020\"),2);\n  assert.deepEqual(candidate(\"123456789ABCDEF0\"),6);\n  assert.deepEqual(candidate(\"\
  112233445566778899AABBCCDDEEFF00\"),12);\n}\n\ntest();"
completions: ["    let hex = num.toUpperCase();\n    let hexDigits = [\n        \"\
    0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"A\",\"B\",\"C\",\"\
    D\",\"E\",\"F\"\n    ];\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \    let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5\
    \ = hexDigitCount4*hexDigitCount;\n    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \    let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8\
    \ = hexDigitCount7*hexDigitCount;\n    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \    let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \    let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \    let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \    let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \    let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \    let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \    let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \    let hexDigitCount31 = hexDigit", "    let hex = num.toString().split('');\n\
    \    let primes = [];\n    let prime_count = 0;\n    for(let i = 0; i < hex.length;\
    \ i++){\n        if(hex[i] === 'A' || hex[i] === 'B' || hex[i] === 'C' || hex[i]\
    \ === 'D' || hex[i] === 'E' || hex[i] === 'F'){\n            primes.push(hex[i]);\n\
    \        }\n    }\n    for(let i = 0; i < primes.length; i++){\n        for(let\
    \ j = i + 1; j < primes.length; j++){\n            if(hex[primes[i]] === hex[primes[j]]){\n\
    \                prime_count++;\n            }\n        }\n    }\n    return prime_count;\n\
    }\n", "    let hex = num.toString().toUpperCase();\n    let primes = [];\n   \
    \ let prime_counter = 0;\n    let prime_counter2 = 0;\n    let prime_counter3\
    \ = 0;\n    let prime_counter4 = 0;\n    let prime_counter5 = 0;\n    let prime_counter6\
    \ = 0;\n    let prime_counter7 = 0;\n    let prime_counter8 = 0;\n    let prime_counter9\
    \ = 0;\n    let prime_counter10 = 0;\n    let prime_counter11 = 0;\n    let prime_counter12\
    \ = 0;\n    let prime_counter13 = 0;\n    let prime_counter14 = 0;\n    let prime_counter15\
    \ = 0;\n    let prime_counter16 = 0;\n    let prime_counter17 = 0;\n    let prime_counter18\
    \ = 0;\n    let prime_counter19 = 0;\n    let prime_counter20 = 0;\n    let prime_counter21\
    \ = 0;\n    let prime_counter22 = 0;\n    let prime_counter23 = 0;\n    let prime_counter24\
    \ = 0;\n    let prime_counter25 = 0;\n    let prime_counter26 = 0;\n    let prime_counter27\
    \ = 0;\n    let prime_counter28 = 0;\n    let prime_counter29 = 0;\n    let prime_counter30\
    \ = 0;\n    let prime_counter31 = 0;\n    let prime_counter32 = 0;\n    let prime_counter33\
    \ = 0;\n    let prime_counter34 = 0;\n    let prime_counter35 = 0;\n    let prime_counter36\
    \ = 0;\n    let prime_counter37 = 0;\n    let prime_counter38 = 0;\n    let prime_counter39\
    \ = 0;\n    let prime_counter40 = 0;\n    let prime_counter41 = 0;\n    let prime_counter42\
    \ = 0;\n    let prime_counter43 = 0;\n    let prime_counter44 = 0;\n    let prime_counter45\
    \ = 0;\n    let prime_counter46 = 0;\n    let prime_counter47 = 0;\n    let prime_counter48\
    \ = 0;\n    let prime_counter49 = 0;\n    let prime_counter50 = 0;\n    let prime_counter51\
    \ = 0;\n    let prime_counter52 = 0;\n    let prime_counter53 = 0;\n    let prime_counter54\
    \ = 0;\n    let prime_counter55 = 0;\n    let prime_counter56 = 0;\n    let prime_counter57\
    \ = 0;\n    let prime_counter58 = 0;\n    let prime_counter59 = 0;\n    let prime_counter60\
    \ = 0;\n    let prime_counter61 = 0;\n    let prime_counter62 = 0;\n    let prime_counter63\
    \ = 0;\n    let prime_counter64 = 0;\n    let prime_counter65 = 0;\n    let prime_counter66\
    \ = 0;\n    let prime_counter67 = 0;\n    let prime_counter68 = 0;\n    let prime_counter69\
    \ = 0;\n    let prime_counter70 = 0;\n    let prime_counter71 = 0;\n    let prime_counter72\
    \ = 0;", "  var hex = num.split(\"\").map(function(x){return x.charCodeAt(0).toString(16)}).join(\"\
    \");\n  var primes = hexToPrimes(hex);\n  return primes.reduce(function(acc, val){\n\
    \    return acc + val;\n  }, 0);\n}\n", "  let hex = num.toString().split('');\n\
    \  let primes = [];\n  let prime_count = 0;\n  let prime_digits = [];\n  let prime_digit_count\
    \ = 0;\n  for(let i = 0; i < hex.length; i++){\n    let hexDigit = hex[i];\n \
    \   if(hexDigit == 'A' || hexDigit == 'B' || hexDigit == 'C' || hexDigit == 'D'\
    \ || hexDigit == 'E' || hexDigit == 'F'){\n      prime_digits.push(hexDigit);\n\
    \      prime_digit_count++;\n    }\n    else if(prime_digit_count > 0){\n    \
    \  primes.push(prime_digits);\n      prime_count++;\n      prime_digits = [];\n\
    \      prime_digit_count = 0;\n    }\n  }\n  if(prime_digit_count > 0){\n    primes.push(prime_digits);\n\
    \    prime_count++;\n  }\n  return prime_count;\n}\n", "  let hex = num.toString().split('');\n\
    \  let hex_rev = hex.reverse();\n  let hex_rev_rev = hex_rev.reverse();\n  let\
    \ hex_rev_rev_rev = hex_rev_rev.reverse();\n  let hex_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev.reverse();\n\
    \  let hex_rev_rev_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev_rev_rev.reverse();\n\
    \  let hex_rev_rev_rev_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev_rev_rev_rev_rev.reverse();\n\
    \  let hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev.reverse();\n\
    \  let hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev.reverse();\n\
    \  let hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rerererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererere",
  "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\"\
    );\n    let primes = hex_to_primes(hex);\n    let prime_digits = primes.map(x\
    \ => x.charCodeAt(0).toString(16));\n    let prime_digits_count = prime_digits.filter(x\
    \ => x === \"0\").length;\n    let prime_digits_count_2 = prime_digits.filter(x\
    \ => x === \"2\").length;\n    let prime_digits_count_3 = prime_digits.filter(x\
    \ => x === \"3\").length;\n    let prime_digits_count_5 = prime_digits.filter(x\
    \ => x === \"5\").length;\n    let prime_digits_count_7 = prime_digits.filter(x\
    \ => x === \"7\").length;\n    let prime_digits_count_11 = prime_digits.filter(x\
    \ => x === \"11\").length;\n    let prime_digits_count_13 = prime_digits.filter(x\
    \ => x === \"13\").length;\n    let prime_digits_count_17 = prime_digits.filter(x\
    \ => x === \"17\").length;\n    let prime_digits_count_19 = prime_digits.filter(x\
    \ => x === \"19\").length;\n    let prime_digits_count_23 = prime_digits.filter(x\
    \ => x === \"23\").length;\n    let prime_digits_count_29 = prime_digits.filter(x\
    \ => x === \"29\").length;\n    let prime_digits_count_31 = prime_digits.filter(x\
    \ => x === \"31\").length;\n    let prime_digits_count_37 = prime_digits.filter(x\
    \ => x === \"37\").length;\n    let prime_digits_count_41 = prime_digits.filter(x\
    \ => x === \"41\").length;\n    let prime_digits_count_43 = prime_digits.filter(x\
    \ => x === \"43\").length;\n    let prime_digits_count_47 = prime_digits.filter(x\
    \ => x === \"47\").length;\n    let prime_digits_count_51 = prime_digits.filter(x\
    \ => x === \"51\").length;\n    let prime_digits_count_53 = prime_digits.filter(x\
    \ => x === \"53\").length;\n    let prime_digits_count_59 = prime_digits.filter(x\
    \ => x === \"59\").length;\n    let prime_digits_count_61 = prime_digits.filter(x\
    \ => x === \"61\").length;\n    let prime_digits_count_67 = prime_digits.filter(x\
    \ => x === \"67\").length;\n    let prime_digits_count_71 = prime_digits.filter(x\
    \ => x === \"71\").length;\n    let prime_digits_count_73 = prime_digits.filter(x\
    \ => x === \"73\").length;\n    let prime_digits_count_79 = prime_", "    let\
    \ hex = num.toString().toUpperCase();\n    let primes = [];\n    let prime_counter\
    \ = 0;\n    let prime_counter2 = 0;\n    let prime_counter3 = 0;\n    let prime_counter4\
    \ = 0;\n    let prime_counter5 = 0;\n    let prime_counter6 = 0;\n    let prime_counter7\
    \ = 0;\n    let prime_counter8 = 0;\n    let prime_counter9 = 0;\n    let prime_counter10\
    \ = 0;\n    let prime_counter11 = 0;\n    let prime_counter12 = 0;\n    let prime_counter13\
    \ = 0;\n    let prime_counter14 = 0;\n    let prime_counter15 = 0;\n    let prime_counter16\
    \ = 0;\n    let prime_counter17 = 0;\n    let prime_counter18 = 0;\n    let prime_counter19\
    \ = 0;\n    let prime_counter20 = 0;\n    let prime_counter21 = 0;\n    let prime_counter22\
    \ = 0;\n    let prime_counter23 = 0;\n    let prime_counter24 = 0;\n    let prime_counter25\
    \ = 0;\n    let prime_counter26 = 0;\n    let prime_counter27 = 0;\n    let prime_counter28\
    \ = 0;\n    let prime_counter29 = 0;\n    let prime_counter30 = 0;\n    let prime_counter31\
    \ = 0;\n    let prime_counter32 = 0;\n    let prime_counter33 = 0;\n    let prime_counter34\
    \ = 0;\n    let prime_counter35 = 0;\n    let prime_counter36 = 0;\n    let prime_counter37\
    \ = 0;\n    let prime_counter38 = 0;\n    let prime_counter39 = 0;\n    let prime_counter40\
    \ = 0;\n    let prime_counter41 = 0;\n    let prime_counter42 = 0;\n    let prime_counter43\
    \ = 0;\n    let prime_counter44 = 0;\n    let prime_counter45 = 0;\n    let prime_counter46\
    \ = 0;\n    let prime_counter47 = 0;\n    let prime_counter48 = 0;\n    let prime_counter49\
    \ = 0;\n    let prime_counter50 = 0;\n    let prime_counter51 = 0;\n    let prime_counter52\
    \ = 0;\n    let prime_counter53 = 0;\n    let prime_counter54 = 0;\n    let prime_counter55\
    \ = 0;\n    let prime_counter56 = 0;\n    let prime_counter57 = 0;\n    let prime_counter58\
    \ = 0;\n    let prime_counter59 = 0;\n    let prime_counter60 = 0;\n    let prime_counter61\
    \ = 0;\n    let prime_counter62 = 0;\n    let prime_counter63 = 0;\n    let prime_counter64\
    \ = 0;\n    let prime_counter65 = 0;\n    let prime_counter66 = 0;\n    let prime_counter67\
    \ = 0;\n    let prime_counter68 = 0;\n    let prime_counter69 = 0;\n    let prime_counter70\
    \ = 0;\n    let prime_counter71 = 0;\n    let prime_counter72 = 0;", "    let\
    \ hex = num.toString().toUpperCase();\n    let hexDigits = hex.split('');\n  \
    \  let hexDigitCount = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \    let hexDigitCount33 = hex", "  let hex = num.toString().split('');\n  let\
    \ count = 0;\n  for(let i = 0; i < hex.length; i++){\n    if(hex[i] === 'A' ||\
    \ hex[i] === 'B' || hex[i] === 'C' || hex[i] === 'D' || hex[i] === 'E' || hex[i]\
    \ === 'F'){\n      count++;\n    }\n  }\n  return count;\n}\n", "    let hex =\
    \ num.split(\"\");\n    let hex2 = [];\n    let hex3 = [];\n    let hex4 = [];\n\
    \    let hex5 = [];\n    let hex6 = [];\n    let hex7 = [];\n    let hex8 = [];\n\
    \    let hex9 = [];\n    let hex10 = [];\n    let hex11 = [];\n    let hex12 =\
    \ [];\n    let hex13 = [];\n    let hex14 = [];\n    let hex15 = [];\n    let\
    \ hex16 = [];\n    let hex17 = [];\n    let hex18 = [];\n    let hex19 = [];\n\
    \    let hex20 = [];\n    let hex21 = [];\n    let hex22 = [];\n    let hex23\
    \ = [];\n    let hex24 = [];\n    let hex25 = [];\n    let hex26 = [];\n    let\
    \ hex27 = [];\n    let hex28 = [];\n    let hex29 = [];\n    let hex30 = [];\n\
    \    let hex31 = [];\n    let hex32 = [];\n    let hex33 = [];\n    let hex34\
    \ = [];\n    let hex35 = [];\n    let hex36 = [];\n    let hex37 = [];\n    let\
    \ hex38 = [];\n    let hex39 = [];\n    let hex40 = [];\n    let hex41 = [];\n\
    \    let hex42 = [];\n    let hex43 = [];\n    let hex44 = [];\n    let hex45\
    \ = [];\n    let hex46 = [];\n    let hex47 = [];\n    let hex48 = [];\n    let\
    \ hex49 = [];\n    let hex50 = [];\n    let hex51 = [];\n    let hex52 = [];\n\
    \    let hex53 = [];\n    let hex54 = [];\n    let hex55 = [];\n    let hex56\
    \ = [];\n    let hex57 = [];\n    let hex58 = [];\n    let hex59 = [];\n    let\
    \ hex60 = [];\n    let hex61 = [];\n    let hex62 = [];\n    let hex63 = [];\n\
    \    let hex64 = [];\n    let hex65 = [];\n    let hex66 = [];\n    let hex67\
    \ = [];\n    let hex68 = [];\n    let hex69 = [];\n    let hex70 = [];\n    let\
    \ hex71 = [];\n    let hex72 = [];\n    let hex73 = [];\n    let hex74 = [];\n\
    \    let hex75 = [];\n    let hex76 = [];\n    let hex77 = [];\n    let hex78\
    \ = [];\n    let hex79 = [];\n    let hex80 = [];\n    let hex81 = [];\n    let\
    \ hex82 = [];\n    let hex83 = [];\n    let hex84 = [];\n    let hex85 = [];\n\
    \    let hex86 = [];\n    let hex87 = [];\n    let hex88 = [];\n    let hex89\
    \ = [];\n    let hex90 = [];\n    let hex91 = [];\n    let hex92 = [];\n    let\
    \ hex93 = [];\n    let hex94 = [];\n    let hex95 = [];\n    let hex96 = [];\n\
    \    let hex97 = [];", "  var hex = num.toString().toUpperCase();\n  var count\
    \ = 0;\n  for(var i=0;i<hex.length;i++){\n    if(hex.charAt(i)==\"A\"||hex.charAt(i)==\"\
    B\"||hex.charAt(i)==\"C\"||hex.charAt(i)==\"D\"||hex.charAt(i)==\"E\"||hex.charAt(i)==\"\
    F\"){\n      count++;\n    }\n  }\n  return count;\n}\n", "    let hex = num.split(\"\
    \").map(x => x.charCodeAt(0).toString(16)).join``;\n    let primes = hex_to_primes(hex);\n\
    \    let prime_digits = primes.map(x => x.toString(10));\n    let prime_digits_count\
    \ = prime_digits.length;\n    let prime_digits_count_prime = prime_digits_count\
    \ - 1;\n    let prime_digits_count_not_prime = prime_digits_count + 1;\n    let\
    \ prime_digits_count_prime_not_prime = prime_digits_count_prime - 1;\n    let\
    \ prime_digits_count_not_prime_prime = prime_digits_count_not_prime + 1;\n   \
    \ let prime_digits_count_prime_not_prime_prime = prime_digits_count_prime_not_prime\
    \ + 1;\n    let prime_digits_count_prime_not_prime_prime_prime = prime_digits_count_prime_not_prime_prime\
    \ + 1;\n    let prime_digits_count_prime_not_prime_prime_prime_prime = prime_digits_count_prime_not_prime_prime_prime\
    \ + 1;\n    let prime_digits_count_prime_not_prime_prime_prime_prime_prime = prime_digits_count_prime_not_prime_prime_prime_prime_prime\
    \ + 1;\n    let prime_digits_count_prime_not_prime_prime_prime_prime_prime_prime\
    \ = prime_digits_count_prime_not_prime_prime_prime_prime_prime_prime + 1;\n  \
    \  let prime_digits_count_prime_not_prime_prime_prime_prime_prime_prime = prime_digits_count_prime_not_prime_prime_prime_prime_prime_prime_prime\
    \ + 1;\n    let prime_digits_count_prime_not_prime_prime_prime_prime_prime_prime_prime\
    \ = prime_digits_count_prime_not_prime_prime_prime_prime_prime_prime_prime_prime\
    \ + 1;\n    let prime_digits_count_prime_not_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = prime_digits_count_prime_not_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ + 1;\n    let prime_digits_count_prime_not_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = prime_digits_count_prime_not_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ + 1;\n    let prime_digits_count_prime_not_", "    var hex = num.toString().toUpperCase();\n\
    \    var primes = [];\n    var prime_found = false;\n    var prime_found2 = false;\n\
    \    var prime_found3 = false;\n    var prime_found4 = false;\n    var prime_found5\
    \ = false;\n    var prime_found6 = false;\n    var prime_found7 = false;\n   \
    \ var prime_found8 = false;\n    var prime_found9 = false;\n    var prime_found10\
    \ = false;\n    var prime_found11 = false;\n    var prime_found12 = false;\n \
    \   var prime_found13 = false;\n    var prime_found14 = false;\n    var prime_found15\
    \ = false;\n    var prime_found16 = false;\n    var prime_found17 = false;\n \
    \   var prime_found18 = false;\n    var prime_found19 = false;\n    var prime_found20\
    \ = false;\n    var prime_found21 = false;\n    var prime_found22 = false;\n \
    \   var prime_found23 = false;\n    var prime_found24 = false;\n    var prime_found25\
    \ = false;\n    var prime_found26 = false;\n    var prime_found27 = false;\n \
    \   var prime_found28 = false;\n    var prime_found29 = false;\n    var prime_found30\
    \ = false;\n    var prime_found31 = false;\n    var prime_found32 = false;\n \
    \   var prime_found33 = false;\n    var prime_found34 = false;\n    var prime_found35\
    \ = false;\n    var prime_found36 = false;\n    var prime_found37 = false;\n \
    \   var prime_found38 = false;\n    var prime_found39 = false;\n    var prime_found40\
    \ = false;\n    var prime_found41 = false;\n    var prime_found42 = false;\n \
    \   var prime_found43 = false;\n    var prime_found44 = false;\n    var prime_found45\
    \ = false;\n    var prime_found46 = false;\n    var prime_found47 = false;\n \
    \   var prime_found48 = false;\n    var prime_found49 = false;\n    var prime_found50\
    \ = false;\n    var prime_found51 = false;\n    var prime_found52 = false;\n \
    \   var prime_found53 = false;\n    var prime_found54 = false;\n    var prime_found55\
    \ = false;\n    var prime_found56 = false;\n    var prime_found57 = false;\n \
    \   var prime_found58 = false;\n    var prime_found59 = false;\n    var prime_found60\
    \ = false;\n    var prime_found61 = false;\n    var prime_found62 = false;\n \
    \   var prime_found63 = false;\n    var prime_found64 = false;\n    var prime_found65\
    \ = false;\n    var prime_found66 = false;\n    var prime_found67 = false;\n \
    \   var prime_found68 = false;\n    var prime_found69 = false;\n    var prime_",
  "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\"\
    );\n    let primes = hex.split(\"\").map(x => parseInt(x, 16));\n    let primesCount\
    \ = primes.filter(x => x > 1 && x % 2 === 0).length;\n    return primesCount;\n\
    }\n", "    let hex = num.toString().replace(/[^A-F0-9]/g,'');\n    let hexDigits\
    \ = hex.length;\n    let hexDigitPrimes = [];\n    let hexDigitPrimeCount = 0;\n\
    \    let hexDigitPrimeCount2 = 0;\n    let hexDigitPrimeCount3 = 0;\n    let hexDigitPrimeCount4\
    \ = 0;\n    let hexDigitPrimeCount5 = 0;\n    let hexDigitPrimeCount6 = 0;\n \
    \   let hexDigitPrimeCount7 = 0;\n    let hexDigitPrimeCount8 = 0;\n    let hexDigitPrimeCount9\
    \ = 0;\n    let hexDigitPrimeCount10 = 0;\n    let hexDigitPrimeCount11 = 0;\n\
    \    let hexDigitPrimeCount12 = 0;\n    let hexDigitPrimeCount13 = 0;\n    let\
    \ hexDigitPrimeCount14 = 0;\n    let hexDigitPrimeCount15 = 0;\n    let hexDigitPrimeCount16\
    \ = 0;\n    let hexDigitPrimeCount17 = 0;\n    let hexDigitPrimeCount18 = 0;\n\
    \    let hexDigitPrimeCount19 = 0;\n    let hexDigitPrimeCount20 = 0;\n    let\
    \ hexDigitPrimeCount21 = 0;\n    let hexDigitPrimeCount22 = 0;\n    let hexDigitPrimeCount23\
    \ = 0;\n    let hexDigitPrimeCount24 = 0;\n    let hexDigitPrimeCount25 = 0;\n\
    \    let hexDigitPrimeCount26 = 0;\n    let hexDigitPrimeCount27 = 0;\n    let\
    \ hexDigitPrimeCount28 = 0;\n    let hexDigitPrimeCount29 = 0;\n    let hexDigitPrimeCount30\
    \ = 0;\n    let hexDigitPrimeCount31 = 0;\n    let hexDigitPrimeCount32 = 0;\n\
    \    let hexDigitPrimeCount33 = 0;\n    let hexDigitPrimeCount34 = 0;\n    let\
    \ hexDigitPrimeCount35 = 0;\n    let hexDigitPrimeCount36 = 0;\n    let hexDigitPrimeCount37\
    \ = 0;\n    let hexDigitPrimeCount38 = 0;\n    let hexDigitPrimeCount39 = 0;\n\
    \    let hexDigitPrimeCount40 = 0;\n    let hexDigitPrimeCount41 = 0;\n    let\
    \ hexDigitPrimeCount42 = 0;\n    let hexDigitPrimeCount43 = 0;\n    let hexDigitPrimeCount44\
    \ = 0;\n    let hexDigitPrimeCount45 = 0;\n    let hexDigitPrimeCount46 = 0;\n\
    \    let hexDigitPrimeCount47 = 0;\n    let hexDigitPrimeCount48 = 0;\n    let\
    \ hexDigitPrimeCount49 = 0;\n    let hexDigitPrimeCount50 = 0;\n    let hexDigitPrimeCount51\
    \ = 0;\n    let hexDigitPrimeCount52 = 0;\n    let hexDigitPrimeCount53 = 0;\n\
    \    let hexDigitPrimeCount54 = 0;\n", "    var hex = num.toString().toUpperCase();\n\
    \    var count = 0;\n    var primes = [];\n    for(var i = 0; i<hex.length; i++){\n\
    \        if(hex.charAt(i) == 'A' || hex.charAt(i) == 'B' || hex.charAt(i) == 'C'\
    \ || hex.charAt(i) == 'D' || hex.charAt(i) == 'E' || hex.charAt(i) == 'F'){\n\
    \            primes.push(hex.charAt(i));\n        }\n    }\n    for(var i = 0;\
    \ i<primes.length; i++){\n        for(var j = 0; j<primes.length; j++){\n    \
    \        if(primes[i] == primes[j]){\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}\n", "    let hex = num.toString().split(\"\
    \").map(x => x.charCodeAt(0).toString(16)).join(\"\");\n    let primes = hex_to_primes(hex);\n\
    \    let prime_count = primes.filter(x => x > 1).length;\n    return prime_count;\n\
    }\n", "    let hex = num.toString().split('');\n    let prime_count = 0;\n   \
    \ let prime_digits = [];\n    let prime_digits_hex = [];\n    for(let i = 0; i\
    \ < hex.length; i++){\n        if(hex[i].match(/[A-F]/)){\n            prime_digits.push(hex[i]);\n\
    \            prime_digits_hex.push(hex[i].charCodeAt(0));\n        }\n    }\n\
    \    for(let i = 0; i < prime_digits.length; i++){\n        for(let j = 0; j <\
    \ prime_digits_hex.length; j++){\n            if(prime_digits[i] === prime_digits_hex[j]){\n\
    \                prime_count++;\n            }\n        }\n    }\n    return prime_count;\n\
    }\n", "  var hex = num.toString().toUpperCase();\n  var count = 0;\n  for(var\
    \ i=0;i<hex.length;i++){\n    if(hex.charAt(i)==\"A\"||hex.charAt(i)==\"B\"||hex.charAt(i)==\"\
    C\"||hex.charAt(i)==\"D\"||hex.charAt(i)==\"E\"||hex.charAt(i)==\"F\"){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n", "  var hex = num.toString().toUpperCase();\n\
    \  var hexDigits = [\n    \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"\
    ,\"9\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"\n  ];\n  var hexDigitCount = hexDigits.length;\n\
    \  var hexDigitCount2 = hexDigitCount*hexDigitCount;\n  var hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  var hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  var hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  var hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  var hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  var hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  var hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  var hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  var hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  var hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  var hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  var hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  var hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  var hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  var hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  var hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  var hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  var hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  var hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  var hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  var hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  var hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  var hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  var hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  var hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  var hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  var hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  var hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  var hexDigitCount3", "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join('');\n\
    \    let primes = hex_key.primes;\n    let primesLength = primes.length;\n   \
    \ let primesIndex = 0;\n    let primesIndexLength = primesIndex.length;\n    let\
    \ primesIndexValue = 0;\n    let primesIndexValueLength = 0;\n    let primesIndexValueValue\
    \ = 0;\n    let primesIndexValueValueLength = 0;\n    let primesIndexValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueLength = 0;\n    let primesIndexValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndexValueValueValueValueValueValue\
    \ = 0;\n    let primesIndexValueValueValueValueValueLength = 0;\n    let primesIndex",
  "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\"\
    );\n    let hexDigits = hex.split(\"\").filter(x => x !== \"0\");\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitPrimes = [];\n    let hexDigitPrimeCount\
    \ = 0;\n    for(let i = 0; i < hexDigitCount; i++){\n        let hexDigit = hexDigits[i];\n\
    \        if(hexDigit === \"A\" || hexDigit === \"B\" || hexDigit === \"C\" ||\
    \ hexDigit === \"D\" || hexDigit === \"E\" || hexDigit === \"F\"){\n         \
    \   hexDigitPrimes.push(hexDigit);\n            hexDigitPrimeCount++;\n      \
    \  }\n    }\n    let hexDigitPrimeCount = hexDigitPrimes.length;\n    let hexDigitPrimePrimes\
    \ = [];\n    for(let i = 0; i < hexDigitPrimeCount; i++){\n        let hexDigitPrime\
    \ = hexDigitPrimes[i];\n        let hexDigitPrimePrime = hexDigitPrime;\n    \
    \    for(let j = i + 1; j < hexDigitPrimeCount; j++){\n            let hexDigitPrimePrime2\
    \ = hexDigitPrimes[j];\n            if(hexDigitPrimePrime === hexDigitPrimePrime2){\n\
    \                hexDigitPrimePrimes.push(hexDigitPrimePrime);\n            }\n\
    \        }\n    }\n    let hexDigitPrimePrimeCount = hexDigitPrimePrimes.length;\n\
    \    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimes.length;\n    let hexDigitPrimePrimePrimePrimes\
    \ = [];\n    for(let i = 0; i < hexDigitPrimePrimePrimeCount; i++){\n        let\
    \ hexDigitPrimePrimePrimePrime = hexDigitPrimePrimePrimes[i];\n        let hexDigitPrimePrimePrimePrimePrime\
    \ = hexDigitPrimePrimePrimePrime;\n        for(let j = i + 1; j < hexDigitPrimePrimePrimePrimeCount;\
    \ j++){\n            let hexDigitPrimePrimePrimePrimePrime2 = hexDigitPrimePrimePrimePrimePrimes[j];\n\
    \            if(hexDigitPrimePrimePrimePrimePrime === hexDigitPrimePrimePrimePrimePrimePrime2){\n\
    \                hexDigitPrimePrimePrimePrimePrimePrimes.push(hexDigitPrimePrimePrimePrimePrime);\n\
    \            }\n        }\n    }\n    let hexDigitPrimePrimePrimePrimePrimeCount\
    \ = ", "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16));\n\
    \    let primes = hex.filter(x => x == \"0\").map(x => 2);\n    let primesCount\
    \ = primes.length;\n    let hexCount = hex.length;\n    let hexDigits = hex.filter(x\
    \ => x != \"0\");\n    let hexDigitsCount = hexDigits.length;\n    let hexDigitsPrimes\
    \ = hexDigits.filter(x => primes.includes(parseInt(x)));\n    let hexDigitsPrimesCount\
    \ = hexDigitsPrimes.length;\n    let hexDigitsPrimesSum = hexDigitsPrimes.reduce((a,\
    \ b) => a + b, 0);\n    let hexDigitsPrimesSumCount = hexDigitsPrimesSum.length;\n\
    \    let hexDigitsPrimesSumPrimes = hexDigitsPrimesSum.filter(x => primes.includes(parseInt(x)));\n\
    \    let hexDigitsPrimesSumPrimesCount = hexDigitsPrimesSumPrimes.length;\n  \
    \  let hexDigitsPrimesSumPrimesSum = hexDigitsPrimesSumPrimes.reduce((a, b) =>\
    \ a + b, 0);\n    let hexDigitsPrimesSumPrimesSumCount = hexDigitsPrimesSumPrimesSum.length;\n\
    \    let hexDigitsPrimesSumPrimesSumPrimes = hexDigitsPrimesSumPrimesSum.filter(x\
    \ => primes.includes(parseInt(x)));\n    let hexDigitsPrimesSumPrimesSumPrimesCount\
    \ = hexDigitsPrimesSumPrimesSumPrimes.length;\n    let hexDigitsPrimesSumPrimesSumPrimesSum\
    \ = hexDigitsPrimesSumPrimesSumPrimes.reduce((a, b) => a + b, 0);\n    let hexDigitsPrimesSumPrimesSumPrimesSumCount\
    \ = hexDigitsPrimesSumPrimesSumPrimesSum.length;\n    let hexDigitsPrimesSumPrimesSumPrimesSumPrimes\
    \ = hexDigitsPrimesSumPrimesSumPrimesSumPrimes.filter(x => primes.includes(parseInt(x)));\n\
    \    let hexDigitsPrimesSumPrimesSumPrimesSumPrimesCount = hexDigitsPrimesSumPrimesSumPrimesSumPrimesSumPrimes.length;\n\
    \    let hexDigitsPrimesSumPrimesSumPrimesSumPrimesSum = hexDigitsPrimesSumPrimesSumPrimesSumPrimesSumPrimes.reduce((a,\
    \ b) => a + b, 0);\n    let hexDigitsPrimesSumPrimesSumPrimesSumPrimesSumCount\
    \ = hexDigitsPrimesSumPrimesSumPri", "    let hex = num.toString().replace(/[^0-9A-F]/g,\"\
    \");\n    let hexArray = hex.split(\"\");\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArraySum = 0;\n    let hexArraySum2 = 0;\n    let hexArraySum3 = 0;\n\
    \    let hexArraySum4 = 0;\n    let hexArraySum5 = 0;\n    let hexArraySum6 =\
    \ 0;\n    let hexArraySum7 = 0;\n    let hexArraySum8 = 0;\n    let hexArraySum9\
    \ = 0;\n    let hexArraySum10 = 0;\n    let hexArraySum11 = 0;\n    let hexArraySum12\
    \ = 0;\n    let hexArraySum13 = 0;\n    let hexArraySum14 = 0;\n    let hexArraySum15\
    \ = 0;\n    let hexArraySum16 = 0;\n    let hexArraySum17 = 0;\n    let hexArraySum18\
    \ = 0;\n    let hexArraySum19 = 0;\n    let hexArraySum20 = 0;\n    let hexArraySum21\
    \ = 0;\n    let hexArraySum22 = 0;\n    let hexArraySum23 = 0;\n    let hexArraySum24\
    \ = 0;\n    let hexArraySum25 = 0;\n    let hexArraySum26 = 0;\n    let hexArraySum27\
    \ = 0;\n    let hexArraySum28 = 0;\n    let hexArraySum29 = 0;\n    let hexArraySum30\
    \ = 0;\n    let hexArraySum31 = 0;\n    let hexArraySum32 = 0;\n    let hexArraySum33\
    \ = 0;\n    let hexArraySum34 = 0;\n    let hexArraySum35 = 0;\n    let hexArraySum36\
    \ = 0;\n    let hexArraySum37 = 0;\n    let hexArraySum38 = 0;\n    let hexArraySum39\
    \ = 0;\n    let hexArraySum40 = 0;\n    let hexArraySum41 = 0;\n    let hexArraySum42\
    \ = 0;\n    let hexArraySum43 = 0;\n    let hexArraySum44 = 0;\n    let hexArraySum45\
    \ = 0;\n    let hexArraySum46 = 0;\n    let hexArraySum47 = 0;\n    let hexArraySum48\
    \ = 0;\n    let hexArraySum49 = 0;\n    let hexArraySum50 = 0;\n    let hexArraySum51\
    \ = 0;\n    let hexArraySum52 = 0;\n    let hexArraySum53 = 0;\n    let hexArraySum54\
    \ = 0;\n    let hexArraySum55 = 0;\n    let hexArraySum56 = 0;\n    let hexArraySum57\
    \ = 0;\n    let hexArraySum58 = 0;\n    let hexArraySum59 = 0;\n    let hexArraySum60\
    \ = 0;\n    let hexArraySum61 = 0;\n    let hexArraySum62 = 0;\n    let hexArraySum63\
    \ = 0;\n    let hexArraySum64 = 0;\n    let hexArraySum65 = 0;\n    let hexArraySum66\
    \ = 0;\n    let hexArraySum67 = 0;\n    let hexArraySum68 = 0;\n    let hexArraySum69\
    \ = 0;\n    let ", "  let hex = num.toString().split('');\n  let count = 0;\n\
    \  for(let i = 0; i < hex.length; i++){\n    if(hex[i] === 'A' || hex[i] === 'B'\
    \ || hex[i] === 'C' || hex[i] === 'D' || hex[i] === 'E' || hex[i] === 'F'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "  let hex = num.toString().toUpperCase();\n\
    \  let hexDigits = [\n    \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"\
    7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n  ];\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n \
    \ let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 =\
    \ hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 =\
    \ hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31 = hexDigitCount30",
  "    let hex = num.toString().split(\"\").map(x => x.charCodeAt(0).toString(16)).join('');\n\
    \    let primes = hex_to_primes(hex);\n    let prime_sum = 0;\n    for(let i =\
    \ 0; i < primes.length; i++){\n        prime_sum += primes[i];\n    }\n    return\
    \ prime_sum;\n}\n", "    let hex = num.toString().split('');\n    let count =\
    \ 0;\n    for(let i = 0; i < hex.length; i++){\n        if(hex[i] === 'A' || hex[i]\
    \ === 'B' || hex[i] === 'C' || hex[i] === 'D' || hex[i] === 'E' || hex[i] ===\
    \ 'F'){\n            count++;\n        }\n    }\n    return count;\n}\n", "  \
    \  let hex = num.toUpperCase();\n    let digits = hex.split(\"\");\n    let primes\
    \ = [];\n    let prime_digits = [];\n    let prime_digit_count = 0;\n    let prime_digit_sum\
    \ = 0;\n    let prime_digit_sum2 = 0;\n    let prime_digit_sum3 = 0;\n    let\
    \ prime_digit_sum4 = 0;\n    let prime_digit_sum5 = 0;\n    let prime_digit_sum6\
    \ = 0;\n    let prime_digit_sum7 = 0;\n    let prime_digit_sum8 = 0;\n    let\
    \ prime_digit_sum9 = 0;\n    let prime_digit_sum10 = 0;\n    let prime_digit_sum11\
    \ = 0;\n    let prime_digit_sum12 = 0;\n    let prime_digit_sum13 = 0;\n    let\
    \ prime_digit_sum14 = 0;\n    let prime_digit_sum15 = 0;\n    let prime_digit_sum16\
    \ = 0;\n    let prime_digit_sum17 = 0;\n    let prime_digit_sum18 = 0;\n    let\
    \ prime_digit_sum19 = 0;\n    let prime_digit_sum20 = 0;\n    let prime_digit_sum21\
    \ = 0;\n    let prime_digit_sum22 = 0;\n    let prime_digit_sum23 = 0;\n    let\
    \ prime_digit_sum24 = 0;\n    let prime_digit_sum25 = 0;\n    let prime_digit_sum26\
    \ = 0;\n    let prime_digit_sum27 = 0;\n    let prime_digit_sum28 = 0;\n    let\
    \ prime_digit_sum29 = 0;\n    let prime_digit_sum30 = 0;\n    let prime_digit_sum31\
    \ = 0;\n    let prime_digit_sum32 = 0;\n    let prime_digit_sum33 = 0;\n    let\
    \ prime_digit_sum34 = 0;\n    let prime_digit_sum35 = 0;\n    let prime_digit_sum36\
    \ = 0;\n    let prime_digit_sum37 = 0;\n    let prime_digit_sum38 = 0;\n    let\
    \ prime_digit_sum39 = 0;\n    let prime_digit_sum40 = 0;\n    let prime_digit_sum41\
    \ = 0;\n    let prime_digit_sum42 = 0;\n    let prime_digit_sum43 = 0;\n    let\
    \ prime_digit_sum44 = 0;\n    let prime_digit_sum45 = 0;\n    let prime_digit_sum46\
    \ = 0;\n    let prime_digit_sum47 = 0;\n    let prime_digit_sum48 = 0;\n    let\
    \ prime_digit_sum49 = 0;\n    let prime_digit_sum50 = 0;\n    let prime_digit_sum51\
    \ = 0;\n    let prime_digit_sum52 = 0;\n    let prime_digit_sum53 = 0;\n    let\
    \ prime_digit_sum54 = 0;\n    let prime_digit_sum55 = 0;\n    let prime_digit_sum56\
    \ = 0;\n    let prime_digit_sum57 = 0;\n    let prime_digit_sum58 = 0;\n    let\
    \ prime_digit_sum59 = 0;\n    let prime_digit_sum60 = 0;\n    let prime_digit_sum61",
  "    var hex = num.toUpperCase();\n    var hexDigits = hex.split(\"\");\n    var\
    \ hexDigitCount = hexDigits.length;\n    var hexDigitCount2 = hexDigitCount*2;\n\
    \    var hexDigitCount3 = hexDigitCount*3;\n    var hexDigitCount4 = hexDigitCount*4;\n\
    \    var hexDigitCount5 = hexDigitCount*5;\n    var hexDigitCount6 = hexDigitCount*6;\n\
    \    var hexDigitCount7 = hexDigitCount*7;\n    var hexDigitCount8 = hexDigitCount*8;\n\
    \    var hexDigitCount9 = hexDigitCount*9;\n    var hexDigitCount10 = hexDigitCount*10;\n\
    \    var hexDigitCount11 = hexDigitCount*11;\n    var hexDigitCount12 = hexDigitCount*12;\n\
    \    var hexDigitCount13 = hexDigitCount*13;\n    var hexDigitCount14 = hexDigitCount*14;\n\
    \    var hexDigitCount15 = hexDigitCount*15;\n    var hexDigitCount16 = hexDigitCount*16;\n\
    \    var hexDigitCount17 = hexDigitCount*17;\n    var hexDigitCount18 = hexDigitCount*18;\n\
    \    var hexDigitCount19 = hexDigitCount*19;\n    var hexDigitCount20 = hexDigitCount*20;\n\
    \    var hexDigitCount21 = hexDigitCount*21;\n    var hexDigitCount22 = hexDigitCount*22;\n\
    \    var hexDigitCount23 = hexDigitCount*23;\n    var hexDigitCount24 = hexDigitCount*24;\n\
    \    var hexDigitCount25 = hexDigitCount*25;\n    var hexDigitCount26 = hexDigitCount*26;\n\
    \    var hexDigitCount27 = hexDigitCount*27;\n    var hexDigitCount28 = hexDigitCount*28;\n\
    \    var hexDigitCount29 = hexDigitCount*29;\n    var hexDigitCount30 = hexDigitCount*30;\n\
    \    var hexDigitCount31 = hexDigitCount*31;\n    var hexDigitCount32 = hexDigitCount*32;\n\
    \    var hexDigitCount33 = hexDigitCount*33;\n    var hexDigitCount34 = hexDigitCount*34;\n\
    \    var hexDigitCount35 = hexDigitCount*35;\n    var hexDigitCount36 = hexDigitCount*36;\n\
    \    var hexDigitCount37 = hexDigitCount*37;\n    var hexDigitCount38 = hexDigitCount*38;\n\
    \    var hexDigitCount39 = hexDigitCount*39;\n    var hexDigitCount40 = hexDigitCount*40;\n\
    \    var hexDigitCount41 = hexDigitCount*", "  var hex = num.toString().toUpperCase();\n\
    \  var primes = [];\n  var prime_digits = [];\n  var prime_digit_count = [];\n\
    \  var prime_digit_count_temp = [];\n  var prime_digit_count_temp_temp = [];\n\
    \  var prime_digit_count_temp_temp_temp = [];\n  var prime_digit_count_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp = [];\n  var\
    \ prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  var prime", "    let hex = num.toString().split(\"\").map(x => x.charCodeAt(0).toString(16));\n\
    \    let primes = [];\n    let prime_counter = 0;\n    let prime_counter2 = 0;\n\
    \    let prime_counter3 = 0;\n    let prime_counter4 = 0;\n    let prime_counter5\
    \ = 0;\n    let prime_counter6 = 0;\n    let prime_counter7 = 0;\n    let prime_counter8\
    \ = 0;\n    let prime_counter9 = 0;\n    let prime_counter10 = 0;\n    let prime_counter11\
    \ = 0;\n    let prime_counter12 = 0;\n    let prime_counter13 = 0;\n    let prime_counter14\
    \ = 0;\n    let prime_counter15 = 0;\n    let prime_counter16 = 0;\n    let prime_counter17\
    \ = 0;\n    let prime_counter18 = 0;\n    let prime_counter19 = 0;\n    let prime_counter20\
    \ = 0;\n    let prime_counter21 = 0;\n    let prime_counter22 = 0;\n    let prime_counter23\
    \ = 0;\n    let prime_counter24 = 0;\n    let prime_counter25 = 0;\n    let prime_counter26\
    \ = 0;\n    let prime_counter27 = 0;\n    let prime_counter28 = 0;\n    let prime_counter29\
    \ = 0;\n    let prime_counter30 = 0;\n    let prime_counter31 = 0;\n    let prime_counter32\
    \ = 0;\n    let prime_counter33 = 0;\n    let prime_counter34 = 0;\n    let prime_counter35\
    \ = 0;\n    let prime_counter36 = 0;\n    let prime_counter37 = 0;\n    let prime_counter38\
    \ = 0;\n    let prime_counter39 = 0;\n    let prime_counter40 = 0;\n    let prime_counter41\
    \ = 0;\n    let prime_counter42 = 0;\n    let prime_counter43 = 0;\n    let prime_counter44\
    \ = 0;\n    let prime_counter45 = 0;\n    let prime_counter46 = 0;\n    let prime_counter47\
    \ = 0;\n    let prime_counter48 = 0;\n    let prime_counter49 = 0;\n    let prime_counter50\
    \ = 0;\n    let prime_counter51 = 0;\n    let prime_counter52 = 0;\n    let prime_counter53\
    \ = 0;\n    let prime_counter54 = 0;\n    let prime_counter55 = 0;\n    let prime_counter56\
    \ = 0;\n    let prime_counter57 = 0;\n    let prime_counter58 = 0;\n    let prime_counter59\
    \ = 0;\n    let prime_counter60 = 0;\n    let prime_counter61 = 0;\n    let prime_counter62\
    \ = 0;\n    let prime_counter63 = 0;\n    let prime_counter64 = 0;\n    let prime_counter65\
    \ = 0;\n    let prime_counter66 = 0;\n    let prime_counter67 = 0;\n    let prime_counter68\
    \ = 0;\n    let prime_counter69 = 0;\n    let prime_counter70 = 0;\n    let prime_",
  "    let hex = num.toString().split('');\n    let count = 0;\n    for(let i = 0;\
    \ i < hex.length; i++){\n        if(hex[i] == \"A\" || hex[i] == \"B\" || hex[i]\
    \ == \"C\" || hex[i] == \"D\" || hex[i] == \"E\" || hex[i] == \"F\"){\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n", "    let hex = num.toString().replace(/[^A-F0-9]/g,\"\
    \");\n    let hexDigits = hex.length;\n    let primeDigits = hexDigits/2;\n  \
    \  let primes = [];\n    for(let i=0;i<primeDigits;i++){\n        let prime =\
    \ hex.charAt(i*2)+hex.charAt(i*2+1)\n        if(primes.indexOf(prime)==-1){\n\
    \            primes.push(prime);\n        }\n    }\n    return primes.length;\n\
    }\n", "  let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\");\n  let\
    \ hexDigitCount = hexDigits.length;\n  let hexDigitPrimeCount = 0;\n  let hexDigitPrimes\
    \ = [];\n  let hexDigitPrimeIndex = 0;\n  \n  // Count the number of hexadecimal\
    \ digits that are primes (prime number, \n  // or a prime, is a natural number\
    \ greater than 1 that is not a product of two \n  // smaller natural numbers).\n\
    \  for(let i = 0; i < hexDigitCount; i++){\n    let hexDigit = hexDigits[i];\n\
    \    let hexDigitValue = parseInt(hexDigit);\n    if(hexDigitValue > 0 && hexDigitValue\
    \ <= 16){\n      hexDigitPrimes[hexDigitPrimeIndex] = hexDigitValue;\n      hexDigitPrimeIndex++;\n\
    \    }\n  }\n  \n  // Count the number of hexadecimal digits that are primes (prime\
    \ number, \n  // or a prime, is a natural number greater than 1 that is not a\
    \ product of two \n  // smaller natural numbers).\n  for(let i = 0; i < hexDigitCount;\
    \ i++){\n    let hexDigit = hexDigits[i];\n    let hexDigitValue = parseInt(hexDigit);\n\
    \    if(hexDigitValue > 0 && hexDigitValue <= 16){\n      hexDigitPrimeCount++;\n\
    \    }\n  }\n  \n  // Return the number of hexadecimal digits that are primes\
    \ (prime number, \n  // or a prime, is a natural number greater than 1 that is\
    \ not a product of two \n  // smaller natural numbers).\n  return hexDigitPrimeCount;\n\
    }\n", "    let hex = num.toString().split('');\n    let primes = [];\n    let\
    \ prime_count = 0;\n    for(let i = 0; i < hex.length; i++){\n        let hex_value\
    \ = hex[i];\n        if(hex_value === 'A' || hex_value === 'B' || hex_value ===\
    \ 'C' || hex_value === 'D' || hex_value === 'E' || hex_value === 'F'){\n     \
    \       prime_count++;\n        }\n        if(hex_value === '2' || hex_value ===\
    \ '3' || hex_value === '5' || hex_value === '7' || hex_value === '11' || hex_value\
    \ === '13' || hex_value === '17' || hex_value === '19' || hex_value === '23' ||\
    \ hex_value === '29' || hex_value === '31' || hex_value === '37' || hex_value\
    \ === '41' || hex_value === '43' || hex_value === '47' || hex_value === '53' ||\
    \ hex_value === '59' || hex_value === '61' || hex_value === '67' || hex_value\
    \ === '71' || hex_value === '73' || hex_value === '79' || hex_value === '83' ||\
    \ hex_value === '89' || hex_value === '97'){\n            primes.push(hex_value);\n\
    \        }\n    }\n    return prime_count;\n}\n", "    let hex = num.toString().toUpperCase();\n\
    \    let count = 0;\n    for(let i = 0; i < hex.length; i++){\n        if(hex.charAt(i)\
    \ == \"A\" || hex.charAt(i) == \"B\" || hex.charAt(i) == \"C\" || hex.charAt(i)\
    \ == \"D\" || hex.charAt(i) == \"E\" || hex.charAt(i) == \"F\"){\n           \
    \ count++;\n        }\n    }\n    return count;\n}\n", "  let hex = num.toString().split('');\n\
    \  let primes = [];\n  let prime_counter = 0;\n  let prime_counter2 = 0;\n  let\
    \ prime_counter3 = 0;\n  let prime_counter4 = 0;\n  let prime_counter5 = 0;\n\
    \  let prime_counter6 = 0;\n  let prime_counter7 = 0;\n  let prime_counter8 =\
    \ 0;\n  let prime_counter9 = 0;\n  let prime_counter10 = 0;\n  let prime_counter11\
    \ = 0;\n  let prime_counter12 = 0;\n  let prime_counter13 = 0;\n  let prime_counter14\
    \ = 0;\n  let prime_counter15 = 0;\n  let prime_counter16 = 0;\n  let prime_counter17\
    \ = 0;\n  let prime_counter18 = 0;\n  let prime_counter19 = 0;\n  let prime_counter20\
    \ = 0;\n  let prime_counter21 = 0;\n  let prime_counter22 = 0;\n  let prime_counter23\
    \ = 0;\n  let prime_counter24 = 0;\n  let prime_counter25 = 0;\n  let prime_counter26\
    \ = 0;\n  let prime_counter27 = 0;\n  let prime_counter28 = 0;\n  let prime_counter29\
    \ = 0;\n  let prime_counter30 = 0;\n  let prime_counter31 = 0;\n  let prime_counter32\
    \ = 0;\n  let prime_counter33 = 0;\n  let prime_counter34 = 0;\n  let prime_counter35\
    \ = 0;\n  let prime_counter36 = 0;\n  let prime_counter37 = 0;\n  let prime_counter38\
    \ = 0;\n  let prime_counter39 = 0;\n  let prime_counter40 = 0;\n  let prime_counter41\
    \ = 0;\n  let prime_counter42 = 0;\n  let prime_counter43 = 0;\n  let prime_counter44\
    \ = 0;\n  let prime_counter45 = 0;\n  let prime_counter46 = 0;\n  let prime_counter47\
    \ = 0;\n  let prime_counter48 = 0;\n  let prime_counter49 = 0;\n  let prime_counter50\
    \ = 0;\n  let prime_counter51 = 0;\n  let prime_counter52 = 0;\n  let prime_counter53\
    \ = 0;\n  let prime_counter54 = 0;\n  let prime_counter55 = 0;\n  let prime_counter56\
    \ = 0;\n  let prime_counter57 = 0;\n  let prime_counter58 = 0;\n  let prime_counter59\
    \ = 0;\n  let prime_counter60 = 0;\n  let prime_counter61 = 0;\n  let prime_counter62\
    \ = 0;\n  let prime_counter63 = 0;\n  let prime_counter64 = 0;\n  let prime_counter65\
    \ = 0;\n  let prime_counter66 = 0;\n  let prime_counter67 = 0;\n  let prime_counter68\
    \ = 0;\n  let prime_counter69 = 0;\n  let prime_counter70 = 0;\n  let prime_counter71\
    \ = 0;\n  let prime_counter72 = 0;\n", "    let hex = num.toString().toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCountPrime = hexDigitCount;\n    let hexDigitCountPrime2 = hexDigitCount;\n\
    \    let hexDigitCountPrime3 = hexDigitCount;\n    let hexDigitCountPrime4 = hexDigitCount;\n\
    \    let hexDigitCountPrime5 = hexDigitCount;\n    let hexDigitCountPrime6 = hexDigitCount;\n\
    \    let hexDigitCountPrime7 = hexDigitCount;\n    let hexDigitCountPrime8 = hexDigitCount;\n\
    \    let hexDigitCountPrime9 = hexDigitCount;\n    let hexDigitCountPrime10 =\
    \ hexDigitCount;\n    let hexDigitCountPrime11 = hexDigitCount;\n    let hexDigitCountPrime12\
    \ = hexDigitCount;\n    let hexDigitCountPrime13 = hexDigitCount;\n    let hexDigitCountPrime14\
    \ = hexDigitCount;\n    let hexDigitCountPrime15 = hexDigitCount;\n    let hexDigitCountPrime16\
    \ = hexDigitCount;\n    let hexDigitCountPrime17 = hexDigitCount;\n    let hexDigitCountPrime18\
    \ = hexDigitCount;\n    let hexDigitCountPrime19 = hexDigitCount;\n    let hexDigitCountPrime20\
    \ = hexDigitCount;\n    let hexDigitCountPrime21 = hexDigitCount;\n    let hexDigitCountPrime22\
    \ = hexDigitCount;\n    let hexDigitCountPrime23 = hexDigitCount;\n    let hexDigitCountPrime24\
    \ = hexDigitCount;\n    let hexDigitCountPrime25 = hexDigitCount;\n    let hexDigitCountPrime26\
    \ = hexDigitCount;\n    let hexDigitCountPrime27 = hexDigitCount;\n    let hexDigitCountPrime28\
    \ = hexDigitCount;\n    let hexDigitCountPrime29 = hexDigitCount;\n    let hexDigitCountPrime30\
    \ = hexDigitCount;\n    let hexDigitCountPrime31 = hexDigitCount;\n    let hexDigitCountPrime32\
    \ = hexDigitCount;\n    let hexDigitCountPrime33 = hexDigitCount;\n    let hexDigitCountPrime34\
    \ = hexDigitCount;\n    let hexDigitCountPrime35 = hexDigitCount;\n    let hexDigitCountPrime36\
    \ = hexDigitCount;\n    let hexDigitCountPrime37 = hexDigitCount;\n    let hexDigitCountPrime38\
    \ = hexDigitCount;\n    let hexDigit", "    let hex = num.split(\"\").map(x =>\
    \ x.charCodeAt(0).toString(16));\n    let primes = [];\n    let prime_count =\
    \ 0;\n    let prime_digits = [];\n    let prime_digit_count = 0;\n    let prime_digit_sum\
    \ = 0;\n    let prime_digit_sum2 = 0;\n    let prime_digit_sum3 = 0;\n    let\
    \ prime_digit_sum4 = 0;\n    let prime_digit_sum5 = 0;\n    let prime_digit_sum6\
    \ = 0;\n    let prime_digit_sum7 = 0;\n    let prime_digit_sum8 = 0;\n    let\
    \ prime_digit_sum9 = 0;\n    let prime_digit_sum10 = 0;\n    let prime_digit_sum11\
    \ = 0;\n    let prime_digit_sum12 = 0;\n    let prime_digit_sum13 = 0;\n    let\
    \ prime_digit_sum14 = 0;\n    let prime_digit_sum15 = 0;\n    let prime_digit_sum16\
    \ = 0;\n    let prime_digit_sum17 = 0;\n    let prime_digit_sum18 = 0;\n    let\
    \ prime_digit_sum19 = 0;\n    let prime_digit_sum20 = 0;\n    let prime_digit_sum21\
    \ = 0;\n    let prime_digit_sum22 = 0;\n    let prime_digit_sum23 = 0;\n    let\
    \ prime_digit_sum24 = 0;\n    let prime_digit_sum25 = 0;\n    let prime_digit_sum26\
    \ = 0;\n    let prime_digit_sum27 = 0;\n    let prime_digit_sum28 = 0;\n    let\
    \ prime_digit_sum29 = 0;\n    let prime_digit_sum30 = 0;\n    let prime_digit_sum31\
    \ = 0;\n    let prime_digit_sum32 = 0;\n    let prime_digit_sum33 = 0;\n    let\
    \ prime_digit_sum34 = 0;\n    let prime_digit_sum35 = 0;\n    let prime_digit_sum36\
    \ = 0;\n    let prime_digit_sum37 = 0;\n    let prime_digit_sum38 = 0;\n    let\
    \ prime_digit_sum39 = 0;\n    let prime_digit_sum40 = 0;\n    let prime_digit_sum41\
    \ = 0;\n    let prime_digit_sum42 = 0;\n    let prime_digit_sum43 = 0;\n    let\
    \ prime_digit_sum44 = 0;\n    let prime_digit_sum45 = 0;\n    let prime_digit_sum46\
    \ = 0;\n    let prime_digit_sum47 = 0;\n    let prime_digit_sum48 = 0;\n    let\
    \ prime_digit_sum49 = 0;\n    let prime_digit_sum50 = 0;\n    let prime_digit_sum51\
    \ = 0;\n    let prime_digit_sum52 = 0;\n    let prime_digit_sum53 = 0;\n    let\
    \ prime_digit_sum54 = 0;\n    let prime_digit_sum55 = 0;\n    let prime_digit_sum56\
    \ = 0;\n    let prime_digit_sum57 = 0;\n    let prime_digit_sum58 = 0;\n    let\
    \ prime_digit_sum59 = 0;\n    let prime_digit_sum", "    var hex = num.toString().toUpperCase();\n\
    \    var count = 0;\n    for(var i=0;i<hex.length;i++){\n        var hexDigit\
    \ = hex.charAt(i);\n        if(hexDigit >= '0' && hexDigit <= '9'){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n", "  let hex = num.toString().split('');\n\
    \  let primes = [];\n  let prime = 0;\n  let count = 0;\n  for(let i = 0; i <\
    \ hex.length; i++){\n    if(hex[i].match(/[0-9A-F]/)){\n      prime = hex[i]*2;\n\
    \      primes.push(prime);\n      count++;\n    }\n  }\n  for(let i = 0; i < primes.length;\
    \ i++){\n    if(primes[i] > 1){\n      prime = primes[i];\n      break;\n    }\n\
    \  }\n  return count;\n}\n", "    let hex = num.toUpperCase();\n    let hexDigits\
    \ = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255];\n\
    \    let hexDigitCount = hex.length;\n    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4\
    \ = ", "    let hex = num.toString().split('');\n    let primes = [];\n    let\
    \ prime_count = 0;\n    for(let i = 0; i < hex.length; i++){\n        let hexDigit\
    \ = hex[i];\n        if(hexDigit >= '0' && hexDigit <= '9'){\n            prime_count++;\n\
    \            if(prime_count > 2){\n                primes.push(hexDigit);\n  \
    \              prime_count = 0;\n            }\n        }\n    }\n    return primes.length;\n\
    }\n", "    var hex = num.toString().toUpperCase();\n    var hexLength = hex.length;\n\
    \    var hexDigits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \    var hexDigits_length = hexDigits.length;\n    var hexDigits_primes = [];\n\
    \    var hexDigits_primes_length = hexDigits_primes.length;\n    var hexDigits_primes_primes\
    \ = [];\n    var hexDigits_primes_primes_length = hexDigits_primes_primes.length;\n\
    \    var hexDigits_primes_primes_primes_length = hexDigits_primes_primes_primes.length;\n\
    \    var hexDigits_primes_primes_primes_primes_length = hexDigits_primes_primes_primes_primes.length;\n\
    \    var hexDigits_primes_primes_primes_primes_primes_length = hexDigits_primes_primes_primes_primes_primes.length;\n\
    \    var hexDigits_primes_primes_primes_primes_primes_primes_length = hexDigits_primes_primes_primes_primes_primes_primes.length;\n\
    \    var hexDigits_primes_primes_primes_primes_primes_primes_primes_length = hexDigits_primes_primes_primes_primes_primes_primes_primes_primes.length;\n\
    \    var hexDigits_primes_primes_primes_primes_primes_primes_primes_primes_length\
    \ = hexDigits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes.length;\n\
    \    var hexDigits_primes_primes_primes_primes_primes_primes_primes_primes_primes_length\
    \ = hexDigits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_",
  "  var hex = num.toString().split('');\n  var primes = [];\n  var prime = 0;\n \
    \ var prime_found = false;\n  for(var i=0; i<hex.length; i++){\n    var hexDigit\
    \ = hex[i];\n    if(hexDigit == 'A' || hexDigit == 'B' || hexDigit == 'C' || hexDigit\
    \ == 'D' || hexDigit == 'E' || hexDigit == 'F'){\n      prime_found = true;\n\
    \      prime = hexDigit;\n    }\n    if(prime_found){\n      primes.push(prime);\n\
    \      prime = 0;\n      prime_found = false;\n    }\n  }\n  var hexDigits = primes.length;\n\
    \  var hexDigits_found = false;\n  for(var i=0; i<hexDigits; i++){\n    var hexDigit\
    \ = hex[i];\n    if(hexDigit == primes[i]){\n      hexDigits_found = true;\n \
    \   }\n  }\n  if(hexDigits_found){\n    return hexDigits;\n  }\n  else{\n    return\
    \ 0;\n  }\n}\n", "    let hex = num.toString().toUpperCase();\n    let hexDigits\
    \ = hex.split(\"\");\n    let primeDigits = [];\n    let primeCount = 0;\n   \
    \ for(let i = 0; i < hexDigits.length; i++){\n        if(hexDigits[i] === \"A\"\
    \ || hexDigits[i] === \"B\" || hexDigits[i] === \"C\" || hexDigits[i] === \"D\"\
    \ || hexDigits[i] === \"E\" || hexDigits[i] === \"F\"){\n            primeDigits.push(hexDigits[i]);\n\
    \        }\n    }\n    for(let i = 0; i < primeDigits.length; i++){\n        if(primeDigits[i]\
    \ === \"2\"){\n            primeCount++;\n        }\n    }\n    return primeCount;\n\
    }\n</code>\n<|/ a tags=javascript,algorithm |>\n<| c |>\nThis doesn't seem to\
    \ work. `hex_key(\"AB\")` returns `1` instead of `2`.\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug, thanks for pointing it out. Now it works.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>", "    let hex = num.toString().toUpperCase();\n    let primes =\
    \ [];\n    let prime_digits = [];\n    let prime_digit_count = [];\n    let prime_digit_count_temp\
    \ = [];\n    let prime_digit_count_temp_temp = [];\n    let prime_digit_count_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp = [];\n    let prime_digit_count_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp = [];\n    let\
    \ prime_digit_count_temp_temp_temp_temp_temp_temp_temp = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n    let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_",
  "    var hex = num.toString().toUpperCase();\n    var count = 0;\n    for(var i=0;i<hex.length;i++){\n\
    \        var num = parseInt(hex.charAt(i));\n        if(num%2 === 0){\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n", "  let hex = num.toString().split('');\n\
    \  let count = 0;\n  let primes = [];\n  for(let i = 0; i < hex.length; i++){\n\
    \    let hexDigit = hex[i];\n    if(hexDigit >= '0' && hexDigit <= '9'){\n   \
    \   count++;\n    }\n    if(hexDigit >= 'A' && hexDigit <= 'F'){\n      count++;\n\
    \    }\n    if(hexDigit == 'A' || hexDigit == 'B' || hexDigit == 'C' || hexDigit\
    \ == 'D' || hexDigit == 'E' || hexDigit == 'F'){\n      count++;\n    }\n    if(hexDigit\
    \ == '2' || hexDigit == '3' || hexDigit == '5' || hexDigit == '7' || hexDigit\
    \ == 'B' || hexDigit == 'D' || hexDigit == 'E' || hexDigit == 'F'){\n      count++;\n\
    \    }\n    if(hexDigit == '7' || hexDigit == 'B' || hexDigit == 'D' || hexDigit\
    \ == 'E' || hexDigit == 'F'){\n      count++;\n    }\n    if(hexDigit == '7' ||\
    \ hexDigit == 'B' || hexDigit == 'D' || hexDigit == 'E' || hexDigit == 'F'){\n\
    \      count++;\n    }\n    if(hexDigit == '7' || hexDigit == 'B' || hexDigit\
    \ == 'D' || hexDigit == 'E' || hexDigit == 'F'){\n      count++;\n    }\n    if(hexDigit\
    \ == '7' || hexDigit == 'B' || hexDigit == 'D' || hexDigit == 'E' || hexDigit\
    \ == 'F'){\n      count++;\n    }\n    if(hexDigit == '7' || hexDigit == 'B' ||\
    \ hexDigit == 'D' || hexDigit == 'E' || hexDigit == 'F'){\n      count++;\n  \
    \  }\n    if(hexDigit == '7' || hexDigit == 'B' || hexDigit == 'D' || hexDigit\
    \ == 'E' || hexDigit == 'F'){\n      count++;\n    }\n    if(hexDigit == '7' ||\
    \ hexDigit == 'B' || hexDigit == 'D' || hexDigit == 'E' || hexDigit == 'F'){\n\
    \      count++;\n    }\n    if(hexDigit == '7' || hexDigit == 'B' || hexDigit\
    \ == 'D' || hexDigit == 'E' || hexDigit == 'F'){\n      count++;\n    }\n    if(hexDigit\
    \ == '7' || hexDigit == 'B' || hexDigit == 'D' || hex", "  let hex = num.split(\"\
    \").map(x => x.charCodeAt(0).toString(16)).join('');\n  let hexDigits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 =\
    \ hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 =\
    \ hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 =\
    \ hexDigitCount9*hexDigitCount;\n  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \  let hexDigitCount30 = hexDigitCount", "    let hex = num.toString().split('');\n\
    \    let primes = [];\n    let prime_counter = 0;\n    let prime_counter2 = 0;\n\
    \    let prime_counter3 = 0;\n    let prime_counter4 = 0;\n    let prime_counter5\
    \ = 0;\n    let prime_counter6 = 0;\n    let prime_counter7 = 0;\n    let prime_counter8\
    \ = 0;\n    let prime_counter9 = 0;\n    let prime_counter10 = 0;\n    let prime_counter11\
    \ = 0;\n    let prime_counter12 = 0;\n    let prime_counter13 = 0;\n    let prime_counter14\
    \ = 0;\n    let prime_counter15 = 0;\n    let prime_counter16 = 0;\n    let prime_counter17\
    \ = 0;\n    let prime_counter18 = 0;\n    let prime_counter19 = 0;\n    let prime_counter20\
    \ = 0;\n    let prime_counter21 = 0;\n    let prime_counter22 = 0;\n    let prime_counter23\
    \ = 0;\n    let prime_counter24 = 0;\n    let prime_counter25 = 0;\n    let prime_counter26\
    \ = 0;\n    let prime_counter27 = 0;\n    let prime_counter28 = 0;\n    let prime_counter29\
    \ = 0;\n    let prime_counter30 = 0;\n    let prime_counter31 = 0;\n    let prime_counter32\
    \ = 0;\n    let prime_counter33 = 0;\n    let prime_counter34 = 0;\n    let prime_counter35\
    \ = 0;\n    let prime_counter36 = 0;\n    let prime_counter37 = 0;\n    let prime_counter38\
    \ = 0;\n    let prime_counter39 = 0;\n    let prime_counter40 = 0;\n    let prime_counter41\
    \ = 0;\n    let prime_counter42 = 0;\n    let prime_counter43 = 0;\n    let prime_counter44\
    \ = 0;\n    let prime_counter45 = 0;\n    let prime_counter46 = 0;\n    let prime_counter47\
    \ = 0;\n    let prime_counter48 = 0;\n    let prime_counter49 = 0;\n    let prime_counter50\
    \ = 0;\n    let prime_counter51 = 0;\n    let prime_counter52 = 0;\n    let prime_counter53\
    \ = 0;\n    let prime_counter54 = 0;\n    let prime_counter55 = 0;\n    let prime_counter56\
    \ = 0;\n    let prime_counter57 = 0;\n    let prime_counter58 = 0;\n    let prime_counter59\
    \ = 0;\n    let prime_counter60 = 0;\n    let prime_counter61 = 0;\n    let prime_counter62\
    \ = 0;\n    let prime_counter63 = 0;\n    let prime_counter64 = 0;\n    let prime_counter65\
    \ = 0;\n    let prime_counter66 = 0;\n    let prime_counter67 = 0;\n    let prime_counter68\
    \ = 0;\n    let prime_counter69 = 0;\n    let prime_counter70 = 0;\n    let prime_counter71\
    \ = 0;\n    let prime_counter72 = 0;\n", "  let hex = num.toString().replace(/[^A-F0-9]/g,\"\
    \");\n  let hexDigits = hex.length;\n  let primeDigits = hexDigits/2;\n  let primes\
    \ = [];\n  let primeDigit = 0;\n  for(let i=0;i<primeDigits;i++){\n    primeDigit\
    \ = hex.charAt(i*2);\n    primes.push(primeDigit);\n  }\n  let primesLength =\
    \ primes.length;\n  let primesSum = 0;\n  for(let i=0;i<primesLength;i++){\n \
    \   primesSum += primes[i];\n  }\n  let primesSumHex = primesSum.toString(16);\n\
    \  let primesSumHexLength = primesSumHex.length;\n  let primesSumHexArray = primesSumHex.split(\"\
    \");\n  let primesSumHexArrayLength = primesSumHexArray.length;\n  let primesSumHexArraySum\
    \ = 0;\n  for(let i=0;i<primesSumHexArrayLength;i++){\n    primesSumHexArraySum\
    \ += parseInt(primesSumHexArray[i]);\n  }\n  let primesSumHexArraySumHex = primesSumHexArraySum.toString(16);\n\
    \  let primesSumHexArraySumHexLength = primesSumHexArraySumHex.length;\n  let\
    \ primesSumHexArraySumHexArray = primesSumHexArraySumHex.split(\"\");\n  let primesSumHexArraySumHexArrayLength\
    \ = primesSumHexArraySumHexArray.length;\n  let primesSumHexArraySumHexArraySum\
    \ = 0;\n  for(let i=0;i<primesSumHexArraySumHexArrayLength;i++){\n    primesSumHexArraySumHexArraySum\
    \ += parseInt(primesSumHexArraySumHexArray[i]);\n  }\n  let primesSumHexArraySumHexArraySumHex\
    \ = primesSumHexArraySumHexArraySum.toString(16);\n  let primesSumHexArraySumHexArraySumHexLength\
    \ = primesSumHexArraySumHexArraySumHex.length;\n  let primesSumHexArraySumHexArraySumHexArray\
    \ = primesSumHexArraySumHexArraySumHex.split(\"\");\n  let primesSumHexArraySumHexArraySumHexArrayLength\
    \ = primesSumHexArraySumHexArraySumHexArray.length;\n  let primesSumHexArraySumHexArraySumHexArraySum\
    \ = 0;\n  for(let i=0;i<primesSumHexArraySumHexArraySumHexArrayLength;i++){\n\
    \    primesSumHexArraySumHexArraySumHexArraySum += parseInt(primesSumHexArraySumHexArraySumHexArray[i]);\n\
    \  }\n  let ", "    var hex = num.toString().toUpperCase();\n    var hexDigits\
    \ = hex.split(\"\");\n    var hexDigitCount = hexDigits.length;\n    var hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n    var hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \    var hexDigitCount4 = hexDigitCount3*hexDigitCount;\n    var hexDigitCount5\
    \ = hexDigitCount4*hexDigitCount;\n    var hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \    var hexDigitCount7 = hexDigitCount6*hexDigitCount;\n    var hexDigitCount8\
    \ = hexDigitCount7*hexDigitCount;\n    var hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \    var hexDigitCount10 = hexDigitCount9*hexDigitCount;\n    var hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n    var hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \    var hexDigitCount13 = hexDigitCount12*hexDigitCount;\n    var hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n    var hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \    var hexDigitCount16 = hexDigitCount15*hexDigitCount;\n    var hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n    var hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \    var hexDigitCount19 = hexDigitCount18*hexDigitCount;\n    var hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n    var hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \    var hexDigitCount22 = hexDigitCount21*hexDigitCount;\n    var hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n    var hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \    var hexDigitCount25 = hexDigitCount24*hexDigitCount;\n    var hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n    var hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \    var hexDigitCount28 = hexDigitCount27*hexDigitCount;\n    var hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n    var hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \    var hexDigitCount31 = hexDigitCount30*hexDigitCount;\n    var hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n    var hexDigitCount33 = ", "  let hex =\
    \ num.toUpperCase();\n  let hexDigits = hex.split('');\n  let hexDigitCount =\
    \ hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n  let\
    \ hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 =\
    \ hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 =\
    \ hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33\
    \ = hexDigitCount32", "    let hex = num.toString().split('');\n    let hex_rev\
    \ = [];\n    for(let i=0;i<hex.length;i++){\n        hex_rev.push(hex[hex.length-i-1]);\n\
    \    }\n    let hex_rev_rev = hex_rev.join('');\n    let hex_rev_rev_rev = hex_rev_rev.reverse();\n\
    \    let hex_rev_rev_rev_rev = hex_rev_rev_rev.reverse();\n    let hex_rev_rev_rev_rev_rev\
    \ = hex_rev_rev_rev_rev.reverse();\n    let hex_rev_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev_rev_rev.reverse();\n\
    \    let hex_rev_rev_rev_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev.reverse();\n\
    \    let hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev.reverse();\n\
    \    let hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev.reverse();\n\
    \    let hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev =\
    \ hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev.reverse();\n\
    \    let hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev\
    \ = hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev.reverse();\n\
    \    let hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev\
    \ = hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev.reverse();\n\
    \    let hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev\
    \ = hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev", "    var hex = num.toString().toLowerCase();\n\
    \    var hexDigits = [\n        \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"\
    ,\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"\n    ];\n    var hexDigitCount\
    \ = hex.length;\n    var hexDigitCount2 = hexDigitCount*hexDigitCount;\n    var\
    \ hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    var hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \    var hexDigitCount5 = hexDigitCount4*hexDigitCount;\n    var hexDigitCount6\
    \ = hexDigitCount5*hexDigitCount;\n    var hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \    var hexDigitCount8 = hexDigitCount7*hexDigitCount;\n    var hexDigitCount9\
    \ = hexDigitCount8*hexDigitCount;\n    var hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \    var hexDigitCount11 = hexDigitCount10*hexDigitCount;\n    var hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n    var hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \    var hexDigitCount14 = hexDigitCount13*hexDigitCount;\n    var hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n    var hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \    var hexDigitCount17 = hexDigitCount16*hexDigitCount;\n    var hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n    var hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \    var hexDigitCount20 = hexDigitCount19*hexDigitCount;\n    var hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n    var hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \    var hexDigitCount23 = hexDigitCount22*hexDigitCount;\n    var hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n    var hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \    var hexDigitCount26 = hexDigitCount25*hexDigitCount;\n    var hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n    var hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \    var hexDigitCount29 = hexDigitCount28*hexDigitCount;\n    var hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n    var hexDigitCount31 = hexDigitCount",
  "  let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join('');\n\
    \  let hexDigits = [...hex];\n  let hexDigitCount = hexDigits.length;\n  let hexDigitPrimes\
    \ = [];\n  let hexDigitPrimeCount = 0;\n  let hexDigitPrimePrimes = [];\n  let\
    \ hexDigitPrimePrimeCount = 0;\n  let hexDigitPrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n \
    \ let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n\
    \  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n  let\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n  let\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n\
    \  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n  let ", "  let hex = num.toString().split(\"\");\n  let count = 0;\n\
    \  for(let i = 0; i < hex.length; i++){\n    if(hex[i] == \"A\" || hex[i] == \"\
    B\" || hex[i] == \"C\" || hex[i] == \"D\" || hex[i] == \"E\" || hex[i] == \"F\"\
    ){\n      count++;\n    }\n  }\n  return count;\n}\n", "    let hex = num.toString().replace(/[^0-9A-F]/g,\"\
    \");\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimes = [];\n    let hexDigitPrimeCount = 0;\n    let hexDigitPrimePrimes\
    \ = [];\n    let hexDigitPrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimes\
    \ = [];\n    for(let i = 0; i < hexDigitCount; i++){\n        let hexDigit = hexDigits[i];\n\
    \        if(hexDigit == \"A\" || hexDigit == \"B\" || hexDigit == \"C\" || hexDigit\
    \ == \"D\" || hexDigit == \"E\" || hexDigit == \"F\"){\n            hexDigitPrimes.push(hexDigit);\n\
    \            hexDigitPrimeCount++;\n        }\n        else if(hexDigit == \"\
    2\" || hexDigit == \"3\" || hexDigit == \"5\" || hexDigit == \"7\" || hexDigit\
    \ == \"11\" || hexDigit == \"13\" || hexDigit == \"17\" || hexDigit == \"19\"\
    \ || hexDigit == \"23\" || hexDigit == \"29\" || hexDigit == \"31\" || hexDigit\
    \ == \"37\" || hexDigit == \"41\" || hexDigit == \"43\" || hexDigit == \"47\"\
    \ || hexDigit == \"53\" || hexDigit == \"59\" || hexDigit == \"61\" || hexDigit\
    \ == \"67\" || hexDigit == \"71\" || hexDigit == \"73\" || hexDigit == \"79\"\
    \ || hexDigit == \"83\" || hexDigit == \"89\" || hexDigit == \"97\"){\n      \
    \      hexDigitPrimePrimes.push(hexDigit);\n            hexDigitPrimePrimeCount++;\n\
    \        }\n        else if(hexDigit == \"0\"){\n            hexDigitPrimePrimePrimes.push(hexDigit);\n\
    \            hexDigitPrimePrimePrimeCount++;\n        }\n    }\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePri",
  "    let hex = num.toString().split('');\n    let hex_rev = [];\n    for(let i=0;i<hex.length;i++){\n\
    \        hex_rev.push(hex[i].charCodeAt(0) - 64);\n    }\n    let hex_rev_rev\
    \ = hex_rev.join('');\n    let hex_rev_rev_rev = hex_rev_rev.reverse();\n    let\
    \ hex_rev_rev_rev_rev = [];\n    for(let i=0;i<hex_rev_rev_rev_rev.length;i++){\n\
    \        hex_rev_rev_rev_rev.push(hex_rev_rev_rev[i]);\n    }\n    let hex_rev_rev_rev_rev_rev\
    \ = [];\n    for(let i=0;i<hex_rev_rev_rev_rev_rev.length;i++){\n        hex_rev_rev_rev_rev_rev.push(hex_rev_rev_rev_rev[i]*2);\n\
    \    }\n    let hex_rev_rev_rev_rev_rev_rev = [];\n    for(let i=0;i<hex_rev_rev_rev_rev_rev_rev.length;i++){\n\
    \        hex_rev_rev_rev_rev_rev_rev.push(hex_rev_rev_rev_rev_rev[i]*3);\n   \
    \ }\n    let hex_rev_rev_rev_rev_rev_rev_rev = [];\n    for(let i=0;i<hex_rev_rev_rev_rev_rev_rev_rev.length;i++){\n\
    \        hex_rev_rev_rev_rev_rev_rev_rev.push(hex_rev_rev_rev_rev_rev_rev[i]*5);\n\
    \    }\n    let hex_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    for(let i=0;i<hex_rev_rev_rev_rev_rev_rev_rev.length;i++){\n\
    \        hex_rev_rev_rev_rev_rev_rev_rev_rev.push(hex_rev_rev_rev_rev_rev_rev_rev[i]*7);\n\
    \    }\n    let hex_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    for(let i=0;i<hex_rev_rev_rev_rev_rev_rev_rev_rev.length;i++){\n\
    \        hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev.push(hex_rev_rev_rev_rev_rev_rev_rev_rev[i]*11);\n\
    \    }\n    let hex_rev_rev_rev_rev_rev_rev_rev_", "    let hex = num.toString().split(\"\
    \").map(x => x.charCodeAt(0).toString(16)).join('');\n    let primes = [];\n \
    \   for(let i = 0; i < hex.length; i++){\n        let digit = hex[i];\n      \
    \  if(digit == \"A\" || digit == \"B\" || digit == \"C\" || digit == \"D\" ||\
    \ digit == \"E\" || digit == \"F\"){\n            primes.push(digit);\n      \
    \  }\n    }\n    return primes.length;\n}\n", "    let hex = num.split(\"\").map(x\
    \ => x.charCodeAt(0).toString(16)).join('');\n    let primes = hex_to_primes(hex);\n\
    \    let prime_digits = primes.map(x => x.toString()).join('');\n    let prime_digits_count\
    \ = prime_digits.length;\n    let prime_digits_count_2 = prime_digits_count -\
    \ 1;\n    let prime_digits_count_3 = prime_digits_count_2 - 1;\n    let prime_digits_count_4\
    \ = prime_digits_count_3 - 1;\n    let prime_digits_count_5 = prime_digits_count_4\
    \ - 1;\n    let prime_digits_count_6 = prime_digits_count_5 - 1;\n    let prime_digits_count_7\
    \ = prime_digits_count_6 - 1;\n    let prime_digits_count_8 = prime_digits_count_7\
    \ - 1;\n    let prime_digits_count_9 = prime_digits_count_8 - 1;\n    let prime_digits_count_10\
    \ = prime_digits_count_9 - 1;\n    let prime_digits_count_11 = prime_digits_count_10\
    \ - 1;\n    let prime_digits_count_12 = prime_digits_count_11 - 1;\n    let prime_digits_count_13\
    \ = prime_digits_count_12 - 1;\n    let prime_digits_count_14 = prime_digits_count_13\
    \ - 1;\n    let prime_digits_count_15 = prime_digits_count_14 - 1;\n    let prime_digits_count_16\
    \ = prime_digits_count_15 - 1;\n    let prime_digits_count_17 = prime_digits_count_16\
    \ - 1;\n    let prime_digits_count_18 = prime_digits_count_17 - 1;\n    let prime_digits_count_19\
    \ = prime_digits_count_18 - 1;\n    let prime_digits_count_20 = prime_digits_count_19\
    \ - 1;\n    let prime_digits_count_21 = prime_digits_count_20 - 1;\n    let prime_digits_count_22\
    \ = prime_digits_count_21 - 1;\n    let prime_digits_count_23 = prime_digits_count_22\
    \ - 1;\n    let prime_digits_count_24 = prime_digits_count_23 - 1;\n    let prime_digits_count_25\
    \ = prime_digits_count_24 - 1;\n    let prime_digits_count_26 = prime_digits_count_25\
    \ - 1;\n    let prime_digits_count_27 = prime_digits_count_26 - 1;\n    let prime_digits_count_28\
    \ = prime_digits_count_27 - 1;\n    let prime_digits_count_29 = prime_", "   \
    \ let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16));\n    let primes\
    \ = [];\n    let prime_digits = [];\n    let prime_digits_hex = [];\n    let prime_digits_hex_len\
    \ = [];\n    let prime_digits_hex_len_len2 = [];\n    let prime_digits_hex_len3\
    \ = [];\n    let prime_digits_hex_len4 = [];\n    let prime_digits_hex_len5 =\
    \ [];\n    let prime_digits_hex_len6 = [];\n    let prime_digits_hex_len7 = [];\n\
    \    let prime_digits_hex_len8 = [];\n    let prime_digits_hex_len9 = [];\n  \
    \  let prime_digits_hex_len10 = [];\n    let prime_digits_hex_len11 = [];\n  \
    \  let prime_digits_hex_len12 = [];\n    let prime_digits_hex_len13 = [];\n  \
    \  let prime_digits_hex_len14 = [];\n    let prime_digits_hex_len15 = [];\n  \
    \  let prime_digits_hex_len16 = [];\n    let prime_digits_hex_len17 = [];\n  \
    \  let prime_digits_hex_len18 = [];\n    let prime_digits_hex_len19 = [];\n  \
    \  let prime_digits_hex_len20 = [];\n    let prime_digits_hex_len21 = [];\n  \
    \  let prime_digits_hex_len22 = [];\n    let prime_digits_hex_len23 = [];\n  \
    \  let prime_digits_hex_len24 = [];\n    let prime_digits_hex_len25 = [];\n  \
    \  let prime_digits_hex_len26 = [];\n    let prime_digits_hex_len27 = [];\n  \
    \  let prime_digits_hex_len28 = [];\n    let prime_digits_hex_len29 = [];\n  \
    \  let prime_digits_hex_len30 = [];\n    let prime_digits_hex_len31 = [];\n  \
    \  let prime_digits_hex_len32 = [];\n    let prime_digits_hex_len33 = [];\n  \
    \  let prime_digits_hex_len34 = [];\n    let prime_digits_hex_len35 = [];\n  \
    \  let prime_digits_hex_len36 = [];\n    let prime_digits_hex_len37 = [];\n  \
    \  let prime_digits_hex_len38 = [];\n    let prime_digits_hex_len39 = [];\n  \
    \  let prime_digits_hex_len40 = [];\n    let prime_digits_hex_len41 = [];\n  \
    \  let prime_digits_hex_len42 = [];\n    let prime_digits_hex_len43 = [];\n  \
    \  let prime_digits_hex_len44 = [];\n    let prime_digits_hex_len45 = [];\n  \
    \  let prime_digits_hex_len46 = [];\n    let prime_digits_hex_len47 = [];", " \
    \ let hex = num.toString().split('');\n  let hexLength = hex.length;\n  let hexDigits\
    \ = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  let hexPrimes = [];\n  for(let i = 0; i < hexLength; i++){\n    if(hexDigits.includes(hex[i])){\n\
    \      hexPrimes.push(hex[i]);\n    }\n  }\n  let hexPrimeLength = hexPrimes.length;\n\
    \  let hexPrimeDigits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  let hexPrimePrimes = [];\n  for(let i = 0; i < hexPrimeLength; i++){\n    if(hexPrimeDigits.includes(hexPrimes[i])){\n\
    \      hexPrimePrimes.push(hexPrimes[i]);\n    }\n  }\n  let hexPrimePrimeLength\
    \ = hexPrimePrimes.length;\n  let hexPrimePrimeDigits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  let hexPrimePrimePrimes = [];\n  for(let i = 0; i < hexPrimePrimeLength; i++){\n\
    \    if(hexPrimePrimeDigits.includes(hexPrimePrimes[i])){\n      hexPrimePrimePrimes.push(hexPrimePrimes[i]);\n\
    \    }\n  }\n  let hexPrimePrimePrimeLength = hexPrimePrimePrimes.length;\n  let\
    \ hexPrimePrimePrimeDigits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  let hexPrimePrimePrimePrimes = [];\n  for(let i = 0; i < hexPrimePrimePrimeLength;\
    \ i++){\n    if(hexPrimePrimePrimeDigits.includes(hexPrimePrimePrimes[i])){\n\
    \      hexPrimePrimePrimePrimes.push(hexPrimePrimePrimes[i]);\n    }\n  }\n  let\
    \ hexPrimePrimePrimePrimeLength = hexPrimePrimePrimePrimes.length;\n  let hexPrimePrimePrimePrimeDigits\
    \ = [2,3,5,7,11,13,17,19,23,29,31,37,41,", "  var hex = num.toString().toUpperCase();\n\
    \  var hex_rev = hex.split(\"\").reverse().join(\"\");\n  var hex_rev_split =\
    \ hex_rev.split(\"\");\n  var hex_rev_split_2 = hex_rev_split.map(function(x){return\
    \ parseInt(x,16);});\n  var hex_rev_split_3 = hex_rev_split_2.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_4 = hex_rev_split_3.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_5 = hex_rev_split_4.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_6 = hex_rev_split_5.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_7 = hex_rev_split_6.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_8 = hex_rev_split_7.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_9 = hex_rev_split_8.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_10 = hex_rev_split_9.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_11 = hex_rev_split_10.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_12 = hex_rev_split_11.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_13 = hex_rev_split_12.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_14 = hex_rev_split_13.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_15 = hex_rev_split_14.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_16 = hex_rev_split_15.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_17 = hex_rev_split_16.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_18 = hex_rev_split_17.map(function(x){return\
    \ x%2==0?x:x*-1});\n  var hex_rev_split_19 = hex_rev_split_18.map(function(x){return\
    \ x%", "    let hex = num.toString().replace(/[^A-F0-9]/g,\"\");\n    let hexLength\
    \ = hex.length;\n    let hexDigits = hex.split(\"\");\n    let hexPrimes = [];\n\
    \    let hexPrimeCount = 0;\n    let hexPrimeCount2 = 0;\n    let hexPrimeCount3\
    \ = 0;\n    let hexPrimeCount4 = 0;\n    let hexPrimeCount5 = 0;\n    let hexPrimeCount6\
    \ = 0;\n    let hexPrimeCount7 = 0;\n    let hexPrimeCount8 = 0;\n    let hexPrimeCount9\
    \ = 0;\n    let hexPrimeCount10 = 0;\n    let hexPrimeCount11 = 0;\n    let hexPrimeCount12\
    \ = 0;\n    let hexPrimeCount13 = 0;\n    let hexPrimeCount14 = 0;\n    let hexPrimeCount15\
    \ = 0;\n    let hexPrimeCount16 = 0;\n    let hexPrimeCount17 = 0;\n    let hexPrimeCount18\
    \ = 0;\n    let hexPrimeCount19 = 0;\n    let hexPrimeCount20 = 0;\n    let hexPrimeCount21\
    \ = 0;\n    let hexPrimeCount22 = 0;\n    let hexPrimeCount23 = 0;\n    let hexPrimeCount24\
    \ = 0;\n    let hexPrimeCount25 = 0;\n    let hexPrimeCount26 = 0;\n    let hexPrimeCount27\
    \ = 0;\n    let hexPrimeCount28 = 0;\n    let hexPrimeCount29 = 0;\n    let hexPrimeCount30\
    \ = 0;\n    let hexPrimeCount31 = 0;\n    let hexPrimeCount32 = 0;\n    let hexPrimeCount33\
    \ = 0;\n    let hexPrimeCount34 = 0;\n    let hexPrimeCount35 = 0;\n    let hexPrimeCount36\
    \ = 0;\n    let hexPrimeCount37 = 0;\n    let hexPrimeCount38 = 0;\n    let hexPrimeCount39\
    \ = 0;\n    let hexPrimeCount40 = 0;\n    let hexPrimeCount41 = 0;\n    let hexPrimeCount42\
    \ = 0;\n    let hexPrimeCount43 = 0;\n    let hexPrimeCount44 = 0;\n    let hexPrimeCount45\
    \ = 0;\n    let hexPrimeCount46 = 0;\n    let hexPrimeCount47 = 0;\n    let hexPrimeCount48\
    \ = 0;\n    let hexPrimeCount49 = 0;\n    let hexPrimeCount50 = 0;\n    let hexPrimeCount51\
    \ = 0;\n    let hexPrimeCount52 = 0;\n    let hexPrimeCount53 = 0;\n    let hexPrimeCount54\
    \ = 0;\n    let hexPrimeCount55 = 0;\n    let hexPrimeCount56 = 0;\n    let hexPrimeCount57\
    \ = 0;\n    let hexPrimeCount58 = 0;\n    let hexPrimeCount59 = 0;\n    let hexPrimeCount60\
    \ = 0;\n", "    let hex = num.toString().split('');\n    let hex_rev = [];\n \
    \   for(let i = 0; i < hex.length; i++){\n        hex_rev.push(hex[i].charCodeAt(0)\
    \ - 64);\n    }\n    let hex_rev_str = hex_rev.join('');\n    let hex_digits =\
    \ hex_rev_str.split('');\n    let hex_digits_rev = [];\n    for(let i = 0; i <\
    \ hex_digits.length; i++){\n        hex_digits_rev.push(hex_digits[i].charCodeAt(0)\
    \ - 48);\n    }\n    let hex_digits_rev_str = hex_digits_rev.join('');\n    let\
    \ hex_digits_rev_arr = [];\n    for(let i = 0; i < hex_digits_rev_str.length;\
    \ i++){\n        hex_digits_rev_arr.push(hex_digits_rev_str.charAt(i));\n    }\n\
    \    let hex_digits_rev_arr_rev = [];\n    for(let i = 0; i < hex_digits_rev_arr.length;\
    \ i++){\n        hex_digits_rev_arr_rev.push(hex_digits_rev_arr[i].charCodeAt(0)\
    \ - 48);\n    }\n    let hex_digits_rev_arr_rev_str = hex_digits_rev_arr_rev.join('');\n\
    \    let hex_digits_rev_arr_rev_arr = [];\n    for(let i = 0; i < hex_digits_rev_arr_rev_str.length;\
    \ i++){\n        hex_digits_rev_arr_rev_arr.push(hex_digits_rev_arr_rev_str.charAt(i));\n\
    \    }\n    let hex_digits_rev_arr_rev_arr_rev = [];\n    for(let i = 0; i < hex_digits_rev_arr_rev_arr.length;\
    \ i++){\n        hex_digits_rev_arr_rev_arr_rev.push(hex_digits_rev_arr_rev_arr.charAt(i));\n\
    \    }\n    let hex_digits_rev_arr_rev_arr_rev_str = hex_digits_rev_arr_rev_arr_rev.join('');\n\
    \    let hex_digits_rev_arr_rev_arr_rev_arr = [];\n    for(let i = 0; i < hex_digits_rev_arr_rev_arr_rev_str.length;\
    \ i++){\n        hex_digits_rev_arr_rev_arr_rev_arr.push(hex_digits_rev_arr_rev_arr_rev_str.charAt(i));\n\
    \    }\n    let hex_digits_rev_arr_rev_arr_rev_arr_rev = [];\n    for(let i =\
    \ 0; i < hex_digits_rev_arr_rev_arr_rev_arr.length; i++){\n        hex_digits_rev_arr_rev_arr_rev_arr_rev.push(hex_digits_rev_arr_rev_arr_rev_arr.charAt(i));\n\
    \    }\n    let hex_digits_rev_arr_re", "  let hex = num.split(\"\").map(x =>\
    \ x.charCodeAt(0).toString(16));\n  let primes = [];\n  let prime_digits = [];\n\
    \  let prime_digit_count = [];\n  let prime_digit_count_sum = 0;\n  let prime_digit_count_sum2\
    \ = 0;\n  let prime_digit_count_sum3 = 0;\n  let prime_digit_count_sum4 = 0;\n\
    \  let prime_digit_count_sum5 = 0;\n  let prime_digit_count_sum6 = 0;\n  let prime_digit_count_sum7\
    \ = 0;\n  let prime_digit_count_sum8 = 0;\n  let prime_digit_count_sum9 = 0;\n\
    \  let prime_digit_count_sum10 = 0;\n  let prime_digit_count_sum11 = 0;\n  let\
    \ prime_digit_count_sum12 = 0;\n  let prime_digit_count_sum13 = 0;\n  let prime_digit_count_sum14\
    \ = 0;\n  let prime_digit_count_sum15 = 0;\n  let prime_digit_count_sum16 = 0;\n\
    \  let prime_digit_count_sum17 = 0;\n  let prime_digit_count_sum18 = 0;\n  let\
    \ prime_digit_count_sum19 = 0;\n  let prime_digit_count_sum20 = 0;\n  let prime_digit_count_sum21\
    \ = 0;\n  let prime_digit_count_sum22 = 0;\n  let prime_digit_count_sum23 = 0;\n\
    \  let prime_digit_count_sum24 = 0;\n  let prime_digit_count_sum25 = 0;\n  let\
    \ prime_digit_count_sum26 = 0;\n  let prime_digit_count_sum27 = 0;\n  let prime_digit_count_sum28\
    \ = 0;\n  let prime_digit_count_sum29 = 0;\n  let prime_digit_count_sum30 = 0;\n\
    \  let prime_digit_count_sum31 = 0;\n  let prime_digit_count_sum32 = 0;\n  let\
    \ prime_digit_count_sum33 = 0;\n  let prime_digit_count_sum34 = 0;\n  let prime_digit_count_sum35\
    \ = 0;\n  let prime_digit_count_sum36 = 0;\n  let prime_digit_count_sum37 = 0;\n\
    \  let prime_digit_count_sum38 = 0;\n  let prime_digit_count_sum39 = 0;\n  let\
    \ prime_digit_count_sum40 = 0;\n  let prime_digit_count_sum41 = 0;\n  let prime_digit_count_sum42\
    \ = 0;\n  let prime_digit_count_sum43 = 0;\n  let prime_digit_count_sum44 = 0;\n\
    \  let prime_digit_count_sum45 = 0;\n  let prime_digit_count_sum46 = 0;\n  let\
    \ prime_digit_count_sum47 = 0;\n  let prime_digit_count_sum48 = 0;\n  let prime_digit_count_sum49\
    \ = 0;\n  let prime_digit_count_sum50 = 0;\n  let prime_digit_count_sum51 = 0;\n\
    \  let prime_digit_count_sum52 = 0;\n  let prime_digit_count_sum53 = 0;\n  let\
    \ prime_digit_", "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\
    \");\n    let primes = hex_to_primes(hex);\n    let prime_digits = primes.map(x\
    \ => x.toString()).join(\"\");\n    let prime_digits_count = prime_digits.length;\n\
    \    let prime_digits_count_prime = prime_digits_count - prime_digits_count_factor(prime_digits);\n\
    \    return prime_digits_count_prime > 0 ? prime_digits_count_prime : prime_digits_count;\n\
    }\n", "  var hex = num.toString().toLowerCase();\n  var hexDigits = [\n    \"\
    0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"\
    d\",\"e\",\"f\"\n  ];\n  var hexDigitCount = hexDigits.length;\n  var hexDigitIndex\
    \ = 0;\n  var hexDigitValue = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex\
    \ = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues\
    \ = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex\
    \ = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues\
    \ = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex\
    \ = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues\
    \ = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex\
    \ = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues\
    \ = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex\
    \ = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues\
    \ = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex\
    \ = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues\
    \ = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex\
    \ = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues\
    \ = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex\
    \ = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues\
    \ = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex\
    \ = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues\
    \ = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex\
    \ = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues\
    \ = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex\
    \ = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues\
    \ = [];\n  var hexDigitValueIndex = 0;\n  var hexDigitValues = [];\n  var hexDigitValueIndex\
    \ = 0;\n  var ", "    var hex = num.toString().toLowerCase();\n    var hexDigits\
    \ = hex.split(\"\");\n    var hexDigits_len = hexDigits.length;\n    var hexDigits_arr\
    \ = [];\n    for(var i = 0; i < hexDigits_len; i++){\n        hexDigits_arr.push(parseInt(hexDigits[i],\
    \ 16));\n    }\n    var hexDigits_arr_len = hexDigits_arr.length;\n    var hexDigits_arr_arr\
    \ = [];\n    for(var i = 0; i < hexDigits_arr_len; i++){\n        hexDigits_arr_arr.push(hexDigits_arr[i]);\n\
    \    }\n    var hexDigits_arr_arr_len = hexDigits_arr_arr.length;\n    var hexDigits_arr_arr_arr\
    \ = [];\n    for(var i = 0; i < hexDigits_arr_arr_len; i++){\n        hexDigits_arr_arr_arr.push(hexDigits_arr_arr[i]);\n\
    \    }\n    var hexDigits_arr_arr_arr_len = hexDigits_arr_arr_arr.length;\n  \
    \  var hexDigits_arr_arr_arr_arr = [];\n    for(var i = 0; i < hexDigits_arr_arr_arr_len;\
    \ i++){\n        hexDigits_arr_arr_arr_arr.push(hexDigits_arr_arr_arr[i]);\n \
    \   }\n    var hexDigits_arr_arr_arr_arr_len = hexDigits_arr_arr_arr_arr.length;\n\
    \    var hexDigits_arr_arr_arr_arr_arr = [];\n    for(var i = 0; i < hexDigits_arr_arr_arr_arr_len;\
    \ i++){\n        hexDigits_arr_arr_arr_arr_arr.push(hexDigits_arr_arr_arr_arr[i]);\n\
    \    }\n    var hexDigits_arr_arr_arr_arr_arr_len = hexDigits_arr_arr_arr_arr_arr.length;\n\
    \    var hexDigits_arr_arr_arr_arr_arr_arr = [];\n    for(var i = 0; i < hexDigits_arr_arr_arr_arr_arr_len;\
    \ i++){\n        hexDigits_arr_arr_arr_arr_arr_arr.push(hexDigits_arr_arr_arr_arr_arr[i]);\n\
    \    }\n    var hexDigits_arr_arr_arr_arr_arr_arr_len = hexDigits_arr_arr_arr_arr_arr_arr.length;\n\
    \    var hexDigits_arr_arr_arr_arr_arr_arr_arr = [];\n    for(var i = 0; i < hexDigits_arr_arr_arr_arr_arr_arr_arr_len;\
    \ i++){\n        hexDigits_arr_arr_arr_arr_arr_arr_arr.push(hexDigits_arr_arr_arr_arr_arr_arr_arr[i]);\n\
    \    }\n    var hexDigits_arr_arr_arr_arr_arr_arr_arr_arr_len = hexDigits_arr_arr_arr_arr_arr_arr_arr_arr.length;\n\
    \    var hexDigits_arr_arr_arr_arr_arr_arr_arr_arr_arr = [];\n    for(var i =\
    \ 0; i < hexDigits_arr_arr_arr_arr_arr_arr_arr_arr_arr_len; i++){\n        hexDigits_arr_arr_arr_arr_arr_arr_arr_arr_arr.push(hexDigits_arr_arr_arr_arr_arr_arr_arr_arr_arr",
  "  var hex = num.toString().toUpperCase();\n  var count = 0;\n  for(var i=0;i<hex.length;i++){\n\
    \    if(hex.charAt(i)==\"A\"||hex.charAt(i)==\"B\"||hex.charAt(i)==\"C\"||hex.charAt(i)==\"\
    D\"||hex.charAt(i)==\"E\"||hex.charAt(i)==\"F\"){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n", "    var hex = num.toString().split('');\n    var count\
    \ = 0;\n    for(var i = 0; i < hex.length; i++){\n        if(hex[i] == 'A' ||\
    \ hex[i] == 'B' || hex[i] == 'C' || hex[i] == 'D' || hex[i] == 'E' || hex[i] ==\
    \ 'F'){\n            count++;\n        }\n    }\n    return count;\n}\n", "  var\
    \ hex = num.toString().toUpperCase();\n  var hexDigits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  var primes = [];\n  var primesCount = 0;\n  for(var i=0;i<hexDigits.length;i++){\n\
    \    if(hexDigits[i] == hex.charAt(i)){\n      primes[primesCount] = hexDigits[i];\n\
    \      primesCount++;\n    }\n  }\n  if(primesCount == 0){\n    return 2;\n  }\n\
    \  if(primesCount == 1){\n    return primes[0];\n  }\n  var product = primes[0];\n\
    \  for(var i=1;i<primesCount;i++){\n    product = product*primes[i];\n  }\n  return\
    \ product;\n}\n", "    var hex = num.toString().toUpperCase();\n    var count\
    \ = 0;\n    for(var i = 0; i < hex.length; i++){\n        if(hex.charAt(i) ==\
    \ 'A' || hex.charAt(i) == 'B' || hex.charAt(i) == 'C' || hex.charAt(i) == 'D'\
    \ || hex.charAt(i) == 'E' || hex.charAt(i) == 'F'){\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n", "    var hex = num.split(\"\");\n  \
    \  var count = 0;\n    for(var i=0;i<hex.length;i++){\n        if(hex[i]==\"A\"\
    ||hex[i]==\"B\"||hex[i]==\"C\"||hex[i]==\"D\"||hex[i]==\"E\"||hex[i]==\"F\"){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "  var hex =\
    \ num.toString().replace(/[^A-F0-9]/g,\"\");\n  var hex = hex.toUpperCase();\n\
    \  var hex = hex.split(\"\");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\
    \");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\
    \");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\
    \");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\
    \");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\
    \");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\
    \");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\
    \");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\
    \");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\
    \");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\
    \");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\
    \");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\
    \");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\
    \");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\
    \");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\
    \");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\
    \");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\
    \");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\
    \");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\
    \");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\
    \");\n  var hex = hex.split(\"\");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\
    \");\n  var hex = hex.join(\"\");\n  var hex = hex.split(\"\");\n  var ", "  \
    \  let hex = num.toString().split('');\n    let hex2 = hex.reduce((acc, cur, index)\
    \ => {\n        if(index%2 == 0){\n            acc = acc + cur;\n        }\n \
    \       return acc;\n    }, 0);\n    let hex3 = hex2.toString().split('');\n \
    \   let hex4 = hex3.reduce((acc, cur, index) => {\n        if(index%2 == 0){\n\
    \            acc = acc + cur;\n        }\n        return acc;\n    }, 0);\n  \
    \  let hex5 = hex4.toString().split('');\n    let hex6 = hex5.reduce((acc, cur,\
    \ index) => {\n        if(index%2 == 0){\n            acc = acc + cur;\n     \
    \   }\n        return acc;\n    }, 0);\n    let hex7 = hex6.toString().split('');\n\
    \    let hex8 = hex7.reduce((acc, cur, index) => {\n        if(index%2 == 0){\n\
    \            acc = acc + cur;\n        }\n        return acc;\n    }, 0);\n  \
    \  let hex9 = hex8.toString().split('');\n    let hex10 = hex9.reduce((acc, cur,\
    \ index) => {\n        if(index%2 == 0){\n            acc = acc + cur;\n     \
    \   }\n        return acc;\n    }, 0);\n    let hex11 = hex10.toString().split('');\n\
    \    let hex12 = hex11.reduce((acc, cur, index) => {\n        if(index%2 == 0){\n\
    \            acc = acc + cur;\n        }\n        return acc;\n    }, 0);\n  \
    \  let hex13 = hex12.toString().split('');\n    let hex14 = hex13.reduce((acc,\
    \ cur, index) => {\n        if(index%2 == 0){\n            acc = acc + cur;\n\
    \        }\n        return acc;\n    }, 0);\n    let hex15 = hex14.toString().split('');\n\
    \    let hex16 = hex15.reduce((acc, cur, index) => {\n        if(index%2 == 0){\n\
    \            acc = acc + cur;\n        }\n        return acc;\n    }, 0);\n  \
    \  let hex17 = hex16.toString().split('');\n    let hex18 = hex17.reduce((acc,\
    \ cur, index) => {\n        if(index%2 == 0){\n            acc = acc + cur;\n\
    \        }\n        return acc;\n    }, 0);\n    let hex19 = hex18.toString().split('');\n\
    \    let hex20 = hex19.reduce((acc, cur, index) => {\n        if(index%2 == 0){\n\
    \            acc = acc + cur;\n        }\n        return acc;\n    }, 0);\n  \
    \  let hex21 = hex20.toString().split('');\n    let hex22 = hex21.reduce((acc,\
    \ cur, index) => {\n        if(index%2 == 0){\n            acc = acc + cur", " \
    \ var hex = num.toString().split('');\n  var primes = [];\n  var primes_found\
    \ = [];\n  var primes_found_count = [];\n  var primes_found_count_max = [];\n\
    \  var primes_found_count_min = [];\n  var primes_found_count_sum = [];\n  var\
    \ primes_found_count_sum2 = [];\n  var primes_found_count_sum3 = [];\n  var primes_found_count_sum4\
    \ = [];\n  var primes_found_count_sum5 = [];\n  var primes_found_count_sum6 =\
    \ [];\n  var primes_found_count_sum7 = [];\n  var primes_found_count_sum8 = [];\n\
    \  var primes_found_count_sum9 = [];\n  var primes_found_count_sum10 = [];\n \
    \ var primes_found_count_sum11 = [];\n  var primes_found_count_sum12 = [];\n \
    \ var primes_found_count_sum13 = [];\n  var primes_found_count_sum14 = [];\n \
    \ var primes_found_count_sum15 = [];\n  var primes_found_count_sum16 = [];\n \
    \ var primes_found_count_sum17 = [];\n  var primes_found_count_sum18 = [];\n \
    \ var primes_found_count_sum19 = [];\n  var primes_found_count_sum20 = [];\n \
    \ var primes_found_count_sum21 = [];\n  var primes_found_count_sum22 = [];\n \
    \ var primes_found_count_sum23 = [];\n  var primes_found_count_sum24 = [];\n \
    \ var primes_found_count_sum25 = [];\n  var primes_found_count_sum26 = [];\n \
    \ var primes_found_count_sum27 = [];\n  var primes_found_count_sum28 = [];\n \
    \ var primes_found_count_sum29 = [];\n  var primes_found_count_sum30 = [];\n \
    \ var primes_found_count_sum31 = [];\n  var primes_found_count_sum32 = [];\n \
    \ var primes_found_count_sum33 = [];\n  var primes_found_count_sum34 = [];\n \
    \ var primes_found_count_sum35 = [];\n  var primes_found_count_sum36 = [];\n \
    \ var primes_found_count_sum37 = [];\n  var primes_found_count_sum38 = [];\n \
    \ var primes_found_count_sum39 = [];\n  var primes_found_count_sum40 = [];\n \
    \ var primes_found_count_sum41 = [];\n  var primes_found_count_sum42 = [];\n \
    \ var primes_found_count_sum43 = [];\n  var primes_found_count_sum44 = [];\n \
    \ var primes_found_count_sum45 = [];\n  var primes_found_count_sum46 = [];\n \
    \ var primes_found_count_sum47 = [];\n  var primes_found_count_sum48 = [];\n \
    \ var primes_found_count_sum49 = [];\n  var primes_found_count_sum50 = [];\n \
    \ var primes_found_count_sum51 = [];\n  var primes_found_count_", "  let hex =\
    \ num.toString().split('')\n  let hex2 = hex.map(x => x.charCodeAt(0).toString(16))\n\
    \  let hex3 = hex2.map(x => x.padStart(2, '0'))\n  let hex4 = hex3.map(x => x.split('').map(y\
    \ => y.toUpperCase()).join(''))\n  let hex5 = hex4.map(x => x.split('').map(y\
    \ => y.charCodeAt(0).toString(16)).join(''))\n  let hex6 = hex5.map(x => x.padStart(2,\
    \ '0'))\n  let hex7 = hex6.map(x => x.split('').map(y => y.charCodeAt(0).toString(16)).join(''))\n\
    \  let hex8 = hex7.map(x => x.padStart(2, '0'))\n  let hex9 = hex8.map(x => x.split('').map(y\
    \ => y.charCodeAt(0).toString(16)).join(''))\n  let hex10 = hex9.map(x => x.padStart(2,\
    \ '0'))\n  let hex11 = hex10.map(x => x.split('').map(y => y.charCodeAt(0).toString(16)).join(''))\n\
    \  let hex12 = hex11.map(x => x.padStart(2, '0'))\n  let hex13 = hex12.map(x =>\
    \ x.split('').map(y => y.charCodeAt(0).toString(16)).join(''))\n  let hex14 =\
    \ hex13.map(x => x.padStart(2, '0'))\n  let hex15 = hex14.map(x => x.split('').map(y\
    \ => y.charCodeAt(0).toString(16)).join(''))\n  let hex16 = hex15.map(x => x.padStart(2,\
    \ '0'))\n  let hex17 = hex16.map(x => x.split('').map(y => y.charCodeAt(0).toString(16)).join(''))\n\
    \  let hex18 = hex17.map(x => x.padStart(2, '0'))\n  let hex19 = hex18.map(x =>\
    \ x.split('').map(y => y.charCodeAt(0).toString(16)).join(''))\n  let hex20 =\
    \ hex19.map(x => x.padStart(2, '0'))\n  let hex21 = hex20.map(x => x.split('').map(y\
    \ => y.charCodeAt(0).toString(16)).join(''))\n  let hex22 = hex21.map(x => x.padStart(2,\
    \ '0'))\n  let hex23 = hex22.map(x => x.split('').map(y => y.charCodeAt(0).toString(16)).join(''))\n\
    \  let hex24 = hex23.map(x => x.padStart(2, '0'))\n  let hex25 = hex24.map(x =>\
    \ x.split('').map(y => y.charCodeAt(0).toString(16)).join(''))\n  let hex26 =\
    \ hex25.map(x => x.padStart(", "  var hex = num.toString().toUpperCase();\n  var\
    \ hexDigits = [\n    \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"\
    8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n  ];\n  var hexDigitCount\
    \ = hexDigits.length;\n  var hexDigitCount2 = hexDigitCount*2;\n  var hexDigitCount3\
    \ = hexDigitCount*3;\n  var hexDigitCount4 = hexDigitCount*4;\n  var hexDigitCount5\
    \ = hexDigitCount*5;\n  var hexDigitCount6 = hexDigitCount*6;\n  var hexDigitCount7\
    \ = hexDigitCount*7;\n  var hexDigitCount8 = hexDigitCount*8;\n  var hexDigitCount9\
    \ = hexDigitCount*9;\n  var hexDigitCount10 = hexDigitCount*10;\n  var hexDigitCount11\
    \ = hexDigitCount*11;\n  var hexDigitCount12 = hexDigitCount*12;\n  var hexDigitCount13\
    \ = hexDigitCount*13;\n  var hexDigitCount14 = hexDigitCount*14;\n  var hexDigitCount15\
    \ = hexDigitCount*15;\n  var hexDigitCount16 = hexDigitCount*16;\n  var hexDigitCount17\
    \ = hexDigitCount*17;\n  var hexDigitCount18 = hexDigitCount*18;\n  var hexDigitCount19\
    \ = hexDigitCount*19;\n  var hexDigitCount20 = hexDigitCount*20;\n  var hexDigitCount21\
    \ = hexDigitCount*21;\n  var hexDigitCount22 = hexDigitCount*22;\n  var hexDigitCount23\
    \ = hexDigitCount*23;\n  var hexDigitCount24 = hexDigitCount*24;\n  var hexDigitCount25\
    \ = hexDigitCount*25;\n  var hexDigitCount26 = hexDigitCount*26;\n  var hexDigitCount27\
    \ = hexDigitCount*27;\n  var hexDigitCount28 = hexDigitCount*28;\n  var hexDigitCount29\
    \ = hexDigitCount*29;\n  var hexDigitCount30 = hexDigitCount*30;\n  var hexDigitCount31\
    \ = hexDigitCount*31;\n  var hexDigitCount32 = hexDigitCount*32;\n  var hexDigitCount33\
    \ = hexDigitCount*33;\n  var hexDigitCount34 = hexDigitCount*34;\n  var hexDigitCount35\
    \ = hexDigitCount*35;\n  var hexDigitCount36 = hexDigitCount*36;\n  var hexDigitCount37\
    \ = hexDigitCount*37;\n  var hexDigitCount38 = hexDigitCount*38;\n  var hexDigitCount",
  "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join``;\n\
    \    let hexDigits = [...hex];\n    let primes = [];\n    let primesCount = 0;\n\
    \    for(let i = 0; i < hexDigits.length; i++){\n        if(hexDigits[i] == \"\
    A\" || hexDigits[i] == \"B\" || hexDigits[i] == \"C\" || hexDigits[i] == \"D\"\
    \ || hexDigits[i] == \"E\" || hexDigits[i] == \"F\"){\n            primesCount++;\n\
    \        }\n        if(hexDigits[i] == \"2\"){\n            primes.push(2);\n\
    \        }\n        if(hexDigits[i] == \"3\"){\n            primes.push(3);\n\
    \        }\n        if(hexDigits[i] == \"5\"){\n            primes.push(5);\n\
    \        }\n        if(hexDigits[i] == \"7\"){\n            primes.push(7);\n\
    \        }\n        if(hexDigits[i] == \"11\"){\n            primes.push(11);\n\
    \        }\n        if(hexDigits[i] == \"13\"){\n            primes.push(13);\n\
    \        }\n        if(hexDigits[i] == \"17\"){\n            primes.push(17);\n\
    \        }\n        if(hexDigits[i] == \"19\"){\n            primes.push(19);\n\
    \        }\n        if(hexDigits[i] == \"23\"){\n            primes.push(23);\n\
    \        }\n        if(hexDigits[i] == \"29\"){\n            primes.push(29);\n\
    \        }\n        if(hexDigits[i] == \"31\"){\n            primes.push(31);\n\
    \        }\n        if(hexDigits[i] == \"37\"){\n            primes.push(37);\n\
    \        }\n        if(hexDigits[i] == \"41\"){\n            primes.push(41);\n\
    \        }\n        if(hexDigits[i] == \"43\"){\n            primes.push(43);\n\
    \        }\n        if(hexDigits[i] == \"47\"){\n            primes.push(47);\n\
    \        }\n        if(hexDigits[i] == \"53\"){\n            primes.push(53);\n\
    \        }\n        if(hexDigits[i] == \"59\"){\n            primes.push(59);\n\
    \        }\n        if(hexDigits[i] == \"61\"){\n            primes.push(61);\n\
    \        }\n        if(hexDigits[i] == \"67\"){\n            primes.push(67);\n\
    \        }\n        if(hexDigits[i] == \"71\"){\n            primes.push(71);\n\
    \        }\n        if(hexDigits[i] == \"73\"){\n            primes.push(73);\n\
    \        }\n        if(hexDigits[i] == \"79\"){\n            primes.push(79);\n\
    \        }\n        if(hexDigits[i] == \"83\"){\n            primes.push(83);\n\
    \        }\n        if(hexDigits[i] == \"89\"){\n            primes.push(89);\n\
    \        }\n        if(hexDigits[i] == \"97\"){\n            primes.push(97);\n\
    \        }\n", "    let hex = num.toString().replace(/[^0-9A-F]/g,\"\");\n   \
    \ let hexLength = hex.length;\n    let hexDigits = hex.length;\n    let hexDigitPrimes\
    \ = [];\n    let hexDigitPrimeCount = 0;\n    let hexDigitPrimeCount2 = 0;\n \
    \   let hexDigitPrimeCount3 = 0;\n    let hexDigitPrimeCount4 = 0;\n    let hexDigitPrimeCount5\
    \ = 0;\n    let hexDigitPrimeCount6 = 0;\n    let hexDigitPrimeCount7 = 0;\n \
    \   let hexDigitPrimeCount8 = 0;\n    let hexDigitPrimeCount9 = 0;\n    let hexDigitPrimeCount10\
    \ = 0;\n    let hexDigitPrimeCount11 = 0;\n    let hexDigitPrimeCount12 = 0;\n\
    \    let hexDigitPrimeCount13 = 0;\n    let hexDigitPrimeCount14 = 0;\n    let\
    \ hexDigitPrimeCount15 = 0;\n    let hexDigitPrimeCount16 = 0;\n    let hexDigitPrimeCount17\
    \ = 0;\n    let hexDigitPrimeCount18 = 0;\n    let hexDigitPrimeCount19 = 0;\n\
    \    let hexDigitPrimeCount20 = 0;\n    let hexDigitPrimeCount21 = 0;\n    let\
    \ hexDigitPrimeCount22 = 0;\n    let hexDigitPrimeCount23 = 0;\n    let hexDigitPrimeCount24\
    \ = 0;\n    let hexDigitPrimeCount25 = 0;\n    let hexDigitPrimeCount26 = 0;\n\
    \    let hexDigitPrimeCount27 = 0;\n    let hexDigitPrimeCount28 = 0;\n    let\
    \ hexDigitPrimeCount29 = 0;\n    let hexDigitPrimeCount30 = 0;\n    let hexDigitPrimeCount31\
    \ = 0;\n    let hexDigitPrimeCount32 = 0;\n    let hexDigitPrimeCount33 = 0;\n\
    \    let hexDigitPrimeCount34 = 0;\n    let hexDigitPrimeCount35 = 0;\n    let\
    \ hexDigitPrimeCount36 = 0;\n    let hexDigitPrimeCount37 = 0;\n    let hexDigitPrimeCount38\
    \ = 0;\n    let hexDigitPrimeCount39 = 0;\n    let hexDigitPrimeCount40 = 0;\n\
    \    let hexDigitPrimeCount41 = 0;\n    let hexDigitPrimeCount42 = 0;\n    let\
    \ hexDigitPrimeCount43 = 0;\n    let hexDigitPrimeCount44 = 0;\n    let hexDigitPrimeCount45\
    \ = 0;\n    let hexDigitPrimeCount46 = 0;\n    let hexDigitPrimeCount47 = 0;\n\
    \    let hexDigitPrimeCount48 = 0;\n    let hexDigitPrimeCount49 = 0;\n    let\
    \ hexDigitPrimeCount50 = 0;\n    let hexDigitPrimeCount51 = 0;\n    let hexDigitPrimeCount52\
    \ = 0;\n    let hexDigitPrimeCount53 = 0;\n    let hexDigitPri", "    let hex\
    \ = num.toString().split(\"\").map(x => x.charCodeAt(0).toString(16)).join``;\n\
    \    let hexDigits = hex.split(\"\");\n    let primes = [];\n    let primesCount\
    \ = 0;\n    let primesSum = 0;\n    let primesSum2 = 0;\n    let primesSum3 =\
    \ 0;\n    let primesSum4 = 0;\n    let primesSum5 = 0;\n    let primesSum6 = 0;\n\
    \    let primesSum7 = 0;\n    let primesSum8 = 0;\n    let primesSum9 = 0;\n \
    \   let primesSum10 = 0;\n    let primesSum11 = 0;\n    let primesSum12 = 0;\n\
    \    let primesSum13 = 0;\n    let primesSum14 = 0;\n    let primesSum15 = 0;\n\
    \    let primesSum16 = 0;\n    let primesSum17 = 0;\n    let primesSum18 = 0;\n\
    \    let primesSum19 = 0;\n    let primesSum20 = 0;\n    let primesSum21 = 0;\n\
    \    let primesSum22 = 0;\n    let primesSum23 = 0;\n    let primesSum24 = 0;\n\
    \    let primesSum25 = 0;\n    let primesSum26 = 0;\n    let primesSum27 = 0;\n\
    \    let primesSum28 = 0;\n    let primesSum29 = 0;\n    let primesSum30 = 0;\n\
    \    let primesSum31 = 0;\n    let primesSum32 = 0;\n    let primesSum33 = 0;\n\
    \    let primesSum34 = 0;\n    let primesSum35 = 0;\n    let primesSum36 = 0;\n\
    \    let primesSum37 = 0;\n    let primesSum38 = 0;\n    let primesSum39 = 0;\n\
    \    let primesSum40 = 0;\n    let primesSum41 = 0;\n    let primesSum42 = 0;\n\
    \    let primesSum43 = 0;\n    let primesSum44 = 0;\n    let primesSum45 = 0;\n\
    \    let primesSum46 = 0;\n    let primesSum47 = 0;\n    let primesSum48 = 0;\n\
    \    let primesSum49 = 0;\n    let primesSum50 = 0;\n    let primesSum51 = 0;\n\
    \    let primesSum52 = 0;\n    let primesSum53 = 0;\n    let primesSum54 = 0;\n\
    \    let primesSum55 = 0;\n    let primesSum56 = 0;\n    let primesSum57 = 0;\n\
    \    let primesSum58 = 0;\n    let primesSum59 = 0;\n    let primesSum60 = 0;\n\
    \    let primesSum61 = 0;\n    let primesSum62 = 0;\n    let primesSum63 = 0;\n\
    \    let primesSum64 = 0;\n    let primesSum65 = 0;\n    let primesSum66 = 0;\n\
    \    let primesSum67 = 0;\n    let primesSum68 = 0;", "    let hex = num.split(\"\
    \").map(x => x.charCodeAt(0).toString(16)).join('');\n    let primes = hex_to_primes(hex);\n\
    \    let prime_sum = 0;\n    for(let prime of primes){\n        prime_sum += prime;\n\
    \    }\n    return prime_sum;\n}\n", "  var hex = num.toString().toUpperCase();\n\
    \  var hex_rev = hex.split(\"\").reverse().join(\"\");\n  var hex_rev_digits =\
    \ hex_rev.split(\"\").map(function(x){return parseInt(x,16);});\n  var hex_rev_digits_prime\
    \ = hex_rev_digits.filter(function(x){return x%2==0;});\n  var hex_rev_digits_prime_prime\
    \ = hex_rev_digits_prime.filter(function(x){return x%2==1;});\n  var hex_rev_digits_prime_prime_prime\
    \ = hex_rev_digits_prime_prime.filter(function(x){return x%2==0;});\n  var hex_rev_digits_prime_prime_prime_prime\
    \ = hex_rev_digits_prime_prime_prime.filter(function(x){return x%2==1;});\n  var\
    \ hex_rev_digits_prime_prime_prime_prime_prime = hex_rev_digits_prime_prime_prime_prime.filter(function(x){return\
    \ x%2==0;});\n  var hex_rev_digits_prime_prime_prime_prime_prime_prime = hex_rev_digits_prime_prime_prime_prime_prime_prime.filter(function(x){return\
    \ x%2==1;});\n  var hex_rev_digits_prime_prime_prime_prime_prime_prime_prime =\
    \ hex_rev_digits_prime_prime_prime_prime_prime_prime_prime.filter(function(x){return\
    \ x%2==0;});\n  var hex_rev_digits_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = hex_rev_digits_prime_prime_prime_prime_prime_prime_prime_prime.filter(function(x){return\
    \ x%2==1;});\n  var hex_rev_digits_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = hex_rev_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime.filter(function(x){return\
    \ x%2==0;});\n  var hex_rev_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = hex_rev_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime.filter(function(x){return\
    \ x%2==1;});\n  var hex_rev_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = hex_rev_digits_", "  var hex = num.toString().toUpperCase();\n  var primes\
    \ = primes_array;\n  var primes_length = primes.length;\n  var primes_index =\
    \ 0;\n  var primes_index_length = primes_index.length;\n  var hex_index = 0;\n\
    \  var hex_index_length = hex_index.length;\n  var hex_remainder = 0;\n  var hex_remainder_length\
    \ = hex_remainder.length;\n  var hex_remainder_remainder = 0;\n  var hex_remainder_remainder_length\
    \ = hex_remainder_remainder.length;\n  var hex_remainder_remainder_remainder =\
    \ 0;\n  var hex_remainder_remainder_remainder_length = hex_remainder_remainder_remainder.length;\n\
    \  var hex_remainder_remainder_remainder_remainder = 0;\n  var hex_remainder_remainder_remainder_remainder_length\
    \ = hex_remainder_remainder_remainder_remainder.length;\n  var hex_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n  var hex_remainder_remainder_remainder_remainder_remainder_length = hex_remainder_remainder_remainder_remainder_remainder.length;\n\
    \  var hex_remainder_remainder_remainder_remainder_remainder_remainder = 0;\n\
    \  var hex_remainder_remainder_remainder_remainder_remainder_remainder_length\
    \ = hex_remainder_remainder_remainder_remainder_remainder_remainder.length;\n\
    \  var hex_remainder_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n  var hex_remainder_remainder_remainder_remainder_remainder_remainder_remainder_length\
    \ = hex_remainder_remainder_remainder_remainder_remainder_remainder.length;\n\
    \  var hex_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n  var hex_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_length\
    \ = hex_remainder_remainder_remainder_remainder_remainder_remainder_remainder.length;\n\
    \  var hex_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n  var hex_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_length\
    \ = hex_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder.length;\n\
    \  var hex_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n  var hex_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_length\
    \ = hex_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder.length;\n\
    \  var hex_remainder_remainder_remainder_remainder_remainder_remainder_remain",
  "  let hex = num.toString().replace(/[^A-F0-9]/g,\"\");\n  let hexDigits = hex.toUpperCase().split(\"\
    \");\n  let primeDigits = [];\n  let primeCount = 0;\n  for(let i = 0; i < hexDigits.length;\
    \ i++){\n    if(hexDigits[i] === \"A\" || hexDigits[i] === \"B\" || hexDigits[i]\
    \ === \"C\" || hexDigits[i] === \"D\" || hexDigits[i] === \"E\" || hexDigits[i]\
    \ === \"F\"){\n      primeDigits.push(hexDigits[i]);\n    }\n  }\n  for(let i\
    \ = 0; i < primeDigits.length; i++){\n    let prime = primeDigits[i];\n    for(let\
    \ j = i + 1; j < primeDigits.length; j++){\n      if(primeDigits[j] === prime){\n\
    \        primeCount++;\n      }\n    }\n  }\n  return primeCount;\n}\n", "   \
    \ var hex = num.toString().toUpperCase();\n    var hexDigits = [\n        '0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'\n\
    \    ];\n    var hexDigitCount = hexDigits.length;\n    var hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    var hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    var hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    var hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    var hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    var hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    var hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    var hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    var hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    var hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    var hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    var hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    var hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    var hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    var hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    var hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    var hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    var hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    var hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    var hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    var hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    var hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    var hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    var hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    var hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    var hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    var hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    var hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    var hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    var hexDigitCount31\
    \ = ", "    let hex = num.toString().replace(/[^A-F0-9]/g,\"\");\n    let hexDigits\
    \ = hex.split(\"\");\n    let primeDigits = [];\n    let primeCount = 0;\n   \
    \ let primeNumbers = [];\n    let primeNumbersCount = 0;\n    for(let i = 0; i\
    \ < hexDigits.length; i++){\n        if(hexDigits[i] === \"A\" || hexDigits[i]\
    \ === \"B\" || hexDigits[i] === \"C\" || hexDigits[i] === \"D\" || hexDigits[i]\
    \ === \"E\" || hexDigits[i] === \"F\"){\n            primeDigits.push(hexDigits[i]);\n\
    \        }\n        else if(hexDigits[i] === \"2\" || hexDigits[i] === \"3\" ||\
    \ hexDigits[i] === \"5\" || hexDigits[i] === \"7\" || hexDigits[i] === \"11\"\
    \ || hexDigits[i] === \"13\" || hexDigits[i] === \"17\"){\n            primeDigits.push(hexDigits[i]);\n\
    \            primeCount++;\n        }\n        else if(hexDigits[i] === \"0\"\
    ){\n            primeNumbersCount++;\n        }\n    }\n    for(let i = 0; i <\
    \ primeCount; i++){\n        primeNumbers.push(primeDigits[i]);\n    }\n    for(let\
    \ i = 0; i < primeNumbersCount; i++){\n        primeNumbers.push(primeDigits[i]);\n\
    \    }\n    for(let i = 0; i < primeNumbers.length; i++){\n        for(let j =\
    \ 0; j < primeNumbers.length; j++){\n            if(primeNumbers[i] === primeNumbers[j]){\n\
    \                primeNumbersCount++;\n            }\n        }\n    }\n    return\
    \ primeNumbersCount;\n}\n", "  let hex = num.toString().split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\
    \");\n  let primes = hex.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\
    \").split(\"\").filter(x => x == \"2\")\n  let primesCount = primes.filter(x =>\
    \ hex.split(\"\").filter(y => y == x).length == 1).length\n  let primesCount2\
    \ = primes.filter(x => hex.split(\"\").filter(y => y == x).length == 2).length\n\
    \  let primesCount3 = primes.filter(x => hex.split(\"\").filter(y => y == x).length\
    \ == 3).length\n  let primesCount5 = primes.filter(x => hex.split(\"\").filter(y\
    \ => y == x).length == 5).length\n  let primesCount7 = primes.filter(x => hex.split(\"\
    \").filter(y => y == x).length == 7).length\n  let primesCount11 = primes.filter(x\
    \ => hex.split(\"\").filter(y => y == x).length == 11).length\n  let primesCount13\
    \ = primes.filter(x => hex.split(\"\").filter(y => y == x).length == 13).length\n\
    \  let primesCount17 = primes.filter(x => hex.split(\"\").filter(y => y == x).length\
    \ == 17).length\n  let primesCount19 = primes.filter(x => hex.split(\"\").filter(y\
    \ => y == x).length == 19).length\n  let primesCount23 = primes.filter(x => hex.split(\"\
    \").filter(y => y == x).length == 23).length\n  let primesCount29 = primes.filter(x\
    \ => hex.split(\"\").filter(y => y == x).length == 29).length\n  let primesCount31\
    \ = primes.filter(x => hex.split(\"\").filter(y => y == x).length == 31).length\n\
    \  let primesCount37 = primes.filter(x => hex.split(\"\").filter(y => y == x).length\
    \ == 37).length\n  let primesCount41 = primes.filter(x => hex.split(\"\").filter(y\
    \ => y == x).length == 41).length\n  let primesCount43 = primes.filter(x => hex.split(\"\
    \").filter(y => y == x).length == 43).length\n  let primesCount47 = primes.filter(x\
    \ => hex.split(\"\").filter(y => y == x).length == 47).length\n  let primesCount51\
    \ = primes.filter(x => hex.split(\"\").filter(y => y == x).length == 51).length\n\
    \  let primesCount55 = primes.filter(x => hex.split(\"\").", "    let hex = num.toString().split('');\n\
    \    let prime = 0;\n    let prime_hex = '';\n    for(let i = 0; i < hex.length;\
    \ i++){\n        if(hex[i].match(/[0-9A-F]/)){\n            prime++;\n       \
    \     prime_hex += hex[i];\n        }\n    }\n    return prime;\n}\n", "  let\
    \ hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\");\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n \
    \ let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 =\
    \ hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 =\
    \ hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33\
    \ = hexDigitCount", "    let hex = num.split(\"\").map(Number);\n    let primes\
    \ = [];\n    for(let i = 0; i < hex.length; i++){\n        let prime = hex[i];\n\
    \        if(prime > 9){\n            prime = hex[i] - 10;\n        }\n       \
    \ if(primes.includes(prime)){\n            primes.push(prime);\n        }\n  \
    \  }\n    return primes.length;\n}\n", "    let hex = num.toString().toUpperCase();\n\
    \    let primes = [];\n    let prime_digits = [];\n    let prime_digit_count =\
    \ [];\n    let prime_digit_count_temp = [];\n    let prime_digit_count_temp2 =\
    \ [];\n    let prime_digit_count_temp3 = [];\n    let prime_digit_count_temp4\
    \ = [];\n    let prime_digit_count_temp5 = [];\n    let prime_digit_count_temp6\
    \ = [];\n    let prime_digit_count_temp7 = [];\n    let prime_digit_count_temp8\
    \ = [];\n    let prime_digit_count_temp9 = [];\n    let prime_digit_count_temp10\
    \ = [];\n    let prime_digit_count_temp11 = [];\n    let prime_digit_count_temp12\
    \ = [];\n    let prime_digit_count_temp13 = [];\n    let prime_digit_count_temp14\
    \ = [];\n    let prime_digit_count_temp15 = [];\n    let prime_digit_count_temp16\
    \ = [];\n    let prime_digit_count_temp17 = [];\n    let prime_digit_count_temp18\
    \ = [];\n    let prime_digit_count_temp19 = [];\n    let prime_digit_count_temp20\
    \ = [];\n    let prime_digit_count_temp21 = [];\n    let prime_digit_count_temp22\
    \ = [];\n    let prime_digit_count_temp23 = [];\n    let prime_digit_count_temp24\
    \ = [];\n    let prime_digit_count_temp25 = [];\n    let prime_digit_count_temp26\
    \ = [];\n    let prime_digit_count_temp27 = [];\n    let prime_digit_count_temp28\
    \ = [];\n    let prime_digit_count_temp29 = [];\n    let prime_digit_count_temp30\
    \ = [];\n    let prime_digit_count_temp31 = [];\n    let prime_digit_count_temp32\
    \ = [];\n    let prime_digit_count_temp33 = [];\n    let prime_digit_count_temp34\
    \ = [];\n    let prime_digit_count_temp35 = [];\n    let prime_digit_count_temp36\
    \ = [];\n    let prime_digit_count_temp37 = [];\n    let prime_digit_count_temp38\
    \ = [];\n    let prime_digit_count_temp39 = [];\n    let prime_digit_count_temp40\
    \ = [];\n    let prime_digit_count_temp41 = [];\n    let prime_digit_count_temp42\
    \ = [];\n    let prime_digit_count_temp43 = [];\n    let prime_digit_count_temp44\
    \ = [];\n    let prime_digit_count_temp45 = [];\n    let prime_digit_count_temp46\
    \ = [];\n    let prime_digit_count_temp47 = [];\n    let prime_digit_count_temp48\
    \ = [];\n    let prime_digit_count_temp49 = [];\n    let prime_digit_count_temp50\
    \ = [];\n    let prime_digit_count_temp51 = [];\n    let prime_digit_count_temp52\
    \ = [];\n    let prime_digit_count_temp53 = [];\n", "  let hex = num.toString().toUpperCase();\n\
    \  let hexDigits = [...hex];\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCountPrime\
    \ = 0;\n  let hexDigitCountPrime2 = hexDigitCount;\n  let hexDigitCountPrime3\
    \ = hexDigitCount;\n  let hexDigitCountPrime4 = hexDigitCount;\n  let hexDigitCountPrime5\
    \ = hexDigitCount;\n  let hexDigitCountPrime6 = hexDigitCount;\n  let hexDigitCountPrime7\
    \ = hexDigitCount;\n  let hexDigitCountPrime8 = hexDigitCount;\n  let hexDigitCountPrime9\
    \ = hexDigitCount;\n  let hexDigitCountPrime10 = hexDigitCount;\n  let hexDigitCountPrime11\
    \ = hexDigitCount;\n  let hexDigitCountPrime12 = hexDigitCount;\n  let hexDigitCountPrime13\
    \ = hexDigitCount;\n  let hexDigitCountPrime14 = hexDigitCount;\n  let hexDigitCountPrime15\
    \ = hexDigitCount;\n  let hexDigitCountPrime16 = hexDigitCount;\n  let hexDigitCountPrime17\
    \ = hexDigitCount;\n  let hexDigitCountPrime18 = hexDigitCount;\n  let hexDigitCountPrime19\
    \ = hexDigitCount;\n  let hexDigitCountPrime20 = hexDigitCount;\n  let hexDigitCountPrime21\
    \ = hexDigitCount;\n  let hexDigitCountPrime22 = hexDigitCount;\n  let hexDigitCountPrime23\
    \ = hexDigitCount;\n  let hexDigitCountPrime24 = hexDigitCount;\n  let hexDigitCountPrime25\
    \ = hexDigitCount;\n  let hexDigitCountPrime26 = hexDigitCount;\n  let hexDigitCountPrime27\
    \ = hexDigitCount;\n  let hexDigitCountPrime28 = hexDigitCount;\n  let hexDigitCountPrime29\
    \ = hexDigitCount;\n  let hexDigitCountPrime30 = hexDigitCount;\n  let hexDigitCountPrime31\
    \ = hexDigitCount;\n  let hexDigitCountPrime32 = hexDigitCount;\n  let hexDigitCountPrime33\
    \ = hexDigitCount;\n  let hexDigitCountPrime34 = hexDigitCount;\n  let hexDigitCountPrime35\
    \ = hexDigitCount;\n  let hexDigitCountPrime36 = hexDigitCount;\n  let hexDigitCountPrime37\
    \ = hexDigitCount;\n  let hexDigitCountPrime38 = hexDigitCount;\n  let hexDigitCountPrime39\
    \ = ", "    let hex = num.toString().split('');\n    let count = 0;\n    for(let\
    \ i = 0; i < hex.length; i++){\n        if(hex[i].match(/[0-9A-F]/)){\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n", "    var hex = num.toString().toUpperCase();\n\
    \    var count = 0;\n    for(var i=0;i<hex.length;i++){\n        if(hex.charAt(i)==\"\
    A\"){\n            count++;\n        }\n        if(hex.charAt(i)==\"B\"){\n  \
    \          count++;\n        }\n        if(hex.charAt(i)==\"C\"){\n          \
    \  count++;\n        }\n        if(hex.charAt(i)==\"D\"){\n            count++;\n\
    \        }\n        if(hex.charAt(i)==\"E\"){\n            count++;\n        }\n\
    \        if(hex.charAt(i)==\"F\"){\n            count++;\n        }\n    }\n \
    \   return count;\n}\n", "  let hex = num.toUpperCase();\n  let hexDigits = hex.split('');\n\
    \  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 =\
    \ hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 =\
    \ hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 =\
    \ hexDigitCount9*hexDigitCount;\n  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \  let hexDigitCount33 = hexDigitCount32", "    let hex = num.toString().split(\"\
    \").map(x => x.charCodeAt(0).toString(16));\n    let primes = [];\n    let prime_found\
    \ = false;\n    let prime_count = 0;\n    let prime_hex = \"\";\n    for(let i\
    \ = 0; i < hex.length; i++){\n        if(hex[i] == \"A\" || hex[i] == \"B\" ||\
    \ hex[i] == \"C\" || hex[i] == \"D\" || hex[i] == \"E\" || hex[i] == \"F\"){\n\
    \            prime_found = true;\n            prime_hex = hex[i];\n          \
    \  prime_count++;\n        }\n        if(prime_found == true){\n            if(prime_count\
    \ == 2){\n                primes.push(prime_hex);\n                prime_found\
    \ = false;\n                prime_count = 0;\n            }\n        }\n    }\n\
    \    return primes.length;\n}\n", "    let hex = num.replace(/[^0-9A-F]/g,\"\"\
    );\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimeCount = 0;\n    for(let i = 0; i < hexDigitCount; i++){\n\
    \        if(hexDigits[i] === \"A\" || hexDigits[i] === \"B\" || hexDigits[i] ===\
    \ \"C\" || hexDigits[i] === \"D\" || hexDigits[i] === \"E\" || hexDigits[i] ===\
    \ \"F\"){\n            hexDigitPrimeCount++;\n        }\n    }\n    return hexDigitPrimeCount;\n\
    }\n", "  let hex = num.toString().split('');\n  let primes = [];\n  let prime_count\
    \ = 0;\n  let prime_digits = [];\n  let prime_digit_count = 0;\n  let prime_digit_sum\
    \ = 0;\n  let prime_digit_sum2 = 0;\n  let prime_digit_sum3 = 0;\n  let prime_digit_sum4\
    \ = 0;\n  let prime_digit_sum5 = 0;\n  let prime_digit_sum6 = 0;\n  let prime_digit_sum7\
    \ = 0;\n  let prime_digit_sum8 = 0;\n  let prime_digit_sum9 = 0;\n  let prime_digit_sum10\
    \ = 0;\n  let prime_digit_sum11 = 0;\n  let prime_digit_sum12 = 0;\n  let prime_digit_sum13\
    \ = 0;\n  let prime_digit_sum14 = 0;\n  let prime_digit_sum15 = 0;\n  let prime_digit_sum16\
    \ = 0;\n  let prime_digit_sum17 = 0;\n  let prime_digit_sum18 = 0;\n  let prime_digit_sum19\
    \ = 0;\n  let prime_digit_sum20 = 0;\n  let prime_digit_sum21 = 0;\n  let prime_digit_sum22\
    \ = 0;\n  let prime_digit_sum23 = 0;\n  let prime_digit_sum24 = 0;\n  let prime_digit_sum25\
    \ = 0;\n  let prime_digit_sum26 = 0;\n  let prime_digit_sum27 = 0;\n  let prime_digit_sum28\
    \ = 0;\n  let prime_digit_sum29 = 0;\n  let prime_digit_sum30 = 0;\n  let prime_digit_sum31\
    \ = 0;\n  let prime_digit_sum32 = 0;\n  let prime_digit_sum33 = 0;\n  let prime_digit_sum34\
    \ = 0;\n  let prime_digit_sum35 = 0;\n  let prime_digit_sum36 = 0;\n  let prime_digit_sum37\
    \ = 0;\n  let prime_digit_sum38 = 0;\n  let prime_digit_sum39 = 0;\n  let prime_digit_sum40\
    \ = 0;\n  let prime_digit_sum41 = 0;\n  let prime_digit_sum42 = 0;\n  let prime_digit_sum43\
    \ = 0;\n  let prime_digit_sum44 = 0;\n  let prime_digit_sum45 = 0;\n  let prime_digit_sum46\
    \ = 0;\n  let prime_digit_sum47 = 0;\n  let prime_digit_sum48 = 0;\n  let prime_digit_sum49\
    \ = 0;\n  let prime_digit_sum50 = 0;\n  let prime_digit_sum51 = 0;\n  let prime_digit_sum52\
    \ = 0;\n  let prime_digit_sum53 = 0;\n  let prime_digit_sum54 = 0;\n  let prime_digit_sum55\
    \ = 0;\n  let prime_digit_sum56 = 0;\n  let prime_digit_sum57 = 0;\n  let prime_digit_sum58\
    \ = 0;\n  let prime_digit_sum59 = 0;\n  let prime_digit_sum60 = 0;\n  let prime_digit_sum61\
    \ = 0;", "  let hex = num.toString().toUpperCase();\n  let count = 0;\n  for(let\
    \ i = 0; i < hex.length; i++){\n    if(hex.charAt(i) == \"A\" || hex.charAt(i)\
    \ == \"B\" || hex.charAt(i) == \"C\" || hex.charAt(i) == \"D\" || hex.charAt(i)\
    \ == \"E\" || hex.charAt(i) == \"F\"){\n      count++;\n    }\n  }\n  return count;\n\
    }\n", "    let hex = num.split(\"\");\n    let hex2 = [];\n    for(let i = 0;\
    \ i < hex.length; i++){\n        hex2.push(parseInt(hex[i], 16));\n    }\n   \
    \ let hex3 = [];\n    for(let i = 0; i < hex2.length; i++){\n        hex3.push(hex2[i]%10);\n\
    \    }\n    let hex4 = hex3.join(\"\");\n    let hex5 = hex4.split(\"\");\n  \
    \  let hex6 = [];\n    for(let i = 0; i < hex5.length; i++){\n        hex6.push(parseInt(hex5[i],\
    \ 10));\n    }\n    let hex7 = hex6.join(\"\");\n    let hex8 = hex7.split(\"\"\
    );\n    let hex9 = [];\n    for(let i = 0; i < hex8.length; i++){\n        hex9.push(parseInt(hex8[i],\
    \ 16));\n    }\n    let hex10 = [];\n    for(let i = 0; i < hex9.length; i++){\n\
    \        hex10.push(hex9[i]%10);\n    }\n    let hex11 = hex10.join(\"\");\n \
    \   let hex12 = hex11.split(\"\");\n    let hex13 = [];\n    for(let i = 0; i\
    \ < hex12.length; i++){\n        hex13.push(hex12[i]%10);\n    }\n    let hex14\
    \ = hex13.join(\"\");\n    let hex15 = hex14.split(\"\");\n    let hex16 = [];\n\
    \    for(let i = 0; i < hex15.length; i++){\n        hex16.push(hex15[i]%10);\n\
    \    }\n    let hex17 = hex16.join(\"\");\n    let hex18 = hex17.split(\"\");\n\
    \    let hex19 = [];\n    for(let i = 0; i < hex18.length; i++){\n        hex19.push(hex18[i]%10);\n\
    \    }\n    let hex20 = hex19.join(\"\");\n    let hex21 = hex20.split(\"\");\n\
    \    let hex22 = [];\n    for(let i = 0; i < hex21.length; i++){\n        hex22.push(hex21[i]%10);\n\
    \    }\n    let hex23 = hex22.join(\"\");\n    let hex24 = hex23.split(\"\");\n\
    \    let hex25 = [];\n    for(let i = 0; i < hex24.length; i++){\n        hex25.push(hex24[i]%10);\n\
    \    }\n    let hex26 = hex25.join(\"\");\n    let hex27 = hex26.split(\"\");\n\
    \    let hex28 = [];\n    for(let i = 0; i < hex27.length; i++){\n        hex28.push(hex27[i]%10);\n\
    \    }\n    let hex29 = hex28.join(\"\");\n    let hex30 = hex29.split(\"\");\n\
    \    let hex31 = [];\n    for(let i = 0; i < hex30.length; i++){\n        hex31.push(hex30[i]%10);\n\
    \    }\n    let hex32 = hex31.join(\"\");\n    let hex33 = hex32.split(\"\");\n\
    \    let hex34 = [];", "    let hex = num.toString().split(\"\").map(x => x.charCodeAt(0).toString(16)).join('');\n\
    \    let primes = hex.match(/[2,3,5,7,11,13,17,19]/g);\n    let primes_count =\
    \ primes.length;\n    let primes_sum = 0;\n    for(let i = 0; i < primes_count;\
    \ i++){\n        primes_sum += parseInt(primes[i]);\n    }\n    return primes_sum;\n\
    }\n", "    let hex = num.toString().split('');\n    let prime_count = 0;\n   \
    \ let prime_digits = [];\n    for(let i = 0; i < hex.length; i++){\n        if(hex[i]\
    \ == 'A' || hex[i] == 'B' || hex[i] == 'C' || hex[i] == 'D' || hex[i] == 'E' ||\
    \ hex[i] == 'F'){\n            prime_digits.push(hex[i]);\n        }\n    }\n\
    \    for(let i = 0; i < prime_digits.length; i++){\n        for(let j = 0; j <\
    \ prime_digits.length; j++){\n            if(prime_digits[i] == prime_digits[j]){\n\
    \                prime_count++;\n            }\n        }\n    }\n    return prime_count;\n\
    }\n", "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join('');\n\
    \    let primes = [];\n    for(let i = 0; i < hex.length; i++){\n        let hexDigit\
    \ = hex[i];\n        if(hexDigit == \"A\" || hexDigit == \"B\" || hexDigit ==\
    \ \"C\" || hexDigit == \"D\" || hexDigit == \"E\" || hexDigit == \"F\"){\n   \
    \         primes.push(hexDigit);\n        }\n    }\n    let primesCount = primes.length;\n\
    \    let hexDigitCount = hex.length;\n    let hexDigitPrimes = [];\n    for(let\
    \ i = 0; i < hexDigitCount; i++){\n        let hexDigit = hex[i];\n        let\
    \ hexDigitPrime = false;\n        for(let j = 0; j < primesCount; j++){\n    \
    \        if(hexDigit == primes[j]){\n                hexDigitPrime = true;\n \
    \               break;\n            }\n        }\n        if(!hexDigitPrime){\n\
    \            hexDigitPrimes.push(hexDigit);\n        }\n    }\n    let hexDigitPrimesCount\
    \ = hexDigitPrimes.length;\n    let hexDigitPrimePrimes = [];\n    for(let i =\
    \ 0; i < hexDigitPrimesCount; i++){\n        let hexDigitPrime = hexDigitPrimes[i];\n\
    \        let hexDigitPrimePrime = false;\n        for(let j = 0; j < primesCount;\
    \ j++){\n            if(hexDigitPrime == primes[j]){\n                hexDigitPrimePrime\
    \ = true;\n                break;\n            }\n        }\n        if(!hexDigitPrimePrime){\n\
    \            hexDigitPrimePrimes.push(hexDigitPrime);\n        }\n    }\n    let\
    \ hexDigitPrimePrimesCount = hexDigitPrimePrimes.length;\n    let hexDigitPrimePrimePrimesCount\
    \ = hexDigitPrimePrimes.length;\n    let hexDigitPrimePrimePrimesCount2 = hexDigitPrimePrimePrimesCount;\n\
    \    let hexDigitPrimePrimePrimesCount3 = hexDigitPrimePrimePrimesCount;\n   \
    \ let hexDigitPrimePrimePrimesCount4 = hexDigitPrimePrimePrimesCount;\n    let\
    \ hexDigitPrimePrimePrimesCount5 = hexDigitPrimePrimePrimesCount;\n    let hexDigitPrimePrimePrimesCount6\
    \ = hexDigitPrimePrimePrimesCount;\n    let hexDigitPrimePrimePrimesCount7 = hexDigitPrimePrimePrimesCount;\n\
    \    let hexDigitPrimePrimePrimesCount8 = hexDigitPrimePrimePrimesCount;\n   \
    \ let hexDigitPrimePrimePrimesCount9 = hexDigit", "  var hex = num.toString().replace(/[^A-F0-9]/g,'');\n\
    \  var primes = [];\n  var prime_counter = 0;\n  for(var i=0;i<hex.length;i++){\n\
    \    var hexa = hex.charCodeAt(i);\n    var hexa_decimal = hexa%16;\n    var hexa_hex\
    \ = hexa_decimal.toString(16);\n    if(hexa_hex.length==1){\n      hexa_hex =\
    \ '0'+hexa_hex;\n    }\n    prime_counter++;\n    primes.push(hexa_hex);\n  }\n\
    \  if(prime_counter==2){\n    return 2;\n  }\n  if(prime_counter==3){\n    return\
    \ 3;\n  }\n  if(prime_counter==5){\n    return 5;\n  }\n  if(prime_counter==7){\n\
    \    return 7;\n  }\n  if(prime_counter==11){\n    return 11;\n  }\n  if(prime_counter==13){\n\
    \    return 13;\n  }\n  if(prime_counter==17){\n    return 17;\n  }\n  if(prime_counter==19){\n\
    \    return 19;\n  }\n  if(prime_counter==23){\n    return 23;\n  }\n  if(prime_counter==29){\n\
    \    return 29;\n  }\n  if(prime_counter==31){\n    return 31;\n  }\n  if(prime_counter==37){\n\
    \    return 37;\n  }\n  if(prime_counter==41){\n    return 41;\n  }\n  if(prime_counter==43){\n\
    \    return 43;\n  }\n  if(prime_counter==47){\n    return 47;\n  }\n  if(prime_counter==53){\n\
    \    return 53;\n  }\n  if(prime_counter==59){\n    return 59;\n  }\n  if(prime_counter==61){\n\
    \    return 61;\n  }\n  if(prime_counter==67){\n    return 67;\n  }\n  if(prime_counter==71){\n\
    \    return 71;\n  }\n  if(prime_counter==73){\n    return 73;\n  }\n  if(prime_counter==79){\n\
    \    return 79;\n  }\n  if(prime_counter==83){\n    return 83;\n  }\n  if(prime_counter==89){\n\
    \    return 89;\n  }\n  if(prime_counter==97){\n    return 97;\n  }\n  if(prime_counter==101){\n\
    \    return 101;\n  }\n  if(prime_counter==103){\n    return 10", "    let hex\
    \ = num.toString().split(\"\").map(x => x.charCodeAt(0).toString(16)).join('');\n\
    \    let primes = hex.split(\"\").map(x => x.charCodeAt(0).toString(16)).filter(x\
    \ => x == '2' || x == '3' || x == '5' || x == '7' || x == 'B' || x == 'D');\n\
    \    return primes.length;\n}\n", "  let hex = num.toString().replace(/[^A-F0-9]/g,\"\
    \");\n  let hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n", "    let hex = num.toString().split('');\n\
    \    let hex_rev = [];\n    for(let i = 0; i < hex.length; i++){\n        hex_rev.push(hex[i].charCodeAt(0)\
    \ - 64);\n    }\n    let hex_rev_sorted = hex_rev.sort();\n    let hex_rev_sorted_rev\
    \ = hex_rev_sorted.reverse();\n    let hex_rev_sorted_rev_2 = hex_rev_sorted_rev.reverse();\n\
    \    let hex_rev_sorted_rev_3 = hex_rev_sorted_rev_2.reverse();\n    let hex_rev_sorted_rev_4\
    \ = hex_rev_sorted_rev_3.reverse();\n    let hex_rev_sorted_rev_5 = hex_rev_sorted_rev_4.reverse();\n\
    \    let hex_rev_sorted_rev_6 = hex_rev_sorted_rev_5.reverse();\n    let hex_rev_sorted_rev_7\
    \ = hex_rev_sorted_rev_6.reverse();\n    let hex_rev_sorted_rev_8 = hex_rev_sorted_rev_7.reverse();\n\
    \    let hex_rev_sorted_rev_9 = hex_rev_sorted_rev_8.reverse();\n    let hex_rev_sorted_rev_10\
    \ = hex_rev_sorted_rev_9.reverse();\n    let hex_rev_sorted_rev_11 = hex_rev_sorted_rev_10.reverse();\n\
    \    let hex_rev_sorted_rev_12 = hex_rev_sorted_rev_11.reverse();\n    let hex_rev_sorted_rev_13\
    \ = hex_rev_sorted_rev_12.reverse();\n    let hex_rev_sorted_rev_14 = hex_rev_sorted_rev_13.reverse();\n\
    \    let hex_rev_sorted_rev_15 = hex_rev_sorted_rev_14.reverse();\n    let hex_rev_sorted_rev_16\
    \ = hex_rev_sorted_rev_15.reverse();\n    let hex_rev_sorted_rev_17 = hex_rev_sorted_rev_16.reverse();\n\
    \    let hex_rev_sorted_rev_18 = hex_rev_sorted_rev_17.reverse();\n    let hex_rev_sorted_rev_19\
    \ = hex_rev_sorted_rev_18.reverse();\n    let hex_rev_sorted_rev_20 = hex_rev_sorted_rev_19.reverse();\n\
    \    let hex_rev_sorted_rev_21 = hex_rev_sorted_rev_20.reverse();\n    let hex_rev_sorted_rev_22\
    \ = hex_rev_sorted_rev_21.reverse();\n    let hex_rev_sorted_rev_23 = hex_rev_sorted_rev_22.reverse();\n\
    \    let hex_rev_sorted_rev_24 = hex_rev_sorted_rev_23.reverse();\n    let hex_rev_sorted_rev_25\
    \ = hex_rev_sorted_rev_24.reverse();\n    let hex_re", "  var hex = num.toUpperCase();\n\
    \  var count = 0;\n  for(var i=0;i<hex.length;i++){\n    count += hex.charCodeAt(i)\
    \ - 64;\n  }\n  return count;\n}\n", "    let hex = num.toString().replace(/[^A-F0-9]/g,\"\
    \");\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimeCount = 0;\n    let hexDigitPrimes = [];\n    let hexDigitPrimeIndex\
    \ = 0;\n    let hexDigitPrimeIndex2 = 0;\n    let hexDigitPrimeIndex3 = 0;\n \
    \   let hexDigitPrimeIndex4 = 0;\n    let hexDigitPrimeIndex5 = 0;\n    let hexDigitPrimeIndex6\
    \ = 0;\n    let hexDigitPrimeIndex7 = 0;\n    let hexDigitPrimeIndex8 = 0;\n \
    \   let hexDigitPrimeIndex9 = 0;\n    let hexDigitPrimeIndex10 = 0;\n    let hexDigitPrimeIndex11\
    \ = 0;\n    let hexDigitPrimeIndex12 = 0;\n    let hexDigitPrimeIndex13 = 0;\n\
    \    let hexDigitPrimeIndex14 = 0;\n    let hexDigitPrimeIndex15 = 0;\n    let\
    \ hexDigitPrimeIndex16 = 0;\n    let hexDigitPrimeIndex17 = 0;\n    let hexDigitPrimeIndex18\
    \ = 0;\n    let hexDigitPrimeIndex19 = 0;\n    let hexDigitPrimeIndex20 = 0;\n\
    \    let hexDigitPrimeIndex21 = 0;\n    let hexDigitPrimeIndex22 = 0;\n    let\
    \ hexDigitPrimeIndex23 = 0;\n    let hexDigitPrimeIndex24 = 0;\n    let hexDigitPrimeIndex25\
    \ = 0;\n    let hexDigitPrimeIndex26 = 0;\n    let hexDigitPrimeIndex27 = 0;\n\
    \    let hexDigitPrimeIndex28 = 0;\n    let hexDigitPrimeIndex29 = 0;\n    let\
    \ hexDigitPrimeIndex30 = 0;\n    let hexDigitPrimeIndex31 = 0;\n    let hexDigitPrimeIndex32\
    \ = 0;\n    let hexDigitPrimeIndex33 = 0;\n    let hexDigitPrimeIndex34 = 0;\n\
    \    let hexDigitPrimeIndex35 = 0;\n    let hexDigitPrimeIndex36 = 0;\n    let\
    \ hexDigitPrimeIndex37 = 0;\n    let hexDigitPrimeIndex38 = 0;\n    let hexDigitPrimeIndex39\
    \ = 0;\n    let hexDigitPrimeIndex40 = 0;\n    let hexDigitPrimeIndex41 = 0;\n\
    \    let hexDigitPrimeIndex42 = 0;\n    let hexDigitPrimeIndex43 = 0;\n    let\
    \ hexDigitPrimeIndex44 = 0;\n    let hexDigitPrimeIndex45 = 0;\n    let hexDigitPrimeIndex46\
    \ = 0;\n    let hexDigitPrimeIndex47 = 0;\n    let hexDigitPrimeIndex48 = 0;\n\
    \    let hexDigitPrimeIndex49 = 0;\n    let hexDigitPrimeIndex50 = 0;\n    let\
    \ hexDigitPrimeIndex51 = 0;\n    let hexDigitPrimeIndex52 = 0;\n    let ", " \
    \   let hex = num.toString().split('');\n    let primes = [];\n    let prime_digits\
    \ = [];\n    let prime_digit_count = 0;\n    let prime_digit_sum = 0;\n    let\
    \ prime_digit_sum2 = 0;\n    let prime_digit_sum3 = 0;\n    let prime_digit_sum4\
    \ = 0;\n    let prime_digit_sum5 = 0;\n    let prime_digit_sum6 = 0;\n    let\
    \ prime_digit_sum7 = 0;\n    let prime_digit_sum8 = 0;\n    let prime_digit_sum9\
    \ = 0;\n    let prime_digit_sum10 = 0;\n    let prime_digit_sum11 = 0;\n    let\
    \ prime_digit_sum12 = 0;\n    let prime_digit_sum13 = 0;\n    let prime_digit_sum14\
    \ = 0;\n    let prime_digit_sum15 = 0;\n    let prime_digit_sum16 = 0;\n    let\
    \ prime_digit_sum17 = 0;\n    let prime_digit_sum18 = 0;\n    let prime_digit_sum19\
    \ = 0;\n    let prime_digit_sum20 = 0;\n    let prime_digit_sum21 = 0;\n    let\
    \ prime_digit_sum22 = 0;\n    let prime_digit_sum23 = 0;\n    let prime_digit_sum24\
    \ = 0;\n    let prime_digit_sum25 = 0;\n    let prime_digit_sum26 = 0;\n    let\
    \ prime_digit_sum27 = 0;\n    let prime_digit_sum28 = 0;\n    let prime_digit_sum29\
    \ = 0;\n    let prime_digit_sum30 = 0;\n    let prime_digit_sum31 = 0;\n    let\
    \ prime_digit_sum32 = 0;\n    let prime_digit_sum33 = 0;\n    let prime_digit_sum34\
    \ = 0;\n    let prime_digit_sum35 = 0;\n    let prime_digit_sum36 = 0;\n    let\
    \ prime_digit_sum37 = 0;\n    let prime_digit_sum38 = 0;\n    let prime_digit_sum39\
    \ = 0;\n    let prime_digit_sum40 = 0;\n    let prime_digit_sum41 = 0;\n    let\
    \ prime_digit_sum42 = 0;\n    let prime_digit_sum43 = 0;\n    let prime_digit_sum44\
    \ = 0;\n    let prime_digit_sum45 = 0;\n    let prime_digit_sum46 = 0;\n    let\
    \ prime_digit_sum47 = 0;\n    let prime_digit_sum48 = 0;\n    let prime_digit_sum49\
    \ = 0;\n    let prime_digit_sum50 = 0;\n    let prime_digit_sum51 = 0;\n    let\
    \ prime_digit_sum52 = 0;\n    let prime_digit_sum53 = 0;\n    let prime_digit_sum54\
    \ = 0;\n    let prime_digit_sum55 = 0;\n    let prime_digit_sum56 = 0;\n    let\
    \ prime_digit_sum57 = 0;\n    let prime_digit_sum58 = 0;\n    let prime_digit_sum59\
    \ = 0;\n    let prime_digit_sum60 = 0;\n    let prime_digit_sum61 = 0;\n    let\
    \ prime_digit_", "  var hex = num.toString().replace(/[^A-F0-9]/g,'');\n  var\
    \ hexLength = hex.length;\n  var hexDigits = hex.length/2;\n  var hexDigitPrimes\
    \ = [];\n  for(var i=0;i<hexDigits;i++){\n    var hexDigitPrime = hex.charAt(i*2)+hex.charAt(i*2+1);\n\
    \    hexDigitPrimes.push(hexDigitPrime);\n  }\n  var hexDigitPrimes = hexDigitPrimes.sort();\n\
    \  var hexDigitPrimeIndex = hexDigitPrimes.length;\n  var hexDigitPrimeIndexMax\
    \ = hexDigitPrimeIndex-1;\n  var hexDigitPrimeIndexMin = hexDigitPrimeIndex+1;\n\
    \  var hexDigitPrimeIndexMax = hexDigitPrimeIndexMax-1;\n  var hexDigitPrimeIndexMin\
    \ = hexDigitPrimeIndexMin-1;\n  var hexDigitPrimeIndexMax = hexDigitPrimeIndexMax-1;\n\
    \  var hexDigitPrimeIndexMin = hexDigitPrimeIndexMin-1;\n  var hexDigitPrimeIndexMax\
    \ = hexDigitPrimeIndexMax-1;\n  var hexDigitPrimeIndexMin = hexDigitPrimeIndexMin-1;\n\
    \  var hexDigitPrimeIndexMax = hexDigitPrimeIndexMax-1;\n  var hexDigitPrimeIndexMin\
    \ = hexDigitPrimeIndexMin-1;\n  var hexDigitPrimeIndexMax = hexDigitPrimeIndexMax-1;\n\
    \  var hexDigitPrimeIndexMin = hexDigitPrimeIndexMin-1;\n  var hexDigitPrimeIndexMax\
    \ = hexDigitPrimeIndexMax-1;\n  var hexDigitPrimeIndexMin = hexDigitPrimeIndexMin-1;\n\
    \  var hexDigitPrimeIndexMax = hexDigitPrimeIndexMax-1;\n  var hexDigitPrimeIndexMin\
    \ = hexDigitPrimeIndexMin-1;\n  var hexDigitPrimeIndexMax = hexDigitPrimeIndexMax-1;\n\
    \  var hexDigitPrimeIndexMin = hexDigitPrimeIndexMin-1;\n  var hexDigitPrimeIndexMax\
    \ = hexDigitPrimeIndexMax-1;\n  var hexDigitPrimeIndexMin = hexDigitPrimeIndexMin-1;\n\
    \  var hexDigitPrimeIndexMax = hexDigitPrimeIndexMax-1;\n  var hexDigitPrimeIndexMin\
    \ = hexDigitPrimeIndexMin-1;\n  var hexDigitPrimeIndexMax = hexDigitPrimeIndexMax-1;\n\
    \  var hexDigitPrimeIndexMin = hexDigitPrimeIndexMin-1;\n  var hexDigitPrimeIndexMax\
    \ = hexDigitPrimeIndexMax-1;\n  var hexDigitPrime", "    let hex = num.split(\"\
    \").map(x => x.charCodeAt(0).toString(16));\n    let primes = [];\n    let prime_count\
    \ = 0;\n    for(let i = 0; i < hex.length; i++){\n        if(hex[i] == \"A\" ||\
    \ hex[i] == \"B\" || hex[i] == \"C\" || hex[i] == \"D\" || hex[i] == \"E\" ||\
    \ hex[i] == \"F\"){\n            primes.push(hex[i]);\n        }\n    }\n    for(let\
    \ i = 0; i < primes.length; i++){\n        if(hex.includes(primes[i])){\n    \
    \        prime_count++;\n        }\n    }\n    return prime_count;\n}\n", "  \
    \  var hex = num.toString().toUpperCase();\n    var primes = [];\n    var prime_found\
    \ = false;\n    for(var i=0;i<hex.length;i++){\n        if(hex.charAt(i)==\"A\"\
    \ || hex.charAt(i)==\"B\" || hex.charAt(i)==\"C\" || hex.charAt(i)==\"D\" || hex.charAt(i)==\"\
    E\" || hex.charAt(i)==\"F\"){\n            prime_found = true;\n        }\n  \
    \      if(prime_found){\n            primes.push(parseInt(hex.charAt(i)));\n \
    \       }\n    }\n    var prime_sum = 0;\n    for(var i=0;i<primes.length;i++){\n\
    \        prime_sum += primes[i];\n    }\n    if(prime_sum%2==0){\n        return\
    \ 0;\n    }\n    var prime_found = false;\n    for(var i=0;i<primes.length;i++){\n\
    \        if(primes[i]==2){\n            prime_found = true;\n        }\n    }\n\
    \    if(prime_found){\n        return 2;\n    }\n    var prime_found = false;\n\
    \    for(var i=0;i<primes.length;i++){\n        if(primes[i]==3){\n          \
    \  prime_found = true;\n        }\n    }\n    if(prime_found){\n        return\
    \ 3;\n    }\n    var prime_found = false;\n    for(var i=0;i<primes.length;i++){\n\
    \        if(primes[i]==5){\n            prime_found = true;\n        }\n    }\n\
    \    if(prime_found){\n        return 5;\n    }\n    var prime_found = false;\n\
    \    for(var i=0;i<primes.length;i++){\n        if(primes[i]==7){\n          \
    \  prime_found = true;\n        }\n    }\n    if(prime_found){\n        return\
    \ 7;\n    }\n    var prime_found = false;\n    for(var i=0;i<primes.length;i++){\n\
    \        if(primes[i]==11){\n            prime_found = true;\n        }\n    }\n\
    \    if(prime_found){\n        return 11;\n    }\n    var prime_found = false;\n\
    \    for(var i=0;i<primes.length;i++){\n        if(primes[i]==13){\n         \
    \   prime_found = true;\n        }\n    }\n    if(prime_found){\n        return\
    \ 13;\n    }\n    var prime_found = false;\n    for(var i=0;i<primes.length;i++){\n\
    \        if(primes[i]==17){\n            prime_found = true;\n        }\n    }\n\
    \    if(prime_found){\n        return 17;\n    }\n    var prime_found = false;\n\
    \    for(var i=0;i<primes.length;i++){\n        if(primes[i]==19){\n         \
    \   prime_found = true;\n        }\n    }\n    if(prime_found){\n        return\
    \ 19;\n    }\n    var prime_found = false;\n    for(var i=0;i<primes.length;i++){\n",
  "    let hex = num.toString().split('');\n    let primes = [];\n    let prime_digits\
    \ = [];\n    let prime_digits_length = 0;\n    let prime_digits_sum = 0;\n   \
    \ let prime_digits_sum2 = 0;\n    let prime_digits_sum3 = 0;\n    let prime_digits_sum4\
    \ = 0;\n    let prime_digits_sum5 = 0;\n    let prime_digits_sum6 = 0;\n    let\
    \ prime_digits_sum7 = 0;\n    let prime_digits_sum8 = 0;\n    let prime_digits_sum9\
    \ = 0;\n    let prime_digits_sum10 = 0;\n    let prime_digits_sum11 = 0;\n   \
    \ let prime_digits_sum12 = 0;\n    let prime_digits_sum13 = 0;\n    let prime_digits_sum14\
    \ = 0;\n    let prime_digits_sum15 = 0;\n    let prime_digits_sum16 = 0;\n   \
    \ let prime_digits_sum17 = 0;\n    let prime_digits_sum18 = 0;\n    let prime_digits_sum19\
    \ = 0;\n    let prime_digits_sum20 = 0;\n    let prime_digits_sum21 = 0;\n   \
    \ let prime_digits_sum22 = 0;\n    let prime_digits_sum23 = 0;\n    let prime_digits_sum24\
    \ = 0;\n    let prime_digits_sum25 = 0;\n    let prime_digits_sum26 = 0;\n   \
    \ let prime_digits_sum27 = 0;\n    let prime_digits_sum28 = 0;\n    let prime_digits_sum29\
    \ = 0;\n    let prime_digits_sum30 = 0;\n    let prime_digits_sum31 = 0;\n   \
    \ let prime_digits_sum32 = 0;\n    let prime_digits_sum33 = 0;\n    let prime_digits_sum34\
    \ = 0;\n    let prime_digits_sum35 = 0;\n    let prime_digits_sum36 = 0;\n   \
    \ let prime_digits_sum37 = 0;\n    let prime_digits_sum38 = 0;\n    let prime_digits_sum39\
    \ = 0;\n    let prime_digits_sum40 = 0;\n    let prime_digits_sum41 = 0;\n   \
    \ let prime_digits_sum42 = 0;\n    let prime_digits_sum43 = 0;\n    let prime_digits_sum44\
    \ = 0;\n    let prime_digits_sum45 = 0;\n    let prime_digits_sum46 = 0;\n   \
    \ let prime_digits_sum47 = 0;\n    let prime_digits_sum48 = 0;\n    let prime_digits_sum49\
    \ = 0;\n    let prime_digits_sum50 = 0;\n    let prime_digits_sum51 = 0;\n   \
    \ let prime_digits_sum52 = 0;\n    let prime_digits_sum53 = 0;\n    let prime_digits_sum54\
    \ = 0;\n    let prime_digit", "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16));\n\
    \    let primes = [];\n    let prime_count = 0;\n    let prime_digits = [];\n\
    \    let prime_digit_count = [];\n    for(let i = 0; i < hex.length; i++){\n \
    \       if(hex[i] == \"A\" || hex[i] == \"B\" || hex[i] == \"C\" || hex[i] ==\
    \ \"D\" || hex[i] == \"E\" || hex[i] == \"F\"){\n            prime_digits.push(hex[i]);\n\
    \            prime_digit_count.push(1);\n        }\n        else if(hex[i] ==\
    \ \"0\"){\n            prime_digits.push(hex[i]);\n            prime_digit_count.push(1);\n\
    \        }\n        else if(hex[i] == \"1\"){\n            prime_digits.push(hex[i]);\n\
    \            prime_digit_count.push(2);\n        }\n        else if(hex[i] ==\
    \ \"2\"){\n            prime_digits.push(hex[i]);\n            prime_digit_count.push(3);\n\
    \        }\n        else if(hex[i] == \"3\"){\n            prime_digits.push(hex[i]);\n\
    \            prime_digit_count.push(5);\n        }\n        else if(hex[i] ==\
    \ \"4\"){\n            prime_digits.push(hex[i]);\n            prime_digit_count.push(7);\n\
    \        }\n        else if(hex[i] == \"5\"){\n            prime_digits.push(hex[i]);\n\
    \            prime_digit_count.push(11);\n        }\n        else if(hex[i] ==\
    \ \"6\"){\n            prime_digits.push(hex[i]);\n            prime_digit_count.push(13);\n\
    \        }\n        else if(hex[i] == \"7\"){\n            prime_digits.push(hex[i]);\n\
    \            prime_digit_count.push(17);\n        }\n        else if(hex[i] ==\
    \ \"8\"){\n            prime_digits.push(hex[i]);\n            prime_digit_count.push(19);\n\
    \        }\n        else if(hex[i] == \"9\"){\n            prime_digits.push(hex[i]);\n\
    \            prime_digit_count.push(23);\n        }\n        else if(hex[i] ==\
    \ \"A\"){\n            prime_digits.push(hex[i]);\n            prime_digit_count.push(29);\n\
    \        }\n        else if(hex[i] == \"B\"){\n            prime_digits.push(hex[i]);\n\
    \            prime_digit_count.push(31);\n        }\n        else if(hex[i] ==\
    \ \"C\"){\n            prime_digits.push(hex[i]);\n            prime_digit_count.push(37);\n\
    \        }\n        else if(hex[i] == \"D\"){\n            prime_digits.push(hex[i]);\n\
    \            prime_digit_count.push(41);\n        }\n        else if(hex[i] ==\
    \ \"E\"){\n            prime_digits.push(hex[i]);\n            prime_digit_count.push(43);\n\
    \        }\n        else if(hex[i] == \"", "  let hex = num.toString().replace(/[^A-F0-9]/g,\"\
    \");\n  let hexDigits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\n\
    \  let primes = [];\n  for(let i = 0; i < hexDigits.length; i++){\n    if(hexDigits[i]\
    \ == hex.length){\n      primes.push(i);\n    }\n  }\n  return primes.length;\n\
    }\n", "  let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\
    \");\n  let primes = hex.split(\"\").map(x => parseInt(x));\n  let primesCount\
    \ = primes.filter(x => x > 1 && x < hex.length).length;\n  return primesCount;\n\
    }\n", "    let hex = num.toString().split('');\n    let hexLength = hex.length;\n\
    \    let hexDigits = [2,3,5,7,11,13,17,19];\n    let hexPrimes = [];\n    let\
    \ hexPrimeCount = 0;\n    for(let i = 0; i < hexLength; i++){\n        if(hexDigits.includes(hex[i])){\n\
    \            hexPrimes.push(hex[i]);\n            hexPrimeCount++;\n        }\n\
    \    }\n    return hexPrimeCount;\n}\n", "    let hex = num.toString().replace(/[^A-F0-9]/g,\"\
    \");\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n    let hexDigitCount3\
    \ = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n    let hexDigitCount6\
    \ = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n    let hexDigitCount9\
    \ = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n    let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n    let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n    let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n    let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n    let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n    let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n    let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n", "  var hex = num.toString().toUpperCase();\n\
    \  var prime = 0;\n  var count = 0;\n  for(var i=0;i<hex.length;i++){\n    var\
    \ c = hex.charCodeAt(i);\n    if(c >= 48 && c <= 57){\n      prime++;\n      if(prime\
    \ == 2){\n        count = hex.charCodeAt(i) - 48 + 2;\n      }\n    }\n  }\n \
    \ return count;\n}\n", "  let hex = num.toString().split('');\n  let count = 0;\n\
    \  for(let i = 0; i < hex.length; i++){\n    if(hex[i].match(/[0-9A-F]/)){\n \
    \     count++;\n    }\n  }\n  return count;\n}\n", "    let hex = num.toString().toUpperCase();\n\
    \    let primes = [];\n    let prime_count = 0;\n    for(let i = 0; i < hex.length;\
    \ i++){\n        let hexDigit = hex.charAt(i);\n        if(hexDigit >= '0' &&\
    \ hexDigit <= '9'){\n            prime_count++;\n            if(primes.includes(hexDigit)){\n\
    \                prime_count--;\n            }\n            primes.push(hexDigit);\n\
    \        }\n    }\n    return prime_count;\n}\n", "    let hex = num.split(\"\"\
    ).map(x => x.charCodeAt(0).toString(16)).join(\"\");\n    let primes = hex_to_primes(hex);\n\
    \    let prime_digits = primes.map(x => x.charCodeAt(0).toString(16));\n    let\
    \ prime_digits_count = prime_digits.reduce((acc, x) => acc + x.length, 0);\n \
    \   return prime_digits_count;\n}\n", "    let hex = num.toString().toUpperCase();\n\
    \    let primes = [];\n    let prime_counter = 0;\n    for(let i = 0; i < hex.length;\
    \ i++){\n        let hexDigit = hex.charAt(i);\n        if(hexDigit >= '0' &&\
    \ hexDigit <= '9'){\n            prime_counter++;\n        }\n        if(hexDigit\
    \ == 'A' || hexDigit == 'B' || hexDigit == 'C' || hexDigit == 'D' || hexDigit\
    \ == 'E' || hexDigit == 'F'){\n            primes.push(hexDigit);\n        }\n\
    \    }\n    prime_counter = prime_counter - 1;\n    for(let i = 0; i < primes.length;\
    \ i++){\n        if(primes[i] != hex.charAt(prime_counter)){\n            prime_counter++;\n\
    \        }\n    }\n    return prime_counter;\n}\n", "    let hex = num.toString().replace(/[^A-F0-9]/g,\"\
    \");\n    let hexLength = hex.length;\n    let hexDigits = hexLength/2;\n    let\
    \ hexDigitPrimes = [];\n    let hexDigitPrimeCount = 0;\n    for(let i=0;i<hexDigits;i++){\n\
    \        let hexDigit = hex.substr(i*2,2);\n        let hexDigitInt = parseInt(hexDigit,16);\n\
    \        if(hexDigitPrimes.includes(hexDigitInt)){\n            hexDigitPrimeCount++;\n\
    \        }\n        hexDigitPrimes.push(hexDigitInt);\n    }\n    return hexDigitPrimeCount;\n\
    }\n", "    let hex = num.toString().split('');\n    let primes = [];\n    let\
    \ prime_count = 0;\n    let prime_digits = [];\n    for(let i = 0; i < hex.length;\
    \ i++){\n        if(hex[i].match(/[A-F]/)){\n            prime_digits.push(hex[i]);\n\
    \        }\n    }\n    for(let i = 0; i < prime_digits.length; i++){\n       \
    \ primes.push(parseInt(prime_digits[i]));\n    }\n    for(let i = 0; i < primes.length;\
    \ i++){\n        for(let j = i + 1; j < primes.length; j++){\n            if(primes[i]\
    \ * primes[j] === hex.length){\n                prime_count++;\n            }\n\
    \        }\n    }\n    return prime_count;\n}\n", "    let hex = num.toString().split('');\n\
    \    let hex_res = hex.map(function(x){\n        return x.charCodeAt(0) - 48;\n\
    \    });\n    let hex_res_sum = hex_res.reduce(function(a,b){\n        return\
    \ a + b;\n    });\n    let hex_res_prime = hex_res.filter(function(x){\n     \
    \   return x % 2 === 0;\n    });\n    let hex_res_prime_sum = hex_res_prime.reduce(function(a,b){\n\
    \        return a + b;\n    });\n    let hex_res_prime_sum = hex_res_prime_sum\
    \ === hex_res_sum ? hex_res_prime : hex_res_prime_sum;\n    let hex_res_prime_sum_rev\
    \ = hex_res_prime_sum.reduce(function(a,b){\n        return b + a;\n    });\n\
    \    let hex_res_prime_sum_rev_prime = hex_res_prime_sum_rev.reduce(function(a,b){\n\
    \        return b + a;\n    });\n    let hex_res_prime_sum_rev_prime_prime = hex_res_prime_sum_rev_prime.reduce(function(a,b){\n\
    \        return b + a;\n    });\n    let hex_res_prime_sum_rev_prime_prime_prime\
    \ = hex_res_prime_sum_rev_prime_prime.reduce(function(a,b){\n        return b\
    \ + a;\n    });\n    let hex_res_prime_sum_rev_prime_prime_prime_prime = hex_res_prime_sum_rev_prime_prime_prime.reduce(function(a,b){\n\
    \        return b + a;\n    });\n    let hex_res_prime_sum_rev_prime_prime_prime_prime_prime\
    \ = hex_res_prime_sum_rev_prime_prime_prime_prime.reduce(function(a,b){\n    \
    \    return b + a;\n    });\n    let hex_res_prime_sum_rev_prime_prime_prime_prime_prime_prime\
    \ = hex_res_prime_sum_rev_prime_prime_prime_prime_prime_prime.reduce(function(a,b){\n\
    \        return b + a;\n    });\n    let hex_res_prime_sum_rev_prime_prime_prime_prime_prime_prime_prime\
    \ = hex_res_prime_sum_rev_prime_prime_prime_prime_prime_prime_prime.reduce(function(a,b){\n\
    \        return b + a;\n    });\n    let hex_res_prime_sum_rev_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = hex_res_prime_sum_rev_prime_prime_prime_prime_", "  var hex = num.toString().split('');\n\
    \  var hex_reverse = hex.reverse().join('');\n  var hex_reverse_reverse = hex_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse = hex_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse = hex_reverse_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse_reverse = hex_reverse_reverse_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse_reverse_reverse = hex_reverse_reverse_reverse_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse = hex_reverse_reverse_reverse_reverse_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse = hex_reverse_reverse_reverse_reverse_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse = hex_reverse_reverse_reverse_reverse_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse.reverse().join('');\n\
    \  var hex_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse",
  "    let hex = num.toString().replace(/[^0-9A-F]/g,\"\");\n    let hex = hex.toUpperCase();\n\
    \    let hex = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex =\
    \ hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\"\
    );\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\");\n    let hex\
    \ = hex.join(\"\");\n    let hex = hex.split(\"\");\n    let hex = hex.join(\"\
    \");\n    let hex = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex\
    \ = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\
    \");\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\");\n    let hex\
    \ = hex.join(\"\");\n    let hex = hex.split(\"\");\n    let hex = hex.join(\"\
    \");\n    let hex = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex\
    \ = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\
    \");\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\");\n    let hex\
    \ = hex.join(\"\");\n    let hex = hex.split(\"\");\n    let hex = hex.join(\"\
    \");\n    let hex = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex\
    \ = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\
    \");\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\");\n    let hex\
    \ = hex.join(\"\");\n    let hex = hex.split(\"\");\n    let hex = hex.join(\"\
    \");\n    let hex = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex\
    \ = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\
    \");\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\");\n    let hex\
    \ = hex.join(\"\");\n    let hex = hex.split(\"\");\n    let hex = hex.join(\"\
    \");\n    let hex = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex\
    \ = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\
    \");\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\");\n    let hex\
    \ = hex.join(\"\");\n    let hex = hex.split(\"\");\n    let hex = hex.join(\"\
    \");\n    let hex = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex\
    \ = hex.split(\"\");\n    let hex = hex.join(\"\");\n    let hex = hex.split(\"\
    \");\n    let ", "    let hex = num.toString().replace(/[^A-F0-9]/g,\"\");\n \
    \   let hexLength = hex.length;\n    let hexDigits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\n\
    \    let primes = [];\n    let primesLength = 0;\n    let primesLength2 = [];\n\
    \    let primesLength3 = [];\n    let primesLength4 = [];\n    let primesLength5\
    \ = [];\n    let primesLength6 = [];\n    let primesLength7 = [];\n    let primesLength8\
    \ = [];\n    let primesLength9 = [];\n    let primesLength10 = [];\n    let primesLength11\
    \ = [];\n    let primesLength12 = [];\n    let primesLength13 = [];\n    let primesLength14\
    \ = [];\n    let primesLength15 = [];\n    let primesLength16 = [];\n    let primesLength17\
    \ = [];\n    let primesLength18 = [];\n    let primesLength19 = [];\n    let primesLength20\
    \ = [];\n    let primesLength", "    let hex = num.replace(/[^0-9A-Fa-f]/g,\"\"\
    );\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n    let hexDigitCount3\
    \ = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n    let hexDigitCount6\
    \ = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n    let hexDigitCount9\
    \ = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n    let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n    let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n    let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n    let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n    let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n    let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n    let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n    let ", "    var\
    \ hex = num.toString().toUpperCase();\n    var primes = [];\n    var prime_count\
    \ = 0;\n    var prime_digits = [];\n    var prime_digit_count = [];\n    for(var\
    \ i=0;i<hex.length;i++){\n        var char = hex.charAt(i);\n        if(char==\"\
    A\" || char==\"B\" || char==\"C\" || char==\"D\" || char==\"E\" || char==\"F\"\
    ){\n            prime_digits.push(char);\n            prime_digit_count.push(1);\n\
    \        }\n        else{\n            prime_digits.push(char);\n            prime_digit_count.push(0);\n\
    \        }\n    }\n    for(var i=0;i<prime_digits.length;i++){\n        primes.push(prime_digits[i]);\n\
    \        prime_count += prime_digit_count[i];\n    }\n    for(var i=0;i<prime_digits.length;i++){\n\
    \        prime_digit_count[i] = prime_digit_count[i]*primes[i];\n    }\n    var\
    \ prime_digit_sum = 0;\n    for(var i=0;i<prime_digit_count.length;i++){\n   \
    \     prime_digit_sum += prime_digit_count[i];\n    }\n    var prime_digit_average\
    \ = prime_digit_sum/prime_count;\n    var prime_digit_sum2 = 0;\n    for(var i=0;i<prime_digit_count.length;i++){\n\
    \        prime_digit_sum2 += prime_digit_count[i]*primes[i];\n    }\n    var prime_digit_average2\
    \ = prime_digit_sum2/prime_count;\n    var prime_digit_sum3 = 0;\n    for(var\
    \ i=0;i<prime_digit_count.length;i++){\n        prime_digit_sum3 += prime_digit_count[i]*primes[i];\n\
    \    }\n    var prime_digit_average3 = prime_digit_sum3/prime_count;\n    var\
    \ prime_digit_sum4 = 0;\n    for(var i=0;i<prime_digit_count.length;i++){\n  \
    \      prime_digit_sum4 += prime_digit_count[i]*primes[i];\n    }\n    var prime_digit_average4\
    \ = prime_digit_sum4/prime_count;\n    var prime_digit_sum5 = 0;\n    for(var\
    \ i=0;i<prime_digit_count.length;i++){\n        prime_digit_sum5 += prime_digit_count[i]*primes[i];\n\
    \    }\n    var prime_digit_average5 = prime_digit_sum5/prime_count;\n    var\
    \ prime_digit_sum6 = 0;\n    for(var i=0;i<prime_digit_count.length;i++){\n  \
    \      prime_digit_sum6 += prime_digit_count[i]*primes[i];\n    }\n    var prime_digit_average6\
    \ = prime_digit_sum6/prime_count;\n    var prime_digit_sum7 = 0;\n    for(var\
    \ i=0;i<prime_digit_count.length;i++", "    var hex = num.toString().toUpperCase();\n\
    \    var hexDigits = [\n        \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"\
    ,\"8\",\"9\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"\n    ];\n    var hexDigitCount\
    \ = hexDigits.length;\n    var hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    var hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    var hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    var hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    var hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    var hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    var hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    var hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    var hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    var hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    var hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    var hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    var hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    var hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    var hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    var hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    var hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    var hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    var hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    var hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    var hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    var hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    var hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    var hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    var hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    var hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    var hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    var hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    var hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    var hexDigitCount3",
  "    let hex = num.toString().toUpperCase();\n    let hexDigits = [...hex];\n  \
    \  let primes = [];\n    let primeDigits = [];\n    let primeCount = 0;\n    let\
    \ primeCountDigits = [];\n    let primeCountDigitCount = 0;\n    let primeCountDigitCountDigits\
    \ = [];\n    let primeCountDigitCountDigitCount = 0;\n    let primeCountDigitCountDigitCountDigits\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCount = 0;\n    let primeCountDigitCountDigitCountDigitCountDigits\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCount = 0;\n   \
    \ let primeCountDigitCountDigitCountDigitCountDigitCountDigits = [];\n    let\
    \ primeCountDigitCountDigitCountDigitCountDigitCountDigitCount = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigits\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigits\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCounts\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCounts\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCounts\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCounts\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCounts\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCounts\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCount", "    let hex = num.toString().split('');\n    let\
    \ hexLength = hex.length;\n    let hexKey = 0;\n    let hexKeyLength = 2;\n  \
    \  let hexKeyString = \"\";\n    for(let i = 0; i < hexLength; i++){\n       \
    \ if(hex[i] == \"A\" || hex[i] == \"B\" || hex[i] == \"C\" || hex[i] == \"D\"\
    \ || hex[i] == \"E\" || hex[i] == \"F\"){\n            hexKey++;\n        }\n\
    \    }\n    for(let i = 0; i < hexLength; i++){\n        if(hex[i] == \"2\" ||\
    \ hex[i] == \"3\" || hex[i] == \"5\" || hex[i] == \"7\" || hex[i] == \"B\" ||\
    \ hex[i] == \"D\" || hex[i] == \"E\" || hex[i] == \"F\"){\n            hexKeyLength++;\n\
    \        }\n    }\n    for(let i = 0; i < hexLength; i++){\n        if(hex[i]\
    \ == \"A\" || hex[i] == \"B\" || hex[i] == \"C\" || hex[i] == \"D\" || hex[i]\
    \ == \"E\" || hex[i] == \"F\"){\n            hexKeyString += hex[i];\n       \
    \ }\n    }\n    return hexKey;\n}\n", "    let hex = num.replace(/[^0-9A-Fa-f]/g,\"\
    \");\n    let hexDigits = hex.toUpperCase().split(\"\");\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n",
  "    let hex = num.toString().split('');\n    let primes = [];\n    let prime_digits\
    \ = [];\n    let prime_digits_len = [];\n    let prime_digits_sum = [];\n    let\
    \ prime_digits_sum_len = [];\n    let prime_digits_sum_reverse = [];\n    let\
    \ prime_digits_sum_reverse_len = [];\n    let prime_digits_sum_reverse_reverse\
    \ = [];\n    let prime_digits_sum_reverse_reverse_len = [];\n    let prime_digits_sum_reverse_reverse_reverse\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_len = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse_len = [];\n\
    \    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse = [];\n    let\
    \ prime_digits_sum_reverse_reverse_reverse_reverse_reverse_len = [];\n    let\
    \ prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse = [];\n   \
    \ let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_len = [];\n\
    \    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_reverse_len\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_reverse_len\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_reverse_len\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_len\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_len\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = [];\n    let prime_digits_sum_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_len\
    \ = [];\n    let prime", "  let hex = num.toString().replace(/[^A-F0-9]/g,\"\"\
    );\n  let hex2 = hex.replace(/[^A-F0-9]/g,\"\");\n  let hex3 = hex2.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex4 = hex3.replace(/[^A-F0-9]/g,\"\");\n  let hex5 = hex4.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex6 = hex5.replace(/[^A-F0-9]/g,\"\");\n  let hex7 = hex6.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex8 = hex7.replace(/[^A-F0-9]/g,\"\");\n  let hex9 = hex8.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex10 = hex9.replace(/[^A-F0-9]/g,\"\");\n  let hex11 = hex10.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex12 = hex11.replace(/[^A-F0-9]/g,\"\");\n  let hex13 = hex12.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex14 = hex13.replace(/[^A-F0-9]/g,\"\");\n  let hex15 = hex14.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex16 = hex15.replace(/[^A-F0-9]/g,\"\");\n  let hex17 = hex16.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex18 = hex17.replace(/[^A-F0-9]/g,\"\");\n  let hex19 = hex18.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex20 = hex19.replace(/[^A-F0-9]/g,\"\");\n  let hex21 = hex20.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex22 = hex21.replace(/[^A-F0-9]/g,\"\");\n  let hex23 = hex22.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex24 = hex23.replace(/[^A-F0-9]/g,\"\");\n  let hex25 = hex24.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex26 = hex25.replace(/[^A-F0-9]/g,\"\");\n  let hex27 = hex26.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex28 = hex27.replace(/[^A-F0-9]/g,\"\");\n  let hex29 = hex28.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex30 = hex29.replace(/[^A-F0-9]/g,\"\");\n  let hex31 = hex30.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex32 = hex31.replace(/[^A-F0-9]/g,\"\");\n  let hex33 = hex32.replace(/[^A-F0-9]/g,\"\
    \");\n  let hex34 = hex33.replace(/[^A-F0-9]/g,\"\");\n  let hex35 = hex34", " \
    \   let hex = num.toString().toUpperCase();\n    let count = 1;\n    let prime_digits\
    \ = 2;\n    let prime_digits_counter = 0;\n    let prime_digits_counter2 = 0;\n\
    \    let prime_digits_counter3 = 0;\n    let prime_digits_counter4 = 0;\n    let\
    \ prime_digits_counter5 = 0;\n    let prime_digits_counter6 = 0;\n    let prime_digits_counter7\
    \ = 0;\n    let prime_digits_counter8 = 0;\n    let prime_digits_counter9 = 0;\n\
    \    let prime_digits_counter10 = 0;\n    let prime_digits_counter11 = 0;\n  \
    \  let prime_digits_counter12 = 0;\n    let prime_digits_counter13 = 0;\n    let\
    \ prime_digits_counter14 = 0;\n    let prime_digits_counter15 = 0;\n    let prime_digits_counter16\
    \ = 0;\n    let prime_digits_counter17 = 0;\n    let prime_digits_counter18 =\
    \ 0;\n    let prime_digits_counter19 = 0;\n    let prime_digits_counter20 = 0;\n\
    \    let prime_digits_counter21 = 0;\n    let prime_digits_counter22 = 0;\n  \
    \  let prime_digits_counter23 = 0;\n    let prime_digits_counter24 = 0;\n    let\
    \ prime_digits_counter25 = 0;\n    let prime_digits_counter26 = 0;\n    let prime_digits_counter27\
    \ = 0;\n    let prime_digits_counter28 = 0;\n    let prime_digits_counter29 =\
    \ 0;\n    let prime_digits_counter30 = 0;\n    let prime_digits_counter31 = 0;\n\
    \    let prime_digits_counter32 = 0;\n    let prime_digits_counter33 = 0;\n  \
    \  let prime_digits_counter34 = 0;\n    let prime_digits_counter35 = 0;\n    let\
    \ prime_digits_counter36 = 0;\n    let prime_digits_counter37 = 0;\n    let prime_digits_counter38\
    \ = 0;\n    let prime_digits_counter39 = 0;\n    let prime_digits_counter40 =\
    \ 0;\n    let prime_digits_counter41 = 0;\n    let prime_digits_counter42 = 0;\n\
    \    let prime_digits_counter43 = 0;\n    let prime_digits_counter44 = 0;\n  \
    \  let prime_digits_counter45 = 0;\n    let prime_digits_counter46 = 0;\n    let\
    \ prime_digits_counter47 = 0;\n    let prime_digits_counter48 = 0;\n    let prime_digits_counter49\
    \ = 0;\n    let prime_digits_counter50 = 0;\n    let prime_digits_counter51 =\
    \ 0;\n    let prime_digits_counter52 = 0;\n    let prime_digits_counter53 = 0;\n\
    \    let prime_digits_counter54 = 0;\n    let prime_digits_counter55 = 0;\n  \
    \  let ", "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16));\n\
    \    let primes = [];\n    let prime_count = 0;\n    let prime_digits = [];\n\
    \    let prime_digit_count = 0;\n    let prime_digit_sum = 0;\n    let prime_digit_sum2\
    \ = 0;\n    let prime_digit_sum3 = 0;\n    let prime_digit_sum4 = 0;\n    let\
    \ prime_digit_sum5 = 0;\n    let prime_digit_sum6 = 0;\n    let prime_digit_sum7\
    \ = 0;\n    let prime_digit_sum8 = 0;\n    let prime_digit_sum9 = 0;\n    let\
    \ prime_digit_sum10 = 0;\n    let prime_digit_sum11 = 0;\n    let prime_digit_sum12\
    \ = 0;\n    let prime_digit_sum13 = 0;\n    let prime_digit_sum14 = 0;\n    let\
    \ prime_digit_sum15 = 0;\n    let prime_digit_sum16 = 0;\n    let prime_digit_sum17\
    \ = 0;\n    let prime_digit_sum18 = 0;\n    let prime_digit_sum19 = 0;\n    let\
    \ prime_digit_sum20 = 0;\n    let prime_digit_sum21 = 0;\n    let prime_digit_sum22\
    \ = 0;\n    let prime_digit_sum23 = 0;\n    let prime_digit_sum24 = 0;\n    let\
    \ prime_digit_sum25 = 0;\n    let prime_digit_sum26 = 0;\n    let prime_digit_sum27\
    \ = 0;\n    let prime_digit_sum28 = 0;\n    let prime_digit_sum29 = 0;\n    let\
    \ prime_digit_sum30 = 0;\n    let prime_digit_sum31 = 0;\n    let prime_digit_sum32\
    \ = 0;\n    let prime_digit_sum33 = 0;\n    let prime_digit_sum34 = 0;\n    let\
    \ prime_digit_sum35 = 0;\n    let prime_digit_sum36 = 0;\n    let prime_digit_sum37\
    \ = 0;\n    let prime_digit_sum38 = 0;\n    let prime_digit_sum39 = 0;\n    let\
    \ prime_digit_sum40 = 0;\n    let prime_digit_sum41 = 0;\n    let prime_digit_sum42\
    \ = 0;\n    let prime_digit_sum43 = 0;\n    let prime_digit_sum44 = 0;\n    let\
    \ prime_digit_sum45 = 0;\n    let prime_digit_sum46 = 0;\n    let prime_digit_sum47\
    \ = 0;\n    let prime_digit_sum48 = 0;\n    let prime_digit_sum49 = 0;\n    let\
    \ prime_digit_sum50 = 0;\n    let prime_digit_sum51 = 0;\n    let prime_digit_sum52\
    \ = 0;\n    let prime_digit_sum53 = 0;\n    let prime_digit_sum54 = 0;\n    let\
    \ prime_digit_sum55 = 0;\n    let prime_digit_sum56 = 0;\n    let prime_digit_sum57\
    \ = 0;\n    let prime_digit_sum58 = 0;\n    let prime_digit_sum59 = 0;\n    let\
    \ prime_digit_sum", "    let hex = num.toString().toUpperCase();\n    let count\
    \ = 0;\n    for(let i = 0; i < hex.length; i++){\n        if(hex.charAt(i) ==\
    \ 'A' || hex.charAt(i) == 'B' || hex.charAt(i) == 'C' || hex.charAt(i) == 'D'\
    \ || hex.charAt(i) == 'E' || hex.charAt(i) == 'F'){\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n", "  let hex = num.split(\"\").map(x =>\
    \ x.charCodeAt(0).toString(16)).join(\"\");\n  let hex_rev = hex.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split = hex_rev.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\
    \");\n  let hex_rev_split_reverse = hex_rev_split.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse2 = hex_rev_split_reverse.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse3 = hex_rev_split_reverse2.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse4 = hex_rev_split_reverse3.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse5 = hex_rev_split_reverse4.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse6 = hex_rev_split_reverse5.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse7 = hex_rev_split_reverse6.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse8 = hex_rev_split_reverse7.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse9 = hex_rev_split_reverse8.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse10 = hex_rev_split_reverse9.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse11 = hex_rev_split_reverse10.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse12 = hex_rev_split_reverse11.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse13 = hex_rev_split_reverse12.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse14 = hex_rev_split_reverse13.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse15 = hex_rev_split_reverse14.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse16 = hex_rev_split_reverse15.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse17 = hex_rev_split_reverse16.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse18 = hex_rev_split_reverse17.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse19 = hex_rev_split_reverse18.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse20 = hex_rev_split_reverse19.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_reverse21 = hex_rev_split_reverse20.split(\"\").reverse().join(\"\
    \");\n  let hex_rev_split_", "  let hex = num.toString().split(\"\").map(x =>\
    \ x.charCodeAt(0).toString(16)).join(\",\");\n  let primes = hex.split(\",\").map(x\
    \ => parseInt(x));\n  let primes_count = primes.filter(x => x > 1 && x < hex.length).length;\n\
    \  return primes_count;\n}\n", "    let hex = num.toString().split(\"\").map(x\
    \ => x.charCodeAt(0).toString(16)).join('');\n    let primes = hexToPrimes(hex);\n\
    \    let prime_digits = primes.map(x => x.toString().length);\n    let prime_digits_sum\
    \ = prime_digits.reduce((a, b) => a + b, 0);\n    return prime_digits_sum;\n}\n",
  "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16));\n    let\
    \ hex2 = hex.join(\"\");\n    let hex3 = hex2.split(\"\").map(x => x.split(\"\"\
    ).map(y => y.charCodeAt(0).toString(16)).join());\n    let hex4 = hex3.join(\"\
    \");\n    let hex5 = hex4.split(\"\").map(x => x.split(\"\").map(y => y.charCodeAt(0).toString(16)).join());\n\
    \    let hex6 = hex5.join(\"\");\n    let hex7 = hex6.split(\"\").map(x => x.split(\"\
    \").map(y => y.charCodeAt(0).toString(16)).join());\n    let hex8 = hex7.join(\"\
    \");\n    let hex9 = hex8.split(\"\").map(x => x.split(\"\").map(y => y.charCodeAt(0).toString(16)).join());\n\
    \    let hex10 = hex9.join(\"\");\n    let hex11 = hex10.split(\"\").map(x =>\
    \ x.split(\"\").map(y => y.charCodeAt(0).toString(16)).join());\n    let hex12\
    \ = hex11.join(\"\");\n    let hex13 = hex12.split(\"\").map(x => x.split(\"\"\
    ).map(y => y.charCodeAt(0).toString(16)).join());\n    let hex14 = hex13.join(\"\
    \");\n    let hex15 = hex14.split(\"\").map(x => x.split(\"\").map(y => y.charCodeAt(0).toString(16)).join());\n\
    \    let hex16 = hex15.join(\"\");\n    let hex17 = hex16.split(\"\").map(x =>\
    \ x.split(\"\").map(y => y.charCodeAt(0).toString(16)).join());\n    let hex18\
    \ = hex17.join(\"\");\n    let hex19 = hex18.split(\"\").map(x => x.split(\"\"\
    ).map(y => y.charCodeAt(0).toString(16)).join());\n    let hex20 = hex19.join(\"\
    \");\n    let hex21 = hex20.split(\"\").map(x => x.split(\"\").map(y => y.charCodeAt(0).toString(16)).join());\n\
    \    let hex22 = hex21.join(\"\");\n    let hex23 = hex22.split(\"\").map(x =>\
    \ x.split(\"\").map(y => y.charCodeAt(0).toString(16)).join());\n    let hex24\
    \ = hex23.join(\"\");\n    let hex25 = hex24.split(\"\").map(x => x.split(\"\"\
    ).map(y => y.charCodeAt(0).toString(16)).join());\n    let hex26 = hex25.join(\"\
    \");\n    let hex27 = hex26.split(\"\").map(x => x.split(\"\").map(y => y.charCodeAt(0).toString(16)).join());\n\
    \    let hex28 = hex27.join(\"\");\n    let hex", "    let hex = num.toString().split('');\n\
    \    let count = 0;\n    for(let i = 0; i < hex.length; i++){\n        if(hex[i]\
    \ === 'A' || hex[i] === 'B' || hex[i] === 'C' || hex[i] === 'D' || hex[i] ===\
    \ 'E' || hex[i] === 'F'){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n", "  var hex = num.toString().replace(/[^0-9A-F]/g,\"\");\n  var\
    \ hex2 = hex.replace(/[^0-9A-F]/g,\"\");\n  var hex3 = hex2.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex4 = hex3.replace(/[^0-9A-F]/g,\"\");\n  var hex5 = hex4.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex6 = hex5.replace(/[^0-9A-F]/g,\"\");\n  var hex7 = hex6.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex8 = hex7.replace(/[^0-9A-F]/g,\"\");\n  var hex9 = hex8.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex10 = hex9.replace(/[^0-9A-F]/g,\"\");\n  var hex11 = hex10.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex12 = hex11.replace(/[^0-9A-F]/g,\"\");\n  var hex13 = hex12.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex14 = hex13.replace(/[^0-9A-F]/g,\"\");\n  var hex15 = hex14.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex16 = hex15.replace(/[^0-9A-F]/g,\"\");\n  var hex17 = hex16.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex18 = hex17.replace(/[^0-9A-F]/g,\"\");\n  var hex19 = hex18.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex20 = hex19.replace(/[^0-9A-F]/g,\"\");\n  var hex21 = hex20.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex22 = hex21.replace(/[^0-9A-F]/g,\"\");\n  var hex23 = hex22.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex24 = hex23.replace(/[^0-9A-F]/g,\"\");\n  var hex25 = hex24.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex26 = hex25.replace(/[^0-9A-F]/g,\"\");\n  var hex27 = hex26.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex28 = hex27.replace(/[^0-9A-F]/g,\"\");\n  var hex29 = hex28.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex30 = hex29.replace(/[^0-9A-F]/g,\"\");\n  var hex31 = hex30.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex32 = hex31.replace(/[^0-9A-F]/g,\"\");\n  var hex33 = hex32.replace(/[^0-9A-F]/g,\"\
    \");\n  var hex34 = hex33.replace(/[^0-9A-F]/g,\"\");\n  var hex35 = hex34", " \
    \   let hex = num.toString().replace(/[^A-F0-9]/g,\"\");\n    let hexDigits =\
    \ hex.split(\"\");\n    let primeDigits = [];\n    let primeCount = 0;\n    for(let\
    \ i = 0; i < hexDigits.length; i++){\n        if(hexDigits[i] === \"A\" || hexDigits[i]\
    \ === \"B\" || hexDigits[i] === \"C\" || hexDigits[i] === \"D\" || hexDigits[i]\
    \ === \"E\" || hexDigits[i] === \"F\"){\n            primeDigits.push(hexDigits[i]);\n\
    \        }\n        else if(hexDigits[i] === \"2\"){\n            primeDigits.push(hexDigits[i]);\n\
    \            primeCount++;\n        }\n        else if(hexDigits[i] === \"3\"\
    ){\n            primeDigits.push(hexDigits[i]);\n            primeCount++;\n \
    \       }\n        else if(hexDigits[i] === \"5\"){\n            primeDigits.push(hexDigits[i]);\n\
    \            primeCount++;\n        }\n        else if(hexDigits[i] === \"7\"\
    ){\n            primeDigits.push(hexDigits[i]);\n            primeCount++;\n \
    \       }\n        else if(hexDigits[i] === \"11\"){\n            primeDigits.push(hexDigits[i]);\n\
    \            primeCount++;\n        }\n        else if(hexDigits[i] === \"13\"\
    ){\n            primeDigits.push(hexDigits[i]);\n            primeCount++;\n \
    \       }\n        else if(hexDigits[i] === \"17\"){\n            primeDigits.push(hexDigits[i]);\n\
    \            primeCount++;\n        }\n        else if(hexDigits[i] === \"19\"\
    ){\n            primeDigits.push(hexDigits[i]);\n            primeCount++;\n \
    \       }\n        else if(hexDigits[i] === \"23\"){\n            primeDigits.push(hexDigits[i]);\n\
    \            primeCount++;\n        }\n        else if(hexDigits[i] === \"29\"\
    ){\n            primeDigits.push(hexDigits[i]);\n            primeCount++;\n \
    \       }\n        else if(hexDigits[i] === \"31\"){\n            primeDigits.push(hexDigits[i]);\n\
    \            primeCount++;\n        }\n        else if(hexDigits[i] === \"37\"\
    ){\n            primeDigits.push(hexDigits[i]);\n            primeCount++;\n \
    \       }\n        else if(hexDigits[i] === \"41\"){\n            primeDigits.push(hexDigits[i]);\n\
    \            primeCount++;\n        }\n        else if(hexDigits[i] === \"43\"\
    ){\n            primeDigits.push(hexDigits[i]);\n            primeCount++;\n \
    \       }\n        else if(hexDigits[i] === \"47\"){\n            primeDigits.push(hexDigits[i]);\n\
    \            primeCount++;\n        }\n        else if(hexDigits[i] === \"53\"\
    ){\n            primeDigits.push(hexDigits[i]);\n            primeCount++;\n \
    \       }\n        else if(hexDigits[i] === \"59\"){\n            primeDigits.push(hexDigits[i]);\n\
    \            primeCount", "  let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join('');\n\
    \  let primes = hex_key.primes;\n  let primesCount = hex_key.primesCount;\n  let\
    \ primesCount2 = hex_key.primesCount2;\n  let primesCount3 = hex_key.primesCount3;\n\
    \  let primesCount4 = hex_key.primesCount4;\n  let primesCount5 = hex_key.primesCount5;\n\
    \  let primesCount6 = hex_key.primesCount6;\n  let primesCount7 = hex_key.primesCount7;\n\
    \  let primesCount8 = hex_key.primesCount8;\n  let primesCount9 = hex_key.primesCount9;\n\
    \  let primesCount10 = hex_key.primesCount10;\n  let primesCount11 = hex_key.primesCount11;\n\
    \  let primesCount12 = hex_key.primesCount12;\n  let primesCount13 = hex_key.primesCount13;\n\
    \  let primesCount14 = hex_key.primesCount14;\n  let primesCount15 = hex_key.primesCount15;\n\
    \  let primesCount16 = hex_key.primesCount16;\n  let primesCount17 = hex_key.primesCount17;\n\
    \  let primesCount18 = hex_key.primesCount18;\n  let primesCount19 = hex_key.primesCount19;\n\
    \  let primesCount20 = hex_key.primesCount20;\n  let primesCount21 = hex_key.primesCount21;\n\
    \  let primesCount22 = hex_key.primesCount22;\n  let primesCount23 = hex_key.primesCount23;\n\
    \  let primesCount24 = hex_key.primesCount24;\n  let primesCount25 = hex_key.primesCount25;\n\
    \  let primesCount26 = hex_key.primesCount26;\n  let primesCount27 = hex_key.primesCount27;\n\
    \  let primesCount28 = hex_key.primesCount28;\n  let primesCount29 = hex_key.primesCount29;\n\
    \  let primesCount30 = hex_key.primesCount30;\n  let primesCount31 = hex_key.primesCount31;\n\
    \  let primesCount32 = hex_key.primesCount32;\n  let primesCount33 = hex_key.primesCount33;\n\
    \  let primesCount34 = hex_key.primesCount34;\n  let primes", "  let hex = num.toString().toUpperCase();\n\
    \  let count = 0;\n  for(let i = 0; i < hex.length; i++){\n    if(hex.charCodeAt(i)\
    \ >= 48 && hex.charCodeAt(i) <= 57){\n      count++;\n    }\n  }\n  return count;\n\
    }\n", "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\
    \");\n    let hexDigits = [...hex];\n    let primes = [];\n    let primeDigits\
    \ = [];\n    let primeCount = 0;\n    let primeCountDigits = [];\n    let primeCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigits = [];\n    let primeCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigits = [];\n    let primeCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigits = [];\n    let\
    \ primeCountDigitCountDigitCountDigitCountDigitCount = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigits\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigits\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigits\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigits\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigits\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigits\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigits\
    \ = [];\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCount\
    \ = 0;\n    let primeCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigitCountDigit",
  "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join();\n\
    \    let primes = hex.match(/[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97]/g);\n\
    \    let primesCount = primes.length;\n    let primesSum = 0;\n    for(let i =\
    \ 0; i < primesCount; i++){\n        primesSum += parseInt(primes[i]);\n    }\n\
    \    return primesSum;\n}\n</code>\n<|/ a tags=javascript,algorithm |>\n<| c |>\n\
    Thanks for your answer. Your code works perfectly for small numbers, but for bigger\
    \ numbers it returns wrong results. For example, for number \"2020\" it returns\
    \ \"2\" instead of \"4\".\n<|/ c |>\n<| c |>\nI added a note to the answer. Hope\
    \ it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works perfectly\
    \ for small numbers, but for bigger numbers it returns wrong results. For example,\
    \ for number \"2020\" it returns \"2\" instead of \"4\".\n<|/ c |>\n<| c |>\n\
    I added a note to the answer. Hope it helps.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "    let hex = num.toString().split('');\n    let hex_rev = [];\n    for(let i =\
    \ 0; i < hex.length; i++){\n        hex_rev.push(hex[i].charCodeAt(0) - 64);\n\
    \    }\n    let prime_count = 0;\n    for(let i = 0; i < hex_rev.length; i++){\n\
    \        if(hex_rev[i] % 2 == 0){\n            prime_count++;\n        }\n   \
    \ }\n    return prime_count;\n}", "    let hex = num.toString().replace(/[^0-9A-F]/g,'');\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimes = [];\n    let hexDigitPrimeCount = 0;\n    let hexDigitPrimePrimes\
    \ = [];\n    let hexDigitPrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = 0;\n    let\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0;\n   \
    \ let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n    let\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPri", "  var hex = num.toString().toUpperCase();\n  var\
    \ hex_rev = hex.split(\"\").reverse().join(\"\");\n  var hex_rev_rev = hex_rev.split(\"\
    \").reverse().join(\"\");\n  var hex_rev_rev_rev = hex_rev_rev.split(\"\").reverse().join(\"\
    \");\n  var hex_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev.split(\"\").reverse().join(\"\
    \");\n  var hex_rev_rev_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev_rev.split(\"\
    \").reverse().join(\"\");\n  var hex_rev_rev_rev_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev_rev_rev.split(\"\
    \").reverse().join(\"\");\n  var hex_rev_rev_rev_rev_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev_rev_rev_v.split(\"\
    \").reverse().join(\"\");\n  var hex_rev_rev_rev_rev_rev_rev_rev_rev_rev = hex_rev_rev_rev_rev_rev_rev_v.split(\"\
    \").reverse().join(\"\");\n  var hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_v = hex_rev_rev_rev_rev_rev_rev_v.split(\"\
    \").reverse().join(\"\");\n  var hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_v\
    \ = hex_rev_rev_rev_rev_rev_rev_v.split(\"\").reverse().join(\"\");\n  var hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_v\
    \ = hex_rev_rev_rev_rev_rev_v.split(\"\").reverse().join(\"\");\n  var hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_v\
    \ = hex_rev_rev_rev_rev_v.split(\"\").reverse().join(\"\");\n  var hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_v\
    \ = hex_rev_rev_rev_rev_v.split(\"\").reverse().join(\"\");\n  var hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_v\
    \ = hex_rev_rev_rev_v.split(\"\").reverse().join(\"\");\n  var hex_rev_rev_rev_re",
  "    let hex = num.toString().split('');\n    let count = 0;\n    for(let i = 0;\
    \ i < hex.length; i++){\n        if(hex[i] === 'A' || hex[i] === 'B' || hex[i]\
    \ === 'C' || hex[i] === 'D' || hex[i] === 'E' || hex[i] === 'F'){\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n", "    let hex = num.split(\"\
    \").map(x => x.charCodeAt(0).toString(16));\n    let primes = [];\n    for(let\
    \ i = 0; i < hex.length; i++){\n        let hexDigit = hex[i];\n        if(hexDigit\
    \ == \"A\" || hexDigit == \"B\" || hexDigit == \"C\" || hexDigit == \"D\" || hexDigit\
    \ == \"E\" || hexDigit == \"F\"){\n            primes.push(hexDigit);\n      \
    \  }\n    }\n    let primesCount = primes.length;\n    let hexDigitCount = hex.length;\n\
    \    let primesSum = 0;\n    for(let i = 0; i < primesCount; i++){\n        primesSum\
    \ += parseInt(primes[i]);\n    }\n    let hexDigitSum = 0;\n    for(let i = 0;\
    \ i < hexDigitCount; i++){\n        hexDigitSum += parseInt(hex[i]);\n    }\n\
    \    let hexDigitSum2 = hexDigitSum * hexDigitSum;\n    let hexDigitSum3 = hexDigitSum2\
    \ * hexDigitSum;\n    let hexDigitSum4 = hexDigitSum3 * hexDigitSum;\n    let\
    \ hexDigitSum5 = hexDigitSum4 * hexDigitSum;\n    let hexDigitSum6 = hexDigitSum5\
    \ * hexDigitSum;\n    let hexDigitSum7 = hexDigitSum6 * hexDigitSum;\n    let\
    \ hexDigitSum8 = hexDigitSum7 * hexDigitSum;\n    let hexDigitSum9 = hexDigitSum8\
    \ * hexDigitSum;\n    let hexDigitSum10 = hexDigitSum9 * hexDigitSum;\n    let\
    \ hexDigitSum11 = hexDigitSum10 * hexDigitSum;\n    let hexDigitSum12 = hexDigitSum11\
    \ * hexDigitSum;\n    let hexDigitSum13 = hexDigitSum12 * hexDigitSum;\n    let\
    \ hexDigitSum14 = hexDigitSum13 * hexDigitSum;\n    let hexDigitSum15 = hexDigitSum14\
    \ * hexDigitSum;\n    let hexDigitSum16 = hexDigitSum15 * hexDigitSum;\n    let\
    \ hexDigitSum17 = hexDigitSum16 * hexDigitSum;\n    let hexDigitSum18 = hexDigitSum17\
    \ * hexDigitSum;\n    let hexDigitSum19 = hexDigitSum18 * hexDigitSum;\n    let\
    \ hexDigitSum20 = hexDigitSum19 * hexDigitSum;\n    let hexDigitSum21 = hexDigitSum20\
    \ * hexDigitSum;\n    let hexDigitSum22 = hexDigitSum21 * hexDigitSum;\n    let\
    \ hexDigitSum23 = hexDigitSum22 * hexDigitSum;\n    let hexDigitSum24 = hexDigitSum23\
    \ * hexDigitSum;\n    let hexDigit", "    var hex = num.toString().toUpperCase();\n\
    \    var prime_digits = [2,3,5,7,11,13,17,19];\n    var prime_digits_count = prime_digits.length;\n\
    \    var prime_digits_sum = 0;\n    var prime_digits_product = 1;\n    var prime_digits_product2\
    \ = 1;\n    var prime_digits_product3 = 1;\n    var prime_digits_product4 = 0;\n\
    \    var prime_digits_product5 = 1;\n    var prime_digits_product6 = 1;\n    var\
    \ prime_digits_product7 = 1;\n    var prime_digits_product8 = 1;\n    var prime_digits_product9\
    \ = 1;\n    var prime_digits_product10 = 1;\n    var prime_digits_product11 =\
    \ 1;\n    var prime_digits_product12 = 1;\n    var prime_digits_product13 = 1;\n\
    \    var prime_digits_product14 = 1;\n    var prime_digits_product15 = 1;\n  \
    \  var prime_digits_product16 = 1;\n    var prime_digits_product17 = 1;\n    var\
    \ prime_digits_product18 = 1;\n    var prime_digits_product19 = 1;\n    var prime_digits_product20\
    \ = 1;\n    var prime_digits_product21 = 1;\n    var prime_digits_product22 =\
    \ 1;\n    var prime_digits_product23 = 1;\n    var prime_digits_product24 = 1;\n\
    \    var prime_digits_product25 = 1;\n    var prime_digits_product26 = 1;\n  \
    \  var prime_digits_product27 = 1;\n    var prime_digits_product28 = 1;\n    var\
    \ prime_digits_product29 = 1;\n    var prime_digits_product30 = 1;\n    var prime_digits_product31\
    \ = 1;\n    var prime_digits_product32 = 1;\n    var prime_digits_product33 =\
    \ 1;\n    var prime_digits_product34 = 1;\n    var prime_digits_product35 = 1;\n\
    \    var prime_digits_product36 = 1;\n    var prime_digits_product37 = 1;\n  \
    \  var prime_digits_product38 = 1;\n    var prime_digits_product39 = 1;\n    var\
    \ prime_digits_product40 = 1;\n    var prime_digits_product41 = 1;\n    var prime_digits_product42\
    \ = 1;\n    var prime_digits_product43 = 1;\n    var prime_digits_product44 =\
    \ 1;\n    var prime_digits_product45 = 1;\n    var prime_digits_product46 = 1;\n\
    \    var prime_digits_product47 = 1;\n    var prime_digits_product48 = 1;\n  \
    \  var prime_digits_product49 = 1;\n    var prime_digits_product50 = 1;\n    var\
    \ prime_digits_product51 = 1;\n    var prime_digits_product52 = 1;\n", "    let\
    \ hex = num.toString().split('');\n    let hex_res = hex.map(function(x){\n  \
    \      return parseInt(x, 16);\n    });\n    let prime_count = 0;\n    let prime_digits\
    \ = [];\n    let prime_digits_sum = 0;\n    let prime_digits_sum2 = 0;\n    for(let\
    \ i = 0; i < hex_res[0].length; i++){\n        let digit = hex_res[0][i];\n  \
    \      prime_digits.push(digit);\n        prime_digits_sum += digit;\n       \
    \ prime_digits_sum2 += digit*digit;\n    }\n    for(let i = 1; i < hex_res[0].length;\
    \ i++){\n        let digit = hex_res[0][i];\n        prime_digits.push(digit);\n\
    \        prime_digits_sum += digit;\n        prime_digits_sum2 += digit*digit;\n\
    \        if(prime_digits_sum2 >= prime_digits_sum){\n            prime_digits_sum2\
    \ -= prime_digits_sum;\n            prime_digits_sum += digit;\n            prime_digits_sum2\
    \ += digit*digit;\n        }\n    }\n    for(let i = 0; i < prime_digits.length;\
    \ i++){\n        if(prime_digits[i] === 2){\n            prime_count++;\n    \
    \    }\n    }\n    return prime_count;\n}\n", "  let hex = num.toString().split('');\n\
    \  let hex_rev = [];\n  for(let i=0;i<hex.length;i++){\n    hex_rev.push(hex[hex.length-i-1]);\n\
    \  }\n  let hex_rev_str = hex_rev.join('');\n  let hex_rev_str_len = hex_rev_str.length;\n\
    \  let hex_rev_str_len_half = hex_rev_str_len/2;\n  let hex_rev_str_len_half_rev\
    \ = hex_rev_str_len_half*-1;\n  let hex_rev_str_len_half_rev_str = hex_rev_str_len_half_rev.toString();\n\
    \  let hex_rev_str_len_half_rev_str_len = hex_rev_str_len_half_rev_str.length;\n\
    \  let hex_rev_str_len_half_rev_str_len_half = hex_rev_str_len_half_rev_str_len/2;\n\
    \  let hex_rev_str_len_half_rev_str_len_half_rev = hex_rev_str_len_half_rev_str_len_half*-1;\n\
    \  let hex_rev_str_len_half_rev_str_len_half_rev_str = hex_rev_str_len_half_rev_str_len_half_rev.toString();\n\
    \  let hex_rev_str_len_half_rev_str_len_half_rev_str_len = hex_rev_str_len_half_rev_str_len_half_rev_str_len/2;\n\
    \  let hex_rev_str_len_half_rev_str_len_half_rev_str_len_half = hex_rev_str_len_half_rev_str_len_half_rev_str_len_half*-1;\n\
    \  let hex_rev_str_len_half_rev_str_len_half_rev_str_len_half_rev = hex_rev_str_len_half_rev_str_len_half_rev_str_len_half*-1;\n\
    \  let hex_rev_str_len_half_rev_str_len_half_rev_str_len_half_rev_str = hex_rev_str_len_half_rev_str_len_half_rev_str_len_half_rev_str.toString();\n\
    \  let hex_rev_str_len_half_rev_str_len_half_rev_str_len_half_rev_str_len = hex_rev_str_len_half_rev_str_len_half_rev_str_len_half_rev_str_len_half/2;\n\
    \  let hex_rev_str_len_half_rev_str_len_half_rev_str_len_half_rev_str_len_half\
    \ = hex_rev_str_len_half_rev_str_len_half_rev_str_len_half_rev_str_len_half*-1;\n\
    \  let hex_rev_str_len_half_rev_str_len_half_rev_str_len_half_rev_str_len_half_rev\
    \ = hex_rev_str_len_half_rev_str_len_half_rev_str_len_half_rev_str_", "    let\
    \ hex = num.toString().toUpperCase();\n    let primes = [];\n    for(let i = 0;\
    \ i < hex.length; i++){\n        let hexDigit = hex.charAt(i);\n        let hexDigitNumber\
    \ = parseInt(hexDigit);\n        if(hexDigitNumber === 0){\n            continue;\n\
    \        }\n        for(let j = 0; j < primes.length; j++){\n            if(hexDigitNumber\
    \ % primes[j] === 0){\n                primes[j] = hexDigitNumber;\n         \
    \       break;\n            }\n        }\n    }\n    return primes[primes.length\
    \ - 1];\n}\n", "    let hex = num.toString().split('');\n    let hex_rev = [];\n\
    \    for(let i=0;i<hex.length;i++){\n        hex_rev.push(hex[hex.length-i-1]);\n\
    \    }\n    let hex_rev_str = hex_rev.join('');\n    let hex_rev_str_len = hex_rev_str.length;\n\
    \    let hex_rev_str_len_half = hex_rev_str_len/2;\n    let hex_rev_str_len_half_rev\
    \ = hex_rev_str_len_half*-1;\n    let hex_rev_str_len_half_rev_str = hex_rev_str_len_half_rev.toString();\n\
    \    let hex_rev_str_len_half_rev_str_rev = hex_rev_str_len_half_rev_str.reverse();\n\
    \    let hex_rev_str_len_half_rev_str_rev_str = hex_rev_str_len_half_rev_str_rev.toString();\n\
    \    let hex_rev_str_len_half_rev_str_rev_str_rev = hex_rev_str_len_half_rev_str_rev_str.reverse();\n\
    \    let hex_rev_str_len_half_rev_str_rev_str_rev_str = hex_rev_str_len_half_rev_str_rev_str_rev.toString();\n\
    \    let hex_rev_str_len_half_rev_str_rev_str_rev_str_rev = hex_rev_str_len_half_rev_str_rev_str_rev_str.reverse();\n\
    \    let hex_rev_str_len_half_rev_str_rev_str_rev_str_rev_str = hex_rev_str_len_half_rev_str_rev_str_rev_str_rev.toString();\n\
    \    let hex_rev_str_len_half_rev_str_rev_str_rev_str_rev_str_rev = hex_rev_str_len_half_rev_str_rev_str_rev_str_rev_str.reverse();\n\
    \    let hex_rev_str_len_half_rev_str_rev_str_rev_str_rev_str_rev_str = hex_rev_str_len_half_rev_str_rev_str_rev_str_rev_str_rev_str.toString();\n\
    \    let hex_rev_str_len_half_rev_str_rev_str_rev_str_rev_str_rev_str_rev = hex_rev_str_len_half_rev_str_rev_str_rev_str_rev_str_rev_str_rev.reverse();\n\
    \    let hex_rev_str_len_half_rev_str_rev_str_rev_str_rev_str_rev_str_rev_str\
    \ = hex_rev_str_len_half_rev_str_rev_str_rev_str_rev_str_rev_str_rev_str.toString();\n\
    \    let hex_rev_str_len_half_rev_str_rev_str_re", "    let hex = num.toString().toUpperCase();\n\
    \    let count = 0;\n    for(let i = 0; i < hex.length; i++){\n        if(hex.charAt(i)\
    \ == 'A' || hex.charAt(i) == 'B' || hex.charAt(i) == 'C' || hex.charAt(i) == 'D'\
    \ || hex.charAt(i) == 'E' || hex.charAt(i) == 'F'){\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n", "    let hex = num.split(\"\").map(x\
    \ => x.charCodeAt(0).toString(16)).join``;\n    let primes = hex.split(\"\").filter(x\
    \ => x === \"0\" || x === \"1\").map(x => parseInt(x, 16));\n    let primesCount\
    \ = primes.filter(x => x > 1 && x % 2 === 0).length;\n    return primesCount;\n\
    }\n", "    let hex = num.toString().toUpperCase();\n    let count = 0;\n    for(let\
    \ i = 0; i < hex.length; i++){\n        if(hex.charAt(i) == \"A\" || hex.charAt(i)\
    \ == \"B\" || hex.charAt(i) == \"C\" || hex.charAt(i) == \"D\" || hex.charAt(i)\
    \ == \"E\" || hex.charAt(i) == \"F\"){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n", "  var hex = num.toString().toUpperCase();\n  var hexDigits\
    \ = [\n    \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"A\",\"\
    B\",\"C\",\"D\",\"E\",\"F\"\n  ];\n  var hexDigitCount = hexDigits.length;\n \
    \ var hexDigitCount2 = hexDigitCount*2;\n  var hexDigitCount3 = hexDigitCount*3;\n\
    \  var hexDigitCount4 = hexDigitCount*4;\n  var hexDigitCount5 = hexDigitCount*5;\n\
    \  var hexDigitCount6 = hexDigitCount*6;\n  var hexDigitCount7 = hexDigitCount*7;\n\
    \  var hexDigitCount8 = hexDigitCount*8;\n  var hexDigitCount9 = hexDigitCount*9;\n\
    \  var hexDigitCount10 = hexDigitCount*10;\n  var hexDigitCount11 = hexDigitCount*11;\n\
    \  var hexDigitCount12 = hexDigitCount*12;\n  var hexDigitCount13 = hexDigitCount*13;\n\
    \  var hexDigitCount14 = hexDigitCount*14;\n  var hexDigitCount15 = hexDigitCount*15;\n\
    \  var hexDigitCount16 = hexDigitCount*16;\n  var hexDigitCount17 = hexDigitCount*17;\n\
    \  var hexDigitCount18 = hexDigitCount*18;\n  var hexDigitCount19 = hexDigitCount*19;\n\
    \  var hexDigitCount20 = hexDigitCount*20;\n  var hexDigitCount21 = hexDigitCount*21;\n\
    \  var hexDigitCount22 = hexDigitCount*22;\n  var hexDigitCount23 = hexDigitCount*23;\n\
    \  var hexDigitCount24 = hexDigitCount*24;\n  var hexDigitCount25 = hexDigitCount*25;\n\
    \  var hexDigitCount26 = hexDigitCount*26;\n  var hexDigitCount27 = hexDigitCount*27;\n\
    \  var hexDigitCount28 = hexDigitCount*28;\n  var hexDigitCount29 = hexDigitCount*29;\n\
    \  var hexDigitCount30 = hexDigitCount*30;\n  var hexDigitCount31 = hexDigitCount*31;\n\
    \  var hexDigitCount32 = hexDigitCount*32;\n  var hexDigitCount33 = hexDigitCount*33;\n\
    \  var hexDigitCount34 = hexDigitCount*34;\n  var hexDigitCount35 = hexDigitCount*35;\n\
    \  var hexDigitCount36 = hexDigitCount*36;\n  var hexDigitCount37 = hexDigitCount*37;\n\
    \  var hexDigitCount38 = hexDigitCount*38;", "    let hex = num.toString().replace(/[^A-F0-9]/g,\"\
    \");\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCountPrime = hexDigitCount;\n    let hexDigitCountPrime2 = hexDigitCountPrime;\n\
    \    let hexDigitCountPrime3 = hexDigitCountPrime;\n    let hexDigitCountPrime4\
    \ = hexDigitCountPrime;\n    let hexDigitCountPrime5 = hexDigitCountPrime;\n \
    \   let hexDigitCountPrime6 = hexDigitCountPrime;\n    let hexDigitCountPrime7\
    \ = hexDigitCountPrime;\n    let hexDigitCountPrime8 = hexDigitCountPrime;\n \
    \   let hexDigitCountPrime9 = hexDigitCountPrime;\n    let hexDigitCountPrime10\
    \ = hexDigitCountPrime;\n    let hexDigitCountPrime11 = hexDigitCountPrime;\n\
    \    let hexDigitCountPrime12 = hexDigitCountPrime;\n    let hexDigitCountPrime13\
    \ = hexDigitCountPrime;\n    let hexDigitCountPrime14 = hexDigitCountPrime;\n\
    \    let hexDigitCountPrime15 = hexDigitCountPrime;\n    let hexDigitCountPrime16\
    \ = hexDigitCountPrime;\n    let hexDigitCountPrime17 = hexDigitCountPrime;\n\
    \    let hexDigitCountPrime18 = hexDigitCountPrime;\n    let hexDigitCountPrime19\
    \ = hexDigitCountPrime;\n    let hexDigitCountPrime20 = hexDigitCountPrime;\n\
    \    let hexDigitCountPrime21 = hexDigitCountPrime;\n    let hexDigitCountPrime22\
    \ = hexDigitCountPrime;\n    let hexDigitCountPrime23 = hexDigitCountPrime;\n\
    \    let hexDigitCountPrime24 = hexDigitCountPrime;\n    let hexDigitCountPrime25\
    \ = hexDigitCountPrime;\n    let hexDigitCountPrime26 = hexDigitCountPrime;\n\
    \    let hexDigitCountPrime27 = hexDigitCountPrime;\n    let hexDigitCountPrime28\
    \ = hexDigitCountPrime;\n    let hexDigitCountPrime29 = hexDigitCountPrime;\n\
    \    let hexDigitCountPrime30 = hexDigitCountPrime;\n    let hexDigitCountPrime31\
    \ = hexDigitCountPrime;\n    let hexDigitCountPrime32 = hexDigitCountPrime;\n\
    \    let hexDigitCountPrime33 = hexDigitCountPrime", "  let hex = num.toString().split('');\n\
    \  let primes = [];\n  let prime_digits = [];\n  let prime_digit_count = [];\n\
    \  let prime_digit_count_temp = [];\n  let prime_digit_count_temp_temp = [];\n\
    \  let prime_digit_count_temp_temp_temp = [];\n  let prime_digit_count_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp = [];\n  let\
    \ prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = [];\n  let prime_digit_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp",
  "  let hex = num.toString().split('');\n  let primes = [];\n  let prime_digits =\
    \ [];\n  let prime_digit_count = 0;\n  let prime_digit_count_max = 10;\n  let\
    \ prime_digit_count_min = 2;\n  let prime_digit_count_max = hex.length;\n  let\
    \ prime_digit_count_min = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_digit_count_max = hex.length;\n\
    \  let prime_digit_count_max = hex.length;\n  let prime_", "    let hex = num.replace(/[^0-9A-Fa-f]/g,\"\
    \");\n    let hexDigits = hex.length;\n    let hexDigit = 0;\n    let hexDigitCount\
    \ = 0;\n    let hexDigitCount2 = 0;\n    let hexDigitCount3 = 0;\n    let hexDigitCount4\
    \ = 0;\n    let hexDigitCount5 = 0;\n    let hexDigitCount6 = 0;\n    let hexDigitCount7\
    \ = 0;\n    let hexDigitCount8 = 0;\n    let hexDigitCount9 = 0;\n    let hexDigitCount10\
    \ = 0;\n    let hexDigitCount11 = 0;\n    let hexDigitCount12 = 0;\n    let hexDigitCount13\
    \ = 0;\n    let hexDigitCount14 = 0;\n    let hexDigitCount15 = 0;\n    let hexDigitCount16\
    \ = 0;\n    let hexDigitCount17 = 0;\n    let hexDigitCount18 = 0;\n    let hexDigitCount19\
    \ = 0;\n    let hexDigitCount20 = 0;\n    let hexDigitCount21 = 0;\n    let hexDigitCount22\
    \ = 0;\n    let hexDigitCount23 = 0;\n    let hexDigitCount24 = 0;\n    let hexDigitCount25\
    \ = 0;\n    let hexDigitCount26 = 0;\n    let hexDigitCount27 = 0;\n    let hexDigitCount28\
    \ = 0;\n    let hexDigitCount29 = 0;\n    let hexDigitCount30 = 0;\n    let hexDigitCount31\
    \ = 0;\n    let hexDigitCount32 = 0;\n    let hexDigitCount33 = 0;\n    let hexDigitCount34\
    \ = 0;\n    let hexDigitCount35 = 0;\n    let hexDigitCount36 = 0;\n    let hexDigitCount37\
    \ = 0;\n    let hexDigitCount38 = 0;\n    let hexDigitCount39 = 0;\n    let hexDigitCount40\
    \ = 0;\n    let hexDigitCount41 = 0;\n    let hexDigitCount42 = 0;\n    let hexDigitCount43\
    \ = 0;\n    let hexDigitCount44 = 0;\n    let hexDigitCount45 = 0;\n    let hexDigitCount46\
    \ = 0;\n    let hexDigitCount47 = 0;\n    let hexDigitCount48 = 0;\n    let hexDigitCount49\
    \ = 0;\n    let hexDigitCount50 = 0;\n    let hexDigitCount51 = 0;\n    let hexDigitCount52\
    \ = 0;\n    let hexDigitCount53 = 0;\n    let hexDigitCount54 = 0;\n    let hexDigitCount55\
    \ = 0;\n    let hexDigitCount56 = 0;\n    let hexDigitCount57 = 0;\n    let hexDigitCount58\
    \ = 0;\n    let hexDigitCount59 = 0;\n    let hexDigitCount60 = 0;\n    let hexDigitCount61\
    \ = 0;\n    let hexDigitCount62 = 0;\n    let hexDigitCount63 = 0;\n    let hexDigitCount64\
    \ = 0;\n    let hexDigitCount65 = 0;\n    let hexDigitCount66 = 0;\n    let hexDigitCount67\
    \ = 0;\n    let hexDigitCount68 = 0;\n    let hexDigitCount69 = 0;\n    let hexDigitCount70\
    \ = 0;\n", "  var hex = num.toString().replace(/[^0-9A-F]/g,'');\n  var hexLength\
    \ = hex.length;\n  var hexDigits = hex.split(\"\");\n  var hexDigitsLength = hexDigits.length;\n\
    \  var hexKeyLength = (hexDigitsLength*2)-1;\n  var hexKey = '';\n  var hexKeyCount\
    \ = 0;\n  for(var i=0;i<hexKeyLength;i++){\n    hexKey += hexDigits[i];\n    hexKeyCount\
    \ += hexDigits.indexOf(hexDigits[i]);\n  }\n  return hexKeyCount;\n}", "    let\
    \ hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16));\n    let primes\
    \ = [];\n    let prime_digits = [];\n    let prime_digit_count = 0;\n    let prime_digit_count_max\
    \ = 2;\n    let prime_digit_count_min = 2;\n    let prime_digit_count_max = hex.length;\n\
    \    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max =\
    \ hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime_digit_count_min = hex.length;\n    let prime_digit_count_max\
    \ = hex.length;\n    let prime", "  var hex = num.toString().toUpperCase();\n\
    \  var hexDigits = [\n    \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"\
    ,\"9\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"\n  ];\n  var hexDigitCount = hexDigits.length;\n\
    \  var hexDigitCount2 = hexDigitCount*hexDigitCount;\n  var hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  var hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  var hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  var hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  var hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  var hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  var hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  var hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  var hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  var hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  var hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  var hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  var hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  var hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  var hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  var hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  var hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  var hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  var hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  var hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  var hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  var hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  var hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  var hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  var hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  var hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  var hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  var hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  var hexDigitCount3", "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join``;\n\
    \    let primes = [];\n    let primes_counter = 0;\n    for(let i = 0; i < hex.length;\
    \ i++){\n        let hexDigit = hex[i];\n        if(hexDigit == \"A\"){\n    \
    \        primes.push(2);\n            primes_counter++;\n        }\n        else\
    \ if(hexDigit == \"B\"){\n            primes.push(3);\n            primes_counter++;\n\
    \        }\n        else if(hexDigit == \"C\"){\n            primes.push(5);\n\
    \            primes_counter++;\n        }\n        else if(hexDigit == \"D\"){\n\
    \            primes.push(7);\n            primes_counter++;\n        }\n     \
    \   else if(hexDigit == \"E\"){\n            primes.push(11);\n            primes_counter++;\n\
    \        }\n        else if(hexDigit == \"F\"){\n            primes.push(13);\n\
    \            primes_counter++;\n        }\n        else{\n            primes.push(parseInt(hexDigit));\n\
    \        }\n    }\n    let primes_length = primes.length;\n    let primes_counter2\
    \ = primes_counter;\n    for(let i = 0; i < primes_length; i++){\n        for(let\
    \ j = i + 1; j < primes_length; j++){\n            if(primes[i] * primes[j] ==\
    \ hex.length){\n                primes_counter2++;\n            }\n        }\n\
    \    }\n    return primes_counter2;\n}\n", "    let hex = num.toString().split('');\n\
    \    let primes = [];\n    let prime_count = 0;\n    for(let i = 0; i < hex.length;\
    \ i++){\n        if(hex[i] == \"A\" || hex[i] == \"B\" || hex[i] == \"C\" || hex[i]\
    \ == \"D\" || hex[i] == \"E\" || hex[i] == \"F\"){\n            primes.push(hex[i]);\n\
    \        }\n    }\n    for(let i = 0; i < primes.length; i++){\n        if(primes.includes(hex[i])){\n\
    \            prime_count++;\n        }\n    }\n    return prime_count;\n}\n",
  "    let hex = num.toString().replace(/[^0-9A-F]/g,\"\");\n    let hexDigits = hex.split(\"\
    \");\n    let primeDigits = [];\n    let primeCount = 0;\n    for(let i = 0; i\
    \ < hexDigits.length; i++){\n        let hexDigit = hexDigits[i];\n        if(hexDigit\
    \ == \"A\" || hexDigit == \"B\" || hexDigit == \"C\" || hexDigit == \"D\" || hexDigit\
    \ == \"E\" || hexDigit == \"F\"){\n            primeDigits.push(hexDigit);\n \
    \       }\n        else{\n            primeDigits.push(parseInt(hexDigit));\n\
    \        }\n    }\n    for(let i = 0; i < primeDigits.length; i++){\n        let\
    \ prime = primeDigits[i];\n        if(prime == 2){\n            primeCount++;\n\
    \        }\n        else if(prime > 2){\n            let isPrime = true;\n   \
    \         for(let j = i + 1; j < primeDigits.length; j++){\n                if(primeDigits[j]\
    \ != prime){\n                    isPrime = false;\n                    break;\n\
    \                }\n            }\n            if(isPrime){\n                primeCount++;\n\
    \            }\n        }\n    }\n    return primeCount;\n}\n", "    let hex =\
    \ num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join('');\n    let primes\
    \ = [];\n    let prime_digits = [];\n    let prime_digit_count = [];\n    let\
    \ prime_digit_count_sum = 0;\n    let prime_digit_count_sum2 = 0;\n    let prime_digit_count_sum3\
    \ = 0;\n    let prime_digit_count_sum4 = 0;\n    let prime_digit_count_sum5 =\
    \ 0;\n    let prime_digit_count_sum6 = 0;\n    let prime_digit_count_sum7 = 0;\n\
    \    let prime_digit_count_sum8 = 0;\n    let prime_digit_count_sum9 = 0;\n  \
    \  let prime_digit_count_sum10 = 0;\n    let prime_digit_count_sum11 = 0;\n  \
    \  let prime_digit_count_sum12 = 0;\n    let prime_digit_count_sum13 = 0;\n  \
    \  let prime_digit_count_sum14 = 0;\n    let prime_digit_count_sum15 = 0;\n  \
    \  let prime_digit_count_sum16 = 0;\n    let prime_digit_count_sum17 = 0;\n  \
    \  let prime_digit_count_sum18 = 0;\n    let prime_digit_count_sum19 = 0;\n  \
    \  let prime_digit_count_sum20 = 0;\n    let prime_digit_count_sum21 = 0;\n  \
    \  let prime_digit_count_sum22 = 0;\n    let prime_digit_count_sum23 = 0;\n  \
    \  let prime_digit_count_sum24 = 0;\n    let prime_digit_count_sum25 = 0;\n  \
    \  let prime_digit_count_sum26 = 0;\n    let prime_digit_count_sum27 = 0;\n  \
    \  let prime_digit_count_sum28 = 0;\n    let prime_digit_count_sum29 = 0;\n  \
    \  let prime_digit_count_sum30 = 0;\n    let prime_digit_count_sum31 = 0;\n  \
    \  let prime_digit_count_sum32 = 0;\n    let prime_digit_count_sum33 = 0;\n  \
    \  let prime_digit_count_sum34 = 0;\n    let prime_digit_count_sum35 = 0;\n  \
    \  let prime_digit_count_sum36 = 0;\n    let prime_digit_count_sum37 = 0;\n  \
    \  let prime_digit_count_sum38 = 0;\n    let prime_digit_count_sum39 = 0;\n  \
    \  let prime_digit_count_sum40 = 0;\n    let prime_digit_count_sum41 = 0;\n  \
    \  let prime_digit_count_sum42 = 0;\n    let prime_digit_count_sum43 = 0;\n  \
    \  let prime_digit_count_sum44 = 0;\n    let prime_digit_count_sum45 = 0;\n  \
    \  let prime_digit_count_sum46 = 0;\n    let prime_digit_count_sum47 = 0;\n  \
    \  let prime_digit_count_sum48 = 0;\n    let prime_digit_count_sum49 = 0;\n  \
    \  let prime_digit_count_sum50 = 0;\n    let prime_digit_count_sum51 = 0;\n  \
    \  let prime_digit_count_sum52 = 0;\n    let prime_digit_count_sum53 = 0;\n  \
    \  let prime", "    let hex = num.toString().replace(/[^A-F0-9]/g,\"\");\n   \
    \ let hexDigits = hex.toUpperCase().split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n    let hexDigitCount3\
    \ = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n    let hexDigitCount6\
    \ = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n    let hexDigitCount9\
    \ = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n    let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n    let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n    let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n    let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n    let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n    let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n    let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \    let hexDigitCount32 = hexDigitCount31*hexDigitCount;", "  let hex = num.toString().split('');\n\
    \  let hex_rev = [];\n  for(let i=0;i<hex.length;i++){\n    hex_rev.push(hex[hex.length-i-1]);\n\
    \  }\n  let hex_rev_str = hex_rev.join('');\n  let hex_rev_str_len = hex_rev_str.length;\n\
    \  let hex_rev_str_len_2 = hex_rev_str_len*2;\n  let hex_rev_str_len_4 = hex_rev_str_len_2*2;\n\
    \  let hex_rev_str_len_8 = hex_rev_str_len_4*2;\n  let hex_rev_str_len_16 = hex_rev_str_len_8*2;\n\
    \  let hex_rev_str_len_32 = hex_rev_str_len_16*2;\n  let hex_rev_str_len_64 =\
    \ hex_rev_str_len_32*2;\n  let hex_rev_str_len_128 = hex_rev_str_len_64*2;\n \
    \ let hex_rev_str_len_256 = hex_rev_str_len_128*2;\n  let hex_rev_str_len_512\
    \ = hex_rev_str_len_256*2;\n  let hex_rev_str_len_1024 = hex_rev_str_len_512*2;\n\
    \  let hex_rev_str_len_2048 = hex_rev_str_len_1024*2;\n  let hex_rev_str_len_4096\
    \ = hex_rev_str_len_2048*2;\n  let hex_rev_str_len_8192 = hex_rev_str_len_4096*2;\n\
    \  let hex_rev_str_len_16384 = hex_rev_str_len_8192*2;\n  let hex_rev_str_len_32768\
    \ = hex_rev_str_len_16384*2;\n  let hex_rev_str_len_65536 = hex_rev_str_len_32768*2;\n\
    \  let hex_rev_str_len_131072 = hex_rev_str_len_65536*2;\n  let hex_rev_str_len_262144\
    \ = hex_rev_str_len_131072*2;\n  let hex_rev_str_len_524288 = hex_rev_str_len_262144*2;\n\
    \  let hex_rev_str_len_1048576 = hex_rev_str_len_524288*2;\n  let hex_rev_str_len_2097152\
    \ = hex_rev_str_len_1048576*2;\n  let hex_rev_str_len_4194304 = hex_rev_str_len_2097152*2;\n\
    \  let hex_rev_str_len_8388608 = hex_rev_str_len_4194304*2;\n  let hex_rev_str_len_16777216\
    \ = hex_rev_str_len_8388608*2;\n  let hex_rev_str_len_33554432 = hex_rev_str_len_",
  "    let hex = num.toString().split('');\n    let hexLength = hex.length;\n    let\
    \ hexDigits = hexLength - 1;\n    let hexDigit = 0;\n    let hexDigitCount = 0;\n\
    \    let hexDigitPrime = 0;\n    let hexDigitPrimeCount = 0;\n    let hexDigitPrimePrime\
    \ = 0;\n    let hexDigitPrimePrimeCount = 0;\n    let hexDigitPrimePrimePrime\
    \ = 0;\n    let hexDigitPrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrime\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimePrime\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrime\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrime\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = 0;\n    let\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrime = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrime = 0;\n \
    \   let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0;\n    let\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0;\n", "    var hex = num.toString().split('');\n    var hex_rev = [];\n \
    \   for(var i = 0; i < hex.length; i++){\n        hex_rev.push(hex[i].charCodeAt(0)\
    \ - 64);\n    }\n    var hex_rev_rev = hex_rev.join('');\n    var hex_rev_rev_rev\
    \ = hex_rev_rev.repeat(hex_rev.length / 2);\n    var hex_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererererere",
  "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join('');\n\
    \    let primes = [];\n    for(let i = 0; i < hex.length; i++){\n        if(hex.charAt(i)\
    \ == \"A\" || hex.charAt(i) == \"B\" || hex.charAt(i) == \"C\" || hex.charAt(i)\
    \ == \"D\" || hex.charAt(i) == \"E\" || hex.charAt(i) == \"F\"){\n           \
    \ primes.push(hex.charAt(i));\n        }\n    }\n    let primesCount = primes.length;\n\
    \    let hexCount = hex.length;\n    let primesSum = 0;\n    for(let i = 0; i\
    \ < primesCount; i++){\n        primesSum += parseInt(primes[i], 16);\n    }\n\
    \    let hexSum = 0;\n    for(let i = 0; i < hexCount; i++){\n        hexSum +=\
    \ parseInt(hex[i], 16);\n    }\n    let result = primesSum + hexSum;\n    return\
    \ result;\n}\n", "    var hex = num.toString().split('');\n    var count = 0;\n\
    \    for(var i = 0; i < hex.length; i++){\n        if(hex[i] === 'A' || hex[i]\
    \ === 'B' || hex[i] === 'C' || hex[i] === 'D' || hex[i] === 'E' || hex[i] ===\
    \ 'F'){\n            count++;\n        }\n    }\n    return count;\n}\n", "  \
    \  let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16));\n    let\
    \ primes = [];\n    for(let i = 0; i < hex.length; i++){\n        let hexDigit\
    \ = hex[i];\n        if(hexDigit == \"A\"){\n            primes.push(2);\n   \
    \     }\n        else if(hexDigit == \"B\"){\n            primes.push(3);\n  \
    \      }\n        else if(hexDigit == \"C\"){\n            primes.push(5);\n \
    \       }\n        else if(hexDigit == \"D\"){\n            primes.push(7);\n\
    \        }\n        else if(hexDigit == \"E\"){\n            primes.push(11);\n\
    \        }\n        else if(hexDigit == \"F\"){\n            primes.push(13);\n\
    \        }\n        else{\n            primes.push(parseInt(hexDigit));\n    \
    \    }\n    }\n    let primesCount = primes.length;\n    let hexDigits = hex.join(\"\
    \");\n    let hexDigitsCount = hexDigits.length;\n    let hexDigitsCountPrimes\
    \ = hexDigitsCount - primesCount;\n    let hexDigitsCountPrimes2 = hexDigitsCountPrimes\
    \ * hexDigitsCountPrimes;\n    let hexDigitsCountPrimes3 = hexDigitsCountPrimes\
    \ * hexDigitsCountPrimes * hexDigitsCountPrimes;\n    let hexDigitsCountPrimes4\
    \ = hexDigitsCountPrimes * hexDigitsCountPrimes * hexDigitsCountPrimes * hexDigitsCountPrimes;\n\
    \    let hexDigitsCountPrimes5 = hexDigitsCountPrimes * hexDigitsCountPrimes *\
    \ hexDigitsCountPrimes * hexDigitsCountPrimes * hexDigitsCountPrimes;\n    let\
    \ hexDigitsCountPrimes6 = hexDigitsCountPrimes * hexDigitsCountPrimes * hexDigitsCountPrimes\
    \ * hexDigitsCountPrimes * hexDigitsCountPrimes * hexDigitsCountPrimes;\n    let\
    \ hexDigitsCountPrimes7 = hexDigitsCountPrimes * hexDigitsCountPrimes * hexDigitsCountPrimes\
    \ * hexDigitsCountPrimes * hexDigitsCountPrimes * hexDigitsCountPrimes * hexDigitsCountPrimes;\n\
    \    let hexDigitsCountPrimes8 = hexDigitsCountPrimes * hexDigitsCountPrimes *\
    \ hexDigitsCountPrimes * hexDigitsCountPrimes * hexDigitsCountPrimes * hexDigitsCountPrimes\
    \ * hexDigitsCountPrimes * hexDigitsCountPrimes;\n    let hexDigitsCountPrimes",
  "    var hex = num.toUpperCase();\n    var hexDigits = hex.split(\"\");\n    var\
    \ hexDigitCount = hexDigits.length;\n    var hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    var hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    var hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    var hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    var hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    var hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    var hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    var hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    var hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    var hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    var hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    var hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    var hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    var hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    var hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    var hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    var hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    var hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    var hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    var hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    var hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    var hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    var hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    var hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    var hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    var hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    var hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    var hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    var hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    var hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    var hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \    var hexDigitCount33 = hexDigitCount", "    var hex = num.toString().toUpperCase();\n\
    \    var primes = [];\n    var primes_counter = 0;\n    for(var i = 0; i < hex.length;\
    \ i++){\n        var hexDigit = hex.charAt(i);\n        if(hexDigit >= '0' &&\
    \ hexDigit <= '9'){\n            primes[primes_counter] = parseInt(hexDigit);\n\
    \            primes_counter++;\n        }\n    }\n    var primes_length = primes.length;\n\
    \    for(var i = 0; i < primes_length; i++){\n        if(primes[i] == 2){\n  \
    \          return primes_counter;\n        }\n    }\n}\n", "    var hex = num.split(\"\
    \");\n    var count = 0;\n    for(var i=0;i<hex.length;i++){\n        if(hex[i]==\"\
    A\"||hex[i]==\"B\"||hex[i]==\"C\"||hex[i]==\"D\"||hex[i]==\"E\"||hex[i]==\"F\"\
    ){\n            count++;\n        }\n    }\n    return count;\n}\n", "    let\
    \ hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join``;\n    let\
    \ primes = [];\n    let primes_found = 0;\n    let primes_found2 = 0;\n    let\
    \ primes_found3 = 0;\n    let primes_found4 = 0;\n    let primes_found5 = 0;\n\
    \    let primes_found6 = 0;\n    let primes_found7 = 0;\n    let primes_found8\
    \ = 0;\n    let primes_found9 = 0;\n    let primes_found10 = 0;\n    let primes_found11\
    \ = 0;\n    let primes_found12 = 0;\n    let primes_found13 = 0;\n    let primes_found14\
    \ = 0;\n    let primes_found15 = 0;\n    let primes_found16 = 0;\n    let primes_found17\
    \ = 0;\n    let primes_found18 = 0;\n    let primes_found19 = 0;\n    let primes_found20\
    \ = 0;\n    let primes_found21 = 0;\n    let primes_found22 = 0;\n    let primes_found23\
    \ = 0;\n    let primes_found24 = 0;\n    let primes_found25 = 0;\n    let primes_found26\
    \ = 0;\n    let primes_found27 = 0;\n    let primes_found28 = 0;\n    let primes_found29\
    \ = 0;\n    let primes_found30 = 0;\n    let primes_found31 = 0;\n    let primes_found32\
    \ = 0;\n    let primes_found33 = 0;\n    let primes_found34 = 0;\n    let primes_found35\
    \ = 0;\n    let primes_found36 = 0;\n    let primes_found37 = 0;\n    let primes_found38\
    \ = 0;\n    let primes_found39 = 0;\n    let primes_found40 = 0;\n    let primes_found41\
    \ = 0;\n    let primes_found42 = 0;\n    let primes_found43 = 0;\n    let primes_found44\
    \ = 0;\n    let primes_found45 = 0;\n    let primes_found46 = 0;\n    let primes_found47\
    \ = 0;\n    let primes_found48 = 0;\n    let primes_found49 = 0;\n    let primes_found50\
    \ = 0;\n    let primes_found51 = 0;\n    let primes_found52 = 0;\n    let primes_found53\
    \ = 0;\n    let primes_found54 = 0;\n    let primes_found55 = 0;\n    let primes_found56\
    \ = 0;\n    let primes_found57 = 0;\n    let primes_found58 = 0;\n    let primes_found59\
    \ = 0;\n    let primes_found60 = 0;\n    let primes_found61 = 0;\n    let primes_found62\
    \ = 0;\n    let primes_found63 = 0;\n    let primes_found64 = 0;\n    let primes_found65\
    \ = 0;\n    let primes_found66 = 0;\n    let primes_found67 = 0;\n    let primes_found68\
    \ = 0;\n    let primes_found69 = 0;\n    let primes_found70 = 0;\n    let ", " \
    \ let hex = num.toString().split('');\n  let count = 0;\n  for(let i = 0; i <\
    \ hex.length; i++){\n    if(hex[i] === 'A' || hex[i] === 'B' || hex[i] === 'C'\
    \ || hex[i] === 'D' || hex[i] === 'E' || hex[i] === 'F'){\n      count++;\n  \
    \  }\n  }\n  return count;\n}\n", "    let hex = num.toString().split('');\n \
    \   let hex_res = hex.map(function(x){\n        return parseInt(x, 16);\n    });\n\
    \    let primes = [];\n    let prime_count = 0;\n    let prime_digits = [];\n\
    \    let prime_digit_count = 0;\n    let prime_digit_sum = 0;\n    let prime_digit_sum2\
    \ = 0;\n    let prime_digit_sum3 = 0;\n    let prime_digit_sum4 = 0;\n    let\
    \ prime_digit_sum5 = 0;\n    let prime_digit_sum6 = 0;\n    let prime_digit_sum7\
    \ = 0;\n    let prime_digit_sum8 = 0;\n    let prime_digit_sum9 = 0;\n    let\
    \ prime_digit_sum10 = 0;\n    let prime_digit_sum11 = 0;\n    let prime_digit_sum12\
    \ = 0;\n    let prime_digit_sum13 = 0;\n    let prime_digit_sum14 = 0;\n    let\
    \ prime_digit_sum15 = 0;\n    let prime_digit_sum16 = 0;\n    let prime_digit_sum17\
    \ = 0;\n    let prime_digit_sum18 = 0;\n    let prime_digit_sum19 = 0;\n    let\
    \ prime_digit_sum20 = 0;\n    let prime_digit_sum21 = 0;\n    let prime_digit_sum22\
    \ = 0;\n    let prime_digit_sum23 = 0;\n    let prime_digit_sum24 = 0;\n    let\
    \ prime_digit_sum25 = 0;\n    let prime_digit_sum26 = 0;\n    let prime_digit_sum27\
    \ = 0;\n    let prime_digit_sum28 = 0;\n    let prime_digit_sum29 = 0;\n    let\
    \ prime_digit_sum30 = 0;\n    let prime_digit_sum31 = 0;\n    let prime_digit_sum32\
    \ = 0;\n    let prime_digit_sum33 = 0;\n    let prime_digit_sum34 = 0;\n    let\
    \ prime_digit_sum35 = 0;\n    let prime_digit_sum36 = 0;\n    let prime_digit_sum37\
    \ = 0;\n    let prime_digit_sum38 = 0;\n    let prime_digit_sum39 = 0;\n    let\
    \ prime_digit_sum40 = 0;\n    let prime_digit_sum41 = 0;\n    let prime_digit_sum42\
    \ = 0;\n    let prime_digit_sum43 = 0;\n    let prime_digit_sum44 = 0;\n    let\
    \ prime_digit_sum45 = 0;\n    let prime_digit_sum46 = 0;\n    let prime_digit_sum47\
    \ = 0;\n    let prime_digit_sum48 = 0;\n    let prime_digit_sum49 = 0;\n    let\
    \ prime_digit_sum50 = 0;\n    let prime_digit_sum51 = 0;\n    let prime_digit_sum52\
    \ = 0;\n    let prime_digit_sum53 = 0;\n    let prime_digit_sum54 = 0;\n    let\
    \ prime_digit_sum55 = 0;\n    let prime_digit_sum56 = 0;\n    let prime_digit_sum57\
    \ = 0;\n    let prime_digit_sum58 = 0;\n    let prime_digit_sum", "    var hex\
    \ = num.toString().toUpperCase();\n    var hexDigits = [\n        '0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'\n\
    \    ];\n    var hexDigitCount = hexDigits.length;\n    var hexDigitSum = 0;\n\
    \    for(var i = 0; i < hexDigitCount; i++){\n        hexDigitSum += parseInt(hex.charAt(i),\
    \ 16);\n    }\n    var hexDigitSumHex = hexDigitSum.toString(16);\n    var hexDigitSumHexLength\
    \ = hexDigitSumHex.length;\n    var hexDigitSumHexArray = hexDigitSumHex.split(\"\
    \");\n    var hexDigitSumHexArrayLength = hexDigitSumHexArray.length;\n    var\
    \ hexDigitSumHexArraySum = 0;\n    for(var i = 0; i < hexDigitSumHexArrayLength;\
    \ i++){\n        hexDigitSumHexArraySum += parseInt(hexDigitSumHexArray[i], 16);\n\
    \    }\n    var hexDigitSumHexArraySumHex = hexDigitSumHexArraySum.toString(16);\n\
    \    var hexDigitSumHexArraySumHexLength = hexDigitSumHexArraySumHex.length;\n\
    \    var hexDigitSumHexArraySumHexArray = hexDigitSumHexArraySumHex.split(\"\"\
    );\n    var hexDigitSumHexArraySumHexArrayLength = hexDigitSumHexArraySumHexArray.length;\n\
    \    var hexDigitSumHexArraySumHexArraySum = 0;\n    for(var i = 0; i < hexDigitSumHexArraySumHexArrayLength;\
    \ i++){\n        hexDigitSumHexArraySumHexArraySum += parseInt(hexDigitSumHexArraySumHexArray[i],\
    \ 16);\n    }\n    var hexDigitSumHexArraySumHexArraySumHex = hexDigitSumHexArraySumHexArraySum.toString(16);\n\
    \    var hexDigitSumHexArraySumHexArraySumHexLength = hexDigitSumHexArraySumHexArraySumHex.length;\n\
    \    var hexDigitSumHexArraySumHexArraySumHexArray = hexDigitSumHexArraySumHexArraySumHex.split(\"\
    \");\n    var hexDigitSumHexArraySumHexArraySumHexArrayLength = hexDigitSumHexArraySumHexArraySumHexArray.length;\n\
    \    var hexDigitSumHexArraySumHexArraySumHexArraySum = 0;\n    for(var i = 0;\
    \ i < hexDigitSumHexArraySumHexArraySumHexArrayLength; i++){\n        hexDigitSumHexArraySumHexArraySumHexArraySum\
    \ += parseInt(hexDigitSumHexArraySumHexArraySumHexArray[i], 16);\n    }\n    var\
    \ hexDigitSumHexArraySumHexArraySumHexArraySumHex = hexDigitSumHexArraySumHexArraySumHexArraySum.toString(16);",
  "    let hex = num.toString().replace(/[^0-9A-F]/g,\"\");\n    let hexArray = hex.split(\"\
    \");\n    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArray.length;\n\
    \    let hexArrayLength = hexArray.length;", "    let hex = num.toString().replace(/[^A-F0-9]/g,\"\
    \");\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n    let hexDigitCount3\
    \ = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n    let hexDigitCount6\
    \ = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n    let hexDigitCount9\
    \ = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n    let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n    let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n    let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n    let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n    let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n    let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n    let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n", "    let hex = num.toString().split('');\n\
    \    let primes = [];\n    let prime_found = false;\n    let prime_found2 = false;\n\
    \    let prime_found3 = false;\n    let prime_found4 = false;\n    let prime_found5\
    \ = false;\n    let prime_found6 = false;\n    let prime_found7 = false;\n   \
    \ let prime_found8 = false;\n    let prime_found9 = false;\n    let prime_found10\
    \ = false;\n    let prime_found11 = false;\n    let prime_found12 = false;\n \
    \   let prime_found13 = false;\n    let prime_found14 = false;\n    let prime_found15\
    \ = false;\n    let prime_found16 = false;\n    let prime_found17 = false;\n \
    \   let prime_found18 = false;\n    let prime_found19 = false;\n    let prime_found20\
    \ = false;\n    let prime_found21 = false;\n    let prime_found22 = false;\n \
    \   let prime_found23 = false;\n    let prime_found24 = false;\n    let prime_found25\
    \ = false;\n    let prime_found26 = false;\n    let prime_found27 = false;\n \
    \   let prime_found28 = false;\n    let prime_found29 = false;\n    let prime_found30\
    \ = false;\n    let prime_found31 = false;\n    let prime_found32 = false;\n \
    \   let prime_found33 = false;\n    let prime_found34 = false;\n    let prime_found35\
    \ = false;\n    let prime_found36 = false;\n    let prime_found37 = false;\n \
    \   let prime_found38 = false;\n    let prime_found39 = false;\n    let prime_found40\
    \ = false;\n    let prime_found41 = false;\n    let prime_found42 = false;\n \
    \   let prime_found43 = false;\n    let prime_found44 = false;\n    let prime_found45\
    \ = false;\n    let prime_found46 = false;\n    let prime_found47 = false;\n \
    \   let prime_found48 = false;\n    let prime_found49 = false;\n    let prime_found50\
    \ = false;\n    let prime_found51 = false;\n    let prime_found52 = false;\n \
    \   let prime_found53 = false;\n    let prime_found54 = false;\n    let prime_found55\
    \ = false;\n    let prime_found56 = false;\n    let prime_found57 = false;\n \
    \   let prime_found58 = false;\n    let prime_found59 = false;\n    let prime_found60\
    \ = false;\n    let prime_found61 = false;\n    let prime_found62 = false;\n \
    \   let prime_found63 = false;\n    let prime_found64 = false;\n    let prime_found65\
    \ = false;\n    let prime_found66 = false;\n    let prime_found67 = false;\n \
    \   let prime_found68 = false;\n    let prime_found69 = false;\n    let prime_found"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_69_search
language: js
prompt: "//You are given a non-empty array of positive integers. Return the greatest\
  \ integer that is greater than \n// zero, and has a frequency greater than or equal\
  \ to the value of the integer itself. \n// The frequency of an integer is the number\
  \ of times it appears in the array.\n// If no such a value exist, return -1.\n//\
  \ Examples:\n// >>> search([4, 1, 2, 2, 3, 1])\n// 2\n// >>> search([1, 2, 2, 3,\
  \ 3, 3, 4, 4, 4])\n// 3\n// >>> search([5, 5, 4, 4, 4])\n// -1\nfunction search(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = search;\n  assert.deepEqual(candidate([5, 5, 5, 5, 1]),1);\n  assert.deepEqual(candidate([4,\
  \ 1, 4, 1, 4, 4]),4);\n  assert.deepEqual(candidate([3, 3]),-1);\n  assert.deepEqual(candidate([8,\
  \ 8, 8, 8, 8, 8, 8, 8]),8);\n  assert.deepEqual(candidate([2, 3, 3, 2, 2]),2);\n\
  \  assert.deepEqual(candidate([2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
  \ 1, 7, 4, 10, 8, 1]),1);\n  assert.deepEqual(candidate([3, 2, 8, 2]),2);\n  assert.deepEqual(candidate([6,\
  \ 7, 1, 8, 8, 10, 5, 8, 5, 3, 10]),1);\n  assert.deepEqual(candidate([8, 8, 3, 6,\
  \ 5, 6, 4]),-1);\n  assert.deepEqual(candidate([6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9,\
  \ 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9]),1);\n  assert.deepEqual(candidate([1,\
  \ 9, 10, 1, 3]),1);\n  assert.deepEqual(candidate([6, 9, 7, 5, 8, 7, 5, 3, 7, 5,\
  \ 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10]),5);\n  assert.deepEqual(candidate([1]),1);\n\
  \  assert.deepEqual(candidate([8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4,\
  \ 2, 1, 10, 2, 1, 1, 5]),4);\n  assert.deepEqual(candidate([2, 10, 4, 8, 2, 10,\
  \ 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10]),2);\n  assert.deepEqual(candidate([1, 6,\
  \ 10, 1, 6, 9, 10, 8, 6, 8, 7, 3]),1);\n  assert.deepEqual(candidate([9, 2, 4, 1,\
  \ 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9,\
  \ 4]),4);\n  assert.deepEqual(candidate([2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3,\
  \ 7, 8, 8, 3, 1, 4, 2, 2, 10, 7]),4);\n  assert.deepEqual(candidate([9, 8, 6, 10,\
  \ 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1]),2);\n  assert.deepEqual(candidate([5,\
  \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8]),-1);\n  assert.deepEqual(candidate([10]),-1);\n\
  \  assert.deepEqual(candidate([9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2]),2);\n  assert.deepEqual(candidate([5,\
  \ 4, 10, 2, 1, 1, 10, 3, 6, 1, 8]),1);\n  assert.deepEqual(candidate([7, 9, 9, 9,\
  \ 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6]),1);\n  assert.deepEqual(candidate([3,\
  \ 10, 10, 9, 2]),-1);\n}\n\ntest();"
completions: ["    var max = 0;\n    var maxIndex = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            maxIndex\
    \ = i;\n        }\n    }\n    if(maxIndex == lst.length-1){\n        return -1;\n\
    \    }\n    return maxIndex;\n}\n", "    let max = 0;\n    let maxFreq = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n       \
    \     max = lst[i];\n            maxFreq = i;\n        }\n    }\n    if(maxFreq\
    \ >= max){\n        return -1;\n    }\n    return maxFreq;\n}\n", "    let max\
    \ = 0;\n    let maxFreq = 0;\n    for(let i = 0; i < lst.length; i++){\n     \
    \   if(lst[i] > max){\n            max = lst[i];\n            maxFreq = i;\n \
    \       }\n    }\n    return maxFreq > max? -1 : maxFreq;\n}\n", "    let max\
    \ = 0;\n    let freq = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > max){\n            max = lst[i];\n            freq = i;\n        }\n    }\n\
    \    return freq > max ? freq : -1;\n}\n", "    let max = 0;\n    let maxIndex\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n\
    \            max = lst[i];\n            maxIndex = i;\n        }\n    }\n    return\
    \ maxIndex;\n}\n", "    let max = 0;\n    let maxFreq = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxFreq = i;\n        }\n    }\n    return maxFreq > max? -1 : max;\n\
    }\n", "    let max = 0;\n    let maxFreq = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            maxFreq\
    \ = i;\n        }\n    }\n    return maxFreq > max? -1 : max;\n}\n", "    var\
    \ max = 0;\n    var maxIndex = 0;\n    for(var i=0; i<lst.length; i++){\n    \
    \    if(lst[i] > max){\n            max = lst[i];\n            maxIndex = i;\n\
    \        }\n    }\n    return maxIndex;\n}\n", "    let max = 0;\n    let maxIndex\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n\
    \            max = lst[i];\n            maxIndex = i;\n        }\n    }\n    return\
    \ maxIndex;\n}\n", "    var max = 0;\n    var freq = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]>max){\n            max = lst[i];\n        }\n        if(lst[i]>freq){\n\
    \            freq = lst[i];\n        }\n    }\n    return max;\n}\n", "    var\
    \ max = 0;\n    var maxIndex = 0;\n    for(var i=0; i<lst.length; i++){\n    \
    \    if(lst[i] > max){\n            max = lst[i];\n            maxIndex = i;\n\
    \        }\n    }\n    return maxIndex;\n}\n</code>\n<|/ a tags=javascript,arrays,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try search([4, 1, 2, 2, 3, 1]).\n<|/ c |>\n\
    <| c |>\nIt does work. Try search([4, 1, 2, 2, 3, 1]).\n<|/ c |>\n<| c |>\nIt\
    \ does work. Try search([4, 1, 2, 2, 3, 1]).\n<|/ c |>\n<| c |>\nIt does work.\
    \ Try search([4, 1, 2, 2, 3, 1]).\n<|/ c |>\n<| c |>\nIt does work. Try search([4,\
    \ 1, 2, 2, 3, 1]).\n<|/ c |>\n<| a dscore=2 |>\n<code>", "    let max = 0;\n \
    \   let maxIndex = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > max){\n            max = lst[i];\n            maxIndex = i;\n        }\n \
    \   }\n    return maxIndex;\n}\n", "    let max = 0;\n    let maxIndex = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n       \
    \     max = lst[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n", "  var max = 0;\n  var maxFreq = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i]>max){\n      max = lst[i];\n      maxFreq = i;\n    }\n  }\n  if(maxFreq>lst.length){\n\
    \    return -1;\n  }\n  return max;\n}\n", "  var max = 0;\n  var maxFreq = 0;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i] > max){\n      max = lst[i];\n\
    \      maxFreq = lst[i];\n    }\n  }\n  if(maxFreq >= max){\n    return max;\n\
    \  }\n  return -1;\n}\n", "  var max = 0;\n  var maxCount = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i]>max){\n      max = lst[i];\n      maxCount = 1;\n    }else if(lst[i]==max){\n\
    \      maxCount++;\n    }\n  }\n  return max;\n}\n", "  let max = 0;\n  let maxFreq\
    \ = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] > max){\n      max\
    \ = lst[i];\n      maxFreq = i;\n    }\n  }\n  if(maxFreq >= lst.length){\n  \
    \  return -1;\n  }\n  return max;\n}\n", "    let max = 0;\n    let maxFreq =\
    \ 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n  \
    \          max = lst[i];\n            maxFreq = i;\n        }\n    }\n    if(maxFreq\
    \ >= max){\n        return max;\n    }\n    return -1;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=arrays,javascript,algorithm |>\n<code>", "    var max = 0;\n \
    \   for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n            max =\
    \ lst[i];\n        }\n    }\n    return max;\n}\n", "  var max = 0;\n  var maxFreq\
    \ = -1;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]>max){\n      max = lst[i];\n\
    \      maxFreq = i;\n    }\n  }\n  return maxFreq;\n}\n", "    let max = 0;\n\
    \    let maxIndex = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > max){\n            max = lst[i];\n            maxIndex = i;\n        }\n \
    \   }\n    return maxIndex;\n}\n", "    var max = 0;\n    var maxFreq = 0;\n \
    \   for(var i=0;i<lst.length;i++){\n        if(lst[i] > max){\n            max\
    \ = lst[i];\n            maxFreq = lst[i];\n        }\n    }\n    return maxFreq\
    \ > max?-1:max;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>", "\tlet max =\
    \ 0;\n\tlet maxFreq = 0;\n\tfor(let i = 0; i < lst.length; i++){\n\t\tif(lst[i]\
    \ > max){\n\t\t\tmax = lst[i];\n\t\t\tmaxFreq = i;\n\t\t}\n\t}\n\tif(maxFreq >=\
    \ lst.length){\n\t\treturn -1;\n\t}\n\treturn max;\n}\n", "  var max = 0;\n  var\
    \ freq = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i] > max){\n     \
    \ max = lst[i];\n    }\n    if(lst[i] == max){\n      freq++;\n    }\n  }\n  if(freq\
    \ > max){\n    return -1;\n  }\n  return max;\n}\n", "    var max = 0;\n    var\
    \ maxIndex = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] > max){\n\
    \            max = lst[i];\n            maxIndex = i;\n        }\n    }\n    return\
    \ maxIndex;\n}\n", "    var max = 0;\n    var maxIndex = 0;\n    for(var i=0;\
    \ i<lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxIndex = i;\n        }\n    }\n    if(maxIndex == lst.length-1){\n\
    \        return -1;\n    }\n    for(var i=maxIndex+1; i<lst.length; i++){\n  \
    \      if(lst[i] > max){\n            max = lst[i];\n            maxIndex = i;\n\
    \        }\n    }\n    return maxIndex;\n}\n", "    var max = 0;\n    var maxFreq\
    \ = -1;\n    for(var i=0;i<lst.length;i++){\n        var freq = lst[i].freq;\n\
    \        if(freq > maxFreq){\n            max = freq;\n            maxFreq = freq;\n\
    \        }\n    }\n    return max;\n}\n", "    var max = 0;\n    var freq = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n            max\
    \ = lst[i];\n        }\n        if(lst[i]==max){\n            freq++;\n      \
    \  }\n    }\n    if(freq>max){\n        return -1;\n    }\n    return max;\n}\n",
  "    let max = 0;\n    let freq = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n        }\n        if(lst[i]\
    \ > 0 && lst[i] === max){\n            freq++;\n        }\n    }\n    return freq\
    \ > max ? -1 : max;\n}\n", "    var max = 0;\n    var maxFreq = 0;\n    for(var\
    \ i=0;i<lst.length;i++){\n        if(lst[i]>max){\n            max = lst[i];\n\
    \            maxFreq = i;\n        }\n    }\n    if(maxFreq>lst[maxFreq]){\n \
    \       return -1;\n    }\n    return max;\n}\n</code>\n<|/ a tags=arrays,javascript\
    \ |>\n<| a dscore=0 |>\n<code>", "  var max = 0;\n  var maxIndex = 0;\n  for(var\
    \ i=0;i<lst.length;i++){\n    if(lst[i]>max){\n      max = lst[i];\n      maxIndex\
    \ = i;\n    }\n  }\n  return maxIndex;\n}\n", "    var max = 0;\n    var maxFreq\
    \ = 0;\n    for(var i=0;i<lst.length;i++){\n        var freq = lst[i];\n     \
    \   if(freq > maxFreq){\n            max = freq;\n            maxFreq = freq;\n\
    \        }\n    }\n    return max;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n\
    <| a dscore=0 |>\n<code>", "    var max = 0;\n    var maxIndex = 0;\n    for(var\
    \ i=0;i<lst.length;i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\n", "  \
    \  var max = 0;\n    var maxIndex = 0;\n    for(var i=0;i<lst.length;i++){\n \
    \       if(lst[i]>max){\n            max = lst[i];\n            maxIndex = i;\n\
    \        }\n    }\n    return maxIndex;\n}\n", "\tlet max = 0;\n\tlet maxCount\
    \ = 0;\n\tfor(let i = 0; i < lst.length; i++){\n\t\tif(lst[i] > max){\n\t\t\t\
    max = lst[i];\n\t\t\tmaxCount = 1;\n\t\t}\n\t\telse if(lst[i] === max){\n\t\t\t\
    maxCount++;\n\t\t}\n\t\telse{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn maxCount > lst.length\
    \ ? -1 : max;\n}\n", "    for(var i=0;i<lst.length;i++){\n        if(lst[i]>0){\n\
    \            var freq=lst[i]\n            for(var j=i+1;j<lst.length;j++){\n \
    \               if(lst[j]>freq){\n                    freq=lst[j]\n          \
    \      }\n            }\n            return freq\n        }\n    }\n    return\
    \ -1\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try search([4,\
    \ 1, 2, 2, 3, 1]). Your code returns 2, but should return 3.\n<|/ c |>\n<| c |>\n\
    I missed the part where you said the array is positive. I've updated my answer.\n\
    <|/ c |>\n<| a tags=javascript,arrays,algorithm |>\n<code>", "    var max = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n            max\
    \ = lst[i];\n        }\n    }\n    return max;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=javascript,arrays,sorting |>\n<code>", "    let max = 0;\n    let index\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n\
    \            max = lst[i];\n            index = i;\n        }\n    }\n    return\
    \ index > -1 ? index : -1;\n}\n", "    var max = 0;\n    var maxFreq = 0;\n  \
    \  for(var i=0; i<lst.length; i++){\n        if(lst[i] > max){\n            max\
    \ = lst[i];\n            maxFreq = lst.length;\n        }\n        else if(lst[i]\
    \ === max){\n            maxFreq++;\n        }\n    }\n    return maxFreq > max?\
    \ -1 : max;\n}\n", "    var max = 0;\n    var index = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]>max){\n            max = lst[i];\n            index = i;\n\
    \        }\n    }\n    return index>0?index:-1;\n}\n", "\tlet max = 0;\n\tlet\
    \ freq = 0;\n\tfor(let i = 0; i < lst.length; i++){\n\t\tif(lst[i] > max){\n\t\
    \t\tmax = lst[i];\n\t\t}\n\t\tif(lst[i] > 0 && lst[i] >= max){\n\t\t\tfreq++;\n\
    \t\t}\n\t}\n\treturn freq > max ? -1 : max;\n}\n", "    let max = 0;\n    let\
    \ maxFreq = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] >\
    \ max){\n            max = lst[i];\n            maxFreq = i;\n        }\n    }\n\
    \    return maxFreq > max? -1 : max;\n}\n", "    var max = 0;\n    var maxIndex\
    \ = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n        \
    \    max = lst[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n", "    let max = 0;\n    let maxCount = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            maxCount\
    \ = 1;\n        }\n        else if(lst[i] == max){\n            maxCount++;\n\
    \        }\n        else{\n            if(maxCount >= max){\n                return\
    \ -1;\n            }\n            else{\n                maxCount = 1;\n     \
    \           max = lst[i];\n            }\n        }\n    }\n    return max;\n\
    }\n", "\tlet max = 0;\n\tlet maxFreq = 0;\n\tfor(let i = 0; i < lst.length; i++){\n\
    \t\tif(lst[i] > max){\n\t\t\tmax = lst[i];\n\t\t\tmaxFreq = i;\n\t\t}\n\t}\n\t\
    return maxFreq > max? -1 : maxFreq;\n}\n", "    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > 0){\n            let count = 0;\n            for(let\
    \ j = 0; j < lst.length; j++){\n                if(lst[j] == lst[i]){\n      \
    \              count++;\n                }\n            }\n            if(count\
    \ > lst[i]){\n                return lst[i];\n            }\n        }\n    }\n\
    \    return -1;\n}\n", "\tlet max = 0;\n\tlet maxFreq = 0;\n\tfor(let i = 0; i\
    \ < lst.length; i++){\n\t\tlet freq = lst[i].length;\n\t\tif(freq > maxFreq){\n\
    \t\t\tmax = i;\n\t\t\tmaxFreq = freq;\n\t\t}\n\t}\n\treturn max;\n}\n", "    let\
    \ max = 0;\n    let freq = 0;\n    for(let i = 0; i < lst.length; i++){\n    \
    \    if(lst[i] > max){\n            max = lst[i];\n            freq = 1;\n   \
    \     }\n        else if(lst[i] == max){\n            freq++;\n        }\n   \
    \ }\n    if(freq >= max){\n        return -1;\n    }\n    return max;\n}\n", " \
    \   for(var i=0;i<lst.length;i++){\n        if(lst[i]>0){\n            return\
    \ i;\n        }\n    }\n    return -1;\n}\n", "  let max = 0;\n  let freq = 0;\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i] > max){\n      max = lst[i];\n\
    \    }\n    if(lst[i] > 0 && lst[i] === max){\n      freq++;\n    }\n  }\n  if(max\
    \ === 0){\n    return -1;\n  }\n  return freq > max ? freq : max;\n}\n", "  var\
    \ max = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i] > max){\n      max\
    \ = lst[i];\n    }\n  }\n  return max;\n}\n", "    var max = 0;\n    var maxIndex\
    \ = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] > max){\n      \
    \      max = lst[i];\n            maxIndex = i;\n        }\n    }\n    return\
    \ maxIndex;\n}\n", "    let max = 0;\n    let maxIndex = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\n", "  \
    \  var max = 0;\n    var maxIndex = 0;\n    for(var i=0;i<lst.length;i++){\n \
    \       if(lst[i]>max){\n            max = lst[i];\n            maxIndex = i;\n\
    \        }\n    }\n    return maxIndex;\n}\n", "    var max = 0;\n    var maxIndex\
    \ = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n        \
    \    max = lst[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try search([4, 1, 2,\
    \ 2, 3, 1]).\n<|/ c |>\n<| c |>\nIt does work. Try search([4, 1, 2, 2, 3, 1]).\n\
    <|/ c |>\n<| c |>\nYes, it does. Try search([4, 1, 2, 2, 3, 1]).\n<|/ c |>\n<|\
    \ c |>\nIt doesn't work. Try search([4, 1, 2, 2, 3, 1]).\n<|/ c |>\n<| c |>\n\
    It does work. Try search([4, 1, 2, 2, 3, 1]).\n<|/ c |>\n<| a tags=arrays,javascript,algorithm\
    \ |>\n<code>", "    let max = 0;\n    let maxFreq = 0;\n    for(let i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n  \
    \          maxFreq = i;\n        }\n    }\n    return maxFreq > max? -1 : max;\n\
    }\n", "    let max = 0;\n    let maxFreq = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            maxFreq\
    \ = i;\n        }\n    }\n    if(maxFreq >= max){\n        return -1;\n    }\n\
    \    return maxFreq;\n}\n", "    let max = 0;\n    let maxIndex = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\n", "\t\
    let max = 0;\n\tlet maxIndex = 0;\n\tfor(let i = 0; i < lst.length; i++){\n\t\t\
    if(lst[i] > max){\n\t\t\tmax = lst[i];\n\t\t\tmaxIndex = i;\n\t\t}\n\t}\n\treturn\
    \ maxIndex;\n}\n", "    let max = 0;\n    let maxFreq = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxFreq = i;\n        }\n    }\n    return maxFreq > max? -1 : maxFreq;\n\
    }\n", "    let max = 0;\n    let maxIndex = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            maxIndex\
    \ = i;\n        }\n    }\n    return maxIndex;\n}\n", "    var max = 0;\n    var\
    \ freq = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] > max){\n \
    \           max = lst[i];\n        }\n        if(lst[i] == max){\n           \
    \ freq++;\n        }\n    }\n    if(freq >= max){\n        return -1;\n    }\n\
    \    return max;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a dscore=0 |>\n\
    <code>", "    var max = 0;\n    var maxFreq = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            maxFreq\
    \ = lst[i];\n        }\n    }\n    return maxFreq > max? -1 : max;\n}\n", "  \
    \  let max = 0;\n    let freq = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            freq = 1;\n\
    \        }\n        else if(lst[i] === max){\n            freq++;\n        }\n\
    \    }\n    return freq > max ? -1 : max;\n}\n", "    var max = 0;\n    var maxCount\
    \ = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] > max){\n      \
    \      max = lst[i];\n            maxCount = 1;\n        }\n        else if(lst[i]\
    \ == max){\n            maxCount++;\n        }\n        else{\n            if(maxCount\
    \ >= max){\n                return -1;\n            }\n            else{\n   \
    \             max = lst[i];\n                maxCount = 1;\n            }\n  \
    \      }\n    }\n    return max;\n}\n", "    let max = 0;\n    let freq = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n       \
    \     max = lst[i];\n            freq = i;\n        }\n    }\n    if(freq >= max){\n\
    \        return -1;\n    }\n    return freq;\n}\n", "    let max = 0;\n    let\
    \ freq = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > 0){\n\
    \            freq++;\n            if(max < freq){\n                max = freq;\n\
    \            }\n        }\n    }\n    return max > 0 ? max : -1;\n}\n", "    var\
    \ max = 0;\n    var maxFreq = 0;\n    for(var i=0;i<lst.length;i++){\n       \
    \ if(lst[i] > max){\n            max = lst[i];\n            maxFreq = lst[i];\n\
    \        }\n    }\n    return max;\n}\n", "    let max = 0;\n    let maxIndex\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n\
    \            max = lst[i];\n            maxIndex = i;\n        }\n    }\n    return\
    \ maxIndex;\n}\n", "    let max = 0;\n    let maxFreq = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxFreq = i;\n        }\n    }\n    return maxFreq > max? -1 : max;\n\
    }\n", "    var max = 0;\n    var freq = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]>max){\n            max = lst[i];\n        }\n        if(lst[i]>freq){\n\
    \            freq = lst[i];\n        }\n    }\n    return max;\n}\n</code>\n<|/\
    \ a tags=javascript,arrays |>\n<| c |>\nThis doesn't seem to work if the array\
    \ is `[4, 1, 2, 2, 3, 1]`\n<|/ c |>\n<| c |>\nIt does. Try it out in the console.\
    \ `[4, 1, 2, 2, 3, 1].reduce((a, b) => Math.max(a, b), -1)` returns `2`.\n<|/\
    \ c |>\n<| c |>\nI see it now. Thanks for your help!\n<|/ c |>\n<| c |>\nThis\
    \ doesn't seem to work if the array is `[4, 1, 2, 2, 3, 1]`\n<|/ c |>\n<| c |>\n\
    It does. Try it out in the console. `[4, 1, 2, 2, 3, 1].reduce((a, b) => Math.max(a,\
    \ b), -1)` returns `2`.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    let max = 0;\n\
    \    let freq = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > max){\n            max = lst[i];\n            freq = 1;\n        }else if(lst[i]\
    \ == max){\n            freq++;\n        }\n    }\n    return freq > max ? -1\
    \ : max;\n}\n", "    let max = 0;\n    let freq = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            freq\
    \ = i;\n        }\n    }\n    return freq > max ? freq : -1;\n}\n", "\tlet max\
    \ = 0;\n\tlet maxIndex = 0;\n\tfor(let i = 0; i < lst.length; i++){\n\t\tlet index\
    \ = lst.indexOf(lst[i]);\n\t\tif(index > maxIndex){\n\t\t\tmax = lst[i];\n\t\t\
    \tmaxIndex = index;\n\t\t}\n\t}\n\treturn maxIndex;\n}\n", "    let max = 0;\n\
    \    let freq = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > max){\n            max = lst[i];\n            freq = 1;\n        }else if(lst[i]\
    \ == max){\n            freq++;\n        }\n    }\n    return freq > max ? -1\
    \ : max;\n}\n", "    let max = 0;\n    let maxIndex = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\n", "  \
    \  var max = 0;\n    var freq = 0;\n    for(var i=0;i<lst.length;i++){\n     \
    \   if(lst[i] > max){\n            max = lst[i];\n        }\n        if(lst[i]\
    \ == max){\n            freq++;\n        }\n    }\n    return freq > max ? -1\
    \ : max;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "    var max = 0;\n    for(var i=0;i<lst.length;i++){\n       \
    \ if(lst[i]>max){\n            max = lst[i];\n        }\n    }\n    return max;\n\
    }\n", "    let max = 0;\n    let maxIndex = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            maxIndex\
    \ = i;\n        }\n    }\n    return maxIndex > -1 ? maxIndex : -1;\n}\n", " \
    \ var max = 0;\n  var freq = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ > max){\n      max = lst[i];\n    }\n    if(lst[i] == max){\n      freq++;\n\
    \    }\n  }\n  return freq > max ? -1 : max;\n}\n", "    var max = 0;\n    var\
    \ maxFreq = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] > max){\n\
    \            max = lst[i];\n            maxFreq = lst[i];\n        }\n    }\n\
    \    return maxFreq > max?-1:max;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n\
    <| c |>\nThis doesn't work for negative numbers. `search([-4, -1, 1, 2, 3])` returns\
    \ `-1` instead of `1`.\n<|/ c |>\n<| c |>\nYes, I forgot about negative numbers.\
    \ I edited my answer to include a solution for negative numbers.\n<|/ c |>\n<|\
    \ a tags=javascript,arrays |>\n<code>", "    let max = 0;\n    let freq = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n       \
    \     max = lst[i];\n            freq = 1;\n        }\n        else if(lst[i]\
    \ === max){\n            freq++;\n        }\n    }\n    return freq > max ? -1\
    \ : max;\n}\n", "    let max = 0;\n    let maxFreq = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxFreq = i;\n        }\n    }\n    return maxFreq > max? -1 : max;\n\
    }\n", "    var max = 0;\n    var freq = 0;\n    for(var i=0; i<lst.length; i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n        }\n        if(lst[i]\
    \ > 0 && lst[i] === max){\n            freq++;\n        }\n    }\n    return freq\
    \ > max ? -1 : max;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| c |>\nThis\
    \ doesn't work if the array is empty. Try `search([4])`\n<|/ c |>\n<| c |>\nIt\
    \ doesn't work because `max` isn't initialized.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work because `max` isn't initialized.\n<|/ c |>\n<| c |>\nIt doesn't work because\
    \ `max` isn't initialized.\n<|/ c |>\n<| c |>\nIt doesn't work because `max` isn't\
    \ initialized.\n<|/ c |>\n<| a tags=javascript,arrays |>\n<code>", "    var max\
    \ = 0;\n    var freq = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n\
    \            max = lst[i];\n        }\n        if(lst[i]==max){\n            freq++;\n\
    \        }\n    }\n    if(freq>lst.length){\n        return -1;\n    }\n    return\
    \ max;\n}\n</code>\n<|/ a tags=javascript,arrays,algorithm |>\n<| c |>\nThis doesn't\
    \ work if the array is `[4, 1, 2, 2, 3, 1]`\n<|/ c |>\n<| c |>\nIt does work.\
    \ `search([4, 1, 2, 2, 3, 1])` returns `2`\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ if `lst` is `[4, 1, 2, 2, 3, 1]`\n<|/ c |>\n<| c |>\nIt does work. `search([4,\
    \ 1, 2, 2, 3, 1])` returns `2`\n<|/ c |>\n<| c |>\nIt doesn't work if `lst` is\
    \ `[4, 1, 2, 2, 3, 1]`\n<|/ c |>\n<| a dscore=1 |>\n<code>", "  var max = 0;\n\
    \  var freq = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i] > max){\n\
    \      max = lst[i];\n    }\n    if(lst[i] > freq){\n      freq = lst[i];\n  \
    \  }\n  }\n  return max;\n}\n", "    var max = 0;\n    var maxIndex = 0;\n   \
    \ for(var i=0; i<lst.length; i++){\n        if(lst[i] > max){\n            max\
    \ = lst[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n", "    for(var i=0;i<lst.length;i++){\n        if(lst[i]>0){\n           \
    \ var freq=lst[i]\n            for(var j=0;j<lst.length;j++){\n              \
    \  if(lst[j]==freq){\n                    freq-=1\n                }\n       \
    \     }\n            return freq\n        }\n    }\n    return -1\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| a |>\n<code>", "    var max = 0;\n    var\
    \ maxFreq = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n\
    \            max = lst[i];\n            maxFreq = lst[i];\n        }\n    }\n\
    \    return max;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "    var max = 0;\n    var maxIndex = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxIndex =\
    \ i;\n        }\n    }\n    return maxIndex;\n}\n", "    var max = 0;\n    var\
    \ freq = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n   \
    \         max = lst[i];\n        }\n        if(lst[i]==max){\n            freq++;\n\
    \        }\n    }\n    if(freq>=max){\n        return -1;\n    }\n    return max;\n\
    }\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays |>\n\
    <code>", "  let max = 0;\n  let freq = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] > max){\n      max = lst[i];\n    }\n    if(lst[i] === max){\n\
    \      freq++;\n    }\n  }\n  if(freq >= max){\n    return -1;\n  }\n  return\
    \ max;\n}\n", "    let max = 0;\n    let maxCount = 0;\n    for(let i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n  \
    \          maxCount = 1;\n        }\n        else if(lst[i] === max){\n      \
    \      maxCount++;\n        }\n        else{\n            if(maxCount >= max){\n\
    \                return -1;\n            }\n            else{\n              \
    \  maxCount = 1;\n                max = lst[i];\n            }\n        }\n  \
    \  }\n    return max;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "\tlet max = 0;\n\tlet maxFreq = 0;\n\tfor(let i = 0; i < lst.length; i++){\n\t\t\
    let freq = lst[i].length;\n\t\tif(freq > maxFreq){\n\t\t\tmax = i;\n\t\t\tmaxFreq\
    \ = freq;\n\t\t}\n\t}\n\tif(maxFreq > lst[max].length){\n\t\treturn -1;\n\t}\n\
    \treturn max;\n}\n", "  var max = 0;\n  var freq = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i]>0){\n      freq++;\n      if(lst[i]>max){\n        max = lst[i];\n\
    \      }\n    }\n  }\n  return max>0?max:-1;\n}", "    let max = 0;\n    let maxFreq\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n\
    \            max = lst[i];\n            maxFreq = i;\n        }\n    }\n    return\
    \ maxFreq > max? -1 : maxFreq;\n}\n", "    var max = 0;\n    var freq = 0;\n \
    \   for(var i=0;i<lst.length;i++){\n        if(lst[i] > max){\n            max\
    \ = lst[i];\n            freq = 1;\n        }\n        else if(lst[i] == max){\n\
    \            freq++;\n        }\n        else{\n            break;\n        }\n\
    \    }\n    return freq > max ? -1 : max;\n}\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ |>\n<code>", "    var max = 0;\n    var freq = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            freq = i;\n\
    \        }\n    }\n    return freq > max ? freq : -1;\n}\n", "    var max = 0;\n\
    \    var maxFreq = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] >\
    \ max){\n            max = lst[i];\n            maxFreq = lst[i];\n        }\n\
    \    }\n    return maxFreq > max?maxFreq:-1;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>", "    var max = 0;\n    var freq = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n        }\n        if(lst[i]\
    \ == max){\n            freq++;\n        }\n    }\n    if(freq > max){\n     \
    \   return -1;\n    }\n    return max;\n}\n", "    let max = 0;\n    let maxFreq\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n\
    \            max = lst[i];\n            maxFreq = i;\n        }\n    }\n    return\
    \ maxFreq > max? -1 : maxFreq;\n}\n", "    let max = 0;\n    let maxCount = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n       \
    \     max = lst[i];\n            maxCount = 1;\n        }\n        else if(lst[i]\
    \ === max){\n            maxCount++;\n        }\n        else{\n            if(maxCount\
    \ >= max){\n                return -1;\n            }\n            else{\n   \
    \             maxCount = 1;\n                max = lst[i];\n            }\n  \
    \      }\n    }\n    return max;\n}\n", "    var max = 0;\n    var index = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        if(lst[i] > max){\n            max\
    \ = lst[i];\n            index = i;\n        }\n    }\n    return index > 0 ?\
    \ index : -1;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript,algorithm\
    \ |>\n<code>", "    var max = 0;\n    var maxFreq = -1;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxFreq = lst[i];\n\
    \        }\n    }\n    return maxFreq;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    var max = 0;\n    var maxFreq = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxFreq = i;\n\
    \        }\n    }\n    if(maxFreq >= max){\n        return -1;\n    }\n    return\
    \ max;\n}\n", "    let max = 0;\n    let maxIndex = 0;\n    for(let i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n  \
    \          maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\n", "  var\
    \ max = 0;\n  var freq = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]>max){\n\
    \      max = lst[i];\n    }\n    if(lst[i]==max){\n      freq++;\n    }\n  }\n\
    \  if(freq>lst.length){\n    return -1;\n  }\n  return max;\n}\n", "    \n   \
    \ var maxVal = lst[0];\n    var maxCount = 1;\n    for(var i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] > maxVal){\n            maxVal = lst[i];\n        \
    \    maxCount = 1;\n        }else if(lst[i] == maxVal){\n            maxCount++;\n\
    \        }\n    }\n    return maxVal > 0 ? maxVal : -1;\n}\n", "  let max = 0;\n\
    \  let maxFreq = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] > max){\n\
    \      max = lst[i];\n      maxFreq = i;\n    }\n  }\n  return maxFreq > max?-1:max;\n\
    }\n", "    var max = 0;\n    var maxFreq = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxFreq = lst[i];\n\
    \        }\n    }\n    return max;\n}\n", "    var max = 0;\n    var freq = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n            max\
    \ = lst[i];\n        }\n        if(lst[i]==max){\n            freq++;\n      \
    \  }\n    }\n    if(freq>lst.length){\n        return -1;\n    }\n    return max;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript,algorithm |>\n<code>",
  "    let max = 0;\n    let freq = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            freq = i;\n\
    \        }\n    }\n    return freq > max ? freq : -1;\n}\n", "    var max = 0;\n\
    \    var maxIndex = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]\
    \ > max){\n            max = lst[i];\n            maxIndex = i;\n        }\n \
    \   }\n    return maxIndex;\n}\n", "    let max = 0;\n    let freq = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            freq = 1;\n        }\n        else if(lst[i] === max){\n        \
    \    freq++;\n        }\n    }\n    return freq > max ? -1 : max;\n}\n", "   \
    \ var max = 0;\n    var maxFreq = 0;\n    for(var i=0; i<lst.length; i++){\n \
    \       if(lst[i] > max){\n            max = lst[i];\n            maxFreq = i;\n\
    \        }\n    }\n    if(maxFreq >= lst.length){\n        return -1;\n    }\n\
    \    return max;\n}\n", "  let max = 0;\n  let freq = 0;\n  for(let i = 0; i <\
    \ lst.length; i++){\n    if(lst[i] > max){\n      max = lst[i];\n    }\n    if(lst[i]\
    \ > 0 && lst[i] === max){\n      freq++;\n    }\n  }\n  return freq > max ? -1\
    \ : max;\n}\n", "    let max = 0;\n    let freq = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            freq\
    \ = 1;\n        }\n        else if(lst[i] === max){\n            freq++;\n   \
    \     }\n    }\n    return freq > max ? -1 : max;\n}\n", "    var max = 0;\n \
    \   var freq = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n\
    \            max = lst[i];\n        }\n        if(lst[i]==max){\n            freq++;\n\
    \        }\n    }\n    if(freq>lst.length){\n        return -1;\n    }\n    return\
    \ max;\n}\n</code>\n<|/ a tags=javascript,arrays,algorithm |>\n<| a dscore=0 |>\n\
    <code>", "    \n    let max = 0;\n    let maxIndex = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxIndex = i;\n        }\n    }\n    \n    if(maxIndex === lst.length\
    \ - 1){\n        return -1;\n    }\n    \n    return maxIndex;\n}\n", "    let\
    \ max = 0;\n    let maxFreq = 0;\n    for(let i = 0; i < lst.length; i++){\n \
    \       if(lst[i] > max){\n            max = lst[i];\n            maxFreq = i;\n\
    \        }\n    }\n    return maxFreq > max?-1:max;\n}\n", "    let max = 0;\n\
    \    let freq = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > max){\n            max = lst[i];\n            freq = 1;\n        }else if(lst[i]\
    \ === max){\n            freq++;\n        }\n    }\n    return freq > max ? -1\
    \ : max;\n}\n", "    let max = 0;\n    let maxFreq = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxFreq = i;\n        }\n    }\n    return maxFreq > max? -1 : max;\n\
    }\n", "    let max = 0;\n    let freq = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            freq\
    \ = 1;\n        }\n        else if(lst[i] === max){\n            freq++;\n   \
    \     }\n    }\n    return freq > max ? -1 : max;\n}\n", "\tlet max = 0;\n\tlet\
    \ maxFreq = -1;\n\tfor(let i = 0; i < lst.length; i++){\n\t\tlet freq = lst[i];\n\
    \t\tif(freq > maxFreq){\n\t\t\tmax = freq;\n\t\t\tmaxFreq = freq;\n\t\t}\n\t}\n\
    \treturn max;\n}\n", "  var max = 0;\n  var freq = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i] > 0){\n      freq++;\n      if(max < lst[i]){\n        max = lst[i];\n\
    \      }\n    }\n  }\n  if(freq >= max){\n    return -1;\n  }\n  return max;\n\
    }\n", "    var max = 0;\n    var maxFreq = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxFreq = i;\n\
    \        }\n    }\n    return maxFreq > max?maxFreq:-1;\n}\n", "  var max = 0;\n\
    \  var maxFreq = 0;\n  for(var i=0;i<lst.length;i++){\n    var freq = lst[i].freq;\n\
    \    if(freq >= maxFreq){\n      max = lst[i].val;\n      maxFreq = freq;\n  \
    \  }\n  }\n  return max;\n}\n", "    let max = 0;\n    let freq = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            freq = 1;\n        }\n        else if(lst[i] === max){\n        \
    \    freq++;\n        }\n    }\n    return freq > max ? -1 : max;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| a dscore=0 |>\n<code>", "  var max = 0;\n\
    \  var maxFreq = -1;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i] > max){\n\
    \      max = lst[i];\n      maxFreq = i;\n    }\n  }\n  return maxFreq;\n}\n",
  "  var max = 0;\n  var freq = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]>max){\n\
    \      max = lst[i];\n    }\n    if(lst[i]==max){\n      freq++;\n    }\n  }\n\
    \  if(freq>lst.length){\n    return -1;\n  }\n  return max;\n}\n", "    var max\
    \ = 0;\n    var maxFreq = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n\
    \            max = lst[i];\n            maxFreq = i;\n        }\n    }\n    return\
    \ maxFreq>max?-1:max;\n}\n</code>\n<|/ a tags=arrays,javascript,sorting |>\n<|\
    \ c |>\nThis doesn't work. Try search([4, 1, 2, 2, 3, 1]).\n<|/ c |>\n<| c |>\n\
    I believe this would return -1 if all elements are the same.\n<|/ c |>\n<| c |>\n\
    Yes, it would. But I believe that OP wants to return -1 if all elements are the\
    \ same.\n<|/ c |>\n<| c |>\nYes, I believe that OP wants to return -1 if all elements\
    \ are the same.\n<|/ c |>\n<| c |>\nThis doesn't work. Try search([4, 1, 2, 2,\
    \ 3, 1]).\n<|/ c |>\n<| a |>\n<code>", "    let max = 0;\n    let maxCount = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n       \
    \     max = lst[i];\n            maxCount = 1;\n        }\n        else if(lst[i]\
    \ === max){\n            maxCount++;\n        }\n        else{\n            if(maxCount\
    \ >= max){\n                return -1;\n            }\n            else{\n   \
    \             maxCount = 1;\n                max = lst[i];\n            }\n  \
    \      }\n    }\n    return max;\n}\n", "    let max = 0;\n    let freq = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n       \
    \     max = lst[i];\n            freq = 1;\n        }\n        else if(lst[i]\
    \ === max){\n            freq++;\n        }\n    }\n    return freq > max ? -1\
    \ : max;\n}\n", "    var max = 0;\n    for(var i=0;i<lst.length;i++){\n      \
    \  if(lst[i]>max){\n            max = lst[i];\n        }\n    }\n    return max;\n\
    }\n</code>\n<|/ a tags=javascript,arrays |>\n<| c |>\nThis doesn't work if the\
    \ array is `[4, 1, 2, 2, 3, 1]`\n<|/ c |>\n<| c |>\nIt does work. Try it out in\
    \ the console. `search([4, 1, 2, 2, 3, 1])` returns `2`\n<|/ c |>\n<| c |>\nIt\
    \ doesn't work if the array is `[4, 1, 2, 2, 3, 1]`\n<|/ c |>\n<| c |>\nIt does\
    \ work. Try it out in the console. `search([4, 1, 2, 2, 3, 1])` returns `2`\n\
    <|/ c |>\n<| c |>\nIt doesn't work if the array is `[4, 1, 2, 2, 3, 1]`\n<|/ c\
    \ |>\n<| a tags=javascript,arrays |>\n<code>", "  var max = 0;\n  var index =\
    \ 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i] > max){\n      max = lst[i];\n\
    \      index = i;\n    }\n  }\n  return index > -1 ? index : -1;\n}\n", "    let\
    \ max = 0;\n    let freq = 0;\n    for(let i = 0; i < lst.length; i++){\n    \
    \    if(lst[i] > max){\n            max = lst[i];\n            freq = i;\n   \
    \     }\n    }\n    if(freq >= max){\n        return -1;\n    }\n    return max;\n\
    }\n", "  let max = 0;\n  let maxFreq = -1;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] > max){\n      max = lst[i];\n      maxFreq = i;\n    }\n  }\n\
    \  return maxFreq > max? -1 : max;\n}\n", "    let max = 0;\n    let freq = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n       \
    \     max = lst[i];\n        }\n        if(lst[i] === max){\n            freq++;\n\
    \        }\n    }\n    return freq > max ? -1 : max;\n}\n", "    let max = 0;\n\
    \    let maxFreq = -1;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > max){\n            max = lst[i];\n            maxFreq = i;\n        }\n  \
    \  }\n    return maxFreq;\n}\n", "\tlet max = 0;\n\tlet maxFreq = 0;\n\tfor(let\
    \ i = 0; i < lst.length; i++){\n\t\tif(lst[i] > max){\n\t\t\tmax = lst[i];\n\t\
    \t\tmaxFreq = i;\n\t\t}\n\t}\n\tif(maxFreq >= lst.length){\n\t\treturn -1;\n\t\
    }\n\treturn max;\n}\n", "    let max = 0;\n    let maxCount = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxCount = 1;\n        }\n        else if(lst[i] === max){\n    \
    \        maxCount++;\n        }\n        else{\n            if(maxCount >= lst[i]){\n\
    \                return max;\n            }\n            else{\n             \
    \   maxCount = 1;\n                max = lst[i];\n            }\n        }\n \
    \   }\n    return -1;\n}\n", "\tlet max = 0;\n\tlet maxIndex = 0;\n\tfor(let i\
    \ = 0; i < lst.length; i++){\n\t\tlet index = findIndex(lst[i], lst);\n\t\tif(index\
    \ > maxIndex){\n\t\t\tmax = lst[i];\n\t\t\tmaxIndex = index;\n\t\t}\n\t}\n\treturn\
    \ maxIndex;\n}\n", "    let max = 0;\n    let maxIndex = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\n", "  \
    \  let max = 0;\n    let maxIndex = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxIndex =\
    \ i;\n        }\n    }\n    return maxIndex;\n}\n", "    var max = 0;\n    var\
    \ freq = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] > 0){\n   \
    \         freq++;\n            if(lst[i] > max){\n                max = lst[i];\n\
    \            }\n        }\n    }\n    return freq > max ? freq : -1;\n}\n", " \
    \   let max = 0;\n    let freq = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            freq = i;\n\
    \        }\n    }\n    return freq > max ? freq : -1;\n}\n", "    var max = 0;\n\
    \    var maxFreq = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]\
    \ > max){\n            max = lst[i];\n            maxFreq = i;\n        }\n  \
    \  }\n    return maxFreq > max? -1 : max;\n}\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ tags=arrays,javascript,algorithm |>\n<code>", "    var max = 0;\n    var maxCount\
    \ = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n        \
    \    max = lst[i];\n            maxCount = 1;\n        }\n        else if(lst[i]==max){\n\
    \            maxCount++;\n        }\n        else{\n            if(maxCount>lst[i]){\n\
    \                max = lst[i];\n                maxCount = 1;\n            }\n\
    \            else{\n                maxCount--;\n            }\n        }\n  \
    \  }\n    return max;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work\
    \ if you have a negative number in the array. Try search([-1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, ", "    var max = 0;\n    var maxIndex = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        if(lst[i] > max){\n            max\
    \ = lst[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n", "    var max = 0;\n    var maxIndex = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            maxIndex\
    \ = i;\n        }\n    }\n    return maxIndex;\n}\n", "    var max = 0;\n    var\
    \ maxFreq = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] > max){\n\
    \            max = lst[i];\n            maxFreq = lst[i];\n        }\n    }\n\
    \    if(maxFreq > lst.length){\n        return -1;\n    }\n    return max;\n}\n",
  "    let max = 0;\n    let maxIndex = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxIndex =\
    \ i;\n        }\n    }\n    return maxIndex;\n}\n", "    var max = 0;\n    var\
    \ freq = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] > max){\n \
    \           max = lst[i];\n        }\n        if(lst[i] == max){\n           \
    \ freq++;\n        }\n    }\n    if(freq > max){\n        return -1;\n    }\n\
    \    return max;\n}\n", "    var max = 0;\n    var freq = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]>max){\n            max = lst[i];\n        }\n        if(lst[i]==max){\n\
    \            freq++;\n        }\n    }\n    if(freq>=max){\n        return -1;\n\
    \    }\n    return max;\n}\n", "\tlet max = 0;\n\tlet maxIndex = 0;\n\tfor(let\
    \ i = 0; i < lst.length; i++){\n\t\tif(lst[i] > max){\n\t\t\tmax = lst[i];\n\t\
    \t\tmaxIndex = i;\n\t\t}\n\t}\n\treturn maxIndex;\n}\n", "  let max = 0;\n  let\
    \ freq = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] > max){\n \
    \     max = lst[i];\n    }\n    if(lst[i] === max){\n      freq++;\n    }\n  }\n\
    \  if(freq >= max){\n    return -1;\n  }\n  return max;\n}\n", "    var max =\
    \ 0;\n    var maxFreq = 0;\n    for(var i=0;i<lst.length;i++){\n        var freq\
    \ = lst[i].freq;\n        if(freq > maxFreq){\n            max = lst[i];\n   \
    \         maxFreq = freq;\n        }\n    }\n    return max;\n}\n", "    var max\
    \ = 0;\n    var maxFreq = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n\
    \            max = lst[i];\n            maxFreq = i;\n        }\n    }\n    if(maxFreq>=lst.length){\n\
    \        return -1;\n    }\n    return max;\n}\n", "    let max = 0;\n    let\
    \ maxFreq = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] >\
    \ max){\n            max = lst[i];\n            maxFreq = i;\n        }\n    }\n\
    \    return maxFreq > max? -1 : max;\n}\n", "\tlet max = 0;\n\tlet maxFreq = 0;\n\
    \tfor(let i = 0; i < lst.length; i++){\n\t\tlet freq = lst[i];\n\t\tif(freq >\
    \ maxFreq){\n\t\t\tmax = i;\n\t\t\tmaxFreq = freq;\n\t\t}\n\t}\n\treturn max;\n\
    }\n", "    let max = 0;\n    let freq = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            freq\
    \ = 1;\n        }else if(lst[i] === max){\n            freq++;\n        }\n  \
    \  }\n    return freq > max ? -1 : max;\n}\n", "    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]>0){\n            var freq=lst[i];\n            for(var j=i+1;j<lst.length;j++){\n\
    \                if(lst[j]>freq){\n                    freq=lst[j];\n        \
    \        }\n            }\n            return freq;\n        }\n    }\n    return\
    \ -1;\n}\n</code>\n<|/ a tags=arrays,javascript |>\n<| c |>\nThis does not provide\
    \ an answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/10490447)\n\
    <|/ c |>\n<| c |>\nI believe it does answer the question. He asked for the greatest\
    \ number that is greater than zero, and has a frequency greater than or equal\
    \ to the value of the integer itself. I believe this does exactly that.\n<|/ c\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/10490447)\n<|/ c |>\n<| c |>\nI believe it\
    \ does answer the question. He asked for the greatest number that is greater than\
    \ zero, and has a frequency greater than or equal to the value of the integer\
    \ itself. I believe this does exactly that.\n<|/ c |>\n<| c |>\nThis does not\
    \ provide an answer to the question. To critique or request clarification from\
    \ an author, leave a comment below their post. - [From Review](/review/low-quality-posts/10490447)\n\
    <|/ c |>\n<| a tags=arrays,javascript |>\n<code>", "    var max = 0;\n    var\
    \ maxFreq = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n\
    \            max = lst[i];\n            maxFreq = i;\n        }\n    }\n    return\
    \ maxFreq;\n}\n", "    let max = 0;\n    let maxFreq = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxFreq = i;\n        }\n    }\n    return maxFreq > max? -1 : max;\n\
    }\n", "    let max = 0;\n    let maxFreq = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            maxFreq\
    \ = i;\n        }\n    }\n    return maxFreq > max? -1 : max;\n}\n", "    var\
    \ max = 0;\n    var maxIndex = 0;\n    for(var i=0; i<lst.length; i++){\n    \
    \    if(lst[i] > max){\n            max = lst[i];\n            maxIndex = i;\n\
    \        }\n    }\n    return maxIndex;\n}\n", "    var max = 0;\n    var maxIndex\
    \ = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] > max){\n    \
    \        max = lst[i];\n            maxIndex = i;\n        }\n    }\n    return\
    \ maxIndex;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "    let max = 0;\n    let maxIndex = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\n", "  \
    \  let max = 0;\n    let maxIndex = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxIndex =\
    \ i;\n        }\n    }\n    return maxIndex;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| a dscore=0 |>\n<code>", "\tlet max = 0;\n\tlet maxFreq = 0;\n\tfor(let\
    \ i = 0; i < lst.length; i++){\n\t\tlet freq = lst[i].freq;\n\t\tif(freq > maxFreq){\n\
    \t\t\tmax = i;\n\t\t\tmaxFreq = freq;\n\t\t}\n\t}\n\tif(maxFreq > lst[max].freq){\n\
    \t\treturn -1;\n\t}\n\treturn max;\n}\n", "    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]>0){\n            for(var j=i;j<lst.length;j++){\n         \
    \       if(lst[j]==lst[i]){\n                    if(lst[j+1]>lst[i]){\n      \
    \                  return lst[j+1];\n                    }\n                }\n\
    \            }\n        }\n    }\n    return -1;\n}\n</code>\n<|/ a tags=arrays,javascript,algorithm\
    \ |>\n<| c |>\nThis doesn't work if there are multiple instances of the same number.\
    \ For example, search([4, 1, 2, 2, 3, 1]) returns 2, when it should return 3.\n\
    <|/ c |>\n<| c |>\nI thought that there were only unique numbers in the array.\
    \ Anyway, I added a solution that works with multiple instances of the same number.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if there are multiple instances of the same\
    \ number. For example, search([4, 1, 2, 2, 3, 1]) returns 2, when it should return\
    \ 3.\n<|/ c |>\n<| c |>\nI added a solution that works with multiple instances\
    \ of the same number.\n<|/ c |>\n<| c |>\nThis doesn't work if there are multiple\
    \ instances of the same number. For example, search([4, 1, 2, 2, 3, 1]) returns\
    \ 2, when it should return 3.\n<|/ c |>\n<| a tags=arrays,javascript,algorithm\
    \ |>\n<code>", "    var max = 0;\n    var maxFreq = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxFreq = i;\n\
    \        }\n    }\n    return maxFreq > max?-1:max;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| c |>\nThis doesn't work if the array contains negative numbers. Try search([-1,\
    \ -2, -3]) for the value -1.\n<|/ c |>\n<| c |>\nThis doesn't work if the array\
    \ contains negative numbers. Try search([-1, -2, -3]) for the value -1.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work if the array contains negative numbers. Try search([-1,\
    \ -2, -3]) for the value -1.\n<|/ c |>\n<| c |>\nThis doesn't work if the array\
    \ contains negative numbers. Try search([-1, -2, -3]) for the value -1.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work if the array contains negative numbers. Try search([-1,\
    \ -2, -3]) for the value -1.\n<|/ c |>\n<| a |>\n<code>", "\tlet max = 0;\n\t\
    let maxFreq = 0;\n\tfor(let i = 0; i < lst.length; i++){\n\t\tif(lst[i] > max){\n\
    \t\t\tmax = lst[i];\n\t\t\tmaxFreq = i;\n\t\t}\n\t}\n\treturn maxFreq > max? -1\
    \ : max;\n}\n", "    let max = 0;\n    let freq = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            freq\
    \ = 1;\n        }\n        else if(lst[i] === max){\n            freq++;\n   \
    \     }\n    }\n    return freq > max ? -1 : max;\n}\n", "  var max = 0;\n  var\
    \ maxFreq = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i] > max){\n  \
    \    max = lst[i];\n    }\n    if(lst[i] > maxFreq){\n      maxFreq = lst[i];\n\
    \    }\n  }\n  return max;\n}\n", "    let max = 0;\n    let maxIndex = 0;\n \
    \   for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n        \
    \    max = lst[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n", "    let max = 0;\n    let maxIndex = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            maxIndex\
    \ = i;\n        }\n    }\n    return maxIndex;\n}\n", "    let max = 0;\n    let\
    \ maxIndex = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] >\
    \ max){\n            max = lst[i];\n            maxIndex = i;\n        }\n   \
    \ }\n    if(max > 0){\n        for(let i = maxIndex; i < lst.length; i++){\n \
    \           if(lst[i] > max){\n                max = lst[i];\n               \
    \ maxIndex = i;\n            }\n        }\n    }\n    return maxIndex;\n}\n",
  "    var max = 0;\n    var maxIndex = 0;\n    for(var i=0; i<lst.length; i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxIndex =\
    \ i;\n        }\n    }\n    return maxIndex;\n}\n</code>\n<|/ a tags=javascript,arrays,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try search([4, 1, 2, 2, 3, 1]).\n<|/ c |>\n\
    <| c |>\nThis doesn't work. Try search([4, 1, 2, 2, 3, 1]).\n<|/ c |>\n<| c |>\n\
    It does work. Try search([4, 1, 2, 2, 3, 1]).\n<|/ c |>\n<| c |>\nIt does work.\
    \ Try search([4, 1, 2, 2, 3, 1]).\n<|/ c |>\n<| c |>\nIt does work. Try search([4,\
    \ 1, 2, 2, 3, 1]).\n<|/ c |>\n<| a dscore=2 |>\n<code>", "  var max = 0;\n  var\
    \ freq = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i] > max){\n      max\
    \ = lst[i];\n    }\n    if(lst[i] > freq){\n      freq = lst[i];\n    }\n  }\n\
    \  return max;\n}\n", "    var max = 0;\n    var maxIndex = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxIndex =\
    \ i;\n        }\n    }\n    return maxIndex;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>", "  let max = 0;\n  let freq = 0;\n  for(let i = 0;\
    \ i < lst.length; i++){\n    if(lst[i] > max){\n      max = lst[i];\n    }\n \
    \   if(lst[i] > 0 && lst[i] === max){\n      freq++;\n    }\n  }\n  if(freq >\
    \ max){\n    return -1;\n  }\n  return max;\n}\n", "  let max = 0;\n  let freq\
    \ = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] > max){\n      max\
    \ = lst[i];\n    }\n    if(lst[i] > 0 && lst[i] === max){\n      freq++;\n   \
    \ }\n  }\n  return freq > max ? -1 : max;\n}\n", "    let max = 0;\n    let maxFreq\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n\
    \            max = lst[i];\n            maxFreq = i;\n        }\n    }\n    return\
    \ maxFreq > max? -1 : max;\n}\n", "    var max = 0;\n    var maxIndex = 0;\n \
    \   for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n            max =\
    \ lst[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n</code>\n<|/ a tags=javascript,arrays,algorithm |>\n<| c |>\nThis doesn't work\
    \ if there are multiple numbers with the same frequency.\n<|/ c |>\n<| c |>\n\
    Yes, it does. I tested it on [this fiddle](http://jsfiddle.net/4L7rL/). Try it\
    \ out yourself.\n<|/ c |>\n<| c |>\nYes, it does. I tested it on [this fiddle](http://jsfiddle.net/4L7rL/).\
    \ Try it out yourself.\n<|/ c |>\n<| c |>\nIt doesn't work if there are multiple\
    \ numbers with the same frequency. Try it out with [this fiddle](http://jsfiddle.net/4L7rL/).\
    \ Try it out yourself.\n<|/ c |>\n<| c |>\nYes, it does. I tested it on [this\
    \ fiddle](http://jsfiddle.net/4L7rL/). Try it out yourself.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>", "    var max = 0;\n    var index = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]>max){\n            max = lst[i];\n            index = i;\n\
    \        }\n    }\n    return index;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "    var max = 0;\n    var maxFreq = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]>max){\n            max = lst[i];\n            maxFreq = i;\n\
    \        }\n    }\n    if(maxFreq>=lst.length){\n        return -1;\n    }\n \
    \   return max;\n}\n</code>\n<|/ a |>\n<| c |>\nThis solution doesn't work if\
    \ there are multiple numbers with the same frequency, as it will only return the\
    \ last one.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    let max = 0;\n    let index\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n\
    \            max = lst[i];\n            index = i;\n        }\n    }\n    return\
    \ index > 0 ? index : -1;\n}\n", "    let max = 0;\n    let freq = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            freq = 1;\n        }\n        else if(lst[i] === max){\n        \
    \    freq++;\n        }\n    }\n    return freq > max ? -1 : max;\n}\n", "   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] > 0){\n            let\
    \ index = findIndex(lst,lst[i]);\n            if(index > -1){\n              \
    \  return lst[index];\n            }\n        }\n    }\n    return -1;\n}\n",
  "    let max = 0;\n    let maxFreq = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxFreq = i;\n\
    \        }\n    }\n    if(maxFreq >= lst.length){\n        return -1;\n    }\n\
    \    return max;\n}\n", "    var max = 0;\n    var maxIndex = 0;\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\n", "  \
    \  var max = 0;\n    var maxCount = 0;\n    for(var i=0;i<lst.length;i++){\n \
    \       if(lst[i] > max){\n            max = lst[i];\n            maxCount = 1;\n\
    \        }else if(lst[i] == max){\n            maxCount++;\n        }\n    }\n\
    \    return max;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", " \
    \   let max = 0;\n    let maxIndex = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            maxIndex =\
    \ i;\n        }\n    }\n    return maxIndex;\n}\n", "    let max = 0;\n    let\
    \ maxIndex = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] >\
    \ max){\n            max = lst[i];\n            maxIndex = i;\n        }\n   \
    \ }\n    return maxIndex;\n}\n", "    let max = 0;\n    let maxIndex = 0;\n  \
    \  for(let i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n         \
    \   max = lst[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n", "    for(var i=0;i<lst.length;i++){\n        if(lst[i]>0){\n           \
    \ var count=0;\n            for(var j=0;j<lst.length;j++){\n                if(lst[j]==lst[i]){\n\
    \                    count++;\n                }\n            }\n            if(count>lst[i]){\n\
    \                return lst[i];\n            }\n        }\n    }\n    return -1;\n\
    }\n", "    let max = 0;\n    let maxFreq = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n            maxFreq\
    \ = i;\n        }\n    }\n    if(maxFreq >= max){\n        return -1;\n    }\n\
    \    return maxFreq;\n}\n", "    var max = 0;\n    var maxCount = 0;\n    for(var\
    \ i=0;i<lst.length;i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \            maxCount = 1;\n        }\n        else if(lst[i] == max){\n     \
    \       maxCount++;\n        }\n        else{\n            if(maxCount >= max){\n\
    \                return -1;\n            }\n            else{\n              \
    \  max = lst[i];\n                maxCount = 1;\n            }\n        }\n  \
    \  }\n    return max;\n}\n", "\tlet max = 0;\n\tlet maxIndex = 0;\n\tfor(let i\
    \ = 0; i < lst.length; i++){\n\t\tlet index = findIndex(lst[i], lst);\n\t\tif(index\
    \ > maxIndex){\n\t\t\tmax = lst[i];\n\t\t\tmaxIndex = index;\n\t\t}\n\t}\n\treturn\
    \ maxIndex;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_16_count_distinct_characters
language: js
prompt: "//Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n// >>>\
  \ count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
  aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
  }\n\ntest();"
completions: ["  var chars = string.split(\"\");\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var count = 0;\n    for(var i=0;\
    \ i<chars.length; i++){\n        var char = chars[i];\n        if(char.match(/[a-z]/i)\
    \ && char.match(/[A-Z]/i)){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n", "  var char_count = 0;\n  for(var i = 0; i < string.length; i++){\n\
    \    char_count += string.charCodeAt(i) - 64;\n  }\n  return char_count;\n}\n",
  "    var char_count = 0;\n    for(var i=0; i<string.length; i++){\n        if(string.charAt(i)\
    \ !== string.charAt(i).toUpperCase()){\n            char_count++;\n        }\n\
    \    }\n    return char_count;\n}\n", "    var char_count = 0;\n    for(var i=0;\
    \ i<string.length; i++){\n        var char = string.charAt(i);\n        if(char.match(/[a-z]/i)\
    \ && char.match(/[A-Z]/i)){\n            char_count++;\n        }\n    }\n   \
    \ return char_count;\n}\n", "  var hash = {};\n  for(var i = 0; i < string.length;\
    \ i++){\n    var character = string[i];\n    if(hash[character]){\n      hash[character]++;\n\
    \    }else{\n      hash[character] = 1;\n    }\n  }\n  return Object.keys(hash).length;\n\
    }\n", "    var char_count = 0;\n    for(var i=0; i<string.length; i++){\n    \
    \    char_count = char_count + string.charCodeAt(i);\n    }\n    return char_count;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<chars.length;i++){\n        var char = chars[i];\n        if(counts[char]){\n\
    \            counts[char]++;\n        }else{\n            counts[char] = 1;\n\
    \        }\n    }\n    return Object.keys(counts).length;\n}\n", "    var chars\
    \ = string.split(\"\");\n    var counts = {};\n    for(var i = 0; i < chars.length;\
    \ i++){\n        var char = chars[i];\n        if(counts[char] == undefined){\n\
    \            counts[char] = 1;\n        }else{\n            counts[char]++;\n\
    \        }\n    }\n    return Object.keys(counts).length;\n}\n", "    var chars\
    \ = [];\n    for(var i = 0; i < string.length; i++){\n        var char = string[i];\n\
    \        if(chars.indexOf(char) == -1){\n            chars.push(char);\n     \
    \   }\n    }\n    return chars.length;\n}\n", "    var chars = string.split(\"\
    \");\n    var count = 0;\n    for(var i = 0; i < chars.length; i++){\n       \
    \ var char = chars[i];\n        if(char.charCodeAt(0) > 96 && char.charCodeAt(0)\
    \ < 123){\n            count++;\n        }\n    }\n    return count;\n}\n", " \
    \ var chars = {};\n  for(var i=0; i<string.length; i++){\n    var char = string.charAt(i);\n\
    \    if(chars[char]){\n      chars[char]++;\n    }else{\n      chars[char] = 1;\n\
    \    }\n  }\n  return Object.keys(chars).length;\n}\n", "    var chars = {};\n\
    \    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(chars[char]){\n            chars[char]++;\n        }else{\n      \
    \      chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var chars = string.split('');\n    var counts = {};\n    for(var i\
    \ = 0; i < chars.length; i++){\n        var char = chars[i];\n        if(counts[char]){\n\
    \            counts[char]++;\n        }else{\n            counts[char] = 1;\n\
    \        }\n    }\n    return Object.keys(counts).length;\n}\n", "  var unique\
    \ = {}\n  for(var i = 0; i < string.length; i++){\n    if(unique[string[i]] ===\
    \ undefined){\n      unique[string[i]] = 1\n    } else {\n      unique[string[i]]\
    \ += 1\n    }\n  }\n  return Object.keys(unique).length\n}\n", "\tvar chars =\
    \ string.split(\"\");\n\tvar counts = {};\n\tchars.forEach(function(char){\n\t\
    \tif(!counts[char]){\n\t\t\tcounts[char] = 1;\n\t\t}else{\n\t\t\tcounts[char]\
    \ += 1;\n\t\t}\n\t});\n\treturn Object.keys(counts).length;\n}\n", "    var char_count\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(char.charCodeAt(0) > 96 && char.charCodeAt(0) < 123){\n          \
    \  char_count++;\n        }\n    }\n    return char_count;\n}\n", "  var unique\
    \ = {}\n  for(var i=0; i<string.length; i++){\n    if(unique[string[i]]){\n  \
    \    unique[string[i]]++\n    }else{\n      unique[string[i]] = 1\n    }\n  }\n\
    \  return Object.keys(unique).length\n}\n", "  var chars = [];\n  for(var i =\
    \ 0; i < string.length; i++){\n    var char = string[i];\n    if(chars.indexOf(char)\
    \ == -1){\n      chars.push(char);\n    }\n  }\n  return chars.length;\n}\n",
  "    var chars = string.split(\"\");\n    var distinct_chars = chars.filter(function(char){\n\
    \        return chars.indexOf(char) === chars.lastIndexOf(char);\n    });\n  \
    \  return distinct_chars.length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

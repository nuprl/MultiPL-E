name: HumanEval_16_count_distinct_characters
language: js
prompt: "//Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n// >>>\
  \ count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
  aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
  }\n\ntest();"
completions: ["  var chars = string.split(\"\");\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var count = 0;\n    for(var i=0;\
    \ i<chars.length; i++){\n        var char = chars[i];\n        if(char.match(/[a-z]/i)\
    \ && char.match(/[A-Z]/i)){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n", "  var char_count = 0;\n  for(var i = 0; i < string.length; i++){\n\
    \    char_count += string.charCodeAt(i) - 64;\n  }\n  return char_count;\n}\n",
  "    var char_count = 0;\n    for(var i=0; i<string.length; i++){\n        if(string.charAt(i)\
    \ !== string.charAt(i).toUpperCase()){\n            char_count++;\n        }\n\
    \    }\n    return char_count;\n}\n", "    var char_count = 0;\n    for(var i=0;\
    \ i<string.length; i++){\n        var char = string.charAt(i);\n        if(char.match(/[a-z]/i)\
    \ && char.match(/[A-Z]/i)){\n            char_count++;\n        }\n    }\n   \
    \ return char_count;\n}\n", "  var hash = {};\n  for(var i = 0; i < string.length;\
    \ i++){\n    var character = string[i];\n    if(hash[character]){\n      hash[character]++;\n\
    \    }else{\n      hash[character] = 1;\n    }\n  }\n  return Object.keys(hash).length;\n\
    }\n", "    var char_count = 0;\n    for(var i=0; i<string.length; i++){\n    \
    \    char_count = char_count + string.charCodeAt(i);\n    }\n    return char_count;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<chars.length;i++){\n        var char = chars[i];\n        if(counts[char]){\n\
    \            counts[char]++;\n        }else{\n            counts[char] = 1;\n\
    \        }\n    }\n    return Object.keys(counts).length;\n}\n", "    var chars\
    \ = string.split(\"\");\n    var counts = {};\n    for(var i = 0; i < chars.length;\
    \ i++){\n        var char = chars[i];\n        if(counts[char] == undefined){\n\
    \            counts[char] = 1;\n        }else{\n            counts[char]++;\n\
    \        }\n    }\n    return Object.keys(counts).length;\n}\n", "    var chars\
    \ = [];\n    for(var i = 0; i < string.length; i++){\n        var char = string[i];\n\
    \        if(chars.indexOf(char) == -1){\n            chars.push(char);\n     \
    \   }\n    }\n    return chars.length;\n}\n", "    var chars = string.split(\"\
    \");\n    var count = 0;\n    for(var i = 0; i < chars.length; i++){\n       \
    \ var char = chars[i];\n        if(char.charCodeAt(0) > 96 && char.charCodeAt(0)\
    \ < 123){\n            count++;\n        }\n    }\n    return count;\n}\n", " \
    \ var chars = {};\n  for(var i=0; i<string.length; i++){\n    var char = string.charAt(i);\n\
    \    if(chars[char]){\n      chars[char]++;\n    }else{\n      chars[char] = 1;\n\
    \    }\n  }\n  return Object.keys(chars).length;\n}\n", "    var chars = {};\n\
    \    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(chars[char]){\n            chars[char]++;\n        }else{\n      \
    \      chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var chars = string.split('');\n    var counts = {};\n    for(var i\
    \ = 0; i < chars.length; i++){\n        var char = chars[i];\n        if(counts[char]){\n\
    \            counts[char]++;\n        }else{\n            counts[char] = 1;\n\
    \        }\n    }\n    return Object.keys(counts).length;\n}\n", "  var unique\
    \ = {}\n  for(var i = 0; i < string.length; i++){\n    if(unique[string[i]] ===\
    \ undefined){\n      unique[string[i]] = 1\n    } else {\n      unique[string[i]]\
    \ += 1\n    }\n  }\n  return Object.keys(unique).length\n}\n", "\tvar chars =\
    \ string.split(\"\");\n\tvar counts = {};\n\tchars.forEach(function(char){\n\t\
    \tif(!counts[char]){\n\t\t\tcounts[char] = 1;\n\t\t}else{\n\t\t\tcounts[char]\
    \ += 1;\n\t\t}\n\t});\n\treturn Object.keys(counts).length;\n}\n", "    var char_count\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(char.charCodeAt(0) > 96 && char.charCodeAt(0) < 123){\n          \
    \  char_count++;\n        }\n    }\n    return char_count;\n}\n", "  var unique\
    \ = {}\n  for(var i=0; i<string.length; i++){\n    if(unique[string[i]]){\n  \
    \    unique[string[i]]++\n    }else{\n      unique[string[i]] = 1\n    }\n  }\n\
    \  return Object.keys(unique).length\n}\n", "  var chars = [];\n  for(var i =\
    \ 0; i < string.length; i++){\n    var char = string[i];\n    if(chars.indexOf(char)\
    \ == -1){\n      chars.push(char);\n    }\n  }\n  return chars.length;\n}\n",
  "    var chars = string.split(\"\");\n    var distinct_chars = chars.filter(function(char){\n\
    \        return chars.indexOf(char) === chars.lastIndexOf(char);\n    });\n  \
    \  return distinct_chars.length;\n}\n", "\tvar count = 0;\n\tfor(var i=0; i<string.length;\
    \ i++){\n\t\tvar character = string.charAt(i);\n\t\tif(character == character.toUpperCase()){\n\
    \t\t\tcount++;\n\t\t}\n\t\telse if(character == character.toLowerCase()){\n\t\t\
    \tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  var chars = [];\n  for(var i=0;\
    \ i<string.length; i++){\n    chars.push(string.charAt(i));\n  }\n  var uniqueChars\
    \ = [];\n  for(var i=0; i<chars.length; i++){\n    if(uniqueChars.indexOf(chars[i])\
    \ == -1){\n      uniqueChars.push(chars[i]);\n    }\n  }\n  return uniqueChars.length;\n\
    }\n", "    var chars = {};\n    string.split(\"\").forEach(function(char){\n \
    \       chars[char] = chars[char] ? chars[char] + 1 : 1;\n    });\n    return\
    \ Object.keys(chars).length;\n}\n", "  var chars = {};\n  for(var i=0; i<string.length;\
    \ i++){\n    var char = string.charAt(i);\n    if(chars[char]){\n      chars[char]++;\n\
    \    }else{\n      chars[char] = 1;\n    }\n  }\n  return Object.keys(chars).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i = 0; i < chars.length; i++){\n        var char = chars[i];\n        if(counts[char]\
    \ == undefined){\n            counts[char] = 1;\n        }else{\n            counts[char]\
    \ += 1;\n        }\n    }\n    return counts;\n}\n", "\tvar characters = string.split(\"\
    \");\n\tvar distinct_characters = 0;\n\tfor(var i in characters){\n\t\tif(characters.hasOwnProperty(i)){\n\
    \t\t\tif(characters[i].toLowerCase() != characters[i]){\n\t\t\t\tdistinct_characters++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn distinct_characters;\n}\n", "    var chars = string.split(\"\
    \");\n    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "    var chars = [];\n    for(var i=0; i<string.length; i++){\n        var\
    \ char = string.charAt(i);\n        if(chars.indexOf(char) === -1){\n        \
    \    chars.push(char);\n        }\n    }\n    return chars.length;\n}\n", "  \
    \  var chars = string.split(\"\").sort().join(\"\");\n    var counts = {};\n \
    \   for(var i = 0; i < chars.length; i++){\n        if(counts[chars[i]] == undefined){\n\
    \            counts[chars[i]] = 1;\n        }else{\n            counts[chars[i]]++;\n\
    \        }\n    }\n    return Object.keys(counts).length;\n}\n", "  var chars\
    \ = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n \
    \   counts[char] = (counts[char] || 0) + 1;\n  });\n  return counts;\n}\n", " \
    \ var chars = {};\n  for(var i=0; i<string.length; i++){\n    var char = string.charAt(i);\n\
    \    if(chars[char]){\n      chars[char]++;\n    }else{\n      chars[char] = 1;\n\
    \    }\n  }\n  return Object.keys(chars).length;\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n\
    \    if(counts[char]){\n      counts[char]++;\n    }else{\n      counts[char]\
    \ = 1;\n    }\n  }\n  return Object.keys(counts).length;\n}\n", "    var chars\
    \ = string.split(\"\");\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        if(counts[char]){\n            counts[char]++;\n\
    \        }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "    var characters = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0; i<characters.length; i++){\n        var char = characters[i];\n       \
    \ if(counts[char]){\n            counts[char]++;\n        } else {\n         \
    \   counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "    var char_count = 0;\n    for(var i = 0; i < string.length; i++){\n\
    \        char_count += string.charCodeAt(i);\n    }\n    return char_count;\n\
    }\n", "\tvar count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\tvar char\
    \ = string.charAt(i);\n\t\tif(char.match(/[a-z]/i) || char.match(/[A-Z]/i)){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  let count = 0;\n  for(let\
    \ i = 0; i < string.length; i++){\n    if(string.charAt(i) !== string.charAt(i).toUpperCase()){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "  return string.split(\"\"\
    ).filter(function(char){\n    return char.charCodeAt(0) != char.charCodeAt(0).toUpperCase().charCodeAt(0);\n\
    \  }).length;\n}\n", "    var chars = string.split(\"\");\n    var distinct_chars\
    \ = chars.filter(function(char){\n        return chars.indexOf(char) === chars.lastIndexOf(char);\n\
    \    });\n    return distinct_chars.length;\n}\n", "    var char_count = 0;\n\
    \    for(var i=0; i<string.length; i++){\n        char_count = char_count + count_distinct_characters_helper(string.charAt(i));\n\
    \    }\n    return char_count;\n}\n", "    var char_count = 0;\n    for(var i=0;\
    \ i<string.length; i++){\n        char_count = char_count + (string.charCodeAt(i));\n\
    \    }\n    return char_count;\n}\n", "    var chars = string.split(\"\");\n \
    \   var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "\tvar count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(string.charAt(i)\
    \ !== string.charAt(i).toUpperCase()){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
    }\n", "    var chars = string.split(\"\");\n    var distinct_chars = chars.filter(function(char){\n\
    \        return chars.indexOf(char) === chars.lastIndexOf(char);\n    });\n  \
    \  return distinct_chars.length;\n}\n", "  let count = 0;\n  for(let i = 0; i\
    \ < string.length; i++){\n    if(string.charAt(i) !== string.charAt(i).toUpperCase()){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "    var uniqueChars = {};\n\
    \    for(var i=0; i<string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(uniqueChars[char]){\n            uniqueChars[char]++;\n        }else{\n\
    \            uniqueChars[char] = 1;\n        }\n    }\n    return Object.keys(uniqueChars).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<chars.length;i++){\n        var char = chars[i];\n        counts[char]\
    \ = counts[char] ? counts[char]+1 : 1;\n    }\n    return counts;\n}\n", "   \
    \ var chars = {};\n    string.split(\"\").forEach(function(char){\n        chars[char]\
    \ = chars[char] ? chars[char] + 1 : 1;\n    });\n    return Object.keys(chars).length;\n\
    }\n", "  var chars = string.split(\"\").sort();\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "  var chars = [];\n  for(var i=0; i<string.length; i++){\n    var char\
    \ = string.charAt(i);\n    var lower = char.toLowerCase();\n    if(chars.indexOf(lower)\
    \ == -1){\n      chars.push(lower);\n    }\n  }\n  return chars.length;\n}\n",
  "  var chars = string.split(\"\").sort();\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "  return string.split(\"\").filter(function(char){\n    return char.match(/[a-z]/i)\
    \ && char.match(/[A-Z]/i) && char.match(/[0-9]/i);\n  }).length;\n}\n", "    var\
    \ char_count = 0;\n    for(var i=0; i<string.length; i++){\n        var char =\
    \ string.charAt(i);\n        if(char.charCodeAt(0) >= 65 && char.charCodeAt(0)\
    \ <= 90){\n            char_count++;\n        }\n    }\n    return char_count;\n\
    }\n", "    var chars = string.split('');\n    var counts = {};\n    for(var i=0;\
    \ i<chars.length; i++){\n        var char = chars[i];\n        if(counts[char]){\n\
    \            counts[char] = counts[char] + 1;\n        } else {\n            counts[char]\
    \ = 1;\n        }\n    }\n    return counts;\n}\n", "\tvar chars = string.split(\"\
    \");\n\tvar uniqueChars = [];\n\tfor(var i=0;i<chars.length;i++){\n\t\tif(uniqueChars.indexOf(chars[i])\
    \ == -1){\n\t\t\tuniqueChars.push(chars[i]);\n\t\t}\n\t}\n\treturn uniqueChars.length;\n\
    }\n", "  return string.split(\"\").filter(function(char){\n    return string.split(\"\
    \").indexOf(char) === string.split(\"\").lastIndexOf(char);\n  }).length;\n}\n",
  "  var unique = {}\n  for(var i=0;i<string.length;i++){\n    if(unique[string[i]]){\n\
    \      unique[string[i]]++\n    }else{\n      unique[string[i]] = 1\n    }\n \
    \ }\n  return Object.keys(unique).length\n}\n", "  return string.split(\"\").filter(function(char){\n\
    \    return char.charCodeAt(0) != char.charCodeAt(0).toLowerCase();\n  }).length;\n\
    }\n", "  var chars = string.split(\"\").sort();\n  var distinct_chars = chars.filter(function(elem,\
    \ pos) {\n    return chars.indexOf(elem) == pos;\n  }).length;\n  return distinct_chars;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i = 0; i < chars.length; i++){\n        var char = chars[i];\n        if(counts[char]\
    \ == undefined){\n            counts[char] = 1;\n        }else{\n            counts[char]++;\n\
    \        }\n    }\n    return Object.keys(counts).length;\n}\n", "  var chars\
    \ = string.split(\"\");\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "    var chars = {};\n    for(var i=0; i<string.length; i++){\n        var\
    \ char = string.charAt(i);\n        if(chars[char]){\n            chars[char]++;\n\
    \        }else{\n            chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "\tvar count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\tvar char\
    \ = string.charAt(i);\n\t\tif(char.charCodeAt(0) >= 65 && char.charCodeAt(0) <=\
    \ 90){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "    var char_count\
    \ = {};\n    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(char_count[char]){\n            char_count[char] += 1;\n        }else{\n\
    \            char_count[char] = 1;\n        }\n    }\n    return Object.keys(char_count).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<chars.length;i++){\n        var char = chars[i];\n        counts[char]\
    \ = counts[char] ? counts[char]+1 : 1;\n    }\n    return counts;\n}\n", "   \
    \ var chars = string.split(\"\");\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        counts[char] = counts[char] ? counts[char]+1\
    \ : 1;\n    }\n    return counts;\n}\n", "    var chars = {};\n    string.split(\"\
    \").forEach(function(char){\n        chars[char] = chars[char] ? chars[char] +\
    \ 1 : 1;\n    });\n    return Object.keys(chars).length;\n}\n", "  var hash =\
    \ {};\n  for(var i=0; i<string.length; i++){\n    var char = string.charAt(i);\n\
    \    if(hash[char]){\n      hash[char]++;\n    }else{\n      hash[char] = 1;\n\
    \    }\n  }\n  return Object.keys(hash).length;\n}\n", "    var chars = string.split(\"\
    \");\n    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<chars.length;i++){\n        var char = chars[i];\n        if(counts[char]\
    \ == undefined){\n            counts[char] = 1;\n        }else{\n            counts[char]++;\n\
    \        }\n    }\n    return Object.keys(counts).map(function(key){\n       \
    \ return counts[key];\n    }).reduce(function(a,b){\n        return a+b;\n   \
    \ });\n}\n", "    var chars = string.split('');\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "\tvar count = 0;\n\tfor(var i=0; i<string.length; i++){\n\t\tif(string.charAt(i)\
    \ !== string.charAt(i).toUpperCase()){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
    }\n", "    var chars = {};\n    string.split(\"\").forEach(function(char){\n \
    \       chars[char] = chars[char] ? chars[char] + 1 : 1;\n    });\n    return\
    \ Object.keys(chars).length;\n}\n", "    var chars = string.split('');\n    var\
    \ counts = {};\n    for(var i = 0; i < chars.length; i++){\n        var char =\
    \ chars[i];\n        if(counts[char] == undefined){\n            counts[char]\
    \ = 1;\n        }else{\n            counts[char]++;\n        }\n    }\n    return\
    \ counts;\n}\n", "  var char_count = 0;\n  for (var i = 0; i < string.length;\
    \ i++){\n    var char = string.charAt(i);\n    if (char.charCodeAt(0) > 96 &&\
    \ char.charCodeAt(0) < 123){\n      char_count++;\n    }\n  }\n  return char_count;\n\
    }\n", "  return string.replace(/[^A-Z]/g,\"\").length;\n}\n", "    var chars =\
    \ string.split(\"\");\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        counts[char] = counts[char] ? counts[char]+1\
    \ : 1;\n    }\n    return counts;\n}\n", "  var chars = string.split(\"\");\n\
    \  var counts = {};\n  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n\
    \    counts[char] = counts[char] ? counts[char]+1 : 1;\n  }\n  return Object.keys(counts).map(function(char){\n\
    \    return char;\n  }).length;\n}\n", "    var chars = string.split('');\n  \
    \  var counts = {};\n    for(var i=0;i<chars.length;i++){\n        var char =\
    \ chars[i];\n        if(counts[char] == undefined){\n            counts[char]\
    \ = 1;\n        }else{\n            counts[char]++;\n        }\n    }\n    return\
    \ Object.keys(counts).length;\n}\n", "  let chars = string.split(\"\").sort();\n\
    \  let count = 1;\n  for(let i = 0; i < chars.length; i++){\n    if(chars[i] !=\
    \ chars[i+1]){\n      count++;\n    }\n  }\n  return count;\n}\n", "\tvar chars\
    \ = string.split(\"\");\n\tvar count = 0;\n\tfor(var i=0; i<chars.length; i++){\n\
    \t\tvar char = chars[i];\n\t\tif(char.charCodeAt(0)>96 && char.charCodeAt(0)<123){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  var unique = {}\n  for (var\
    \ i = 0; i < string.length; i++){\n    var char = string.charAt(i)\n    if (unique[char]){\n\
    \      unique[char]++\n    } else {\n      unique[char] = 1\n    }\n  }\n  return\
    \ Object.keys(unique).length\n}\n", "    var char_count = 0;\n    for(var i =\
    \ 0; i < string.length; i++){\n        char_count = char_count + string.charCodeAt(i);\n\
    \    }\n    return char_count;\n}\n", "  var hash = {};\n  for(var i=0; i<string.length;\
    \ i++){\n    var char = string.charAt(i);\n    hash[char] = hash[char] ? hash[char]\
    \ + 1 : 1;\n  }\n  return Object.keys(hash).length;\n}\n", "  var chars = string.split('');\n\
    \  var char_count = {};\n  for(var i=0;i<chars.length;i++){\n    if(char_count[chars[i]]===undefined){\n\
    \      char_count[chars[i]] = 1;\n    }else{\n      char_count[chars[i]]++;\n\
    \    }\n  }\n  return Object.keys(char_count).length;\n}\n", "    var chars =\
    \ [];\n    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(chars.indexOf(char) === -1){\n            chars.push(char);\n    \
    \    }\n    }\n    return chars.length;\n}\n", "\tvar count = 0;\n\tfor(var i=0;\
    \ i<string.length; i++){\n\t\tif(string.charCodeAt(i) >= 65 && string.charCodeAt(i)\
    \ <= 90){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  var chars = string.split(\"\
    \").sort();\n  var count = 1;\n  for(var i=0;i<chars.length;i++){\n    if(chars[i]!=chars[i+1]){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "    var chars = string.split(\"\
    \");\n    var counts = {};\n    for(var i = 0; i < chars.length; i++){\n     \
    \   var char = chars[i];\n        if(counts[char]){\n            counts[char]++;\n\
    \        }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split(\"\");\n  var distinct_chars = chars.filter(function(char){\n\
    \    return chars.indexOf(char) === chars.lastIndexOf(char);\n  });\n  return\
    \ distinct_chars.length;\n}\n", "  var chars = string.split(\"\");\n  var counts\
    \ = {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char] ||\
    \ 0) + 1;\n  });\n  return Object.keys(counts).length;\n}\n", "    var chars =\
    \ string.split(\"\");\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "    var chars = {};\n    for(var i=0;i<string.length;i++){\n        var\
    \ char = string[i];\n        if(chars[char]){\n            chars[char]++;\n  \
    \      }else{\n            chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var chars = {};\n    string.split(\"\").forEach(function(char){\n \
    \       chars[char] = chars[char] ? chars[char] + 1 : 1;\n    });\n    return\
    \ Object.keys(chars).length;\n}\n", "    var chars = string.split(\"\");\n   \
    \ var distinct_chars = chars.filter(function(char){\n        return chars.indexOf(char)\
    \ === chars.lastIndexOf(char);\n    });\n    return distinct_chars.length;\n}\n",
  "  var uniqueChars = {};\n  for (var i = 0; i < string.length; i++){\n    var char\
    \ = string.charAt(i);\n    if (uniqueChars[char]){\n      uniqueChars[char]++;\n\
    \    } else {\n      uniqueChars[char] = 1;\n    }\n  }\n  return Object.keys(uniqueChars).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split(\"\");\n  var counts = {};\n  for(var i=0;i<chars.length;i++){\n\
    \    var char = chars[i];\n    if(counts[char]){\n      counts[char]++;\n    }else{\n\
    \      counts[char] = 1;\n    }\n  }\n  return Object.keys(counts).map(function(char){\n\
    \    return char;\n  }).length;\n}\n", "  var hash = {};\n  for(var i=0; i<string.length;\
    \ i++){\n    var character = string[i];\n    if(hash[character]){\n      hash[character]++;\n\
    \    }else{\n      hash[character] = 1;\n    }\n  }\n  return Object.keys(hash).length;\n\
    }\n", "  var chars = string.split(\"\").sort();\n  var count = 1;\n  for(var i=0;\
    \ i<chars.length; i++){\n    if(chars[i] == chars[i+1]){\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n", "  return string.split(\"\").filter(function(char){\n\
    \    return string.indexOf(char) == -1\n  }).length\n}\n", "  let count = 0;\n\
    \  for(let i = 0; i < string.length; i++){\n    if(string.charAt(i) !== string.charAt(i).toUpperCase()){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "    var char_count = 0;\n\
    \    for(var i=0; i<string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(char.charCodeAt(0) != char.charCodeAt(0)){\n            char_count++;\n\
    \        }\n    }\n    return char_count;\n}\n", "  var hash = {};\n  for(var\
    \ i=0; i<string.length; i++){\n    var character = string[i];\n    if(hash[character]){\n\
    \      hash[character]++;\n    }else{\n      hash[character] = 1;\n    }\n  }\n\
    \  return Object.keys(hash).length;\n}\n", "    var char_count = 0;\n    for(var\
    \ i = 0; i < string.length; i++){\n        char_count += string.charCodeAt(i)\
    \ - 64;\n    }\n    return char_count;\n}\n", "    var chars = {};\n    for(var\
    \ i=0; i<string.length; i++){\n        var char = string.charAt(i);\n        if(chars[char]){\n\
    \            chars[char]++;\n        }else{\n            chars[char] = 1;\n  \
    \      }\n    }\n    return Object.keys(chars).length;\n}\n", "  var hash = {};\n\
    \  for(var i=0; i<string.length; i++){\n    var character = string[i];\n    if(hash[character]\
    \ == undefined){\n      hash[character] = 1;\n    }else{\n      hash[character]++;\n\
    \    }\n  }\n  return Object.keys(hash).length;\n}\n", "    var uniqueChars =\
    \ {};\n    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(uniqueChars[char]){\n            uniqueChars[char]++;\n        }else{\n\
    \            uniqueChars[char] = 1;\n        }\n    }\n    return Object.keys(uniqueChars).length;\n\
    }\n", "    var counts = {};\n    for(var i = 0; i < string.length; i++){\n   \
    \     var char = string.charAt(i);\n        if(counts[char]){\n            counts[char]\
    \ += 1;\n        }else{\n            counts[char] = 1;\n        }\n    }\n   \
    \ return Object.keys(counts).length;\n}\n", "    var chars = string.split(\"\"\
    );\n    var distinct_chars = 0;\n    for(var i=0; i<chars.length; i++){\n    \
    \    if(chars.indexOf(chars[i]) == -1){\n            distinct_chars++;\n     \
    \   }\n    }\n    return distinct_chars;\n}\n", "    var char_count = 0;\n   \
    \ for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(char.charCodeAt(0) >= 65 && char.charCodeAt(0) <= 90){\n         \
    \   char_count++;\n        }\n    }\n    return char_count;\n}\n", "    var chars\
    \ = string.split('');\n    var uniqueChars = {};\n    chars.forEach(function(char){\n\
    \        if(uniqueChars[char] === undefined){\n            uniqueChars[char] =\
    \ 1;\n        } else {\n            uniqueChars[char]++;\n        }\n    });\n\
    \    return Object.keys(uniqueChars).length;\n}\n", "\tvar count = 0;\n\tfor(var\
    \ i=0; i<string.length; i++){\n\t\tif(string.charAt(i) !== string.charAt(i).toUpperCase()){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "    var chars = {};\n    string.split(\"\
    \").forEach(function(char){\n        chars[char] = chars[char] ? chars[char] +\
    \ 1 : 1;\n    });\n    return Object.keys(chars).length;\n}\n", "  var char_count\
    \ = 0;\n  for (var i = 0; i < string.length; i++){\n    var char = string.charAt(i);\n\
    \    var is_distinct = !char.match(/[a-z]/i) && !char.match(/[A-Z]/i) && !char.match(/[0-9]/i);\n\
    \    char_count += is_distinct ? 1 : 0;\n  }\n  return char_count;\n}\n", "  var\
    \ chars = string.split(\"\");\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "\tvar chars = string.split(\"\");\n\tvar distinct_chars = chars.filter(function(char){\n\
    \t\treturn chars.indexOf(char) === chars.lastIndexOf(char);\n\t});\n\treturn distinct_chars.length;\n\
    }\n", "  return string.split('').filter((char,i)=>{\n    return string.indexOf(char,i+1)===i\n\
    \  }).length\n}\n", "    var chars = {};\n    string.split(\"\").forEach(function(char){\n\
    \        chars[char] = chars[char] ? chars[char] + 1 : 1;\n    });\n    return\
    \ Object.keys(chars).length;\n}\n", "    var chars = string.split(\"\");\n   \
    \ var counts = {};\n    for(var i = 0; i < chars.length; i++){\n        var char\
    \ = chars[i];\n        counts[char] = counts[char] ? counts[char] + 1 : 1;\n \
    \   }\n    return Object.keys(counts).map(function(key){\n        return { char:\
    \ key, count: counts[key] };\n    }).sort(function(a, b){\n        return b.count\
    \ - a.count;\n    }).map(function(item){\n        return item.char;\n    }).length;\n\
    }\n", "    var char_count = 0;\n    for(var i=0; i<string.length; i++){\n    \
    \    char_count = char_count + string.charCodeAt(i);\n    }\n    return char_count;\n\
    }\n", "  return string.split(\"\").filter(function(character){\n    return character.toUpperCase()\
    \ === character && character !== character.toLowerCase();\n  }).length;\n}\n",
  "    var char_count = 0;\n    for(var i = 0; i < string.length; i++){\n        char_count\
    \ = char_count + (string.charCodeAt(i) - 64);\n    }\n    return char_count;\n\
    }\n", "  var uniqueChars = {};\n  for(var i=0; i<string.length; i++){\n    var\
    \ char = string.charAt(i);\n    if(uniqueChars[char]){\n      uniqueChars[char]++;\n\
    \    }else{\n      uniqueChars[char] = 1;\n    }\n  }\n  return Object.keys(uniqueChars).length;\n\
    }\n", "  var chars = string.split(\"\");\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    if(counts[char] == null){\n      counts[char] = 1;\n    }else{\n      counts[char]\
    \ += 1;\n    }\n  });\n  return Object.keys(counts).map(function(char){\n    return\
    \ char + \": \" + counts[char];\n  }).join(\", \");\n}\n", "  var chars = {};\n\
    \  for(var i=0; i<string.length; i++){\n    var char = string.charAt(i);\n   \
    \ if(chars[char]){\n      chars[char]++;\n    }else{\n      chars[char] = 1;\n\
    \    }\n  }\n  return Object.keys(chars).length;\n}\n", "    var char_count =\
    \ 0;\n    for(var i=0; i<string.length; i++){\n        char_count = char_count\
    \ + (string.charCodeAt(i));\n    }\n    return char_count;\n}\n", "    var chars\
    \ = [];\n    for(var i=0; i<string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(chars.indexOf(char) == -1){\n            chars.push(char);\n     \
    \   }\n    }\n    return chars.length;\n}\n", "  var chars = {};\n  for(var i=0;i<string.length;i++){\n\
    \    var char = string.charAt(i);\n    if(chars[char]){\n      chars[char]++;\n\
    \    }else{\n      chars[char] = 1;\n    }\n  }\n  return Object.keys(chars).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<chars.length;i++){\n        var char = chars[i];\n        if(counts[char]\
    \ == undefined){\n            counts[char] = 1;\n        }else{\n            counts[char]++;\n\
    \        }\n    }\n    return Object.keys(counts).map(function(key){\n       \
    \ return counts[key];\n    }).reduce(function(a,b){\n        return a+b;\n   \
    \ });\n}\n", "    var chars = string.split(\"\");\n    var distinct_chars = chars.filter(function(char){\n\
    \        return chars.indexOf(char) === chars.lastIndexOf(char);\n    });\n  \
    \  return distinct_chars.length;\n}\n", "    var hash = {};\n    for(var i=0;i<string.length;i++){\n\
    \        var char = string.charAt(i);\n        if(hash[char]){\n            hash[char]++;\n\
    \        }else{\n            hash[char] = 1;\n        }\n    }\n    return Object.keys(hash).length;\n\
    }\n", "    var char_count = {};\n    for(var i=0; i<string.length; i++){\n   \
    \     var char = string.charAt(i);\n        if(char_count[char]){\n          \
    \  char_count[char]++;\n        } else {\n            char_count[char] = 1;\n\
    \        }\n    }\n    return Object.keys(char_count).length;\n}\n", "  var counts\
    \ = {};\n  for (var i = 0; i < string.length; i++){\n    var char = string.charAt(i);\n\
    \    if (counts[char]){\n      counts[char]++;\n    } else {\n      counts[char]\
    \ = 1;\n    }\n  }\n  return counts;\n}\n", "  var unique = {}\n  for(var i =\
    \ 0; i < string.length; i++){\n    if(unique[string[i]] === undefined){\n    \
    \  unique[string[i]] = 1\n    }else{\n      unique[string[i]] += 1\n    }\n  }\n\
    \  return Object.keys(unique).length\n}\n", "    var chars = string.split(\"\"\
    );\n    var counts = {};\n    for(var i=0; i<chars.length; i++){\n        var\
    \ char = chars[i];\n        counts[char] = counts[char] ? counts[char] + 1 : 1;\n\
    \    }\n    return counts;\n}\n", "    var chars = string.split(\"\");\n    var\
    \ counts = {};\n    for(var i = 0; i < chars.length; i++){\n        var char =\
    \ chars[i];\n        if(counts[char] == undefined){\n            counts[char]\
    \ = 1;\n        }else{\n            counts[char]++;\n        }\n    }\n    return\
    \ counts;\n}\n", "    var hash = {};\n    for(var i=0; i<string.length; i++){\n\
    \        var char = string.charAt(i);\n        if(hash[char]){\n            hash[char]++;\n\
    \        }else{\n            hash[char] = 1;\n        }\n    }\n    return Object.keys(hash).length;\n\
    }\n", "  var chars = string.split(\"\");\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "  return string.split(\"\").filter((char,index,arr)=>{\n    return arr.indexOf(char)\
    \ === index;\n  }).length;\n}\n", "    var chars = string.split(\"\");\n    var\
    \ counts = {};\n    for(var i=0;i<chars.length;i++){\n        var char = chars[i];\n\
    \        if(counts[char]){\n            counts[char]++;\n        }else{\n    \
    \        counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "\tvar count = 0;\n\tfor(var i=0; i<string.length; i++){\n\t\tif(string.charCodeAt(i)\
    \ > 128){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  var hash = {};\n\
    \  for(var i=0;i<string.length;i++){\n    var character = string[i];\n    if(hash[character]){\n\
    \      hash[character]++;\n    }else{\n      hash[character] = 1;\n    }\n  }\n\
    \  return Object.keys(hash).length;\n}\n", "    var chars = string.split('');\n\
    \    var char_counts = {};\n    for(var i = 0; i < chars.length; i++){\n     \
    \   var char = chars[i];\n        if(char_counts[char]){\n            char_counts[char]\
    \ += 1;\n        } else {\n            char_counts[char] = 1;\n        }\n   \
    \ }\n    return Object.keys(char_counts).length;\n}\n", "  var counts = {};\n\
    \  for(var i=0; i<string.length; i++){\n    var char = string.charAt(i);\n   \
    \ if(counts[char]){\n      counts[char]++;\n    }else{\n      counts[char] = 1;\n\
    \    }\n  }\n  return Object.keys(counts).length;\n}\n", "  return string.split(\"\
    \").filter(function(char){\n    return char.match(/[a-z]/i) && char.match(/[A-Z]/i)\
    \ && char.match(/[0-9]/i) && char.match(/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\\
    /?]/i) && char.match(/[,.]/i);\n  }).length;\n}\n", "  return string.split(\"\"\
    ).filter(function(character){\n    return character === character.toUpperCase()\
    \ || character === character.toLowerCase();\n  }).length;\n}\n", "    var chars\
    \ = string.split(\"\");\n    var count = 0;\n    for(var i = 0; i < chars.length;\
    \ i++){\n        if(chars.indexOf(chars[i]) == -1){\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "    var characters = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<characters.length;i++){\n        var character = characters[i];\n    \
    \    if(counts[character] == undefined){\n            counts[character] = 1;\n\
    \        }else{\n            counts[character]++;\n        }\n    }\n    return\
    \ counts;\n}\n", "  var chars = string.split(\"\");\n  var count = 0;\n  for(var\
    \ i=0;i<chars.length;i++){\n    if(chars.indexOf(chars[i]) == i){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n", "    var chars = string.split(\"\");\n   \
    \ var counts = {};\n    for(var i = 0; i < chars.length; i++){\n        var char\
    \ = chars[i];\n        if(counts[char]){\n            counts[char]++;\n      \
    \  }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "  var chars = {};\n  for(var i=0; i<string.length; i++){\n    var char\
    \ = string.charAt(i);\n    if(chars[char]){\n      chars[char]++;\n    }else{\n\
    \      chars[char] = 1;\n    }\n  }\n  return Object.keys(chars).length;\n}\n",
  "    var chars = string.split(\"\");\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        if(counts[char]){\n            counts[char]++;\n\
    \        }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "    var characters = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i = 0; i < characters.length; i++){\n        var character = characters[i];\n\
    \        if(counts[character] == undefined){\n            counts[character] =\
    \ 1;\n        }else{\n            counts[character] += 1;\n        }\n    }\n\
    \    return counts;\n}\n", "  return string.split(\"\").filter(function(character){\n\
    \    return character.match(/[a-z]/i) && character.match(/[A-Z]/i) && character.match(/[0-9]/i)\
    \ && character.match(/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/i);\n  }).length;\n\
    }\n", "    var chars = string.split('');\n    var char_count = {};\n    for(var\
    \ i=0; i<chars.length; i++){\n        if(char_count[chars[i]] == undefined){\n\
    \            char_count[chars[i]] = 1;\n        }else{\n            char_count[chars[i]]++;\n\
    \        }\n    }\n    return Object.keys(char_count).length;\n}\n", "    var\
    \ chars = string.split(\"\");\n    var distinct_chars = 0;\n    for(var i = 0;\
    \ i < chars.length; i++){\n        if(chars.indexOf(chars[i]) == i){\n       \
    \     distinct_chars++;\n        }\n    }\n    return distinct_chars;\n}\n", " \
    \   var chars = string.split(\"\");\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = counts[char] ? counts[char] + 1 : 1;\n    });\n    return\
    \ Object.keys(counts).reduce(function(prev, cur){\n        return prev + counts[cur];\n\
    \    }, 0);\n}\n", "    var char_count = 0;\n    for(var i = 0; i < string.length;\
    \ i++){\n        char_count++;\n        for(var j = i+1; j < string.length; j++){\n\
    \            if(string.charAt(i) == string.charAt(j)){\n                char_count++;\n\
    \            }\n        }\n    }\n    return char_count;\n}\n", "  let count =\
    \ 0;\n  for(let i = 0; i < string.length; i++){\n    if(string.charAt(i) !== string.charAt(string.length\
    \ - 1)){\n      count++;\n    }\n  }\n  return count;\n}\n", "  return string.split(\"\
    \").filter(function(char){\n    return string.split(\"\").indexOf(char) === string.split(\"\
    \").lastIndexOf(char);\n  }).length;\n}\n", "    var chars = {};\n    for(var\
    \ i=0; i<string.length; i++){\n        var char = string.charAt(i);\n        if(chars[char]){\n\
    \            chars[char]++;\n        }else{\n            chars[char] = 1;\n  \
    \      }\n    }\n    return Object.keys(chars).length;\n}\n", "  var char_count\
    \ = 0;\n  for(var i=0; i<string.length; i++){\n    char_count = char_count + count_distinct_characters_helper(string.charAt(i));\n\
    \  }\n  return char_count;\n}\n", "\tvar char_count = 0;\n\t\n\tfor(var i = 0;\
    \ i < string.length; i++){\n\t\tvar char = string.charAt(i);\n\t\tif(char.match(/[a-z]/i)\
    \ && char.match(/[A-Z]/i)){\n\t\t\tchar_count++;\n\t\t}\n\t}\n\t\n\treturn char_count;\n\
    }\n", "\tvar count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(string.charCodeAt(i)\
    \ >= 65 && string.charCodeAt(i) <= 90){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n", "    var char_count = 0;\n    for(var i=0; i<string.length; i++){\n\
    \        if(string.charCodeAt(i) >= 65 && string.charCodeAt(i) <= 90){\n     \
    \       char_count++;\n        }\n    }\n    return char_count;\n}\n", "    var\
    \ chars = string.split(\"\");\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        if(counts[char] == undefined){\n      \
    \      counts[char] = 1;\n        }else{\n            counts[char]++;\n      \
    \  }\n    }\n    return Object.keys(counts).map(function(char){\n        return\
    \ char + \": \" + counts[char];\n    }).reduce(function(acc, cur){\n        return\
    \ acc + cur;\n    });\n}\n", "  var chars = string.split(\"\");\n  var counts\
    \ = {};\n  chars.forEach(function(char){\n    counts[char] = counts[char] ? counts[char]\
    \ + 1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev, curr){\n\
    \    return prev + counts[curr];\n  }, 0);\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "  return string.split(\"\").filter(function(char){\n    return char.charCodeAt(0)\
    \ != char.charCodeAt(0).toUpperCase().charCodeAt(0);\n  }).length;\n}\n", "  return\
    \ string.split('').filter(function(char){\n    return string.indexOf(char) ==\
    \ -1\n  }).length\n}\n", "  var chars = string.split(\"\");\n  var counts = {};\n\
    \  chars.forEach(function(char){\n    counts[char] = (counts[char] || 0) + 1;\n\
    \  });\n  return Object.keys(counts).length;\n}\n", "    var chars = string.split(\"\
    \").sort();\n    var count = 1;\n    for(var i=0;i<chars.length;i++){\n      \
    \  if(chars[i] == chars[i-1]){\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "\tvar count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\
    \tif(string.charAt(i) == string.charAt(i).toUpperCase()){\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;\n}\n", "  var chars = string.split(\"\").sort();\n  var\
    \ counts = {};\n  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n\
    \    if(counts[char] == undefined){\n      counts[char] = 1;\n    }else{\n   \
    \   counts[char]++;\n    }\n  }\n  return counts;\n}\n", "    var chars = string.split(\"\
    \");\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n        var\
    \ char = chars[i];\n        if(counts[char] == undefined){\n            counts[char]\
    \ = 1;\n        }else{\n            counts[char]++;\n        }\n    }\n    return\
    \ counts;\n}\n", "  var chars = string.split(\"\");\n  var distinct_chars = chars.filter(function(char){\n\
    \    return chars.indexOf(char) === chars.lastIndexOf(char);\n  });\n  return\
    \ distinct_chars.length;\n}\n", "    var chars = string.split(\"\").sort();\n\
    \    var counts = {};\n    for(var i = 0; i < chars.length; i++){\n        var\
    \ char = chars[i];\n        if(counts[char]){\n            counts[char]++;\n \
    \       }else{\n            counts[char] = 1;\n        }\n    }\n    return counts;\n\
    }\n", "    var char_count = 0;\n    for(var i = 0; i < string.length; i++){\n\
    \        if(string.charAt(i) !== string.charAt(i).toUpperCase()){\n          \
    \  char_count++;\n        }\n    }\n    return char_count;\n}\n", "    var chars\
    \ = {};\n    string.split(\"\").forEach(function(char){\n        chars[char] =\
    \ chars[char] ? chars[char]+1 : 1;\n    });\n    return Object.keys(chars).length;\n\
    }\n", "\tvar char_count = 0;\n\tfor(var i=0; i<string.length; i++){\n\t\tif(string.charAt(i)\
    \ !== string.charAt(i).toUpperCase()){\n\t\t\tchar_count++;\n\t\t}\n\t}\n\treturn\
    \ char_count;\n}\n", "  var chars = string.split(\"\");\n  var counts = {};\n\
    \  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n    if(counts[char]){\n\
    \      counts[char]++;\n    }else{\n      counts[char] = 1;\n    }\n  }\n  return\
    \ Object.keys(counts).length;\n}\n", "  var chars = string.split(\"\");\n  var\
    \ counts = {};\n  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n\
    \    if(counts[char] == undefined){\n      counts[char] = 1;\n    }else{\n   \
    \   counts[char] += 1;\n    }\n  }\n  return counts;\n}\n", "    var chars = string.split(\"\
    \");\n    var distinct_chars = chars.filter(function(char){\n        return chars.indexOf(char)\
    \ === chars.lastIndexOf(char);\n    });\n    return distinct_chars.length;\n}\n",
  "    var chars = string.split(\"\");\n    var distinct_chars = chars.filter(function(char){\n\
    \        return chars.indexOf(char) === chars.lastIndexOf(char);\n    });\n  \
    \  return distinct_chars.length;\n}\n", "    var chars = {};\n    for(var i=0;\
    \ i<string.length; i++){\n        var char = string.charAt(i);\n        if(chars[char]){\n\
    \            chars[char]++;\n        } else {\n            chars[char] = 1;\n\
    \        }\n    }\n    return Object.keys(chars).length;\n}\n", "    var chars\
    \ = string.split('');\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        if(counts[char]){\n            counts[char]++;\n\
    \        }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "\tvar char_count = 0;\n\t\n\tfor (var i = 0; i < string.length; i++){\n\
    \t\tvar char = string.charAt(i);\n\t\t\n\t\tif (char.match(/[a-z]/i) && char.match(/[A-Z]/i)){\n\
    \t\t\tchar_count++;\n\t\t}\n\t}\n\t\n\treturn char_count;\n}\n", "    var chars\
    \ = [];\n    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(chars.indexOf(char) === -1){\n            chars.push(char);\n    \
    \    }\n    }\n    return chars.length;\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  chars.forEach(function(char){\n    counts[char] = counts[char]\
    \ ? counts[char] + 1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev,\
    \ cur){\n    return prev + counts[cur];\n  }, 0);\n}\n", "  return string.split(\"\
    \").filter(function(char){\n    return char.charCodeAt(0) !== char.charCodeAt(0).toUpperCase().charCodeAt(0);\n\
    \  }).length;\n}\n", "    var chars = string.split(\"\");\n    var distinct_chars\
    \ = chars.filter(function(char){\n        return chars.indexOf(char) === chars.lastIndexOf(char);\n\
    \    });\n    return distinct_chars.length;\n}\n", "    var chars = string.split(\"\
    \");\n    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<chars.length;i++){\n        var char = chars[i];\n        if(counts[char]\
    \ == undefined){\n            counts[char] = 1;\n        }else{\n            counts[char]\
    \ += 1;\n        }\n    }\n    return Object.keys(counts).map(function(key){\n\
    \        return counts[key];\n    }).reduce(function(a,b){\n        return a +\
    \ b;\n    });\n}\n", "    var characters = string.split('');\n    var counts =\
    \ {};\n    characters.forEach(function(character){\n        counts[character]\
    \ = counts[character] ? counts[character] + 1 : 1;\n    });\n    return Object.keys(counts).reduce(function(prev,\
    \ curr){\n        return prev + counts[curr];\n    }, 0);\n}\n", "\tvar characters\
    \ = string.split(\"\");\n\tvar counts = {};\n\tfor(var i in characters){\n\t\t\
    counts[characters[i]] = (counts[characters[i]] || 0) + 1;\n\t}\n\treturn counts;\n\
    }\n", "  var chars = {};\n  string.split(\"\").forEach(function(char){\n    chars[char]\
    \ = chars[char] ? chars[char] + 1 : 1;\n  });\n  return Object.keys(chars).length;\n\
    }\n", "    var characters = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<characters.length;i++){\n        var character = characters[i];\n    \
    \    if(counts[character]){\n            counts[character]++;\n        }else{\n\
    \            counts[character] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "    var uniqueChars = {};\n    for(var i = 0; i < string.length; i++){\n\
    \        var char = string.charAt(i);\n        if(uniqueChars[char]){\n      \
    \      uniqueChars[char]++;\n        } else {\n            uniqueChars[char] =\
    \ 1;\n        }\n    }\n    return Object.keys(uniqueChars).length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

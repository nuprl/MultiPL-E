name: HumanEval_100_make_a_pile
language: js
prompt: "//Given a positive integer n, you have to make a pile of n levels of stones.\n\
  // The first level has n stones.\n// The number of stones in the next level is:\n\
  // - the next odd number if n is odd.\n// - the next even number if n is even.\n\
  // Return the number of stones in each level in an array, where element at index\n\
  // i represents the number of stones in the level (i+1).\n// Examples:\n// >>> make_a_pile(3)\n\
  // [3, 5, 7]\nfunction make_a_pile(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = make_a_pile;\n  assert.deepEqual(candidate(3),[3, 5, 7]);\n  assert.deepEqual(candidate(4),[4,\
  \ 6, 8, 10]);\n  assert.deepEqual(candidate(5),[5, 7, 9, 11, 13]);\n  assert.deepEqual(candidate(6),[6,\
  \ 8, 10, 12, 14, 16]);\n  assert.deepEqual(candidate(8),[8, 10, 12, 14, 16, 18,\
  \ 20, 22]);\n}\n\ntest();"
completions: ["    let arr = [];\n    for(let i = 1; i <= n; i++){\n        if(i%2\
    \ === 0){\n            arr.push(i);\n        }else{\n            arr.push(2*i);\n\
    \        }\n    }\n    return arr;\n}\n", "    var arr = [];\n    for(var i =\
    \ 1; i <= n; i++){\n        arr.push(i);\n    }\n    arr.push(arr.filter(function(x){\n\
    \        return x % 2 === 0;\n    }).length);\n    return arr;\n}\n", "    let\
    \ arr = [];\n    for(let i = 0; i <= n; i++){\n        if(i%2 == 0){\n       \
    \     arr.push(i+1);\n        }else{\n            arr.push(i-1);\n        }\n\
    \    }\n    return arr;\n}\n", "    let arr = [];\n    for(let i = 1; i <= n;\
    \ i++){\n        if(i%2 === 0){\n            arr.push(i);\n        }else{\n  \
    \          arr.push(2*i);\n        }\n    }\n    return arr;\n}\n", "  let arr\
    \ = [];\n  for(let i = 1; i <= n; i++){\n    if(i%2 === 0){\n      arr.push(i);\n\
    \    }else{\n      arr.push(i+1);\n    }\n  }\n  return arr;\n}\n", "    var arr\
    \ = [];\n    for(var i = 1; i <= n; i++){\n        if((i%2 === 0)&&(i>1)){\n \
    \           arr.push(i+1);\n        }\n        else if((i%2 === 1)&&(i>1)){\n\
    \            arr.push(i-1);\n        }\n    }\n    return arr;\n}\n", "    var\
    \ arr = [];\n    for(var i = 1; i <= n; i++){\n        if(i%2 === 0){\n      \
    \      arr.push(i);\n        }else{\n            arr.push(Math.floor(i/2));\n\
    \        }\n    }\n    return arr;\n}\n", "  var arr = [];\n  for(var i = 1; i\
    \ <= n; i++){\n    arr.push(i);\n  }\n  if(n % 2 == 0){\n    arr.push(arr.shift());\n\
    \  }\n  return arr;\n}\n", "    let arr = [];\n    for(let i = 1; i <= n; i++){\n\
    \        if(i%2 === 0){\n            arr.push(i);\n        }else{\n          \
    \  arr.push(i+1);\n        }\n    }\n    return arr;\n}\n", "  let arr = [];\n\
    \  for(let i = 1; i <= n; i++){\n    if(i%2 === 0){\n      arr.push(i);\n    }else{\n\
    \      arr.push(2*i);\n    }\n  }\n  return arr;\n}\n", "    var arr = [];\n \
    \   for(var i = 1; i <= n; i++){\n        if(i%2 === 0){\n            arr.push(i);\n\
    \        }else{\n            arr.push(i-1);\n        }\n    }\n    return arr;\n\
    }\n", "    let arr = [];\n    for(let i = 1; i <= n; i++){\n        if(i%2 ==\
    \ 0){\n            arr.push(i);\n        }else{\n            arr.push(2*i);\n\
    \        }\n    }\n    return arr;\n}\n", "    let arr = [];\n    for(let i =\
    \ 1; i <= n; i++){\n        arr.push(i);\n    }\n    arr.push(arr.slice().reverse().reduce((a,\
    \ b) => a + b, 0));\n    return arr;\n}\n", "    var arr = [];\n    for(var i\
    \ = 1; i <= n; i++){\n        arr.push(i);\n    }\n    return arr;\n}\n", "  \
    \  let arr = [];\n    for(let i = 0; i <= n; i++){\n        arr.push(i + 1);\n\
    \    }\n    return arr;\n}\n", "    let arr = [];\n    for(let i = 1; i <= n;\
    \ i++){\n        arr.push(i);\n    }\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] % 2 === 0){\n            arr[i] = arr[i] + 1;\n        }else{\n\
    \            arr[i] = arr[i] - 1;\n        }\n    }\n    return arr;\n}\n", " \
    \   let arr = [];\n    for(let i = 1; i <= n; i++){\n        if((i%2 === 0)&&(i>1)){\n\
    \            arr.push(i);\n        }else if((i%2 !== 0)&&(i>1)){\n           \
    \ arr.push(i+1);\n        }\n    }\n    return arr;\n}\n", "    let arr = [];\n\
    \    for(let i = 1; i <= n; i++){\n        arr.push(i);\n    }\n    for(let i\
    \ = 2; i <= n; i++){\n        if(n % i === 0){\n            arr.push(n - i);\n\
    \        }\n    }\n    return arr;\n}\n", "    let arr = [];\n    for(let i =\
    \ 1; i <= n; i++){\n        if((i%2 === 0) && (i !== n)){\n            arr.push(i);\n\
    \        }\n        else if((i%2 !== 0) && (i !== n)){\n            arr.push(i+1);\n\
    \        }\n    }\n    return arr;\n}\n", "    let arr = [];\n    for(let i =\
    \ 1; i <= n; i++){\n        if((i%2) === 0){\n            arr.push(i);\n     \
    \   }else{\n            arr.push(n - i);\n        }\n    }\n    return arr;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

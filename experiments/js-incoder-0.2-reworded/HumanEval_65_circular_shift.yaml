name: HumanEval_65_circular_shift
language: js
prompt: "//Circular shift the digits of the integer x, shift the digits right by shift\n\
  // and return the result as a string.\n// If shift > number of digits, return digits\
  \ reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12,\
  \ 2)\n// \"12\"\nfunction circular_shift(x, shift){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = circular_shift;\n  assert.deepEqual(candidate(100, 2),\"001\");\n  assert.deepEqual(candidate(12,\
  \ 2),\"12\");\n  assert.deepEqual(candidate(97, 8),\"79\");\n  assert.deepEqual(candidate(12,\
  \ 1),\"21\");\n  assert.deepEqual(candidate(11, 101),\"11\");\n}\n\ntest();"
completions: ["    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - shift; i > -1; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(x).split(\"\"),\n        circ = digits.length,\n        circ_shift\
    \ = shift > circ ? circ - shift : circ,\n        circ_mask = (1 << circ_shift)\
    \ - 1,\n        circ_digits = Array(circ_shift).join(0),\n        circ_i_mask\
    \ = circ_mask << circ_shift,\n        circ_i_digits = Array(circ_shift).join(1),\n\
    \        circ_result = \"\",\n        circ_i_result = \"\";\n\n    for(var i =\
    \ 0; i < circ_shift; i++){\n        circ_digits += digits[circ_i_mask & circ_mask];\n\
    \        circ_i_mask >>= 1;\n        circ_i_digits += digits[circ_i_mask & circ_mask];\n\
    \    }\n\n    for(var i = 0; i < circ_shift; i++){\n        circ_result += circ_digits[circ_i_digits\
    \ & circ_mask];\n        circ_i_digits >>= 1;\n    }\n\n    return circ_result;\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i >= 0; i -= 1){\n        digits[i] = digits[i + shift];\n    }\n \
    \   return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).join('');\n\
    \    }\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    var result = \"\";\n  \
    \  for (var i = digits.length - shift; i >= 0; i--){\n        result += digits[i];\n\
    \    }\n    return result;\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        return\
    \ digits.reverse().join('');\n    }\n    else {\n        var result = \"\";\n\
    \        for(var i = digits.length; i-- > shift; ){\n            result += digits[i];\n\
    \        }\n        return result;\n    }\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        shift = digits.length - shift;\n    for\
    \ (var i = digits.length - 1; i >= shift; i--)\n        digits[i] = digits[i +\
    \ 1];\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        shift = shift || 0,\n\
    \        i = digits.length - 1;\n    \n    for (; i >= shift; i--){\n        digits[i\
    \ + shift] = digits[i];\n    }\n    \n    return digits.reverse().join(\"\");\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i > -1; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "  var digits = String(Math.abs(x)).split('');\n\
    \  if(shift > digits.length){\n    shift = digits.length - shift;\n  }\n  digits.splice(shift,\
    \ 0, digits.splice(digits.length - shift, 1)[0]);\n  return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i > -1; i--){\n        digits[i] = digits[i + shift];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i >= 0; i--){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.reverse().join('');\n}\n", " \
    \   var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    else {\n        return\
    \ digits.splice(0, shift).join('');\n    }\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = x.toString().split('');\n    if (shift > digits.length){\n        return\
    \ digits.reverse().join('');\n    }\n    var result = \"\";\n    for (var i =\
    \ 0; i < shift; i++){\n        result += digits.pop();\n    }\n    return result\
    \ + digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if\
    \ (shift > digits.length)\n        return digits.reverse().join('');\n    else\n\
    \        return digits.slice(shift, digits.length).join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length)\n        return digits.reverse().join('');\n\
    \    else\n        return digits.slice(shift, digits.length).join('');\n}\n",
  "    var digits = x.toString().split('');\n    var result = \"\";\n    var carry\
    \ = 0;\n    for(var i = 0; i < digits.length; i++){\n        var digit = parseInt(digits[i]);\n\
    \        if(digit > 9){\n            result += digit;\n            carry = 1;\n\
    \        } else {\n            result += digit * Math.pow(10, shift);\n      \
    \      shift -= digits.length;\n            if(carry){\n                result\
    \ += (Math.pow(10, shift) + digit);\n                carry = 0;\n            }\n\
    \        }\n    }\n    if(carry){\n        result += (Math.pow(10, shift) + carry);\n\
    \    }\n    return result;\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).join('');\n}\n", " \
    \ if(shift > x.length){\n    return x.split(\"\").reverse().join(\"\");\n  }\n\
    \  if(shift < 0){\n    shift = x.length + shift;\n  }\n  if(shift > x.length){\n\
    \    shift = x.length;\n  }\n  var result = \"\";\n  for(var i = x.length - shift;\
    \ i >= 0; i -= shift){\n    result = x.charAt(i) + result;\n  }\n  return result;\n\
    }\n", "    var digits = String(x).split(\"\"),\n        shift = shift || 0,\n\
    \        i = digits && digits.length,\n        result = digits && new Array(shift\
    \ + i),\n        j,\n        k;\n\n    for(shift = shift > i ? shift - i : 0 ;\
    \ shift > 0 ? shift -= i : shift += i ; --shift)\n        for(j = i ; j && shift\
    \ ; --j, --k)\n            result[--k] = digits[j];\n    return result.join(\"\
    \");\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift >\
    \ digits.length){\n        return digits.reverse().join('');\n    }\n    else\
    \ {\n        return digits.slice(shift).reverse().join('');\n    }\n}\n", "  \
    \  var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    return digits.slice(shift,\
    \ digits.length).join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length) return digits.reverse().join('');\n    else return\
    \ digits.slice(shift, digits.length).reverse().join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - shift; i > -1;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = digits.length,\n\
    \        circ_shift = shift % circ,\n        circ_mask = circ - circ_shift,\n\
    \        circ_mask2 = circ_mask << 1,\n        circ_mask3 = circ_mask2 << 1,\n\
    \        circ_mask4 = circ_mask3 << 1,\n        circ_mask5 = circ_mask4 << 1,\n\
    \        circ_mask6 = circ_mask5 << 1,\n        circ_mask7 = circ_mask6 << 1,\n\
    \        circ_mask8 = circ_mask7 << 1,\n        circ_mask9 = circ_mask8 << 1,\n\
    \        circ_mask10 = circ_mask9 << 1,\n        circ_mask11 = circ_mask10 <<\
    \ 1,\n        circ_mask12 = circ_mask11 << 1,\n        circ_mask13 = circ_mask12\
    \ << 1,\n        circ_mask14 = circ_mask13 << 1,\n        circ_mask15 = circ_mask14\
    \ << 1,\n        circ_mask16 = circ_mask15 << 1,\n        circ_mask17 = circ_mask16\
    \ << 1,\n        circ_mask18 = circ_mask17 << 1,\n        circ_mask19 = circ_mask18\
    \ << 1,\n        circ_mask20 = circ_mask19 << 1,\n        circ_mask21 = circ_mask20\
    \ << 1,\n        circ_mask22 = circ_mask21 << 1,\n        circ_mask23 = circ_mask22\
    \ << 1,\n        circ_mask24 = circ_mask23 << 1,\n        circ_mask25 = circ_mask24\
    \ << 1,\n        circ_mask26 = circ_mask25 << 1,\n        circ_mask27 = circ_mask26\
    \ << 1,\n        circ_mask28 = circ_mask27 << 1,\n        circ_mask29 = circ_mask28\
    \ << 1,\n        circ_mask30 = circ_mask29 << 1,\n        circ_mask31 = circ_mask30\
    \ << 1,\n        circ_mask32 = circ_mask31 << 1,\n        circ_mask33 = circ_mask32\
    \ << 1,\n        circ_mask34 = circ_mask33 << 1,\n        circ_mask35 = circ_mask34\
    \ << 1,\n        circ_mask36 = circ_mask35 << 1,\n        circ_mask37 = circ_mask36\
    \ << 1,\n        circ_mask38 = circ_mask37 << 1,\n        circ_mask39 = cir",
  "    var digits = String(x).split(\"\"),\n        shift = shift || 0,\n        i\
    \ = digits && digits.length,\n        result = digits && digits[--i] || '',\n\
    \        j = i,\n        k = digits && digits.length,\n        shift = digits\
    \ && digits[--j] || '',\n        z = digits && digits[--k] || '';\n    for(; digits\
    \ && digits.length; j = i, k = j){\n      digits[j] = digits[k];\n      digits[k]\
    \ = z;\n    }\n    digits = digits[j];\n    for(; digits && digits.length; j =\
    \ i, k = j){\n      digits[j] = digits[k];\n      digits[k] = '';\n    }\n   \
    \ return result + digits;\n  }\n  \n  // Return the first character of the given\
    \ string.\n  // >>> first_char('abc')\n  // 'a'\n  // >>> first_char('ab')\n \
    \ // 'a'\n  function first_char(x){\n    return x.charAt(0);\n  }\n  \n  // Return\
    \ the last character of the given string.\n  // >>> last_char('abc')\n  // 'c'\n\
    \  // >>> last_char('ab')\n  // 'b'\n  function last_char(x){\n    return x.charAt(x.length-1);\n\
    \  }\n  \n  // Return the last character of the given string.\n  // >>> last_char('abc')\n\
    \  // 'c'\n  // >>> last_char('ab')\n  // 'b'\n  function last_char_digit(x){\n\
    \    return x.charAt(x.length-1);\n  }\n  \n  // Return the last character of\
    \ the given string.\n  // >>> last_char('abc')\n  // 'c'\n  // >>> last_char('ab')\n\
    \  // 'b'\n  function last_char_digit_digit(x){\n    return x.charAt(x.length-1);\n\
    \  }\n  \n  // Return the last character of the given string.\n  // >>> last_char('abc')\n\
    \  // 'c'\n  // >>> last_char('ab')\n  // 'b'\n  function last_char_digit_digit_digit(x){\n\
    \    return x.charAt(x.length-1);\n  }\n  \n  // Return the last character of\
    \ the given string.\n  // >>> last_char('abc')\n  // 'c'\n  // >>> last_char('ab')\n\
    \  // 'b'\n  function last_char_digit_digit_digit_digit(x){\n    return x.charAt(x.length-1);\n\
    \  }\n  \n  // Return the last character of the given string.\n  // >>> last_char('abc')\n\
    \  // 'c'\n  // >>> last_char('ab')\n  // 'b'\n  function last_char_digit_digit_digit_digit_digit(x){\n\
    \    return x.charAt(x.length-1);\n  }\n  \n  // Return the last character of\
    \ the given string.\n  // >>> last_char('abc')\n  // '", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).join('');\n}\n", " \
    \   var digits = String(x).split(\"\"),\n        circ = shift % x.length,\n  \
    \      circShift = circ ? circ - x.length + (shift % circ) : shift;\n    return\
    \ digits.reverse().join(\"\").slice(circShift).split(\"\").reverse().join(\"\"\
    );\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "  var digits = String(x).split(\"\"),\n \
    \     result = \"\",\n      i;\n  for(i = digits.length - 1; i >= shift; i--){\n\
    \    result = digits[i] + result;\n  }\n  if(shift > digits.length){\n    for(i\
    \ = digits.length - 1; i >= shift; i--){\n      result = digits[digits.length\
    \ - i - 1] + result;\n    }\n  }\n  return result;\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i+1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = digits.length,\n\
    \        circ_shift = shift % circ,\n        circ_mask = (circ_shift < 0) ? circ\
    \ - 1 : circ,\n        circ_mask2 = ((circ_mask << 1) + 1) >>> 1,\n        circ_mask3\
    \ = ((circ_mask2 << 1) + 1) >>> 1,\n        circ_mask4 = ((circ_mask3 << 1) +\
    \ 1) >>> 1,\n        circ_mask5 = ((circ_mask4 << 1) + 1) >>> 1,\n        circ_mask6\
    \ = ((circ_mask5 << 1) + 1) >>> 1,\n        circ_mask7 = ((circ_mask6 << 1) +\
    \ 1) >>> 1;\n    return digits.reverse().join(\"\").split(\"\").reverse().join(\"\
    \").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\
    \").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\
    \").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\
    \").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\
    \").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\
    \").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\
    \").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\
    \").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\
    \").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\
    \").reverse().join(\"\").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \").split(", "    var digits = String(Math.abs(x)).split('');\n    if (shift >\
    \ digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n \
    \       shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(x).split(\"\"),\n        circ\
    \ = digits.length,\n        circ_shift = shift > circ ? circ - shift : circ,\n\
    \        circ_mask = (1 << circ_shift) - 1,\n        circ_digits = digits.splice(0,\
    \ circ_shift).join(\"\"),\n        circ_digits_reversed = circ_digits + digits.join(\"\
    \");\n    return circ_digits_reversed & circ_mask;\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).join('');\n\
    \    }\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        return digits.reverse().join('');\n    }\n    else\
    \ {\n        var result = \"\";\n        for (var i = 0; i < shift; i++){\n  \
    \          result += digits.pop();\n        }\n        return result + digits.join('');\n\
    \    }\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = shift<0 ? digits.length + shift : shift;\n    return digits.reverse().slice(circ).join(\"\
    \");\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i >= 0; i--){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.join('');\n}\n", "  if(shift\
    \ > x.length) shift = x.length - shift;\n  var result = \"\";\n  while(shift >\
    \ 0){\n    result = x[x.length - shift] + result;\n    shift -= x.length;\n  }\n\
    \  return result;\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - shift; i > -1; i--){\n        digits[i] = digits[i + shift];\n\
    \    }\n    return digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length; i-- > shift;\
    \ ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length)\n        return digits.reverse().join('');\n    var result\
    \ = \"\";\n    for (var i = 0; i < shift; i++)\n        result += digits.pop();\n\
    \    return result + digits.join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        shift = shift || 0,\n        i = digits.length - shift;\n    return\
    \ digits.reverse().join(\"\") + digits.splice(0, i + shift).join(\"\");\n}\n",
  "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    else {\n        return\
    \ digits.slice(shift, digits.length).join('');\n    }\n}\n", "    var digits =\
    \ x.toString().split('');\n    if (shift > digits.length){\n        shift = digits.length\
    \ - shift;\n    }\n    for (var i = digits.length - 1; i >= shift; i--){\n   \
    \     digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n}\n", " \
    \   var digits = x.toString().split('');\n    if (shift > digits.length) return\
    \ digits.reverse().join('');\n    var result = \"\";\n    while (shift > 0) result\
    \ += digits[--shift];\n    return result;\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "  var\
    \ digits = x.toString().split('');\n  shift = shift % digits.length;\n  if(shift\
    \ == 0) return x;\n  if(shift < 0) return circular_shift(x, -shift);\n  if(shift\
    \ > digits.length) return circular_shift(x, digits.length + shift);\n  for(var\
    \ i = 0; i < shift; i++) digits[i] = digits[digits.length - i - 1] + digits[i];\n\
    \  return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "  var digits = x.toString().split('');\n  if(shift > digits.length){\n\
    \    return digits.reverse().join('');\n  }\n  else {\n    var result = \"\";\n\
    \    for(var i = digits.length - shift; i >= 0; i -= shift){\n      result +=\
    \ digits[i];\n    }\n    return result;\n  }\n}\n", "  var digits = String(Math.abs(x)).split('');\n\
    \  if(shift > digits.length){\n    return digits.reverse().join('');\n  }\n  if(shift\
    \ < -digits.length){\n    return digits.reverse().join('');\n  }\n  digits = digits.reverse();\n\
    \  while(shift > 0){\n    digits = digits.reverse().slice(0,shift).reverse().concat(digits.reverse().slice(shift));\n\
    \    shift -= digits.length;\n  }\n  return digits.join('');\n}\n", "  if(shift\
    \ > x.length) return x.toString();\n  var digits = x.toString().split('');\n \
    \ if(shift > digits.length) return digits.reverse().join('');\n  if(shift < digits.length)\
    \ return digits.splice(0,shift).join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        shift = digits.length - shift;\n    for\
    \ (var i = digits.length - 1; i >= shift; i--)\n        digits[i] = digits[i +\
    \ 1];\n    return digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    var result = \"\";\n    for(var\
    \ i = 0; i < shift; i++){\n        result = digits[i%digits.length] + result;\n\
    \    }\n    return result;\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "  if(shift > x.length)\
    \ shift = x.length - shift;\n  var result = \"\";\n  while(shift > 0){\n    result\
    \ = x[x.length - shift] + result;\n    shift -= x.length;\n  }\n  return result;\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i >= 0; i -= 1){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.reverse().join('');\n}\n", " \
    \   var digits = String(x).split(\"\"),\n        circ = shift<0 ? digits.length\
    \ + shift : shift;\n    return digits.reverse().join(\"\").slice(circ,circ+shift).split(\"\
    \").reverse().join(\"\");\n}\n", "    var digits = x.toString().split('');\n \
    \   if (shift > digits.length){\n        shift = digits.length - shift;\n    }\n\
    \    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var digits =\
    \ x.toString().split('');\n    if (shift > digits.length){\n        shift = digits.length\
    \ - shift;\n    }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = x.toString().split('');\n    if (shift > digits.length)\n        return\
    \ digits.reverse().join('');\n    else\n        return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n \
    \   if (shift > digits.length){\n        shift = digits.length - shift;\n    }\n\
    \    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i >= 0; i -= 1){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "  var digits = String(x).split(\"\"),\n      shift = shift || 0,\n    \
    \  i = digits.length - shift;\n  \n  if(shift > digits.length){\n    i = digits.length\
    \ - shift;\n    digits = digits.reverse();\n  }\n  \n  return digits.join(\"\"\
    );\n}\n", "  if(shift > x.length){\n    return x.split(\"\").reverse().join(\"\
    \");\n  }\n  if(shift < 0){\n    shift = -shift;\n  }\n  var result = \"\";\n\
    \  while(shift > 0){\n    result = x[x.length - shift] + result;\n    shift -=\
    \ x.length;\n  }\n  return result;\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i >= 0; i -= 1){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(x).split(\"\"),\n        shift = shift || 0,\n        i = digits.length\
    \ - shift;\n    return digits.reverse().join(\"\") + digits.splice(0, i + shift).join(\"\
    \");\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift >\
    \ digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).join('');\n\
    \    }\n}\n", "  if(shift > x.length) shift = x.length;\n  var result = \"\";\n\
    \  for(var i = x.length; i > shift; i--){\n    result = x.substr(0,i) + result\
    \ + x.substr(i-shift);\n  }\n  return result;\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = String(x).split(\"\"),\n        circ = shift % x.length,\n        circ_digits\
    \ = digits.splice(circ, digits.length - circ),\n        circ_str = circ_digits.join(\"\
    \");\n    return circ_str + digits.join(\"\");\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   var result = new Array(shift);\n    for (var i = 0; i < shift; i++)\n    \
    \    result[shift - i - 1] = digits[i];\n    return result.join('');\n}\n", " \
    \   var digits = String(x).split(\"\"),\n        circ = digits.length,\n     \
    \   circ_shift = shift % circ,\n        circ_mask = circ - circ_shift,\n     \
    \   circ_mask2 = circ_mask << 1,\n        circ_mask3 = circ_mask2 << 1,\n    \
    \    circ_mask4 = circ_mask3 << 1,\n        circ_mask5 = circ_mask4 << 1,\n  \
    \      circ_mask6 = circ_mask5 << 1,\n        circ_mask7 = circ_mask6 << 1,\n\
    \        circ_mask8 = circ_mask7 << 1,\n        circ_mask9 = circ_mask8 << 1,\n\
    \        circ_mask10 = circ_mask9 << 1,\n        circ_mask11 = circ_mask10 <<\
    \ 1,\n        circ_mask12 = circ_mask11 << 1,\n        circ_mask13 = circ_mask12\
    \ << 1,\n        circ_mask14 = circ_mask13 << 1,\n        circ_mask15 = circ_mask14\
    \ << 1,\n        circ_mask16 = circ_mask15 << 1,\n        circ_mask17 = circ_mask16\
    \ << 1,\n        circ_mask18 = circ_mask17 << 1,\n        circ_mask19 = circ_mask18\
    \ << 1,\n        circ_mask20 = circ_mask19 << 1,\n        circ_mask21 = circ_mask20\
    \ << 1,\n        circ_mask22 = circ_mask21 << 1,\n        circ_mask23 = circ_mask22\
    \ << 1,\n        circ_mask24 = circ_mask23 << 1,\n        circ_mask25 = circ_mask24\
    \ << 1,\n        circ_mask26 = circ_mask25 << 1,\n        circ_mask27 = circ_mask26\
    \ << 1,\n        circ_mask28 = circ_mask27 << 1,\n        circ_mask29 = circ_mask28\
    \ << 1,\n        circ_mask30 = circ_mask29 << 1,\n        circ_mask31 = circ_mask30\
    \ << 1,\n        circ_mask32 = circ_mask31 << 1,\n        circ_mask33 = circ_mask32\
    \ << 1,\n        circ_mask34 = circ_mask33 << 1,\n        circ_mask35 = circ_mask34\
    \ << 1,\n        circ_mask36 = circ_mask35 << 1,\n        circ_mask37 = circ_mask36\
    \ << 1,\n        circ_mask38 = circ_mask37 << 1,\n        circ_mask39 = cir",
  "    var digits = String(x).split(\"\"),\n        circ = digits.length,\n      \
    \  circShift = circ - shift;\n    return digits.slice(circShift).concat(digits.slice(0,\
    \ circShift));\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length; i-- > shift; ){\n        digits[i] = digits[i+1];\n    }\n\
    \    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).join('');\n}\n", " \
    \   var digits = x.toString().split('');\n    if (shift > digits.length){\n  \
    \      shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ shift; i > -1; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        shift = digits.length - shift;\n    for\
    \ (var i = digits.length - shift; i > -1; i--)\n        digits[i] = digits[i +\
    \ 1];\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    var result = \"\";\n    for(var i = 0; i < shift; i++){\n        result\
    \ += digits.pop();\n    }\n    for(var i = 0; i < digits.length; i++){\n     \
    \   result += digits[i];\n    }\n    return result;\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i > -1; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "  if(shift\
    \ > x.length) shift = x.length;\n  return x.toString().split(\"\").reverse().join(\"\
    \").split(\"\").slice(shift).join(\"\");\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = shift;\n    while (circ){\n        digits = digits.reverse().join(\"\
    \");\n        circ--;\n    }\n    return digits.reverse();\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        return\
    \ digits.reverse().join('');\n    }\n    return digits.slice(shift, digits.length).join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i >= 0; i--){\n        digits[i] = digits[i + shift];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i > -1; i--){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.reverse().join('');\n}\n", " \
    \   var digits = x.toString().split('');\n    if (shift > digits.length){\n  \
    \      shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = x.toString().split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - shift; i >=\
    \ 0; i--){\n        digits[i] = digits[i + shift];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i >= 0; i--){\n        digits[i] = digits[i + shift];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(x).split(\"\"),\n        shift\
    \ = shift || 0,\n        i = digits.length - 1;\n    \n    for ( ; i >= shift;\
    \ i--){\n        digits[i] = digits[i-shift];\n    }\n    digits[shift] = \"\"\
    ;\n    return digits.join(\"\");\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    var result = \"\";\n    while (shift > 0){\n        if (shift & 1)\
    \ result += digits.pop();\n        shift >>= 1;\n    }\n    while (digits.length){\n\
    \        result += digits.shift();\n    }\n    return result;\n}\n", "    var\
    \ digits = x.toString().split('');\n    if (shift > digits.length)\n        return\
    \ digits.reverse().join('');\n    else\n        return digits.slice(shift, digits.length).join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        return digits.reverse().join('');\n    }\n    else\
    \ {\n        shift = shift % digits.length;\n    }\n    for (var i = digits.length\
    \ - shift; i >= 0; i -= shift){\n        digits[i] = digits[i + shift];\n    }\n\
    \    return digits.reverse().join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        shift = shift || 0,\n        i = digits.length,\n        j = i,\n\
    \        k = shift;\n    while(i){\n        digits[i--] = parseInt(digits[i--],\
    \ 10) || 0;\n        if((i -= k) < 0){\n            if(digits[i] > 0){\n     \
    \           digits[i] = digits[i] - 1;\n                i++;\n            }else{\n\
    \                digits[i] = 9;\n                i++;\n                k = 1;\n\
    \            }\n        }\n    }\n    return digits.reverse().join(\"\");\n}\n",
  "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - shift; i > -1; i--){\n        digits[i] = digits[i + shift];\n\
    \    }\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   var result = \"\";\n    for (var i = 0; i < shift; i++)\n        result +=\
    \ digits.pop();\n    return result + digits.join('');\n}\n", "  if(shift > x.length)\
    \ shift = x.length - shift;\n  var result = \"\";\n  for(var i = x.length; i >\
    \ shift; --i) result += x.charAt(x.length - i - 1);\n  return result;\n}\n", " \
    \   var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length)\
    \ return digits.reverse().join('');\n    return digits.reverse().slice(shift,\
    \ digits.length + shift).join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = digits.length - shift;\n    circ = circ < 0 ? circ + digits.length\
    \ : circ;\n    circ = circ < digits.length ? circ : digits.length;\n    return\
    \ digits.join(\"\").substr(0, circ);\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(x).split(\"\"),\n        shift = shift || 0,\n        i = digits &&\
    \ digits.length,\n        result = digits && digits[--i] || '',\n        j = i,\n\
    \        k = digits && digits.length;\n    do { --i; result = digits[i ? i : --k]\
    \ + result; } while (i && !result);\n    return result + digits.slice(0, shift);\n\
    }\n", "  var digits = String(Math.abs(x)).split('');\n  if(shift > digits.length){\n\
    \    digits = digits.reverse();\n  }\n  return digits.join(\"\").substring(shift,\
    \ digits.length + shift);\n}\n", "    var digits = x.toString().split('');\n \
    \   if (shift > digits.length){\n        shift = digits.length - shift;\n    }\n\
    \    for (var i = digits.length - shift; i > -1; i--){\n        digits[i] = digits[i\
    \ + shift];\n    }\n    return digits.reverse().join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length)\n        return digits.reverse().join('');\n\
    \    else\n        return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        var result = \"\";\n        for (var i = 0; i < shift;\
    \ i++){\n            result += digits.pop();\n        }\n        return result\
    \ + digits.join('');\n    }\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i >= 0; i--){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.reverse().join('');\n}\n", " \
    \   var digits = String(x).split(\"\"),\n        shift = shift || 0,\n       \
    \ i = digits.length - shift;\n    \n    return digits.reverse().join(\"\") + digits.splice(0,\
    \ i + shift).join(\"\");\n}\n", "    var digits = x.toString().split('');\n  \
    \  if (shift > digits.length){\n        shift = digits.length - shift;\n    }\n\
    \    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var digits =\
    \ String(x).split(\"\"),\n        circ = shift<0 ? digits.length + shift : shift;\n\
    \    for(var i = 0; i < circ; i++){\n        digits[i] = digits[i+1];\n    }\n\
    \    return digits.join(\"\");\n}\n", "    var digits = String(x).split(\"\"),\n\
    \        circ = digits.length,\n        circ_shift = shift % circ,\n        circ_mask\
    \ = circ - circ_shift,\n        circ_mask2 = circ_mask << 1,\n        circ_mask3\
    \ = circ_mask2 << 1,\n        circ_mask4 = circ_mask3 << 1,\n        circ_mask5\
    \ = circ_mask4 << 1,\n        circ_mask6 = circ_mask5 << 1,\n        circ_mask7\
    \ = circ_mask6 << 1,\n        circ_mask8 = circ_mask7 << 1,\n        circ_mask9\
    \ = circ_mask8 << 1,\n        circ_mask10 = circ_mask9 << 1,\n        circ_mask11\
    \ = circ_mask10 << 1,\n        circ_mask12 = circ_mask11 << 1,\n        circ_mask13\
    \ = circ_mask12 << 1,\n        circ_mask14 = circ_mask13 << 1,\n        circ_mask15\
    \ = circ_mask14 << 1,\n        circ_mask16 = circ_mask15 << 1,\n        circ_mask17\
    \ = circ_mask16 << 1,\n        circ_mask18 = circ_mask17 << 1,\n        circ_mask19\
    \ = circ_mask18 << 1,\n        circ_mask20 = circ_mask19 << 1,\n        circ_mask21\
    \ = circ_mask20 << 1,\n        circ_mask22 = circ_mask21 << 1,\n        circ_mask23\
    \ = circ_mask22 << 1,\n        circ_mask24 = circ_mask23 << 1,\n        circ_mask25\
    \ = circ_mask24 << 1,\n        circ_mask26 = circ_mask25 << 1,\n        circ_mask27\
    \ = circ_mask26 << 1,\n        circ_mask28 = circ_mask27 << 1,\n        circ_mask29\
    \ = circ_mask28 << 1,\n        circ_mask30 = circ_mask29 << 1,\n        circ_mask31\
    \ = circ_mask30 << 1,\n        circ_mask32 = circ_mask31 << 1,\n        circ_mask33\
    \ = circ_mask32 << 1,\n        circ_mask34 = circ_mask33 << 1,\n        circ_mask35\
    \ = circ_mask34 << 1,\n        circ_mask36 = circ_mask35 << 1,\n        circ_mask37\
    \ = circ_mask36 << 1,\n        circ_mask38 = circ_mask37 << 1,\n        circ_mask39\
    \ = cir", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i >= 0; i--){\n        digits[i] = digits[i + shift];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(x).split(\"\"),\n\
    \        shift = shift || 0,\n        i = digits && digits.length,\n        result\
    \ = digits && digits[--i] || '',\n        carry = 0,\n        pos = 0,\n     \
    \   limit = digits && digits.length - 1;\n    \n    if (shift) {\n        pos\
    \ = limit ? limit - shift : 0;\n        limit = digits && digits.length - 1;\n\
    \    }\n    \n    if (limit >= 0) {\n        while (pos > 0) {\n            digits[pos]\
    \ = digits[pos] + (result[--pos] || carry);\n            carry = (digits[pos]\
    \ >= 10);\n            pos += shift;\n        }\n        digits[limit] = digits[limit]\
    \ + (carry || 0);\n    }\n    \n    // The limit was reached, return the digits\
    \ reversed.\n    if (limit < 0) {\n        digits = digits.reverse();\n      \
    \  shift = 1;\n    }\n    \n    // Return the reversed digits as a string.\n \
    \   return digits && digits.join(\"\");\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = digits.length - shift;\n    circ = circ < 0 ? circ + digits.length\
    \ : circ;\n    digits = digits.splice(0, circ);\n    return digits.join(\"\");\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    else {\n        var result\
    \ = \"\";\n        for (var i = 0; i < shift; i++){\n            result += digits.pop();\n\
    \        }\n        return result + digits.join('');\n    }\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i >= 0; i -= 1){\n        digits[i] = digits[i + shift];\n    }\n \
    \   return digits.reverse().join('');\n}\n", "  if(shift > x.length) shift = x.length\
    \ - shift;\n  var result = \"\";\n  for(var i = 0; i < shift; i++){\n    result\
    \ = parseInt(result) + parseInt(x.charAt(x.length - 1 - i));\n  }\n  return result;\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i > -1; i--){\n        digits[i] = digits[i + shift];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = String(x).split(\"\"),\n        circ = digits.length - shift;\n   \
    \ if (circ > 0) {\n        digits.splice(circ, 0, digits.splice(circ, 1)[0]);\n\
    \    }\n    return digits.join(\"\");\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).join('');\n\
    \    }\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift\
    \ > digits.length){\n        return digits.reverse().join('');\n    }\n    shift\
    \ = shift % digits.length;\n    return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "  if(shift > x.length) shift = x.length - shift;\n  var result = \"\";\n\
    \  for(var i = x.length; i > shift; --i) result += x.charAt(x.length - i - 1);\n\
    \  return result;\n}\n", "    var digits = String(Math.abs(x)).split('');\n  \
    \  if (shift > digits.length){\n        return digits.reverse().join('');\n  \
    \  }\n    shift = shift % digits.length;\n    for (var i = 0, len = digits.length;\
    \ i < len; i++){\n        digits[i] = (digits[i] || '').substring(0, shift) +\
    \ digits[i] || '';\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = x.toString().split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).join('');\n\
    \    }\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length; i-- > shift; ){\n        digits[i] = digits[i + 1];\n   \
    \ }\n    return digits.join('');\n}\n", "    var digits = String(x).split(\"\"\
    ),\n        shift = shift || 0,\n        i = digits && digits.length,\n      \
    \  result = digits && digits[--i] || \"\";\n    for(; digits && i; --i, shift\
    \ += i)\n        digits = digits[digits.length - i - 1] + digits;\n    return\
    \ (shift > 0) ? _s.fromCodePoint(parseInt(digits.join(\"\"), 10)) : result;\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    return digits.slice(shift,\
    \ digits.length).join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).join('');\n}\n", " \
    \   var digits = String(x).split(\"\"),\n        circ = digits.length,\n     \
    \   circshift = circ - shift;\n    return digits.reverse().slice(circshift).concat(digits.slice(0,\
    \ circshift)).reverse().join(\"\");\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i >= 0; i -= 1){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.reverse().join('');\n}\n", " \
    \   var digits = x.toString().split('');\n    if (shift > digits.length){\n  \
    \      return digits.reverse().join('');\n    }\n    else {\n        var result\
    \ = \"\";\n        for (var i = digits.length - 1; i >= shift; i--){\n       \
    \     result = digits[i] + result;\n        }\n        return result;\n    }\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i > -1; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = String(x).split(\"\"),\n        circ = digits.length,\n        circ_shift\
    \ = shift > circ ? circ - shift : shift;\n    return digits.reverse().slice(circ_shift).join(\"\
    \");\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i >= 0; i--){\n        digits[i] = digits[i + shift];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        shift = digits.length - shift;\n    for\
    \ (var i = digits.length - 1; i >= shift; i--)\n        digits[i] = digits[i +\
    \ 1];\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   var result = \"\";\n    for (var i = 0; i < shift; i++)\n        result +=\
    \ digits.pop();\n    return result + digits.join('');\n}\n", "    var digits =\
    \ x.toString().split('');\n    if (shift > digits.length)\n        return digits.reverse().join('');\n\
    \    var result = \"\";\n    for (var i = 0; i < shift; i++)\n        result +=\
    \ digits.pop();\n    return result + digits.join('');\n}\n", "    var digits =\
    \ x.toString().split('');\n    if (shift > digits.length){\n        shift = digits.length\
    \ - shift;\n    }\n    for (var i = digits.length - 1; i >= shift; i--){\n   \
    \     digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n}\n", " \
    \   var digits = x.toString().split('');\n    if (shift > digits.length){\n  \
    \      shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(x).split(\"\"),\n        digits_length\
    \ = digits.length,\n        shift = shift % digits_length,\n        digits_slice,\n\
    \        carry = 0,\n        i;\n\n    for (i = digits_length - 1; i >= shift;\
    \ i--){\n        digits_slice = digits.slice(i, i + 1);\n        carry = (digits_slice[0]\
    \ * 10 + digits_slice[1]) + carry;\n        digits_slice[0] = digits_slice[1]\
    \ || 0;\n        digits_slice[1] = carry;\n    }\n    digits = digits.reverse().join(\"\
    \");\n\n    return digits + (carry ? \"\" : Array(shift + 1).join(\"0\"));\n}\n",
  "    var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(x).split(\"\"),\n\
    \        digits_length = digits.length,\n        shift = shift % digits_length,\n\
    \        digits_slice,\n        carry = 0,\n        i;\n\n    if (shift < 0) shift\
    \ += digits_length;\n\n    if (shift > 0) {\n        digits_slice = digits.slice(shift,\
    \ digits_length);\n        for (i = 0; i < digits_length; ++i) {\n           \
    \ digits[i] = digits_slice[digits_length - i - 1] +\n                digits_slice[i];\n\
    \        }\n    }\n    else {\n        digits_slice = digits.slice(0, shift);\n\
    \        for (i = 0; i < digits_length; ++i) {\n            digits[i] = digits_slice[digits_length\
    \ - i - 1] +\n                carry;\n            carry = digits[i] % 10;\n  \
    \          digits[i] /= 10;\n        }\n    }\n\n    return digits.reverse().join(\"\
    \");\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift >\
    \ digits.length){\n        return digits.reverse().join('');\n    }\n    else\
    \ {\n        return digits.slice(shift, digits.length).join('');\n    }\n}\n",
  "    var digits = String(x).split(\"\"),\n        circ = digits.length,\n      \
    \  circShift = circ - shift;\n    return digits.reverse().slice(circShift).reverse().join(\"\
    \");\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.reverse().join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        shift = shift || 0,\n        i = digits && digits.length,\n    \
    \    result = digits && new Array(shift + i),\n        j,\n        k;\n\n    for(j\
    \ = shift, k = i; k > 0; j--, k--)\n        result[k] = digits[j];\n    for(j\
    \ = i; k > shift; j--, k--)\n        result[k] = digits[j];\n    return result.join(\"\
    \");\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\
    \ return digits.reverse().join('');\n    var result = \"\";\n    while (shift\
    \ > 0) result += digits[shift - 1]; shift -= 1;\n    return result;\n}\n", " \
    \ if(shift > x.length) shift = x.length - shift;\n  var result = \"\";\n  for(var\
    \ i = 0; i < shift; i++){\n    result += x.charAt(x.length - i - 1);\n  }\n  return\
    \ result;\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(x).split(\"\"),\n        circ\
    \ = shift<0 ? digits.length + shift : shift;\n    for (var i = circ; i > 0; i--){\n\
    \        digits[i] = digits[i-1];\n    }\n    return digits.join(\"\");\n}\n",
  "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length)\
    \ return digits.reverse().join('');\n    else return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = shift<0 ? digits.length\
    \ + shift : shift;\n    return digits.slice(circ).reverse().join(\"\");\n}\n",
  "    var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i+1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = shift % x.length,\n        revshift = shift - circ,\n   \
    \     revcirc = revshift % x.length,\n        start = circ + revcirc;\n    return\
    \ digits.slice(start).concat(digits.slice(0, start));\n}\n", "    var digits =\
    \ String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n \
    \   if (shift > digits.length){\n        shift = digits.length - shift;\n    }\n\
    \    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_65_circular_shift
language: js
prompt: "//Circular shift the digits of the integer x, shift the digits right by shift\n\
  // and return the result as a string.\n// If shift > number of digits, return digits\
  \ reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12,\
  \ 2)\n// \"12\"\nfunction circular_shift(x, shift){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = circular_shift;\n  assert.deepEqual(candidate(100, 2),\"001\");\n  assert.deepEqual(candidate(12,\
  \ 2),\"12\");\n  assert.deepEqual(candidate(97, 8),\"79\");\n  assert.deepEqual(candidate(12,\
  \ 1),\"21\");\n  assert.deepEqual(candidate(11, 101),\"11\");\n}\n\ntest();"
completions: ["    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - shift; i > -1; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(x).split(\"\"),\n        circ = digits.length,\n        circ_shift\
    \ = shift > circ ? circ - shift : circ,\n        circ_mask = (1 << circ_shift)\
    \ - 1,\n        circ_digits = Array(circ_shift).join(0),\n        circ_i_mask\
    \ = circ_mask << circ_shift,\n        circ_i_digits = Array(circ_shift).join(1),\n\
    \        circ_result = \"\",\n        circ_i_result = \"\";\n\n    for(var i =\
    \ 0; i < circ_shift; i++){\n        circ_digits += digits[circ_i_mask & circ_mask];\n\
    \        circ_i_mask >>= 1;\n        circ_i_digits += digits[circ_i_mask & circ_mask];\n\
    \    }\n\n    for(var i = 0; i < circ_shift; i++){\n        circ_result += circ_digits[circ_i_digits\
    \ & circ_mask];\n        circ_i_digits >>= 1;\n    }\n\n    return circ_result;\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i >= 0; i -= 1){\n        digits[i] = digits[i + shift];\n    }\n \
    \   return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).join('');\n\
    \    }\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    var result = \"\";\n  \
    \  for (var i = digits.length - shift; i >= 0; i--){\n        result += digits[i];\n\
    \    }\n    return result;\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        return\
    \ digits.reverse().join('');\n    }\n    else {\n        var result = \"\";\n\
    \        for(var i = digits.length; i-- > shift; ){\n            result += digits[i];\n\
    \        }\n        return result;\n    }\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        shift = digits.length - shift;\n    for\
    \ (var i = digits.length - 1; i >= shift; i--)\n        digits[i] = digits[i +\
    \ 1];\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        shift = shift || 0,\n\
    \        i = digits.length - 1;\n    \n    for (; i >= shift; i--){\n        digits[i\
    \ + shift] = digits[i];\n    }\n    \n    return digits.reverse().join(\"\");\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i > -1; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "  var digits = String(Math.abs(x)).split('');\n\
    \  if(shift > digits.length){\n    shift = digits.length - shift;\n  }\n  digits.splice(shift,\
    \ 0, digits.splice(digits.length - shift, 1)[0]);\n  return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i > -1; i--){\n        digits[i] = digits[i + shift];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

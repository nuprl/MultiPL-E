name: HumanEval_31_is_prime
language: js
results:
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \tvar prime=true;\n\tvar i=2;\n\twhile(i<n){\n\t\tif(prime){\n\t\t\tif(n%i==0){\n\
    \t\t\t\tprime=false;\n\t\t\t}\n\t\t}else{\n\t\t\tif(n%i==0){\n\t\t\t\tprime=true;\n\
    \t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn prime;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_prime;\n  assert.deepEqual(candidate(6),false);\n\
    \  assert.deepEqual(candidate(101),true);\n  assert.deepEqual(candidate(11),true);\n\
    \  assert.deepEqual(candidate(13441),true);\n  assert.deepEqual(candidate(61),true);\n\
    \  assert.deepEqual(candidate(4),false);\n  assert.deepEqual(candidate(1),false);\n\
    \  assert.deepEqual(candidate(5),true);\n  assert.deepEqual(candidate(11),true);\n\
    \  assert.deepEqual(candidate(17),true);\n  assert.deepEqual(candidate(85),false);\n\
    \  assert.deepEqual(candidate(77),false);\n  assert.deepEqual(candidate(255379),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpww8xhnjd.js:39:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpww8xhnjd.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    if (n < 2){\n        return false;\n    }\n    if (n === 2){\n        return\
    \ true;\n    }\n    if (n % 2 == 0){\n        return false;\n    }\n    var sqrt_n\
    \ = Math.sqrt(n);\n    for (var i = 3; i <= sqrt_n; i += 2){\n        if (n %\
    \ i == 0){\n            return false;\n        }\n    }\n    return true;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_prime;\n  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    var i = 2\n    while(i*i <= n){\n        if(n % i == 0){\n            return\
    \ false\n        }\n        i++\n    }\n    return true\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_prime;\n  assert.deepEqual(candidate(6),false);\n\
    \  assert.deepEqual(candidate(101),true);\n  assert.deepEqual(candidate(11),true);\n\
    \  assert.deepEqual(candidate(13441),true);\n  assert.deepEqual(candidate(61),true);\n\
    \  assert.deepEqual(candidate(4),false);\n  assert.deepEqual(candidate(1),false);\n\
    \  assert.deepEqual(candidate(5),true);\n  assert.deepEqual(candidate(11),true);\n\
    \  assert.deepEqual(candidate(17),true);\n  assert.deepEqual(candidate(85),false);\n\
    \  assert.deepEqual(candidate(77),false);\n  assert.deepEqual(candidate(255379),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1exm4e7v.js:38:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp1exm4e7v.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \  if(n<=1){\n    return false;\n  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n  \
    \  if(n % i === 0){\n      return false;\n    }\n  }\n  return true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_prime;\n\
    \  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    var i = 2;\n    while(i * i <= n){\n        if(n % i == 0){\n           \
    \ return false;\n        }\n        i++;\n    }\n    return true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_prime;\n\
    \  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpl1ob_v0b.js:38:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpl1ob_v0b.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \  if(n<=1){\n    return false;\n  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n  \
    \  if(n % i === 0){\n      return false;\n    }\n  }\n  return true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_prime;\n\
    \  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \  if(n<=1){\n    return false;\n  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n  \
    \  if(n%i===0){\n      return false;\n    }\n  }\n  return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_prime;\n\
    \  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    if (n < 2){\n        return false;\n    }\n    if (n === 2){\n        return\
    \ true;\n    }\n    if (n % 2 === 0){\n        return false;\n    }\n    var sqrt_n\
    \ = Math.sqrt(n);\n    for (var i = 3; i <= sqrt_n; i += 2){\n        if (n %\
    \ i === 0){\n            return false;\n        }\n    }\n    return true;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_prime;\n  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    var sqrtn = Math.sqrt(n);\n    for (var i = 2; i <= sqrtn; i++){\n      \
    \  if (n % i == 0){\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_prime;\n  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1am7tzi5.js:37:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp1am7tzi5.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    var i = 2;\n    while(i <= Math.sqrt(n)) {\n        if(n % i == 0){\n   \
    \         return false;\n        }\n        i++;\n    }\n    return true;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_prime;\n  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpke5aml76.js:38:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpke5aml76.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    if(n<=1){\n        return false;\n    }\n    for(var i=2;i<=Math.sqrt(n);i++){\n\
    \        if(n%i===0){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_prime;\n  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    var sqrtn = Math.sqrt(n);\n    for (var i = 2; i <= sqrtn; i++){\n      \
    \  if (n % i == 0){\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_prime;\n  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpfhjzknm_.js:37:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpfhjzknm_.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    var i = 2;\n    while(i * i <= n){\n        if(n % i == 0){\n           \
    \ return false;\n        }\n        i += 1;\n    }\n    return true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_prime;\n\
    \  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpyop4076x.js:38:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpyop4076x.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    if (n < 2) return false;\n    if (n < 4) return true;\n    if (n % 2 == 0)\
    \ return false;\n    if (n % 3 == 0) return true;\n    if (n % 5 == 0) return\
    \ false;\n    for (var i = 6; i * i <= n; i += 6){\n        if (n % i == 0) return\
    \ false;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_prime;\n  assert.deepEqual(candidate(6),false);\n\
    \  assert.deepEqual(candidate(101),true);\n  assert.deepEqual(candidate(11),true);\n\
    \  assert.deepEqual(candidate(13441),true);\n  assert.deepEqual(candidate(61),true);\n\
    \  assert.deepEqual(candidate(4),false);\n  assert.deepEqual(candidate(1),false);\n\
    \  assert.deepEqual(candidate(5),true);\n  assert.deepEqual(candidate(11),true);\n\
    \  assert.deepEqual(candidate(17),true);\n  assert.deepEqual(candidate(85),false);\n\
    \  assert.deepEqual(candidate(77),false);\n  assert.deepEqual(candidate(255379),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptv6yty0u.js:40:10)\n    at\
    \ Object.<anonymous> (/tmp/tmptv6yty0u.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    var i = 2\n    while(i*i <= n){\n        if(n % i == 0){\n            return\
    \ false\n        }\n        i++\n    }\n    return true\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_prime;\n  assert.deepEqual(candidate(6),false);\n\
    \  assert.deepEqual(candidate(101),true);\n  assert.deepEqual(candidate(11),true);\n\
    \  assert.deepEqual(candidate(13441),true);\n  assert.deepEqual(candidate(61),true);\n\
    \  assert.deepEqual(candidate(4),false);\n  assert.deepEqual(candidate(1),false);\n\
    \  assert.deepEqual(candidate(5),true);\n  assert.deepEqual(candidate(11),true);\n\
    \  assert.deepEqual(candidate(17),true);\n  assert.deepEqual(candidate(85),false);\n\
    \  assert.deepEqual(candidate(77),false);\n  assert.deepEqual(candidate(255379),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmptkmui95p.js:38:10)\n    at\
    \ Object.<anonymous> (/tmp/tmptkmui95p.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    var sqrtn = Math.sqrt(n);\n    for (var i = 2; i <= sqrtn; i++){\n      \
    \  if (n % i == 0){\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_prime;\n  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp0jxmmt1k.js:37:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp0jxmmt1k.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    var i = 2\n    while(i*i <= n){\n        if(n % i == 0){\n            return\
    \ false\n        }\n        i++\n    }\n    return true\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_prime;\n  assert.deepEqual(candidate(6),false);\n\
    \  assert.deepEqual(candidate(101),true);\n  assert.deepEqual(candidate(11),true);\n\
    \  assert.deepEqual(candidate(13441),true);\n  assert.deepEqual(candidate(61),true);\n\
    \  assert.deepEqual(candidate(4),false);\n  assert.deepEqual(candidate(1),false);\n\
    \  assert.deepEqual(candidate(5),true);\n  assert.deepEqual(candidate(11),true);\n\
    \  assert.deepEqual(candidate(17),true);\n  assert.deepEqual(candidate(85),false);\n\
    \  assert.deepEqual(candidate(77),false);\n  assert.deepEqual(candidate(255379),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpyttfgfgg.js:38:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpyttfgfgg.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \tvar sqrtn = Math.sqrt(n);\n\tfor(var i = 2; i <= sqrtn; i++){\n\t\tif(n % i\
    \ == 0){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = is_prime;\n\
    \  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbsrdeoku.js:37:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpbsrdeoku.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    if(n == 1){\n        return false;\n    }\n    for(var i = 2; i < n; i++){\n\
    \        if(n % i == 0){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_prime;\n  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return true if a given number is prime, and false otherwise.\n// >>>\
    \ is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime(n){\n\
    \    var i = 2;\n    while(i <= Math.sqrt(n)){\n        if(n % i == 0){\n    \
    \        return false;\n        }\n        i++;\n    }\n    return true;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_prime;\n  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
    \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
    \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
    \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
    \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
    \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp0k26levz.js:38:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp0k26levz.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

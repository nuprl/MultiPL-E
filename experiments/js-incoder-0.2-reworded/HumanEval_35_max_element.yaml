name: HumanEval_35_max_element
language: js
prompt: "//Return maximum element in the array.\n// >>> max_element([1, 2, 3])\n//\
  \ 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n// 123\nfunction\
  \ max_element(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = max_element;\n  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
  \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
completions: ["    return Math.max.apply(Math, l)\n}\n", "    var max_num = l[0];\n\
    \    var max_idx = 1;\n    for(var i = 1; i < l.length; i++){\n        if(l[i]\
    \ > max_num){\n            max_num = l[i];\n            max_idx = i;\n       \
    \ }\n    }\n    return max_num;\n}\n", "    var max = l[0], max_idx = 0, i;\n\
    \    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n            max\
    \ = l[i];\n            max_idx = i;\n        }\n    }\n    return max;\n}\n",
  "    var max = l[0], maxi = 1;\n    for(var i = 1; i < l.length; i++){\n       \
    \ if(l[i] > max){\n            max = l[i];\n            maxi = i;\n        }\n\
    \    }\n    return maxi;\n}\n", "    var max = l[0], max_idx = 0, i;\n    for(i\
    \ = 0; i < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n\
    \            max_idx = i;\n        }\n    }\n    return max;\n}\n", "  var max\
    \ = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] > max){\n      max\
    \ = l[i];\n    }\n  }\n  return max;\n}\n", "    var max = l[0], maxIndex = 0,\
    \ i;\n    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n          \
    \  max = l[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n", "  return Math.max.apply(Math, l)\n}\n", "  return Math.max.apply(Math,\
    \ l)\n}\n", "    var max = l[0];\n    for(var i = 1; i < l.length; i++){\n   \
    \     if(l[i] > max){\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\n", "  return Math.max.apply(Math, l)\n}\n", "    var max = l[0], max_idx =\
    \ 0, i;\n    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n       \
    \     max = l[i];\n            max_idx = i;\n        }\n    }\n    return max_idx;\n\
    }\n", "    var max = l[0], max_i = 0;\n    for(var i = 1; i < l.length; i++){\n\
    \        if(l[i] > max){\n            max = l[i];\n            max_i = i;\n  \
    \      }\n    }\n    return max_i;\n}\n", "  return Math.max.apply(Math, l)\n\
    }\n", "  var max = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] >\
    \ max){\n      max = l[i];\n    }\n  }\n  return max;\n}\n", "    return Math.max.apply(Math,\
    \ l)\n}\n", "    var max = l[0], maxIndex = 0;\n    for(var i = 1; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n            maxIndex\
    \ = i;\n        }\n    }\n    return maxIndex;\n}\n", "  var max = l[0];\n  for(var\
    \ i = 1; i < l.length; i++){\n    if(l[i] > max){\n      max = l[i];\n    }\n\
    \  }\n  return max;\n}\n", "  return Math.max.apply(Math, l)\n}\n", "    var max\
    \ = l[0], maxi = 1, maxi = 0;\n    for(var i in l){\n        if(l[i] > max){\n\
    \            max = l[i];\n            maxi = i;\n        }\n    }\n    return\
    \ maxi;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

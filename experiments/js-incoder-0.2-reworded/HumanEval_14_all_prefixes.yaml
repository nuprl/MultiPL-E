name: HumanEval_14_all_prefixes
language: js
prompt: "//Return array of all prefixes from shortest to longest of the input string\n\
  // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
  asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
  WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
completions: ["  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n \
    \   prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix\
    \ = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n\
    \    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n     \
    \ prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var i = 0;\n \
    \ while(i < string.length){\n    prefixes.push(string.substr(i, string.length));\n\
    \    i++;\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i =\
    \ 0; i < string.length; i++){\n    prefixes.push(string.substring(0, i));\n  }\n\
    \  return prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i=0;i<len;i++){\n        prefixes.push(string.substr(0,i));\n   \
    \ }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefix = string.substr(0, i);\n    if(prefixes.indexOf(prefix)\
    \ === -1){\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var len = string.length;\n  for(var i = 0; i<len; i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var prefix = '';\n  for(var i = 0; i < string.length; i++){\n\
    \    prefix += string[i];\n    if(string[i] != string[0]){\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var len = string.length;\n    var i = 0;\n    while(i <\
    \ len){\n        prefixes.push(string.substr(i, len));\n        i += len;\n  \
    \  }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i<string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix\
    \ = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var length = string.length;\n\
    \  for(var i = 0; i<length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0;\
    \ i<string.length; i++){\n    prefix = string.slice(0, i);\n    if(prefixes.indexOf(prefix)\
    \ == -1){\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n",
  "    var prefixes = [];\n    var prefix;\n    var i;\n    for(i = 0; i < string.length;\
    \ i++){\n        prefix = string.substr(0, i);\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var len = string.length;\n  for(var i = 0; i <\
    \ len; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n\
    \    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n   \
    \   prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var prefix = '';\n  for(var i = 0; i < string.length; i++){\n    prefix\
    \ += string[i];\n    if(string[i] !== prefix){\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix\
    \ + string[i];\n        if(string[i] !== string[0]){\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var currentLength = 0;\n  for(var i = 0; i < string.length;\
    \ i++){\n    if(string[i] === \" \" || string[i] === \"\\t\" || string[i] ===\
    \ \"\\n\"){\n      currentLength++;\n    } else {\n      currentLength = 0;\n\
    \    }\n    if(currentLength > prefixes.length){\n      prefixes = prefixes.slice(0,\
    \ currentLength);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n\
    \  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n\
    \    if(prefixes.indexOf(prefix)===-1){\n      prefixes.push(prefix);\n    }\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var i = string.length;\n\
    \  while (i--){\n    prefixes.unshift(string.slice(0, i));\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var len = string.length;\n  for(var i = 0; i<len;\
    \ i++){\n    prefixes.push(string.substring(0, i));\n  }\n  return prefixes;\n\
    }\n", "    var prefixes = [];\n    var currentPrefix = \"\";\n    for(var i =\
    \ 0; i < string.length; i++){\n        if(string[i] === currentPrefix){\n    \
    \        prefixes.push(currentPrefix);\n        }\n        else{\n           \
    \ currentPrefix = string[i];\n            prefixes.push(currentPrefix);\n    \
    \    }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var len =\
    \ string.length;\n  for(var i = 0; i < len; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var current_prefix\
    \ = \"\";\n  for(var i = 0; i < string.length; i++){\n    if(string[i] === \"\
    \ \" || string[i] === \"\\t\" || string[i] === \"\\n\"){\n      prefixes.push(current_prefix);\n\
    \      current_prefix = \"\";\n    }else{\n      current_prefix += string[i];\n\
    \    }\n  }\n  prefixes.push(current_prefix);\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var len = string.length;\n  for(var i = 0; i<len; i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var current = \"\";\n  for(var i = 0; i < string.length; i++){\n\
    \    current += string[i];\n    if(string[i] !== string[0]){\n      prefixes.push(current);\n\
    \      current = \"\";\n    }\n  }\n  prefixes.push(current);\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var stringLength = string.length;\n  for(var i\
    \ = 0; i<stringLength; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i+1));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i = 0; i < len; i++){\n    prefixes.push(string.slice(0, i));\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0; i<len; i++){\n    prefixes.push(string.substring(0, i));\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var length = string.length;\n\
    \  for(var i = 0; i<length; i++){\n    prefixes.push(string.substr(0,i));\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefix += string[i];\n    if(string[i]\
    \ != string[0]){\n      prefixes.push(prefix);\n      prefix = '';\n    }\n  }\n\
    \  prefixes.push(prefix);\n  return prefixes;\n}\n", "  var prefixes = [];\n \
    \ for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n\
    \  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var current_prefix\
    \ = \"\";\n    for(var i = 0; i < string.length; i++){\n        if(string[i] ===\
    \ \" \" || string[i] === \"\\t\" || string[i] === \"\\n\"){\n            prefixes.push(current_prefix);\n\
    \            current_prefix = \"\";\n        } else {\n            current_prefix\
    \ += string[i];\n        }\n    }\n    prefixes.push(current_prefix);\n    return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n    \
    \    if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var len\
    \ = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i = 0; i<len; i++){\n    prefixes.push(string.slice(0, i));\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var i = 0;\n  var len = string.length;\n  while (i < len){\n\
    \    prefixes.push(string.substr(i, string.length));\n    i += 1;\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var stringLength = string.length;\n\
    \  for(var i = 0; i <= stringLength; i++){\n    prefixes.push(string.substr(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var current = \"\";\n  for(var i=0;\
    \ i<string.length; i++){\n    current += string[i];\n    if(string[i] === \" \"\
    \ || string[i] === \"\\t\" || string[i] === \"\\n\"){\n      prefixes.push(current);\n\
    \      current = \"\";\n    }\n  }\n  prefixes.push(current);\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n\
    \    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)===-1){\n  \
    \    prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var prefix;\n  for(var i=0; i<string.length; i++){\n    prefix = string.substr(0,\
    \ i);\n    if(prefixes.indexOf(prefix) == -1){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n\
    \    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n   \
    \   prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i+1));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var current = \"\";\n\
    \  for(var i = 0; i < string.length; i++){\n    current += string[i];\n    if(string[i]\
    \ != string[0]){\n      prefixes.push(current);\n      current = \"\";\n    }\n\
    \  }\n  prefixes.push(current);\n  return prefixes;\n}\n", "  var prefixes = [];\n\
    \  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var currentPrefix\
    \ = '';\n    for(var i = 0; i < string.length; i++){\n        if(string[i] ===\
    \ currentPrefix){\n            prefixes.push(currentPrefix);\n        }else{\n\
    \            currentPrefix = string[i];\n            prefixes.push(currentPrefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var currentLength = string.length;\n\
    \  while(currentLength > 0){\n    prefixes.unshift(string.substr(0,currentLength));\n\
    \    currentLength = currentLength - 1;\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var current_prefix = \"\";\n  for(var i = 0; i < string.length;\
    \ i++){\n    if(string[i] === current_prefix){\n      prefixes.push(current_prefix);\n\
    \    }else{\n      current_prefix = string[i];\n      prefixes.push(current_prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        prefix_length = prefix_length\
    \ + string[i].length;\n        prefixes.push(string.substr(0, prefix_length));\n\
    \    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var\
    \ i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    for(var i = 0; i < string.length; i++){\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var len =\
    \ string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var strings = string.split('');\n\
    \  for(var i=0;i<strings.length;i++){\n    prefixes.push(strings[i]);\n  }\n \
    \ return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  var i;\n  for(i\
    \ = 0; i < string.length; i++){\n    prefix = string.slice(0, i);\n    if(prefixes.indexOf(prefix)\
    \ === -1){\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix\
    \ = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix_length\
    \ = 0;\n  var current_prefix = \"\";\n  \n  for(var i = 0; i < string.length;\
    \ i++){\n    if(string[i] === \" \"){\n      prefix_length++;\n      current_prefix\
    \ = current_prefix + string[i];\n    }\n    else{\n      if(prefix_length >= current_prefix.length){\n\
    \        prefixes.push(current_prefix);\n      }\n      prefix_length = 0;\n \
    \     current_prefix = \"\";\n    }\n  }\n  \n  if(prefix_length >= current_prefix.length){\n\
    \    prefixes.push(current_prefix);\n  }\n  \n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var prefix;\n  var i;\n  var j;\n  var k;\n  var l;\n  var\
    \ lenstring;\n  var lenprefix;\n  var stringlength;\n  var stringprefix;\n  var\
    \ stringprefixlength;\n  var stringprefixlength;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n  var stringprefix;\n\
    \  var stringprefix;\n  var stringprefix;\n  var string", "  var prefixes = [];\n\
    \  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var strings =\
    \ string.split('');\n  for(var i=0;i<strings.length;i++){\n    prefixes.push(strings[i]);\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var prefix;\n    var i;\n    for(i\
    \ = 0; i < string.length; i++){\n        prefix = string.substr(0, i);\n     \
    \   if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ prefix = '';\n    for(var i = 0; i < string.length; i++){\n        prefix =\
    \ prefix + string[i];\n        if(prefixes.indexOf(prefix) === -1){\n        \
    \    prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n", " \
    \ var prefixes = [];\n  var prefix;\n  for(var i = 0; i < string.length; i++){\n\
    \    prefix = string.substring(0, i);\n    if(prefixes.indexOf(prefix) == -1){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var prefix = '';\n  for (var i = 0; i < string.length; i++){\n    prefix\
    \ += string[i];\n    if (string[i] === string[0]){\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n\
    \  var len = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       prefixes.push(prefix);\n    }\n    return prefixes;\n}\n", "    var prefixes\
    \ = [];\n    var length = string.length;\n    for(var i = 0; i<length; i++){\n\
    \        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var i = string.length;\n\
    \    while(i--){\n        prefixes.unshift(string.slice(0, i));\n    }\n    return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var prefix = '';\n  for (var i = 0;\
    \ i < string.length; i++) {\n    prefix = prefix + string[i];\n    if (string[i]\
    \ !== prefix) {\n      prefixes.push(prefix);\n      prefix = '';\n    }\n  }\n\
    \  prefixes.push(prefix);\n  return prefixes;\n}\n", "  var prefixes = [];\n \
    \ var len = string.length;\n  for(var i=0; i<len; i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var i = string.length;\n\
    \  while (i--){\n    prefixes.unshift(string.slice(0, i));\n  }\n  return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix;\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = string.substring(0, i);\n        if(prefixes.indexOf(prefix)\
    \ == -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0; i<string.length; i++){\n\
    \    prefix = string.slice(0, i);\n    if(prefixes.indexOf(prefix) == -1){\n \
    \     prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "    var prefixes\
    \ = [];\n    var i = 0;\n    while(i < string.length){\n        prefixes.push(string.substr(i,\
    \ string.length));\n        i += 1;\n    }\n    return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var stringLength\
    \ = string.length;\n    var stringIndex = 0;\n    while(stringIndex < stringLength){\n\
    \        var prefix = string.substr(stringIndex,stringLength);\n        prefixes.push(prefix);\n\
    \        stringIndex += stringLength;\n    }\n    return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix;\n   \
    \ for(var i = 0; i < string.length; i++){\n        prefix = string.slice(0, i);\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var prefix\
    \ = '';\n  for(var i = 0; i < string.length; i++){\n    prefix += string[i];\n\
    \    if(string[i] === string[0]){\n      prefixes.push(prefix);\n      prefix\
    \ = '';\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n\
    \  for(var i = 0; i < string.length; i++){\n    prefix = string.slice(0, i);\n\
    \    if(prefixes.indexOf(prefix) == -1){\n      prefixes.push(prefix);\n    }\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  var i;\n\
    \  var j;\n  var k;\n  var l;\n  var m;\n  var n;\n  var o;\n  var p;\n  var q;\n\
    \  var r;\n  var s;\n  var t;\n  var u;\n  var v;\n  var w;\n  var x;\n  var y;\n\
    \  var z;\n  var a;\n  var b;\n  var c;\n  var d;\n  var e;\n  var f;\n  var g;\n\
    \  var h;\n  var i;\n  var j;\n  var k;\n  var l;\n  var m;\n  var n;\n  var o;\n\
    \  var p;\n  var q;\n  var r;\n  var s;\n  var t;\n  var u;\n  var v;\n  var w;\n\
    \  var x;\n  var y;\n  var z;\n  var a;\n  var b;\n  var c;\n  var d;\n  var e;\n\
    \  var f;\n  var g;\n  var h;\n  var i;\n  var j;\n  var k;\n  var l;\n  var m;\n\
    \  var n;\n  var o;\n  var p;\n  var q;\n  var r;\n  var s;\n  var t;\n  var u;\n\
    \  var v;\n  var w;\n  var x;\n  var y;\n  var z;\n  var a;\n  var b;\n  var c;\n\
    \  var d;\n  var e;\n  var f;\n  var g;\n  var h;\n  var i;\n  var j;\n  var k;\n\
    \  var l;\n  var m;\n  var n;\n  var o;\n  var p;\n  var q;\n  var r;\n  var s;\n\
    \  var t;\n  var u;\n  var v;\n  var w;\n  var x;\n  var y;\n  var z;\n  var a;\n\
    \  var b;\n  var c;\n  var d;\n  var e;\n  var f;\n  var g;\n  var h;\n  var i;\n\
    \  var j;\n  var k;\n  var l;\n  var m;\n  var n;\n  var o;\n  var p;\n  var q;\n\
    \  var r;\n  var s;\n  var t;\n  var u;\n  var v;\n  var w;\n  var x;\n  var y;\n\
    \  var z;\n  var a;\n  var b;\n  var c;\n  var d;\n  var e;\n  var f;\n  var g;\n\
    \  var h;\n  var i;\n  var j;\n  var k;\n  var l;\n  var m;\n  var n;\n  var o;\n\
    \  var p;\n  var q;\n  var r;\n  var s;\n  var t;\n  var u;\n  var v;\n  var w;\n\
    \  var x;\n  var y;\n  var z;\n  var a;\n  var b;\n  var c;\n  var d;\n  var e;\n\
    \  var f;\n  var g;\n  var h;", "  var prefixes = [];\n  var stringLength = string.length;\n\
    \  for(var i = 0; i <= stringLength; i++){\n    prefixes.push(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var i = string.length;\n  while (i--){\n\
    \    prefixes.unshift(string.slice(0, i));\n  }\n  return prefixes;\n}\n", " \
    \ var prefixes = [];\n  var i;\n  for(i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix\
    \ + string[i];\n        if(prefixes.length == 0 || prefixes[prefixes.length-1].length\
    \ < prefix.length){\n            prefixes.push(prefix);\n        }\n    }\n  \
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i = 0; i<len; i++){\n    prefixes.push(string.substr(0, i));\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var currentLength = 0;\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string[i] === \"_\" || string[i]\
    \ === \"-\"){\n            prefixes.push(string.substr(currentLength, i));\n \
    \           currentLength = i + 1;\n        }\n    }\n    prefixes.push(string.substr(currentLength));\n\
    \    return prefixes;\n}\n", "  var prefixes = [];\n  var current = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    current += string[i];\n    if(string[i]\
    \ === \" \" || string[i] === \"\\n\" || string[i] === \"\\t\" || string[i] ===\
    \ \"\\r\" || string[i] === \"\\f\"){\n      prefixes.push(current);\n      current\
    \ = \"\";\n    }\n  }\n  prefixes.push(current);\n  return prefixes;\n}\n", " \
    \ var prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i <= string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var len = string.length;\n  for(var i = 0; i < len; i++){\n\
    \    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    for(var i = 0; i < string.length; i++){\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var stringLength\
    \ = string.length;\n    var stringIndex = 0;\n    var stringPrefix = \"\";\n \
    \   \n    while(true){\n        if(stringIndex >= stringLength){\n           \
    \ break;\n        }\n        \n        stringPrefix = stringPrefix + string.charAt(stringIndex);\n\
    \        \n        if(stringPrefix.length > 0){\n            prefixes.push(stringPrefix);\n\
    \        }\n        \n        stringIndex++;\n    }\n    \n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var i = 0;\n  var len = string.length;\n\
    \  while(i < len){\n    prefixes.push(string.substr(i, len));\n    i += len;\n\
    \  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var\
    \ i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n  for(var\
    \ i = 0; i<len; i++){\n    prefixes.push(string.substring(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var stringLength = string.length;\n\
    \  for(var i=0;i<stringLength;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefix += string[i];\n    if(string[i]\
    \ != string[0]){\n      prefixes.push(prefix);\n      prefix = '';\n    }\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var i = 0;\n  while(string.length\
    \ > i){\n    prefixes.push(string.substr(i, string.length));\n    i = prefixes.length\
    \ - 1;\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n\
    \  for(var i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var prefix_length = string.length;\n  for(var i=0;i<prefix_length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var current_prefix = \"\";\n  for(var i=0; i<string.length;\
    \ i++){\n    if(string[i] === \" \" || string[i] === \"\\t\" || string[i] ===\
    \ \"\\n\"){\n      prefixes.push(current_prefix);\n      current_prefix = \"\"\
    ;\n    }else{\n      current_prefix += string[i];\n    }\n  }\n  prefixes.push(current_prefix);\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix_length = 0;\n \
    \ for(var i = 0; i < string.length; i++){\n    var c = string.charAt(i);\n   \
    \ if(c === \"\"){\n      prefixes.push(\"\");\n      prefix_length++;\n    }\n\
    \    else{\n      if(c === \"a\"){\n        prefixes.push(\"a\");\n        prefix_length++;\n\
    \      }\n      else if(c === \"b\"){\n        prefixes.push(\"b\");\n       \
    \ prefix_length++;\n      }\n      else if(c === \"c\"){\n        prefixes.push(\"\
    c\");\n        prefix_length++;\n      }\n      else if(c === \"d\"){\n      \
    \  prefixes.push(\"d\");\n        prefix_length++;\n      }\n      else if(c ===\
    \ \"e\"){\n        prefixes.push(\"e\");\n        prefix_length++;\n      }\n\
    \      else if(c === \"f\"){\n        prefixes.push(\"f\");\n        prefix_length++;\n\
    \      }\n      else if(c === \"g\"){\n        prefixes.push(\"g\");\n       \
    \ prefix_length++;\n      }\n      else if(c === \"h\"){\n        prefixes.push(\"\
    h\");\n        prefix_length++;\n      }\n      else if(c === \"i\"){\n      \
    \  prefixes.push(\"i\");\n        prefix_length++;\n      }\n      else if(c ===\
    \ \"j\"){\n        prefixes.push(\"j\");\n        prefix_length++;\n      }\n\
    \      else if(c === \"k\"){\n        prefixes.push(\"k\");\n        prefix_length++;\n\
    \      }\n      else if(c === \"l\"){\n        prefixes.push(\"l\");\n       \
    \ prefix_length++;\n      }\n      else if(c === \"m\"){\n        prefixes.push(\"\
    m\");\n        prefix_length++;\n      }\n      else if(c === \"n\"){\n      \
    \  prefixes.push(\"n\");\n        prefix_length++;\n      }\n      else if(c ===\
    \ \"o\"){\n        prefixes.push(\"o\");\n        prefix_length++;\n      }\n\
    \      else if(c === \"p\"){\n        prefixes.push(\"p\");\n        prefix_length++;\n\
    \      }\n      else if(c === \"q\"){\n        prefixes.push(\"q\");\n       \
    \ prefix_length++;\n      }\n      else if(c === \"r\"){\n        prefixes.push(\"\
    r\");\n        prefix_length++;\n      }\n      else if(c === \"s\"){\n      \
    \  prefixes.push(\"s\");\n        prefix_length++;\n      }\n      else if(c ===\
    \ \"t\"){\n        prefixes.push(\"t\");\n        prefix_length++;\n      }\n\
    \      else if(c === \"u\"){\n        prefixes.push(\"u", "  var prefixes = [];\n\
    \  var len = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var i;\n  for(i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var len = string.length;\n  for(var i = 0; i<len; i++){\n\
    \    prefixes.push(string.substring(0, i));\n  }\n  return prefixes;\n}\n", " \
    \ var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix;\n\
    \    var i;\n    for(i = 0; i < string.length; i++){\n        prefix = string.slice(0,\
    \ i);\n        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ prefix = '';\n    for(var i = 0; i < string.length; i++){\n        prefix =\
    \ prefix + string[i];\n        if(string[i] !== string[0]){\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var currentString\
    \ = \"\";\n    for(var i = 0; i < string.length; i++){\n        currentString\
    \ += string[i];\n        prefixes.push(currentString);\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i = 0; i<len; i++){\n    prefixes.push(string.substring(0, i));\n \
    \ }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var prefix;\n    for(var i=0;i<string.length;i++){\n   \
    \     prefix = string.substr(0,i);\n        if(prefixes.indexOf(prefix)<0){\n\
    \            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(string[i] !== string[0]){\n\
    \            prefixes.push(prefix);\n            prefix = '';\n        }\n   \
    \ }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var i = 0;\n  while(string.length > i){\n    prefixes.push(string.substr(i,\
    \ string.length));\n    i = prefixes.length - 1;\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var length = string.length;\n  for(var i = 0; i<length;\
    \ i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix\
    \ = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var stringLength\
    \ = string.length;\n  for(var i = 0; i <= stringLength; i++){\n    prefixes.push(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i = 0; i < len; i++){\n    prefixes.push(string.substr(0, i));\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix\
    \ = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n\
    \  for(var i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i = 0; i<len; i++){\n    prefixes.push(string.substr(0,i));\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var len = string.length;\n  for(var i = 0; i < len; i++){\n\
    \    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var i;\n  for(i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0;\
    \ i<string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var prefix;\n  for(var i=0; i<string.length; i++){\n    prefix\
    \ = string.substr(0, i);\n    if(prefixes.indexOf(prefix) == -1){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n\
    \  for(var i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix = '';\n\
    \  for(var i = 0; i < string.length; i++){\n    prefix += string[i];\n    if(string[i]\
    \ !== prefix){\n      prefixes.push(prefix);\n      prefix = '';\n    }\n  }\n\
    \  prefixes.push(prefix);\n  return prefixes;\n}\n", "  var prefixes = [];\n \
    \ var prefix = '';\n  for (var i = 0; i < string.length; i++){\n    prefix +=\
    \ string[i];\n    if (string[i] !== prefix){\n      prefixes.push(prefix);\n \
    \     prefix = '';\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var current_prefix = \"\";\n  for(var i = 0; i\
    \ < string.length; i++){\n    if(string[i] === \" \" || string[i] === \"\\t\"\
    \ || string[i] === \"\\n\"){\n      prefixes.push(current_prefix);\n      current_prefix\
    \ = \"\";\n    }else{\n      current_prefix += string[i];\n    }\n  }\n  prefixes.push(current_prefix);\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefix += string[i];\n    if(string[i]\
    \ !== string[0]){\n      prefixes.push(prefix);\n      prefix = '';\n    }\n \
    \ }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n   \
    \ var i = 0;\n    while (i < len){\n        prefixes.push(string.substr(i, len));\n\
    \        i += len;\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n\
    \  var len = string.length;\n  for(var i = 0; i<len; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix\
    \ + string[i];\n        if(prefixes.length == 0){\n            prefixes.push(prefix);\n\
    \        }\n        else{\n            for(var j = 0; j < prefixes.length; j++){\n\
    \                if(prefixes[j].length < prefix.length){\n                   \
    \ prefixes.splice(j, 0, prefix);\n                    break;\n               \
    \ }\n            }\n        }\n    }\n    return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    for(var i\
    \ = 0; i < string.length; i++){\n        prefixes.push(string.substring(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix;\n\
    \    var i;\n    var j;\n    for(i = 0; i < string.length; i++){\n        prefix\
    \ = \"\";\n        for(j = 0; j < i; j++){\n            prefix += string[j];\n\
    \        }\n        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n",
  "  var prefixes = [];\n  var stringLength = string.length;\n  for(var i=0;i<stringLength;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var i = string.length;\n  while (i--){\n    prefixes.unshift(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var prefix;\n    var i;\n    for(i = 0; i < string.length;\
    \ i++){\n        prefix = string.slice(0, i);\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var i = 0;\n    var len = string.length;\n\
    \    while(i < len){\n        prefixes.push(string.substr(i, 1));\n        i +=\
    \ 1;\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n\
    \        if(string[i] != string[0]){\n            prefixes.push(prefix);\n   \
    \         prefix = '';\n        }\n    }\n    return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var\
    \ i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)===-1){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n\
    \    if(prefixes.indexOf(prefix)===-1){\n      prefixes.push(prefix);\n    }\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(string[i] !== string[0]){\n\
    \            prefixes.push(prefix);\n            prefix = '';\n        }\n   \
    \ }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i+1));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.substring(0, i));\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var i = 0;\n  while (i\
    \ < string.length){\n    prefixes.push(string.substr(i, string.length));\n   \
    \ i = i + 1;\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len\
    \ = string.length;\n  for(var i = 0; i<len; i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var i = 0;\n  var len = string.length;\n  while (i < len){\n\
    \    prefixes.push(string.substr(i, string.length));\n    i += 1;\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var stringLength = string.length;\n\
    \  for(var i = 0; i < stringLength; i++){\n    prefixes.push(string.slice(0, i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i = 0; i<len; i++){\n    prefixes.push(string.slice(0, i));\n  }\n\
    \  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix;\n    var i;\n\
    \    for(i = 0; i < string.length; i++){\n        prefix = string.substr(0, i);\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ len = string.length;\n    for(var i=0;i<len;i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i\
    \ < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix\
    \ = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var i = 0;\n\
    \    while(i < string.length){\n        prefixes.push(string.substr(i, string.length));\n\
    \        i += 1;\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n \
    \ var current_prefix = \"\";\n  for(var i = 0; i < string.length; i++){\n    if(string[i]\
    \ === \" \" || string[i] === \"#\"){\n      prefixes.push(current_prefix);\n \
    \     current_prefix = \"\";\n    }else{\n      current_prefix += string[i];\n\
    \    }\n  }\n  prefixes.push(current_prefix);\n  return prefixes;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

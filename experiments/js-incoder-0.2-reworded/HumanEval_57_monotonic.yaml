name: HumanEval_57_monotonic
language: js
prompt: "//Return true is array elements are monotonically increasing or decreasing.\n\
  // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n// false\n\
  // >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
  \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
  \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
completions: ["  var s = monotonicSort;\n  return l(s);\n}\n", "    var n = l.length,\n\
    \        monotone = true,\n        i, j, p0, p1, d;\n    for(i = 1; i < n; i++){\n\
    \        p0 = l[i-1];\n        p1 = l[i];\n        d = p0[0] - p1[0];\n      \
    \  if(d > 0){\n            monotone = false;\n        }else if(d === 0){\n   \
    \         monotone = true;\n        }\n    }\n    return monotone;\n}\n\nmonotone.monotonic\
    \ = monotonic;\n\nmodule.exports = monotone;\n\n},{}],41:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('./array');\n", "    var n = l.length,\n\
    \        monotone = true,\n        i, j, p0, p1;\n    for(i = 1; i < n; i++){\n\
    \        p0 = l[i-1];\n        p1 = l[i];\n        if(p0 < p1){\n            monotone\
    \ = false;\n            break;\n        }\n    }\n    return monotone;\n}\n\n\
    monotone.monotonic = monotonic;\n\nmodule.exports = monotone;\n\n},{}],42:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('./array');\n", "  var n = l.length;\n\
    \  return !(n<=1 || l[0]<=l[n-1]);\n}\n", "  var n = l.length,\n      monotone\
    \ = true,\n      i, j, p0, p1, d;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n\
    \    p1 = l[i];\n    d = p0[0]-p1[0];\n    if(d > 0){\n      monotone = false;\n\
    \      break;\n    }\n  }\n  return monotone;\n}\n", "    var n = l.length;\n\
    \    return !(n<=1 || l[0]<=l[n-1]);\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s) ? s[0] === s[1] : false;\n}\n\nmonotonic.version = '1.1.1';\n\nmodule.exports\
    \ = monotonic;\n\n},{}],41:[function(_dereq_,module,exports){\n'use strict';\n\
    \nvar isArray = _dereq_('isarray');\n\nvar VNode,\n    emptyArray = [],\n    isArrayLike\
    \ = _dereq_('./array').isArrayLike,\n    isObject = _dereq_('./object').isObject;\n\
    \nvar arrayMethods = _dereq_('./array').arrayMethods;\nvar arrayProto = _dereq_('./array').arrayProto;\n\
    \nvar createArrayMethod = arrayMethods(5);\n\nvar push = arrayProto.push;\nvar\
    \ slice = arrayProto.slice;\nvar setProto = Object.prototype.set;\n\nvar Native\
    \ =\n  /__DATA__/.test({}.toString.call(global.native)) ? function(it){\n    try\
    \ {\n      return global.native.call(it);\n    } catch(e){\n      return it;\n\
    \    }\n  } : function(it){\n    return it;\n  };\n\nvar document = global.document;\n\
    var push$1 = Array.prototype.push;\nvar slice$1 = Array.prototype.slice;\n\nvar\
    \ ArrayPrototype = {};\n\nArrayPrototype[arrayMethods] = {\n  concat: function(){\n\
    \    var values = [],\n        len = this.length,\n        i;\n    for(i = 0;\
    \ i < len; i++){\n      values.push(this[i]);\n    }\n    return push$1.apply(this,\
    \ $traceurRuntime.splat(values));\n  },\n  join: function(){\n    return arrayJoin.apply(this,\
    \ arguments);\n  },\n  pop: function(){\n    return setProto.toString.pop.apply(this,\
    \ arguments);\n  },\n  push: push$1,\n  reverse: arrayProto.reverse,\n  shift:\
    \ arrayProto.shift,\n  slice: function(start, end){\n    return arrayProto.slice.call(this,\
    \ start, end);\n  },\n  sort: arrayProto.sort,\n  splice: arrayProto.splice,\n\
    \  unshift: arrayProto.unshift\n};\n\nvar defineProperty = Object.defineProperty;\n\
    var ArrayPrototype = Array.prototype;\n\nvar isArray = Array.isArray;\n\nvar document$1\
    \ = global.document;\nvar push$2 = Array.prototype.push;\nvar slice$2 = Array.prototype.slice;\n\
    \nvar concat = ArrayPrototype.concat;\n\nvar prototype = ArrayPrototype; // More\
    \ array methods like reverse, map, some, etc.\nvar push$3 = ArrayPrototype.push;\n\
    var slice$3 = ArrayPrototype.slice;\n\nvar ArrayPrototype$1 = ArrayPrototype;\n\
    \nvar filter = Array.prototype.filter;\nvar map = Array.prototype.map;\nvar some\
    \ = Array.prototype.some;\n\nvar define", "  var n = l.length,\n      monotonic\
    \ = true,\n      i, j, p0, p1, d;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n\
    \    p1 = l[i];\n    d = p0[0]-p1[0];\n    if(d===0) monotonic = false;\n    if(d<0){\n\
    \      for(j = i; j < n; j++){\n        p1 = l[j];\n        if(p1[0] > p0){\n\
    \          monotonic = false;\n          break;\n        }\n      }\n    }\n \
    \ }\n  return monotonic;\n}\n", "    var s = 0, n = l.length, m = +l[0], i, l;\n\
    \    if(!n) return !1;\n    if(n === 1) return !0;\n    if(m === 0) return !1;\n\
    \    for(i = 1, l = n; i < l; ++i){\n        if(+l[i] !== m) return !1;\n    }\n\
    \    return !0;\n}\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version\
    \ = '1.1.0';\n\nmodule.exports = monotonic;\n\n},{}],9:[function(require,module,exports){\n\
    'use strict';\n\nvar isArray = Array.isArray;\n", "  var n = l.length,\n     \
    \ monotone = true,\n      i, j, p0, p1;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n\
    \    p1 = l[i];\n    if(p0 < p1){\n      monotone = false;\n      break;\n   \
    \ }\n  }\n  return monotone;\n}\n", "  var n = l.length,\n      monotone = true,\n\
    \      i, j, p0, p1, d;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n    p1 =\
    \ l[i];\n    d = p0[0]-p1[0];\n    if(d===0){\n      monotone = false;\n     \
    \ break;\n    }\n    if(d > 0){\n      for(j = 1; j < p0.length; j++){\n     \
    \   if(p0[j] > p1[j]){\n          monotone = false;\n          break;\n      \
    \  }\n      }\n    }else{\n      for(j = 1; j < p1.length; j++){\n        if(p1[j]\
    \ > p0[j]){\n          monotone = false;\n          break;\n        }\n      }\n\
    \    }\n  }\n  return monotone;\n}\n", "    var n = l.length,\n        monotone\
    \ = true,\n        i, j, pmin;\n    for(i = 1; i < n; i++){\n        pmin = l[i-1];\n\
    \        for(j = i; j < n; j++){\n            if(l[j] < pmin){\n             \
    \   monotone = false;\n                break;\n            }\n        }\n    }\n\
    \    return monotone;\n}\n\nmonotone.monotonic = monotonic;\n\nmodule.exports\
    \ = monotone;\n\n},{}],8:[function(_dereq_,module,exports){\n'use strict';\n\n\
    var isArray = _dereq_('./array');\n", "    var n = l.length,\n        monotone\
    \ = true,\n        i, j, p0, p1, q0, q1, diff;\n    for(i = 0; i < n; i++){\n\
    \        p0 = l[i];\n        p1 = l[(i+1)%n];\n        diff = arrayDiff(p0, p1);\n\
    \        if(diff > 0){\n            monotone = false;\n        }\n        if(diff\
    \ < 0){\n            monotone = true;\n        }\n    }\n    return monotone;\n\
    }\n", "  var s = 0, n = l.length, m = +l.shift();\n  while (n < m) s++;\n  return\
    \ s <= 1;\n}\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.radixSort\
    \ = sort;\n\nmodule.exports = monotonic;\n\n},{\"./sort\":41}],41:[function(require,module,exports){\n\
    module.exports = sort;\n", "  var n = l.length,\n      monotone = true,\n    \
    \  i, j, p0, p1;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n    p1 = l[i];\n\
    \    if(p0 < p1){\n      monotone = false;\n      break;\n    }\n  }\n  return\
    \ monotone;\n}\n", "    var n = l.length,\n        monotone = true,\n        i,\
    \ j, p0, p1;\n    for(i = 1; i < n; i++){\n        p0 = l[i-1];\n        p1 =\
    \ l[i];\n        if(p0 < p1){\n            monotone = false;\n            break;\n\
    \        }\n    }\n    return monotone;\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s);\n}\n", "  var n = l.length,\n      out = 0,\n      i,\n      j,\n    \
    \  xi,\n      yi,\n      yj;\n  for(i = 0; i < n; ++i) {\n    xi = l[i];\n   \
    \ yi = l[++i];\n    yj = l[++i];\n    if(xi < yi && xi < yj) {\n      if(yi >\
    \ out) out = yi;\n      continue;\n    }\n    if(xi > yi && xi > yj) {\n     \
    \ if(yj > out) out = yj;\n      continue;\n    }\n    if(xi > yi && xi < yj) {\n\
    \      if(yi > out) out = yi;\n      continue;\n    }\n    if(xi < yi && xi <\
    \ yj) {\n      if(yj > out) out = yj;\n      continue;\n    }\n  }\n  return out\
    \ === 0;\n}\n", "    var n = l.length,\n        monotone = true,\n        i, j,\
    \ p0, p1;\n    for(i = 1; i < n; i++){\n        p0 = l[i-1];\n        p1 = l[i];\n\
    \        if(p0 < p1){\n            monotone = false;\n            break;\n   \
    \     }\n    }\n    return monotone;\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s);\n}\n", "  var s = monotonicSort;\n  return l(s) ? s[0] === s[1] : false;\n\
    }\n", "  var n = l.length,\n      m = +l.shift(),\n      flag = true,\n      i\
    \ = 0;\n  if(n < 1 || m !== n){\n    return false;\n  }\n  for(; i < n; i++){\n\
    \    if(l[i-1] > m){\n      flag = false;\n      break;\n    }\n  }\n  return\
    \ flag;\n}\n", "  var n = l.length,\n      monotonic = true,\n      i, j, p0,\
    \ p1, d;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n    p1 = l[i];\n    d =\
    \ p0[0]-p1[0];\n    if(d > 0){\n      monotonic = false;\n      break;\n    }\n\
    \  }\n  return monotonic;\n}\n", "    var s = monotonicSort;\n    return l(s).length\
    \ <= 1 && l(s).every(function(v, i, a){\n        return v === a[i+1];\n    });\n\
    }\n", "    var n = l.length,\n        monotone = true,\n        i, j, p0, p1,\
    \ d;\n    for(i = 1; i < n; i++){\n        p0 = l[i-1];\n        p1 = l[i];\n\
    \        d = p0[0] - p1[0];\n        if(d > 0){\n            monotone = false;\n\
    \            break;\n        }\n    }\n    return monotone;\n}\n", "    var s\
    \ = monotonicSort;\n    return l(s);\n}\n\nmonotonic.version = '1.1.0';\n", " \
    \ var n = l.length,\n      monotonic = true,\n      i, j, p0, p1, d;\n  for(i\
    \ = 1; i < n; i++){\n    p0 = l[i-1];\n    p1 = l[i];\n    d = p0[0]-p1[0];\n\
    \    if(d===0){\n      monotonic = false;\n      break;\n    }\n    if(d > 0){\n\
    \      for(j = i; j > 0; j--){\n        p0 = l[j-1];\n        p1 = l[j];\n   \
    \     if(p0[0] > p1[0]){\n          break;\n        }\n      }\n      monotonic\
    \ = monotonic && j > 0;\n    }else{\n      for(j = i; j < n; j++){\n        p0\
    \ = l[j-1];\n        p1 = l[j];\n        if(p0[0] < p1[0]){\n          break;\n\
    \        }\n      }\n      monotonic = monotonic && j < n;\n    }\n  }\n  return\
    \ monotonic;\n}\n", "  var n = l.length,\n      monotone = true,\n      i, j,\
    \ pmin;\n  for(i = 1; i < n; i++){\n    pmin = l[i-1];\n    for(j = i; j < n;\
    \ j++){\n      if(l[j] < pmin){\n        monotone = false;\n        break;\n \
    \     }\n    }\n  }\n  return monotone;\n}\n", "  var n = l.length,\n      out\
    \ = 0,\n      i,\n      j,\n      xi,\n      yi,\n      xj,\n      yj,\n     \
    \ r,\n      dr,\n      dr1,\n      dr2,\n      pr;\n\n  for (i = 0; i < n; ++i)\
    \ {\n    xi = l[i][0];\n    yi = l[i][1];\n    xj = l[j][0];\n    yj = l[j][1];\n\
    \    r = yi - yj;\n    dr = yj - yi;\n    dr1 = dx(xi, xj);\n    dr2 = dx(xj,\
    \ xi);\n    pr = dr1 * dr1 + dr2 * dr2;\n    if (pr > 0) {\n      r = dr2 > dr1\
    \ ? 1 : -1;\n    }\n    if (dr1 < dr2) {\n      l = xj;\n    } else {\n      l\
    \ = xi;\n    }\n    if (dr1 < dr2) {\n      r = -1;\n    }\n    if (dr1 > dr2)\
    \ {\n      r = 1;\n    }\n    if (dr2 > dr1) {\n      r = dr2 > dr1 ? -1 : 1;\n\
    \    }\n    out = !out || r > 0;\n  }\n  return out;\n}\n", "  var n = l.length,\n\
    \      monotonic = true,\n      i, j, p0, p1, d;\n  for(i = 1; i < n; i++){\n\
    \    p0 = l[i-1];\n    p1 = l[i];\n    d = p0[0]-p1[0];\n    if(d===0){\n    \
    \  monotonic = false;\n      break;\n    }\n    if(d > 0){\n      for(j = 1; j\
    \ < p0.length; j++){\n        if(p0[j-1] > p1[j]){\n          monotonic = false;\n\
    \          break;\n        }\n      }\n    }else{\n      for(j = 1; j < p1.length;\
    \ j++){\n        if(p0[j-1] < p1[j]){\n          monotonic = false;\n        \
    \  break;\n        }\n      }\n    }\n  }\n  return monotonic;\n}\n", "  var n\
    \ = l.length;\n  if(n < 1) return false;\n  for(var i = 0; i < n; i++){\n    if(l[i]\
    \ <= l[i+1]) return true;\n  }\n  return false;\n}\n", "  var s = monotonicSort;\n\
    \  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\
    \n},{}],5:[function(_dereq_,module,exports){\n'use strict';\n\nvar isArray = _dereq_('isarray');\n\
    \nvar Voronoi = _dereq_('../lib/constructor');\n\nvar defaultOptions = {\n  area:\
    \ 'center',\n  fill: 'lighten',\n  stroke: 'black'\n};\n", "    var n = l.length,\n\
    \        monotonic = true,\n        i, j, p0, p1, d;\n    for(i = 1; i < n; i++){\n\
    \        p0 = l[i-1];\n        p1 = l[i];\n        d = p0[0] - p1[0];\n      \
    \  if(d > 0){\n            monotonic = false;\n            break;\n        }\n\
    \    }\n    return monotonic;\n}\n", "    var s = monotonicSort;\n    return l(s);\n\
    }\n\nmonotonic.version = '0.1.0';\n\nmodule.exports = monotonic;\n\n},{}],3:[function(require,module,exports){\n\
    var sortBy = require('./sortBy');\n", "  var n = l.length,\n      monotonic =\
    \ true,\n      i, j, p0, p1, d;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n\
    \    p1 = l[i];\n    d = p0[0]-p1[0];\n    if(d===0) monotonic = false;\n    if(d<0){\n\
    \      for(j = i; j > 0; j--){\n        p1 = l[j-1];\n        if(p1[0] > p0[0])\
    \ break;\n        d = p1[0]-p0[0];\n        if(d<0) monotonic = false;\n     \
    \ }\n    }else{\n      for(j = i; j < n; j++){\n        p1 = l[j];\n        if(p1[0]\
    \ > p0[0]) break;\n        d = p1[0]-p0[0];\n        if(d<0) monotonic = false;\n\
    \      }\n    }\n  }\n  return monotonic;\n}\n", "    var n = l.length,\n    \
    \    monotonic = true,\n        i, j, p0, p1, q0, q1, diff;\n    for(i = 0; i\
    \ < n; i++){\n        p0 = l[i];\n        p1 = l[(i+1)%n];\n        diff = q0\
    \ = q1 = p0;\n        if(p0 > p1){\n            q1 = p1;\n            diff = p0\
    \ - p1;\n        }\n        for(j = i; j > 0 && diff > l[j-1]; j--){\n       \
    \     diff = q0 - l[j];\n            if(diff > l[j-1]){\n                q0 =\
    \ q1;\n                diff = p0 - q1;\n            }else{\n                q1\
    \ = j;\n                diff = q0 - l[j];\n            }\n        }\n        if(diff\
    \ < 0){\n            monotonic = false;\n        }\n    }\n    return monotonic;\n\
    }\n", "  var s = 0, n = l.length, m = +l.shift();\n  while (n < m) n++;\n  while\
    \ (n > 0) l.pop();\n  return +l.length === n;\n}\n", "    var n = l.length,\n\
    \        monotone = true,\n        i, j, p0, p1, d;\n    for(i = 1; i < n; i++){\n\
    \        p0 = l[i-1];\n        p1 = l[i];\n        d = p0[0]-p1[0];\n        if(d===0){\n\
    \            monotone = false;\n            break;\n        }\n        if(d >\
    \ 0){\n            for(j = 1; j < p0.length; j++){\n                if(p0[j-1]\
    \ > p1[j]){\n                    monotone = false;\n                    break;\n\
    \                }\n            }\n        }else{\n            for(j = 1; j <\
    \ p1.length; j++){\n                if(p0[j-1] < p1[j]){\n                   \
    \ monotone = false;\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return monotone;\n}\n\nmonotone.monotonic = monotonic;\n\
    \nmodule.exports = monotone;\n\n},{}],9:[function(_dereq_,module,exports){\n'use\
    \ strict';\n\nvar isArray = _dereq_('./array');\n", "    var n = l.length,\n \
    \       monotonic = true,\n        i, prev, curr;\n    for(i = 1; i < n; i++){\n\
    \        prev = l[i-1];\n        curr = l[i];\n        if(curr > prev){\n    \
    \        monotonic = false;\n            break;\n        }\n    }\n    return\
    \ monotonic;\n}\n", "    var n = l.length,\n        monotone = true,\n       \
    \ i, j, pmin;\n    for(i = 0; i < n; i++){\n        pmin = i;\n        for(j =\
    \ i + 1; j < n; j++){\n            if(l[j] < l[pmin]){\n                pmin =\
    \ j;\n            }\n        }\n        if(!monotone){\n            return false;\n\
    \        }\n        monotone = l[pmin] > l[i];\n    }\n    return monotone;\n\
    }\n\nmonotone.monotonic = monotonic;\n\nmodule.exports = monotone;\n\n},{}],9:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('./array');\n", "    var n = l.length,\n\
    \        monotonic = true,\n        i, prev, curr;\n    for(i = 1; i < n; i++){\n\
    \        prev = curr;\n        curr = l[i];\n        if(curr < prev){\n      \
    \      monotonic = false;\n            break;\n        }\n    }\n    return monotonic;\n\
    }\n", "    var n = l.length,\n        monotone = true,\n        i, j, p0, p1,\
    \ q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17,\
    \ q18, q19, q20, q21, q22, q23, q24, q25, q26, q27, q28, q29, q30, q31, q32, q33,\
    \ q34, q35, q36, q37, q38, q39, q40, q41, q42, q43, q44, q45, q46, q47, q48, q49,\
    \ q50, q51, q52, q53, q54, q55, q56, q57, q58, q59, q60, q61, q62, q63, q64, q65,\
    \ q66, q67, q68, q69, q70, q71, q72, q73, q74, q75, q76, q77, q78, q79, q80, q81,\
    \ q82, q83, q84, q85, q86, q87, q88, q89, q90, q91, q92, q93, q94, q95, q96, q97,\
    \ q98, q99, q100, q101, q102, q103, q104, q105, q106, q107, q108, q109, q110,\
    \ q111, q112, q113, q114, q115, q116, q117, q118, q119, q120, q121, q122, q123,\
    \ q124, q125, q126, q127, q128, q129, q130, q131, q132, q133, q134, q135, q136,\
    \ q137, q138, q139, q140, q141, q142, q143, q144, q145, q146, q147, q148, q149,\
    \ q150, q151, q152, q153, q154, q155, q156, q157, q158, q159, q160, q161, q162,\
    \ q163, q164, q165, q166, q167, q168, q169, q170, q171, q172, q173, q174, q175,\
    \ q176, q177, q178, q179, q180, q181, q182, q183, q184, q185, q186, q187, q188,\
    \ q189, q", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version\
    \ = '1.1.0';\n\nmodule.exports = monotonic;\n\n},{}],41:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('isarray');\n\nvar Voronoi = _dereq_('../lib/core');\n\
    \nvar defaultOptions = {\n  area: false,\n  bounds: false,\n  circle: false,\n\
    \  clip: false,\n  curve: false,\n  debug: false,\n  fill: false,\n  fillColor:\
    \ '#eee',\n  fillOpacity: null,\n  groups: false,\n  hover: false,\n  inherit:\
    \ false,\n  interpolate: false,\n  lineTension: 0,\n  points: false,\n  scale:\
    \ false,\n  shadow: false,\n  shape: false,\n  size: false,\n  spacing: false,\n\
    \  tension: 0,\n  tolerance: Infinity,\n  vertexOrigin: 'center'\n};\n", "  var\
    \ n = l.length,\n      monotone = true,\n      i, j, p0, p1, q0, q1, diff;\n \
    \ for(i=n-1;i>=0;i--){\n    p0 = l[i];\n    p1 = l[i+1];\n    q0 = p0;\n    q1\
    \ = p1;\n    for(j=i;j>=0;j--){\n      if(monotone){\n        diff = q0 - (q1\
    \ = p1); //Same points\n        if(diff > 0){\n          p0 = q1;\n          q1\
    \ = p1;\n        }else if(diff < 0){\n          p1 = q0;\n          q0 = p0;\n\
    \        }\n      }else{\n        diff = q0 - (q1 = p1); //Same points\n     \
    \   if(diff > 0){\n          p0 = q1;\n          q1 = p1;\n        }else if(diff\
    \ < 0){\n          p1 = q0;\n          q0 = p0;\n        }\n      }\n    }\n \
    \   monotone = q0 > q1;\n  }\n  return monotone;\n}\n", "  var s = monotonicSort;\n\
    \  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n", "  var n = l.length;\n\
    \  return !(n<=1 || l[0]<=l[n-1]);\n}\n", "  var n = l.length,\n      monotonic\
    \ = true,\n      i, j, p0, p1, q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11,\
    \ q12, q13, q14, q15, q16, q17, q18, q19, q20, q21, q22, q23, q24, q25, q26, q27,\
    \ q28, q29, q30, q31, q32, q33, q34, q35, q36, q37, q38, q39, q40, q41, q42, q43,\
    \ q44, q45, q46, q47, q48, q49, q50, q51, q52, q53, q54, q55, q56, q57, q58, q59,\
    \ q60, q61, q62, q63, q64, q65, q66, q67, q68, q69, q70, q71, q72, q73, q74, q75,\
    \ q76, q77, q78, q79, q80, q81, q82, q83, q84, q85, q86, q87, q88, q89, q90, q91,\
    \ q92, q93, q94, q95, q96, q97, q98, q99, q100];\n  for(i = 0; i < n; i++){\n\
    \    p0 = l[i];\n    p1 = l[(i+1)%n];\n    if(p0 == p1 || p0 != p1 || (p0 && p0\
    \ > p1)){\n      monotonic = false;\n      break;\n    }\n  }\n  return monotonic;\n\
    }\n", "  var n = l.length,\n      monotonic = true,\n      i, j, p0, p1, q0, q1,\
    \ q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15;\n  for(i = n -\
    \ 1; (i >= 0) && (monotonic); i--){\n    p0 = l[i];\n    p1 = l[i + 1];\n    for(j\
    \ = i + 1; (j < n) && (monotonic); j++){\n      q0 = l[j];\n      q1 = l[j + 1];\n\
    \      if(q0 > p0 && q0 > p1){\n        monotonic = false;\n        break;\n \
    \     } else if(q0 < p0 && q0 < p1){\n        monotonic = false;\n        break;\n\
    \      } else if(q1 < p0 && q1 < p1){\n        monotonic = false;\n        break;\n\
    \      }\n    }\n  }\n  return monotonic;\n}\n", "  var n = l.length,\n      monotonic\
    \ = true,\n      i, j, p0, p1;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n\
    \    p1 = l[i];\n    if(p0 < p1){\n      monotonic = false;\n      break;\n  \
    \  }\n  }\n  return monotonic;\n}\n", "    var n = l.length,\n        monotone\
    \ = true,\n        i, j, p0, p1, q0, q1, diff;\n    for(i = 0; i < n; i++){\n\
    \        p0 = l[i];\n        p1 = l[(i + 1) % n];\n        diff = arrayDiff(p0,\
    \ p1);\n        if(diff > 0){\n            monotone = false;\n        }\n    \
    \    if(diff < 0){\n            monotone = true;\n        }\n    }\n    return\
    \ monotone;\n}\n", "    var s = monotonicSort;\n    return l(s) ? s[0] === s[1]\
    \ : false;\n}\n", "  var s = monotonicSort;\n  return l(s) ? s[0] === s[1] : false;\n\
    }\n", "    var s = 0, n = l.length, m = +l.shift();\n    while (n < m) n++;\n\
    \    return !(n = +l.shift()) || (n += n < m ? 1 : -1);\n}\n", "  var n = l.length,\n\
    \      monotonic = true,\n      i, j, p0, p1, q0, q1, diff;\n  for(i=n-1;i!==-1;--i){\n\
    \    p0 = l[i];\n    p1 = l[i+1];\n    diff = arrayDiff(p0,p1);\n    if(diff!==0){\n\
    \      monotonic = false;\n      break;\n    }\n  }\n  return monotonic;\n}\n",
  "  var n = l.length;\n  return !(n<=1 || l[0]<=l[n-1]);\n}\n", "  var s = monotonicSort;\n\
    \  return l(s);\n}\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version\
    \ = '1.1.0';\n\nmodule.exports = monotonic;\n\n},{\"./sort\":16}],16:[function(require,module,exports){\n\
    'use strict';\n\nvar quickselect = require('quickselect');\n", "    var s = monotonicSort;\n\
    \    return l(s);\n}\n\nmonotonic.version = '0.1.0';\n\nmodule.exports = monotonic;\n\
    \n},{}],3:[function(require,module,exports){\nvar unique = require('./unique');\n\
    var sort = require('./sort');\nvar map = require('./map');\nvar reduce = require('./reduce');\n\
    var filter = require('./filter');\nvar every = require('./every');\nvar contains\
    \ = require('./contains');\nvar some = require('./some');\nvar contain = require('./contain');\n\
    var pluck = require('./pluck');\nvar where = require('./where');\nvar countBy\
    \ = require('./countBy');\nvar partition = require('./partition');\nvar foldl\
    \ = require('./foldl');\nvar foldr = require('./foldr');\nvar foldr = require('./foldr');\n\
    var foldl1 = require('./foldl1');\nvar foldl2 = require('./foldl2');\nvar foldl3\
    \ = require('./foldl3');\nvar foldr = require('./foldr');\nvar unfoldr = require('./unfoldr');\n\
    var unfoldl = require('./unfoldl');\nvar scanl = require('./scanl');\nvar scanr\
    \ = require('./scanr');\nvar scan = require('./scan');\nvar slice = require('./slice');\n\
    var take = require('./take');\nvar drop = require('./drop');\nvar takeWhile =\
    \ require('./takeWhile');\nvar dropWhile = require('./dropWhile');\nvar span =\
    \ require('./span');\nvar breakLoop = require('./breakLoop');\nvar zip = require('./zip');\n\
    var zipWith = require('./zipWith');\nvar zipAll = require('./zipAll');\nvar zipAllWith\
    \ = require('./zipAllWith');\nvar zipObj = require('./zipObj');\nvar zipObjAll\
    \ = require('./zipObjAll');\nvar zipObjAllWith = require('./zipObjAllWith');\n\
    var zipWith3 = require('./zipWith3');\nvar zipWith4 = require('./zipWith4');\n\
    var zipWith5 = require('./zipWith5');\nvar zipWith6 = require('./zipWith6');\n\
    var zipWith7 = require('./zipWith7');\nvar zipWith8 = require('./zipWith8');\n\
    var zipWith9 = require('./zipWith9');\nvar zipWith10 = require('./zipWith10');\n\
    var zipWith11 = require('./zipWith11');\nvar zipWith12 = require('./zipWith12');\n\
    var zipWith13 = require('./zipWith13');\nvar zipWith14 = require('./zipWith14');\n\
    var zipWith15 = require('./zipWith15');\nvar zipWith16 = require('./zipWith16');\n\
    var zipWith17 = require('./zipWith17');\nvar zipWith18 = require('./zipWith18');\n\
    var zipWith19 = require('./zipWith19');\nvar zipWith20 = require('./zipWith20",
  "    var s = monotonicSort;\n    return l(s);\n}\n", "    var n = l.length,\n  \
    \      monotonic = true,\n        i, j, p0, p1, d;\n    for(i = 0; i < n; i++){\n\
    \        p0 = l[i-1];\n        p1 = l[i];\n        d = p0[0]-p1[0];\n        if(d===0){\n\
    \            monotonic = false;\n            break;\n        }\n        if(d >\
    \ 0){\n            for(j = 1; j < p0.length; j++){\n                if(p0[j-1]\
    \ > p1[j]){\n                    monotonic = false;\n                    break;\n\
    \                }\n            }\n        }else{\n            for(j = 1; j <\
    \ p1.length; j++){\n                if(p0[j-1] < p1[j]){\n                   \
    \ monotonic = false;\n                    break;\n                }\n        \
    \    }\n        }\n    }\n    return monotonic;\n}\n\nmonotonic.all = function(arr){\n\
    \    return !arr.some(isNaN);\n};\n\nmodule.exports = monotonic;\n\n},{}],130:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArrayOrTypedArray = _dereq_('./array').isArrayOrTypedArray;\n",
  "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n",
  "    var n = l.length;\n    return !(n<=1 || l[0]<=l[n-1]);\n}\n", "    var n =\
    \ l.length,\n        monotone = true,\n        i, j, p0, p1, q0, q1, q2, p2, p3,\
    \ q3, t;\n    for(i = 0; i < n; i++){\n        p0 = l[i];\n        p1 = l[(i +\
    \ 1) % n];\n        p2 = l[(i + 2) % n];\n        p3 = l[(i + 3) % n];\n     \
    \   if(monotone){\n            q0 = p0.x;\n            q1 = p1.x;\n          \
    \  q2 = p2.x;\n            q3 = p3.x;\n            if((q3 > q0) || (q3 < q1)){\n\
    \                t = q3;\n                q3 = q2;\n                q2 = q1;\n\
    \                q1 = t;\n            }\n            if((q3 > q2) || (q3 < q1)){\n\
    \                t = q3;\n                q3 = q2;\n                q2 = q1;\n\
    \                q1 = t;\n            }\n            if((q3 > q1) || (q3 < q0)){\n\
    \                t = q3;\n                q3 = q2;\n                q2 = q1;\n\
    \                q1 = t;\n            }\n        }\n        else{\n          \
    \  q0 = p0.x;\n            q1 = p1.x;\n            q2 = p2.x;\n            q3\
    \ = p3.x;\n            if((q3 > q0) || (q3 < q1)){\n                t = q3;\n\
    \                q3 = q2;\n                q2 = q1;\n                q1 = t;\n\
    \            }\n            if((q3 > q2) || (q3 < q1)){\n                t = q3;\n\
    \                q3 = q2;\n                q2 = q1;\n                q1 = t;\n\
    \            }\n            if((q3 > q1) || (q3 < q0)){\n                t = q3;\n\
    \                q3 = q2;\n                q2 = q1;\n                q1 = t;\n\
    \            }\n        }\n        if(q0 !== p0.x || q1 !== p1.x || q2 !== p2.x\
    \ || q3 !== p3.x){\n            monotone = false;\n        }\n    }\n    return\
    \ monotone;\n}\n", "    var s = monotonicSort;\n    return l(s);\n}\n\nmonotonic.version\
    \ = '0.1.0';\n\nmonotonic.ascending = function(a, b){\n    return a < b;\n};\n\
    \nmonotonic.descending = function(a, b){\n    return a > b;\n};\n\nmonotonic.identity\
    \ = function(x){\n    return x;\n};\n\nmonotonic.sort = monotonicSort;\n\nmodule.exports\
    \ = monotonic;\n\n},{}],4:[function(require,module,exports){\nvar sortBy = require('./sortBy');\n\
    \nvar identity = require('./identity');\n\nvar defaultComparator = function(a,\
    \ b){\n    return a < b;\n};\n\nvar ascending = function(a, b){\n    return a\
    \ < b;\n};\n\nvar descending = function(a, b){\n    return a > b;\n};\n\nvar naturalComparator\
    \ = function(a, b){\n    return naturalSort(a, b);\n};\n\nvar reverse = function(a,\
    \ b){\n    return b < a;\n};\n\nvar naturalSort = function(a, b){\n    return\
    \ sortBy(a, identity).concat(sortBy(identity, b));\n};\n\nvar stableSort = function(a,\
    \ b){\n    return sortBy(a, identity).concat(sortBy(identity, b), sortBy(identity,\
    \ ascending));\n};\n\nvar slice = Array.prototype.slice;\n\nvar sort = function(list,\
    \ comparator){\n    return slice.call(list, 0).sort(comparator || defaultComparator);\n\
    };\n\nvar sortBy = function(list, comparator, accessor){\n    return sort(list,\
    \ comparator || defaultComparator).map(accessor);\n};\n\nvar sum = function(list){\n\
    \    var s = 0,\n        i;\n    for(i = 0; i < list.length; i++){\n        s\
    \ += list[i];\n    }\n    return s;\n};\n\nvar mean = function(list){\n    return\
    \ sum(list) / list.length;\n};\n\nvar median = function(list){\n    var s = 0,\n\
    \        len = list.length,\n        i;\n\n    if(len % 2){\n        for(i = 0;\
    \ i < len; i++){\n            s += list[i];\n        }\n        return s / len;\n\
    \    }\n\n    for(i = len / 2; i > 0; i --){\n        s += list[i];\n    }\n\n\
    \    return s / 2;\n};\n\nvar variance = function(list, mean){\n    var mean =\
    \ mean || 0,\n        len = list.length,\n        sum = 0,\n        i;\n\n   \
    \ for(i = 0; i < len; i++){\n        sum += Math.pow(list[i] - mean, 2);\n   \
    \ }\n\n    return sum / len;\n};\n\nvar deviation = function(list, mean){\n  \
    \  var mean = mean || 0,\n        len = list.length,\n        sum = 0,\n     \
    \   i;\n\n    for(i = 0; i < len; i++){\n        sum += Math.pow(list[i", "  var\
    \ s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.radix = 2;\n", "    var s\
    \ = 0, n = l.length, m = +l[0], i, l;\n    if(!n) return !m;\n    if(n === 1)\
    \ return !m && l[0] <= l[n - 1];\n    for(i = 1, l = n; i < l; ++i){\n       \
    \ if(l[i] <= m) s = i;\n        m = l[i];\n    }\n    return !m && s !== n - 1\
    \ && s % 2 === 1;\n}\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.radix\
    \ = 2; // 10 for decimal, 16 for hexadecimal\n\nmodule.exports = monotonic;\n\n\
    },{\"./sort\":10}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports\
    \ = sort;\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.radix\
    \ = 2; // 10 for decimal, 16 for hexadecimal\n\nmodule.exports = monotonic;\n\n\
    },{\"./sort\":16}],17:[function(require,module,exports){\n'use strict';\n\nvar\
    \ isInteger = require('./isInteger');\n", "  var n = l.length,\n      monotonic\
    \ = true,\n      i, j, p0, p1, q0, q1, diff;\n  for(i = 1; i < n; i++){\n    p0\
    \ = l[i-1];\n    q0 = l[i];\n    p1 = l[i];\n    q1 = l[i+1];\n    diff = q1 -\
    \ q0;\n    if(diff > 0){\n      monotonic = false;\n      break;\n    }else if(diff\
    \ < 0){\n      for(j = i; j > 0; j--){\n        p1 = l[j-1];\n        q1 = l[j];\n\
    \        diff = q1 - q0;\n        if(diff > 0){\n          monotonic = false;\n\
    \          break;\n        }\n      }\n    }\n  }\n  return monotonic;\n}\n",
  "  var n = l.length,\n      monotone = true,\n      i, j, p0, p1, d;\n  for(i =\
    \ 1; i < n; i++){\n    p0 = l[i-1];\n    p1 = l[i];\n    d = p0[0] - p1[0];\n\
    \    if(d > 0){\n      monotone = false;\n      break;\n    }\n  }\n  return monotone;\n\
    }\n", "  var n = l.length,\n      monotonic = true,\n      i, j, p0, p1, q0, q1,\
    \ q2, q3;\n\n  if (n === 0) {\n    return false;\n  }\n\n  for (i = n - 1; i >\
    \ 0; i--) {\n    p0 = l[i];\n    p1 = l[i - 1];\n    q0 = l[i];\n    q1 = l[i\
    \ + 1];\n    q2 = l[i + 2];\n    q3 = l[i + 3];\n\n    if (p0 > q0) {\n      if\
    \ (p1 > q1) {\n        if (p2 > q2) {\n          if (p3 > q3) {\n            monotonic\
    \ = false;\n          }\n        } else {\n          monotonic = false;\n    \
    \    }\n      } else {\n        monotonic = false;\n      }\n    } else {\n  \
    \    monotonic = false;\n    }\n  }\n\n  return monotonic;\n}\n", "    var n =\
    \ l.length;\n    return !(n == 1 && l[0] == l[n-1]);\n}\n", "    var n = l.length,\n\
    \        monotone = true,\n        i, j, p0, p1, q0, q1, diff;\n    for(i = 0;\
    \ i < n; i++){\n        p0 = l[i];\n        for(j = i + 1; j < n; j++){\n    \
    \        p1 = l[j];\n            if(p0 == p1 || p0 == p1 && p1 != p0){\n     \
    \           monotone = false;\n                break;\n            }\n       \
    \ }\n    }\n    if(!monotone){\n        return false;\n    }\n    for(i = n -\
    \ 2; i >= 0; i--){\n        q0 = l[i];\n        q1 = l[i + 1];\n        diff =\
    \ q1 - q0;\n        if(diff > 0){\n            l = [i + 1, q1];\n        }else\
    \ if(diff < 0){\n            l = [i + 1, q0];\n        }else{\n            l =\
    \ [i, q0];\n        }\n    }\n    return true;\n}\n\nmonotone.monotonic = monotonic;\n\
    \nmodule.exports = monotone;\n\n},{}],19:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('./array');\n\nvar Voronoi = _dereq_('./../collection');\n",
  "    var s = 0, n = l.length, m = +l[0], i, l;\n    if(n < 1) return false;\n  \
    \  if(m > n) return true;\n    for(i = 1, l = n; i < l; ++i){\n        if(+l[i]\
    \ > m) return true;\n        if(+l[i] < m) s = i + 1;\n        m = +l[i];\n  \
    \  }\n    return !s;\n}\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version\
    \ = '1.1.0';\n\nmodule.exports = monotonic;\n\n},{}],9:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('isarray');\n\nvar Voronoi = _dereq_('../lib/constructor');\n\
    \nvar util = _dereq_('../util');\n\nvar defaults = {\n  fit: true, // whether\
    \ to fit the viewport to the graph\n  directed: false, // whether the tree is\
    \ directed downwards (or edges can point in any direction if false)\n  padding:\
    \ 30, // padding on fit\n  circle: false, // put depths in concentric circles\
    \ if true, put depths top down if false\n  spacingFactor: 1.75, // positive spacing\
    \ factor, larger => more space between nodes (N.B. n/a if causes overlap)\n  boundingBox:\
    \ undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h\
    \ }\n  avoidOverlap: true, // prevents node overlap, may overflow boundingBox\
    \ if not enough space\n  roots: undefined, // the roots of the trees\n  maximalAdjustments:\
    \ 0, // how many times to try to position the nodes in a maximal way (i.e. no\
    \ backtracking)\n  animate: false, // whether to transition the node positions\n\
    \  animationDuration: 500, // duration of animation in ms if enabled\n  animationEasing:\
    \ undefined, // easing of animation if enabled\n  ready: undefined, // callback\
    \ on layoutready\n  stop: undefined // callback on layoutstop\n};\n", "    var\
    \ s = monotonicSort;\n    return l(s);\n}\n", "  var n = l.length,\n      monotonic\
    \ = true,\n      i, j, p0, p1;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n\
    \    p1 = l[i];\n    if(p0 < p1){\n      monotonic = false;\n      break;\n  \
    \  }\n  }\n  return monotonic;\n}\n", "    var s = monotonicSort;\n    return\
    \ l(s);\n}\n", "  var s = monotonicSort;\n  return l(s) ? s[0] === s[1] : false;\n\
    }\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\n},{}],9:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('isarray');\n\nvar VNode,\n    emptyArray\
    \ = [],\n    isArrayLike = _dereq_('./array').isArrayLike,\n    isObject = _dereq_('./object').isObject;\n\
    \nvar arrayMethods = _dereq_('./array').arrayMethods;\nvar arrayProto = _dereq_('./array').arrayProto;\n\
    \nvar createArrayMethod = arrayMethods(['concat', 'join', 'pop', 'push', 'reverse',\
    \ 'shift', 'sort', 'splice', 'unshift'], true);\n\nvar methods = {};\n", "  var\
    \ n = l.length;\n  return !(n<=1 || l[0]<=l[n-1]);\n}\n", "  var n = l.length;\n\
    \  return !(n<2 || l[0]<=l[n-2]) && l[n-1]<=l[n];\n}\n", "  var s = monotonicSort;\n\
    \  return l(s) ? s[0] === s[1] : false;\n}\n", "    var n = l.length,\n      \
    \  monotone = true,\n        i, j, p0, p1, q0, q1, q2, q3, q4, q5, q6, q7, q8,\
    \ q9, q10, q11, q12, q13, q14, q15;\n    for(i = 0; i < n; i++){\n        p0 =\
    \ l[i];\n        p1 = l[(i+1)%n];\n        if(p0 > p1){\n            monotone\
    \ = false;\n            break;\n        }\n    }\n    if(!monotone){\n       \
    \ return false;\n    }\n    q1 = l[0];\n    q2 = l[1];\n    q3 = l[2];\n    q4\
    \ = l[3];\n    q5 = l[4];\n    q6 = l[5];\n    q7 = l[6];\n    q8 = l[7];\n  \
    \  q9 = l[8];\n    q10 = l[9];\n    q11 = l[10];\n    q12 = l[11];\n    q13 =\
    \ l[12];\n    q14 = l[13];\n    q15 = l[14];\n    q16 = l[15];\n    q17 = l[16];\n\
    \    q18 = l[17];\n    q19 = l[18];\n    q20 = l[19];\n    q21 = l[20];\n    q22\
    \ = l[21];\n    q23 = l[22];\n    q24 = l[23];\n    q25 = l[24];\n    q26 = l[25];\n\
    \    q27 = l[26];\n    q28 = l[27];\n    q29 = l[28];\n    q30 = l[29];\n    q31\
    \ = l[30];\n    q32 = l[31];\n    q33 = l[32];\n    q34 = l[33];\n    q35 = l[34];\n\
    \    q36 = l[35];\n    q37 = l[36];\n    q38 = l[37];\n    q39 = l[38];\n    q40\
    \ = l[39];\n    q41 = l[40];\n    q42 = l[41];\n    q43 = l[42];\n    q44 = l[43];\n\
    \    q45 = l[44];\n    q46 = l[45];\n    q47 = l[46];\n    q48 = l[47];\n    q49\
    \ = l[48];\n    q50 = l[49];\n    q51 = l[50];\n    q52 = l[51];\n    q53 = l[52];\n\
    \    q54 = l[53];\n    q55 = l[54];\n    q5", "    var s = 0, n = l.length, m\
    \ = +l.shift();\n    while (n < m) s++;\n    return s <= 1;\n}\n", "  var s =\
    \ monotonicSort;\n  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports\
    \ = monotonic;\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\n\
    var utils = require('./utils');\nvar formats = require('./formats');\nvar defaults\
    \ = require('./defaults');\nvar base64 = require('./base64');\nvar iban = require('./iban');\n\
    var regexp = require('./regexp');\nvar setImmediate = require('set-immediate-shim');\n\
    var setInterval = require('set-interval-shim');\nvar setImmediate$1 = setImmediate;\n\
    var setInterval$1 = setInterval;\n\nvar alphabet =\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n\
    \  , length = alphabet.length\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n",
  "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\n\
    module.exports = monotonic;\n\n},{\"./sort\":91}],91:[function(require,module,exports){\n\
    'use strict';\n\nvar sort = require('./sort');\n\nmodule.exports = sort;\n\n},{\"\
    ./sort\":91}],92:[function(require,module,exports){\n'use strict';\n\nvar isArray\
    \ = require('./isArray');\n\nvar nativeSort = Array.prototype.sort;\n", "  var\
    \ n = l.length,\n      monotone = true,\n      i, j, p0, p1, q0, q1, q2, q3, q4,\
    \ q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17, q18, q19, q20, q21,\
    \ q22, q23, q24, q25, q26, q27, q28, q29, q30, q31, q32, q33, q34, q35, q36, q37,\
    \ q38, q39, q40, q41, q42, q43, q44, q45, q46, q47, q48, q49, q50, q51, q52, q53,\
    \ q54, q55, q56, q57, q58, q59, q60, q61, q62, q63, q64, q65, q66, q67, q68, q69,\
    \ q70, q71, q72, q73, q74, q75, q76, q77, q78, q79, q80, q81, q82, q83, q84, q85,\
    \ q86, q87, q88, q89, q90, q91, q92, q93, q94, q95, q96, q97, q98, q99, q100,\
    \ q101, q102, q103, q104, q105, q106, q107, q108, q109, q110, q111, q112, q113,\
    \ q114, q115, q116, q117, q118, q119, q120, q121, q122, q123, q124, q125, q126,\
    \ q127, q128, q129, q130, q131, q132, q133, q134, q135, q136, q137, q138, q139,\
    \ q140, q141, q142, q143, q144, q145, q146, q147, q148, q149, q150, q151, q152,\
    \ q153, q154, q155, q156, q157, q158, q159, q160, q161, q162, q163, q164, q165,\
    \ q166, q167, q168, q169, q170, q171, q172, q173, q174, q175, q176, q177, q178,\
    \ q179, q180, q181, q182, q183, q184, q185, q186, q187, q188, q189, q", "    var\
    \ n = l.length,\n        monotone = true,\n        i, j, p0, p1;\n    for(i =\
    \ 1; i < n; i++){\n        p0 = l[i-1];\n        p1 = l[i];\n        if(p0 < p1){\n\
    \            monotone = false;\n            break;\n        }\n    }\n    return\
    \ monotone;\n}\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version\
    \ = '1.1.1';\n\nmodule.exports = monotonic;\n\n},{}],124:[function(require,module,exports){\n\
    'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar BADNUM = _dereq_('../constants/numerical').BADNUM;\n",
  "    var s = monotonicSort;\n    return l(s) ? s[0] === s[1] : false;\n}\n", " \
    \   var n = l.length,\n        monotonic = true,\n        i, j, p0, p1;\n    for(i\
    \ = 1; i < n; i++){\n        p0 = l[i-1];\n        p1 = l[i];\n        if(p0 <\
    \ p1){\n            monotonic = false;\n            break;\n        }\n    }\n\
    \    return monotonic;\n}\n\nmonotonic.version = '1.6.1';\n\nmodule.exports =\
    \ monotonic;\n\n},{}],9:[function(_dereq_,module,exports){\n'use strict';\n\n\
    var isArray = _dereq_('./array');\n\nvar Voronoi = _dereq_('./../collection');\n",
  "  var n = l.length,\n      monotonic = true,\n      i, j, p0, p1, d;\n  for(i =\
    \ 1; i < n; i++){\n    p0 = l[i-1];\n    p1 = l[i];\n    d = p0[0]-p1[0];\n  \
    \  if(d===0){\n      monotonic = false;\n      break;\n    }\n    if(d > 0){\n\
    \      for(j = i; j < n; j++){\n        if(l[j][0] > p0[0]){\n          break;\n\
    \        }\n      }\n      monotonic = monotonic && j > i;\n    }else{\n     \
    \ for(j = i; j < n; j++){\n        if(l[j][0] < p0[0]){\n          break;\n  \
    \      }\n      }\n      monotonic = monotonic && j > i;\n    }\n  }\n  return\
    \ monotonic;\n}\n", "  var n = l.length,\n      monotone = true,\n      i, j,\
    \ p0, p1;\n\n  if (n <= 1) return false;\n\n  for (i = 1; i < n; ++i) {\n    p0\
    \ = l[i-1];\n    p1 = l[i];\n    if (p0 < p1) {\n      monotone = false;\n   \
    \   break;\n    }\n  }\n\n  return monotone;\n}\n", "  var n = l.length,\n   \
    \   m = +l.shift(),\n      flag = true,\n      i = 1;\n  if(n < 1 || m !== n){\n\
    \    return false;\n  }\n  for(; i < n; i++){\n    if(+l[i] !== m){\n      flag\
    \ = false;\n      break;\n    }\n  }\n  return flag;\n}\n", "  var n = l.length,\n\
    \      m = +l.shift(),\n      flag = true,\n      i = 0;\n  while (i < n) {\n\
    \    if (l[i] <= m) {\n      i++;\n    } else {\n      flag = false;\n      m\
    \ = +l[i];\n    }\n  }\n  return flag;\n}\n", "  var n = l.length;\n  return !(n<=1\
    \ || l[0]<=l[n-1]);\n}\n", "  var n = l.length,\n      monotone = true,\n    \
    \  i, j, p0, p1, q0, q1, q2, q3;\n\n  if (n <= 1) {\n    return false;\n  }\n\n\
    \  for (i = 1; i < n; ++i) {\n    p0 = l[i-1];\n    p1 = l[i];\n    q0 = l[i -\
    \ 1];\n    q1 = l[i];\n    q2 = l[i + 1];\n    q3 = l[i + 2];\n\n    if (p0 >\
    \ q0) {\n      monotone = false;\n    }\n    if (p1 > q1) {\n      monotone =\
    \ false;\n    }\n    if (p2 > q2) {\n      monotone = false;\n    }\n    if (p3\
    \ > q3) {\n      monotone = false;\n    }\n  }\n\n  return monotone;\n}\n", " \
    \ var n = l.length,\n      monotone = true,\n      i, j, p0, p1;\n\n  if (n <=\
    \ 1) return false;\n\n  for (i = 1; i < n; ++i) {\n    p0 = l[i-1];\n    p1 =\
    \ l[i];\n    if (p0 > p1) {\n      monotone = false;\n      break;\n    }\n  }\n\
    \n  return monotone;\n}\n", "  var n = l.length;\n  if(n < 1) return false;\n\
    \  var k = l[0], x = l[1], j = 2, i; \n  for(i = 2; i < n; i++){\n    if(l[j]\
    \ <= l[i]){\n      x = l[j];\n      if(j++ > n){\n        j = 1;\n        i++;\n\
    \      }\n    }else{\n      x = l[i];\n      if(j++ > n){\n        j = 1;\n  \
    \    }\n    }\n    if(x === l[j]){\n      if(j++ > n){\n        j = 1;\n     \
    \ }\n    }\n  }\n  return j === n;\n}\n", "    var s = monotonicSort;\n    return\
    \ l(s);\n}\n", "    var n = l.length,\n        monotonic = true,\n        i, j,\
    \ p0, p1, q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15,\
    \ q16, q17, q18, q19, q20, q21, q22, q23, q24, q25, q26, q27, q28, q29, q30, q31,\
    \ q32, q33, q34, q35, q36, q37, q38, q39, q40, q41, q42, q43, q44, q45, q46, q47,\
    \ q48, q49, q50, q51, q52, q53, q54, q55, q56, q57, q58, q59, q60, q61, q62, q63,\
    \ q64, q65, q66, q67, q68, q69, q70, q71, q72, q73, q74, q75, q76, q77, q78, q79,\
    \ q80, q81, q82, q83, q84, q85, q86, q87, q88, q89, q90, q91, q92, q93, q94, q95,\
    \ q96, q97, q98, q99, q100, q101, q102, q103, q104, q105, q106, q107, q108, q109,\
    \ q110, q111, q112, q113, q114, q115, q116, q117, q118, q119, q120, q121, q122,\
    \ q123, q124, q125, q126, q127, q128, q129, q130, q131, q132, q133, q134, q135,\
    \ q136, q137, q138, q139, q140, q141, q142, q143, q144, q145, q146, q147, q148,\
    \ q149, q150, q151, q152, q153, q154, q155, q156, q157, q158, q159, q160, q161,\
    \ q162, q163, q164, q165, q166, q167, q168, q169, q170, q171, q172, q173, q174,\
    \ q175, q176, q177, q178, q179, q180, q181, q182, q183, q184, q185, q186, q187,\
    \ q188, q189, q", "  var n = l.length,\n      monotone = true,\n      i, j, p0,\
    \ p1, q0, q1, diff;\n  for(i = 1; i < n; ++i){\n    p0 = l[i-1];\n    p1 = l[i];\n\
    \    q0 = l[i - 1];\n    q1 = l[i];\n    diff = q1 - q0;\n    if(diff > 0){\n\
    \      monotone = false;\n    }else if(diff < 0){\n      monotone = true;\n  \
    \  }\n  }\n  return monotone;\n}\n", "  var n = l.length,\n      monotone = true,\n\
    \      i, j, p0, p1, q0, q1, q2, q3, r0, r1;\n  for(i=n-1;i>=0;i--){\n    p0 =\
    \ l[i-1];\n    p1 = l[i];\n    q0 = l[i+1];\n    q1 = l[i+2];\n    q2 = l[i+3];\n\
    \    q3 = l[i+4];\n    r0 = p0 - q0;\n    r1 = p1 - q1;\n    if(r0<0){\n     \
    \ if(r1<0){\n        monotone = false;\n      }\n      else{\n        monotone\
    \ = true;\n      }\n    }\n    else if(r1>0){\n      monotone = true;\n    }\n\
    \    else{\n      monotone = false;\n    }\n  }\n  return monotone;\n}\n", " \
    \ var s = 0, n = l.length, m = +l[0], i, l;\n  for(i = 1; i < n; ++i){\n    l\
    \ = l[i];\n    if(l < m || (m === l && l+1 === m)){ s = 1; break; }\n    else\
    \ if(l > m || (m === l && l-1 === m)){ s = -1; break; }\n    m = l;\n  }\n  return\
    \ !s;\n}\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version\
    \ = '1.1.0';\n", "  var s = monotonicSort;\n  return l(s) ? s[0] === s[1] : false;\n\
    }\n", "    var n = l.length;\n    return function(x){\n        var i = -1, x =\
    \ +x;\n        while(++i < n){\n            if(l[i] <= x){\n                return\
    \ false;\n            }\n            if(l[i] > x){\n                return true;\n\
    \            }\n        }\n        return true;\n    };\n}\n\nmonotonic.version\
    \ = '1.1.1';\n\nmodule.exports = monotonic;\n\n},{}],41:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('isarray');\n", "  var n = l.length;\n\
    \  return function(x){\n    var i = -1, l = 0, x;\n    while (++i < n) {\n   \
    \   x = l[i];\n      if (x<x) return true;\n      if (x>x) return false;\n   \
    \   l = (x<l[i-1])?l[i-1]:x;\n    }\n    return false;\n  }\n}\n", "    var n\
    \ = l.length,\n        monotonic = true,\n        i, j, p0, p1, d;\n    for(i\
    \ = 1; i < n; i++){\n        p0 = l[i-1];\n        p1 = l[i];\n        d = p0[0]\
    \ - p1[0];\n        if(d > 0){\n            monotonic = false;\n            break;\n\
    \        }\n    }\n    return monotonic;\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\n\
    },{}],9:[function(_dereq_,module,exports){\n'use strict';\n\nvar isArray = _dereq_('isarray');\n\
    \nvar Voronoi = _dereq_('../lib/core');\n\nvar defaultOptions = {\n  fit: true,\
    \ // whether to fit the viewport to the graph\n  directed: false, // whether the\
    \ tree is directed downwards (or edges can point in any direction if false)\n\
    \  padding: 30, // padding on fit\n  circle: false, // put depths in concentric\
    \ circles if true, put depths top down if false\n  spacingFactor: 1.75, // positive\
    \ spacing factor, larger => more space between nodes (N.B. n/a if causes overlap)\n\
    \  boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or {\
    \ x1, y1, w, h }\n  avoidOverlap: true, // prevents node overlap, may overflow\
    \ boundingBox if not enough space\n  roots: undefined, // the roots of the trees\n\
    \  maximalAdjustments: 0, // how many times to try to position the nodes in a\
    \ maximal way (i.e. no backtracking)\n  animate: false, // whether to transition\
    \ the node positions\n  animationDuration: 500, // duration of animation in ms\
    \ if enabled\n  animationEasing: undefined, // easing of animation if enabled,\n\
    \  ready: undefined, // callback on layoutready\n  stop: undefined // callback\
    \ on layoutstop\n};\n", "    var n = l.length;\n    return !(n<=1 || l[0]<=l[n-1]);\n\
    }\n", "    var s = 0, n = l.length, m = +l.shift();\n    while (n < m) n++;\n\
    \    while (n > 0) l.pop(), n--;\n    return n ? n + 1 == m : true;\n}\n", " \
    \   var n = l.length,\n        monotone = true,\n        i, j, p0, p1, q0, q1,\
    \ q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15;\n    for(i = 0;\
    \ i < n; i++){\n        p0 = l[i];\n        p1 = l[(i+1)%n];\n        if(p0 ==\
    \ p1 || p0 === undefined){\n            monotone = false;\n            break;\n\
    \        }\n        q0 = p0.t;\n        q1 = p1.t;\n        if(q0 > q1){\n   \
    \         monotone = false;\n            break;\n        }\n        q2 = p0.s;\n\
    \        q3 = p1.s;\n        if(q0 > q3){\n            monotone = false;\n   \
    \         break;\n        }\n        q4 = p0.f;\n        q5 = p1.f;\n        if(q0\
    \ > q4){\n            monotone = false;\n            break;\n        }\n     \
    \   q6 = p0.v;\n        q7 = p1.v;\n        if(q0 > q7){\n            monotone\
    \ = false;\n            break;\n        }\n        q8 = p0.a;\n        q9 = p1.a;\n\
    \        if(q0 > q9){\n            monotone = false;\n            break;\n   \
    \     }\n        q10 = p0.i;\n        q11 = p1.i;\n        if(q0 > q11){\n   \
    \         monotone = false;\n            break;\n        }\n        q12 = p0.n;\n\
    \        q13 = p1.n;\n        if(q0 > q13){\n            monotone = false;\n \
    \           break;\n        }\n        q14 = p0.m;\n        q15 = p1.m;\n    \
    \    if(q0 > q15){\n            monotone = false;\n            break;\n      \
    \  }\n    }\n    return monotone;\n}\n", "  var s = monotonicSort;\n  return l(s)\
    \ ? s[0] === s[1] : false;\n}\n", "    var n = l.length,\n        monotone = true,\n\
    \        i, j, p0, p1;\n\n    for (i = 0; i < n; ++i) {\n        p0 = l[i];\n\
    \        p1 = l[(i + 1) % n];\n        if (p0 < p1) {\n            monotone =\
    \ false;\n            break;\n        }\n    }\n\n    return monotone;\n}\n",
  "    var s = monotonicSort;\n    return l(s).indexOf(0)===l(s).lastIndexOf(0)\n\
    }\n", "  var s = monotonicSort;\n  return l(s);\n}\n", "  var s = monotonicSort;\n\
    \  return l(s);\n}\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version\
    \ = '1.1.1';\n\nmodule.exports = monotonic;\n\n},{}],5:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('isarray');\n\nvar Voronoi = _dereq_('../lib/core');\n\
    \nvar defaultOptions = {\n  area: false,\n  bounds: false,\n  circle: false,\n\
    \  clip: false,\n  closed: false,\n  fill: false,\n  fillColor: '#000',\n  fillOpacity:\
    \ 0.2,\n  label: false,\n  labelColor: '#000',\n  labelSize: 10,\n  levels: 1,\n\
    \  opacity: 1,\n  open: false,\n  stroke: false,\n  strokeColor: '#000',\n  strokeOpacity:\
    \ 1,\n  strokeWidth: 1,\n  voronoi: false,\n  wrap: false\n};\n", "  var s = 0,\
    \ n = l.length, m = +l.shift();\n  while (n < m) n++;\n  while (n > 0) l.pop();\n\
    \  return +l.length === n;\n}\n", "    var n = l.length,\n        monotonic =\
    \ true,\n        i, j, p0, p1, q0, q1, diff;\n    for(i = 0; i < n; i++){\n  \
    \      p0 = l[i];\n        p1 = l[(i+1)%n];\n        diff = arrayDiff(p0, p1);\n\
    \        if(diff > 0){\n            monotonic = false;\n            break;\n \
    \       }\n    }\n    return monotonic;\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s) ? s[0] === s[1] : false;\n}\n", "    var n = l.length,\n        monotone\
    \ = true,\n        i, j, p0, p1;\n\n    for (i = 1; i < n; ++i) {\n        p0\
    \ = l[i-1];\n        p1 = l[i];\n        if (p0[0] < p1[0]) {\n            monotone\
    \ = false;\n        } else if (p0[0] > p1[0]) {\n            monotone = true;\n\
    \        }\n    }\n\n    return monotone;\n}\n", "  var s = monotonicSort;\n \
    \ return l(s).cmp(l(s)) === 0;\n}\n", "    var n = l.length;\n    return !(n<=1\
    \ || l[0]<=l[1]) || !(n<=1 || l[n-2]<=l[n-1]);\n}\n", "    var n = l.length,\n\
    \        monotone = true,\n        i, j, p0, p1, q0, q1, diff;\n    for(i = 0;\
    \ i < n; ++i){\n        p0 = l[i];\n        p1 = l[(i+1)%n];\n        diff = arrayMax(p0.data,\
    \ p1.data) - arrayMin(p0.data, p1.data);\n        if(diff > 0){\n            monotone\
    \ = false;\n        }\n    }\n    return monotone;\n}\n", "  var s = 0, n = l.length,\
    \ m = +l[0], i, l;\n  for(i=1;i<n;i++){\n    l = l[i-1];\n    if(l === 0 || l\
    \ > m || (m === 0 && l < 0)){\n      return false;\n    }\n    m = +l;\n  }\n\
    \  return true;\n}\n", "  var n = l.length,\n      out = 0,\n      i,\n      j,\n\
    \      xi,\n      yi,\n      a,\n      b; \n  for(i = 0; i < n; i++){\n    xi\
    \ = l[i];\n    yi = l[(i+1)%n];\n    a = yi - xi;\n    b = yi - l[(i-1+n)%n];\n\
    \    if(a*a >= b*b){\n      if(a < 0){\n        a = -a;\n        b = -b;\n   \
    \   }\n      if(xi < b){\n        out = !out;\n      }\n    }else{\n      out\
    \ = !out;\n    }\n  }\n  return out;\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\n\
    },{}],9:[function(_dereq_,module,exports){\n'use strict';\n\nvar isNumeric = _dereq_('fast-isnumeric');\n\
    \nvar BADNUM = _dereq_('../constants/numerical').BADNUM;\n", "  var s = monotonicSort;\n\
    \  return l(s).length <= 1 && s.test(l);\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\n\
    },{}],5:[function(_dereq_,module,exports){\n'use strict';\n\nvar isArray = _dereq_('isarray');\n\
    \nvar Voronoi = _dereq_('../lib/core');\n\nvar defaultOptions = {\n  area: false,\n\
    \  bounds: false,\n  circle: false,\n  clip: false,\n  curve: false,\n  debug:\
    \ false,\n  fill: false,\n  grow: false,\n  image: false,\n  imageWidth: 0,\n\
    \  imageHeight: 0,\n  imageThreshold: 0,\n  links: false,\n  nodeDimensionsIncludeLabels:\
    \ false,\n  points: false,\n  scale: false,\n  shape: false,\n  width: 'auto',\n\
    \  height: 'auto',\n  wrap: false,\n  positions: false,\n  nodes: false,\n  edges:\
    \ false,\n  arrows: false,\n  zoom: false,\n  pan: false,\n  wheel: false,\n \
    \ customNodeType: false,\n  customEdgeType: false,\n  forceAtlas2Base: false\n\
    };\n", "    var n = l.length,\n        monotone = true,\n        i, j, p0, p1;\n\
    \n    for (i = 0; i < n; ++i) {\n        p0 = l[i];\n        p1 = l[(i + 1) %\
    \ n];\n        if (p0 < p1) {\n            monotone = false;\n            break;\n\
    \        }\n    }\n\n    return monotone;\n}\n", "    var n = l.length,\n    \
    \    monotonic = true,\n        i, j, p0, p1, q0, q1, q2, q3, q4, q5, q6, q7,\
    \ q8, q9, q10, q11, q12, q13, q14, q15;\n    for(i = 0; i < n; i++){\n       \
    \ p0 = l[i];\n        p1 = l[(i+1)%n];\n        if(p0 < p1){\n            monotonic\
    \ = false;\n            break;\n        }\n    }\n    if(monotonic){\n       \
    \ for(i = 0; i < n; i++){\n            p0 = l[i];\n            p1 = l[(i+1)%n];\n\
    \            if(p0 > p1){\n                monotonic = false;\n              \
    \  break;\n            }\n        }\n    }\n    return monotonic;\n}\n", "   \
    \ var n = l.length,\n        monotone = true,\n        i, j, pmin;\n    for(i\
    \ = 1; i < n; i++){\n        pmin = l[i-1];\n        j = i;\n        while(j >\
    \ 0 && l[j-1] > pmin){\n            monotone = false;\n            j--;\n    \
    \    }\n        if(j == 0){\n            j = i;\n        }\n        l[i] = l[j];\n\
    \    }\n    return monotone;\n}\n", "  var n = l.length,\n      monotonic = true,\n\
    \      i, j, p0, p1, d;\n  for(i = 1; i < n; ++i){\n    p0 = l[i-1];\n    p1 =\
    \ l[i];\n    d = p0[0]-p1[0];\n    if(d!==0){\n      monotonic = false;\n    \
    \  break;\n    }\n  }\n  return monotonic;\n}\n", "    var n = l.length,\n   \
    \     monotone = true,\n        i, j, p0, p1;\n    for(i = 1; i < n; i++){\n \
    \       p0 = l[i-1];\n        p1 = l[i];\n        if(p0 < p1){\n            monotone\
    \ = false;\n            break;\n        }\n    }\n    return monotone;\n}\n",
  "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\n\
    module.exports = monotonic;\n\n},{}],41:[function(_dereq_,module,exports){\n'use\
    \ strict';\n\nvar pad = _dereq_('./pad');\nvar repeat = _dereq_('repeat-string');\n\
    var rPad = repeat(pad, 2);\n\nvar utils = _dereq_('./utils');\nvar isNumber =\
    \ utils.isNumber;\nvar isInteger = utils.isInteger;\nvar isString = utils.isString;\n\
    var isArray = utils.isArray;\nvar isPlainObject = utils.isPlainObject;\nvar isNull\
    \ = utils.isNull;\nvar isUndefined = utils.isUndefined;\nvar isSymbol = utils.isSymbol;\n\
    var isObject = utils.isObject;\nvar isBoolean = utils.isBoolean;\nvar isRegExp\
    \ = utils.isRegExp;\nvar isDate = utils.isDate;\nvar isError = _dereq_('./is-error');\n\
    var isSymbolObject = _dereq_('./is-symbol-object');\nvar isArguments = utils.isArguments;\n\
    var isFinite = utils.isFinite;\nvar isTypedArray = utils.isTypedArray;\nvar isPlainObjectLike\
    \ = utils.isPlainObjectLike;\nvar isPromise = utils.isPromise;\nvar isMap = utils.isMap;\n\
    var isWeakMap = utils.isWeakMap;\nvar isSet = utils.isSet;\nvar isWeakSet = utils.isWeakSet;\n\
    var isNumber = utils.isNumber;\nvar isString = utils.isString;\nvar isBoolean\
    \ = utils.isBoolean;\nvar isPlainObject = utils.isPlainObject;\nvar isNumber =\
    \ utils.isNumber;\nvar isString = utils.isString;\nvar isRegExp = utils.isRegExp;\n\
    var isDate = utils.isDate;\nvar isArguments = utils.isArguments;\nvar isArray\
    \ = utils.isArray;\nvar isBoolean = utils.isBoolean;\nvar isMap = utils.isMap;\n\
    var isWeakMap = utils.isWeakMap;\nvar isSet = utils.isSet;\nvar isWeakSet = utils.isWeakSet;\n\
    var isNumber = utils.isNumber;\nvar isString = utils.isString;\nvar isPlainObject\
    \ = utils.isPlainObject;\nvar isNumber = utils.isNumber;\nvar isString = utils.isString;\n\
    var isRegExp = utils.isRegExp;\nvar isDate = utils.isDate;\nvar isArguments =\
    \ utils.isArguments;\nvar isBoolean = utils.isBoolean;\nvar isMap = utils.isMap;\n\
    var isWeakMap = utils.isWeakMap;\nvar isSet = utils.isSet;\nvar isWeakSet = utils.",
  "  var s = monotonicSort;\n  return l(s);\n}\n", "    var n = l.length,\n      \
    \  monotone = true,\n        i, j, p0, p1, q0, q1, q2, q3, q4, q5, q6, q7, q8,\
    \ q9, q10, q11, q12, q13, q14, q15;\n    for(i = 0; i < n; i++){\n        p0 =\
    \ l[i];\n        p1 = l[(i+1)%n];\n        if(p0 == p1 || p1 == p0){\n       \
    \     monotone = false;\n            break;\n        }\n    }\n    if(monotone){\n\
    \        return true;\n    }\n    for(i = n - 2; i >= 0; --i){\n        p0 = l[i];\n\
    \        p1 = l[i+1];\n        if(p0 == p1 || p1 == p0){\n            monotone\
    \ = false;\n            break;\n        }\n    }\n    if(monotone){\n        return\
    \ true;\n    }\n    for(i = n - 3; i >= 0; --i){\n        p0 = l[i];\n       \
    \ p1 = l[i+1];\n        p2 = l[i+2];\n        if(p0 == p1 || p1 == p2 || p2 ==\
    \ p0){\n            monotone = false;\n            break;\n        }\n    }\n\
    \    if(monotone){\n        return true;\n    }\n    for(i = n - 4; i >= 0; --i){\n\
    \        p0 = l[i];\n        p1 = l[i+1];\n        p2 = l[i+2];\n        p3 =\
    \ l[i+3];\n        if(p0 == p1 || p1 == p2 || p2 == p3 || p3 == p0){\n       \
    \     monotone = false;\n            break;\n        }\n    }\n    if(monotone){\n\
    \        return true;\n    }\n    for(i = n - 5; i >= 0; --i){\n        p0 = l[i];\n\
    \        p1 = l[i+1];\n        p2 = l[i+2];\n        p3 = l[i+3];\n        p4\
    \ = l[i+4];\n        if(p0 == p1 || p1 == p2 || p2 == p3 || p3 == p4 || p4 ==\
    \ p0){\n            monotone = false;\n            break;\n        }\n    }\n\
    \    if(monotone){\n        return true;\n    }\n    for(i = n - 6; i >= 0; --i){\n\
    \        p0 = l[i];\n        p1 = l[i+1];\n        p2 = l[i+2];\n        p3 =\
    \ l[i+3];\n        p4 = l[i+4];\n        p5 = l[i+5];\n        if(p0 == p1 ||\
    \ p1 == p2 || p2 == p3 || p3 == p4 || p4 == p5 || p5 == p0){\n            monotone\
    \ = false;\n            break;\n        }\n    }\n    if(monotone){\n        return\
    \ true;\n    }\n    for(i = n - 7; i >= 0; --i){\n        p", "  var s = monotonicSort;\n\
    \  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\
    \n},{}],9:[function(_dereq_,module,exports){\n'use strict';\n\nvar pad = _dereq_('./pad');\n\
    var repeat = _dereq_('./repeat');\nvar rPad = _dereq_('./rPad');\nvar rTrim =\
    \ _dereq_('./rTrim');\nvar split = _dereq_('./split');\nvar rSplit = _dereq_('./rSplit');\n\
    var trim = _dereq_('./trim');\nvar trimLeft = _dereq_('./trimLeft');\nvar trimRight\
    \ = _dereq_('./trimRight');\n\nvar utils = _dereq_('./utils');\n\nvar reTrimStart\
    \ = /^\\s+/;\nvar reTrimEnd = /\\s+$/;\nvar reTrimBoth = /\\s+/g;\nvar reTrimSpaces\
    \ = /^\\s/;\n\nvar reTrimStart = new RegExp('^[' + reTrimStart.source + ']');\n\
    var reTrimEnd = new RegExp('[' + reTrimEnd.source + ']');\nvar reTrimBoth = new\
    \ RegExp('^[' + reTrimBoth.source + ']');\nvar reTrimSpaces = new RegExp('[' +\
    \ reTrimSpaces.source + ']');\n\nvar reSplitStart = /^\\s+/;\nvar reSplitEnd =\
    \ /\\s+$/;\nvar reSplitBoth = /\\s+/g;\nvar reSplitSpaces = /^\\s/;\n\nvar reSplitStart\
    \ = new RegExp('^[' + reSplitStart.source + ']');\nvar reSplitEnd = new RegExp('['\
    \ + reSplitEnd.source + ']');\nvar reSplitBoth = new RegExp('^[' + reSplitBoth.source\
    \ + ']');\nvar reSplitSpaces = new RegExp('[' + reSplitSpaces.source + ']');\n\
    \nvar reEscapeChar = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nvar reQuoteChar = /['\"\
    ]/g;\n\nmodule.exports = function padRight(str, length, padStr) {\n  var str =\
    \ String(str);\n  length = ~~length;\n\n  var padStr = (padStr !== undefined ?\
    \ padStr : '0');\n\n  if (length >= str.length + padStr.length) {\n    return\
    \ str;\n  }\n\n  return padStr + str + repeat(padStr, length - str.length);\n\
    };\n\n},{\"./pad\":10,\"./repeat\":11,\"./rPad\":12,\"./rSplit\":13,\"./rTrim\"\
    :14,\"./split\":15,\"./trim\":16,\"./trimLeft\":17,\"./trimRight", "  var s =\
    \ monotonicSort;\n  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports\
    \ = monotonic;\n\n},{}],17:[function(_dereq_,module,exports){\n'use strict';\n\
    \nvar isArray = _dereq_('isarray');\n\nvar Voronoi = _dereq_('../lib/constructor');\n\
    \nvar util = _dereq_('../util');\n\nvar computeEdgeCentroids = _dereq_('../lib/computeEdgeCentroids');\n\
    \nvar computeEdges = _dereq_('../lib/computeEdges');\n\nvar computeCentroids =\
    \ _dereq_('../lib/computeCentroids');\n\nvar quantizeEdges = _dereq_('../lib/quantizeEdges');\n\
    \nvar delaunay = _dereq_('../lib/delaunay');\n\nvar createMesh = _dereq_('../lib/createMesh');\n\
    \nvar createMeshGrid = _dereq_('../lib/createMeshGrid');\n\nvar createSimplicialMesh\
    \ = _dereq_('../lib/createSimplicialMesh');\n\nvar createQuadtree = _dereq_('../lib/createQuadtree');\n\
    \nvar createCell = _dereq_('../lib/createCell');\n\nvar createCellGrid = _dereq_('../lib/createCellGrid');\n\
    \nvar voronoi = _dereq_('../lib/voronoi');\n\nvar createCellCenters = _dereq_('../lib/createCellCentroids');\n\
    \nvar createCellCovering = _dereq_('../lib/createCellCovering');\n\nvar createMeshVoronoi\
    \ = _dereq_('../lib/createMeshVoronoi');\n\nvar createMeshSteiner = _dereq_('../lib/createMeshSteiner');\n\
    \nvar createMeshNearDiag = _dereq_('../lib/createMeshNearDiag');\n\nvar createMeshDelaunay\
    \ = _dereq_('../lib/createMeshDelaunay');\n\nvar createSweepLine = _dereq_('../lib/createSweepLine');\n\
    \nvar createMeshLine = _dereq_('../lib/createMeshLine');\n\nvar createMeshCircle\
    \ = _dereq_('../lib/createMeshCircle');\n\nvar createMeshBox = _dereq_('../lib/createMeshBox');\n\
    \nvar createMeshTriangle = _dereq_('../lib/createMeshTriangle');\n\nvar createMeshRaw\
    \ = _dereq_('../lib/createMeshRaw');\n\nvar createMeshQuartless = _dereq_('../lib/createMeshQuartless');\n\
    \nvar createMeshRawCells = _dereq_('../lib/createMeshRawCells');\n\nvar createMeshRawCellsNoSplit\
    \ = _dereq_('../lib/createMeshRawCellsNo", "  var n = l.length,\n      monotone\
    \ = true,\n      i, j, p0, p1, d;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n\
    \    p1 = l[i];\n    d = p0[0]-p1[0];\n    if(d > 0){\n      monotone = false;\n\
    \    }else if(d === 0){\n      if(p0[1] > p1[1]){\n        monotone = false;\n\
    \      }\n    }\n  }\n  return monotone;\n}\n", "  var n = l.length,\n      monotonic\
    \ = true,\n      i, j, p0, p1;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n\
    \    p1 = l[i];\n    if(p0 < p1){\n      monotonic = false;\n      break;\n  \
    \  }\n  }\n  return monotonic;\n}\n", "  var s = monotonicSort;\n  return l(s);\n\
    }\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\n},{}],4:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('isarray');\n\nvar Voronoi = _dereq_('../lib/core');\n\
    \nvar defaultOptions = {\n  area: false,\n  bounds: false,\n  circle: false,\n\
    \  clip: false,\n  curve: false,\n  debug: false,\n  fill: false,\n  fillColor:\
    \ '#fff9ba',\n  fillOpacity: 0.2,\n  force: false,\n  from: false,\n  innerRadius:\
    \ 0,\n  leaflet: false,\n  maxArea: null,\n  maxLevels: 0,\n  maxLength: 0,\n\
    \  maxScale: null,\n  minArea: null,\n  minLevels: 0,\n  minLength: 0,\n  minScale:\
    \ null,\n  natural: false,\n  noClip: false,\n  opacity: 1,\n  outside: false,\n\
    \  overlay: false,\n  path: false,\n  points: false,\n  scale: false,\n  smooth:\
    \ false,\n  stroke: false,\n  strokeColor: '#ffa19a',\n  strokeOpacity: 1,\n \
    \ strokeWidth: 1,\n  svg: false,\n  to: false\n};\n", "  var s = monotonicSort;\n\
    \  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\
    \n},{\"./sort\":10}],10:[function(require,module,exports){\n'use strict';\n\n\
    var quickselect = require('quickselect');\n", "    var s = monotonicSort;\n  \
    \  return l(s);\n}\n", "  var n = l.length,\n      monotonic = true,\n      i,\
    \ j, p0, p1, q0, q1, q2, q3;\n\n  if (n <= 1) {\n    return false;\n  }\n\n  for\
    \ (i = n - 2; i >= 0; i -= 2) {\n    p0 = l[i];\n    p1 = l[i + 1];\n    if (p0\
    \ < p1) {\n      q0 = l[i];\n      q1 = l[i + 1];\n      q2 = l[i + 2];\n    \
    \  q3 = l[i + 3];\n      if (q0 > q1) {\n        if (q0 !== q1) {\n          monotonic\
    \ = false;\n        }\n        if (q2 > q3) {\n          monotonic = false;\n\
    \        }\n      }\n    }\n  }\n\n  return monotonic;\n}\n", "    var n = l.length,\n\
    \        monotone = true,\n        i, j, p0, p1, d;\n    for(i = 1; i < n; i++){\n\
    \        p0 = l[i-1];\n        p1 = l[i];\n        d = p0[0] - p1[0];\n      \
    \  if(d > 0){\n            monotone = false;\n            break;\n        }\n\
    \    }\n    return monotone;\n}\n\nmonotone.monotonic = monotonic;\n\nmodule.exports\
    \ = monotone;\n\n},{}],9:[function(_dereq_,module,exports){\n'use strict';\n\n\
    var isArray = _dereq_('./array');\n", "  var n = l.length,\n      monotonic =\
    \ true,\n      i, j, p0, p1;\n\n  for (i = 0; i < n; ++i) {\n    p0 = l[i];\n\
    \    if (p0 != null && p0 > p1) {\n      monotonic = false;\n      break;\n  \
    \  }\n    p1 = l[i];\n  }\n\n  return monotonic;\n}\n", "  var n = l.length,\n\
    \      m = +l.shift(),\n      flag = true,\n      i = 1;\n  if(n < 1 || m !==\
    \ n){\n    return false;\n  }\n  for(; i < n; i++){\n    if(l[i-1] > m){\n   \
    \   flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n", "    var n\
    \ = l.length,\n        monotonic = true,\n        i, j, p0, p1, q0, q1, q2, q3,\
    \ q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15;\n    for(i = 0; i < n;\
    \ i++){\n        p0 = l[i];\n        p1 = l[(i+1)%n];\n        if(p0 > p1){\n\
    \            monotonic = false;\n            break;\n        }\n    }\n    if(monotonic){\n\
    \        for(i = 0; i < n; i++){\n            p0 = l[i];\n            p1 = l[(i+1)%n];\n\
    \            q0 = l[(i+n-2)%n];\n            q1 = l[(i+n-3)%n];\n            q2\
    \ = l[(i+n-4)%n];\n            q3 = l[(i+n-5)%n];\n            q4 = l[(i+n-6)%n];\n\
    \            q5 = l[(i+n-7)%n];\n            q6 = l[(i+n-8)%n];\n            q7\
    \ = l[(i+n-9)%n];\n            q8 = l[(i+n-10)%n];\n            q9 = l[(i+n-11)%n];\n\
    \            q10 = l[(i+n-12)%n];\n            q11 = l[(i+n-13)%n];\n        \
    \    q12 = l[(i+n-14)%n];\n            q13 = l[(i+n-15)%n];\n            q14 =\
    \ l[(i+n-16)%n];\n            q15 = l[(i+n-17)%n];\n            if(q0 > p0 &&\
    \ q0 > q1){\n                if(q0 > q2 && q0 > q3){\n                    if(q0\
    \ > q4 && q0 > q5 && q0 > q6 && q0 > q7 && q0 > q8 && q0 > q9 && q0 > q10){\n\
    \                        if(q0 > q11 && q0 > q12 && q0 > q13 && q0 > q14 && q0\
    \ > q15){\n                            monotonic = false;\n                  \
    \          break;\n                        }\n                    }\n        \
    \        }\n            }\n            if(q1 > p1 && q1 > q0){\n             \
    \   if(q1 > q2 && q1 > q3){\n                    if(q1 > q4 && q1 > q5 && q1 >\
    \ q6 && q1 > q7 && q1 > q8 && q1 > q9 && q1 > q10){\n                        if(q1\
    \ > q11 && q1 > q12 && q1 > q13", "    var n = l.length,\n        monotonic =\
    \ true,\n        i, j, p0, p1, d;\n    for(i = 1; i < n; i++){\n        p0 = l[i-1];\n\
    \        p1 = l[i];\n        d = p0[0]-p1[0];\n        if(d===0){\n          \
    \  monotonic = false;\n            break;\n        }\n        if(d > 0){\n   \
    \         for(j = 1; j < p0.length; j++){\n                if(p0[j-1] > p1[j]){\n\
    \                    monotonic = false;\n                    break;\n        \
    \        }\n            }\n        }else{\n            for(j = 1; j < p1.length;\
    \ j++){\n                if(p1[j-1] > p0[j]){\n                    monotonic =\
    \ false;\n                    break;\n                }\n            }\n     \
    \   }\n    }\n    return monotonic;\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports\
    \ = monotonic;\n\n},{}],52:[function(_dereq_,module,exports){\n'use strict';\n\
    \nvar isArray = _dereq_('./array');\n", "  var n = l.length,\n      monotone =\
    \ true,\n      i, j, p0, p1;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n  \
    \  p1 = l[i];\n    if(p0 < p1){\n      monotone = false;\n      break;\n    }\n\
    \  }\n  return monotone;\n}\n", "    var n = l.length,\n        monotone = true,\n\
    \        i, j, p0, p1, q0, q1, diff;\n    for(i = 0; i < n; ++i){\n        p0\
    \ = l[i];\n        p1 = l[(i+1)%n];\n        if(p0 == p1 || p0 == p1-1 || p1 ==\
    \ p0){\n            monotone = false;\n            break;\n        }\n       \
    \ q0 = l[(i+n-2)%n];\n        q1 = l[(i+n-3)%n];\n        diff = q1-q0;\n    \
    \    if(diff > 0){\n            monotone = false;\n            break;\n      \
    \  }\n    }\n    return monotone;\n}\n\nmonotone.monotonic = monotonic;\n\nmodule.exports\
    \ = monotone;\n\n},{}],9:[function(_dereq_,module,exports){\n'use strict';\n\n\
    var isArray = _dereq_('./array');\n", "    var n = l.length,\n        monotone\
    \ = true,\n        i, j, p0, p1, d;\n    for(i = 1; i < n; i++){\n        p0 =\
    \ l[i-1];\n        p1 = l[i];\n        d = p0[0]-p1[0];\n        if(d===0){\n\
    \            monotone = false;\n            break;\n        }\n        if(d >\
    \ 0){\n            for(j = 1; j < p0.length; j++){\n                if(p0[j-1]\
    \ > p1[j]){\n                    monotone = false;\n                    break;\n\
    \                }\n            }\n        }else{\n            for(j = 1; j <\
    \ p1.length; j++){\n                if(p0[j-1] < p1[j]){\n                   \
    \ monotone = false;\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return monotone;\n}\n\nmonotone.monotonic = monotonic;\n\
    \nmodule.exports = monotone;\n\n},{}],41:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('./array');\n", "  var n = l.length,\n\
    \      m = +l.shift(),\n      flag = true,\n      i = 0;\n  while (i < n){\n \
    \   if (m > l[i]){\n      flag = false;\n      break;\n    }\n    i++;\n  }\n\
    \  return flag;\n}\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version\
    \ = '0.1.0';\n\nmodule.exports = monotonic;\n\n},{}],3:[function(require,module,exports){\n\
    var sortBy = require('./sortBy');\n\nvar defaultComparer = function(x, y) {\n\
    \  return x - y;\n};\n", "    var n = l.length,\n        monotone = true,\n  \
    \      i, j, p0, p1;\n    for(i = 1; i < n; i++){\n        p0 = l[i-1];\n    \
    \    p1 = l[i];\n        if(p0 < p1){\n            monotone = false;\n       \
    \     break;\n        }\n    }\n    return monotone;\n}\n", "    var s = monotonicSort;\n\
    \    return l(s);\n}\n\nmonotonic.radix = 2;\n", "    var s = 0, n = l.length,\
    \ m = +l.shift();\n    while (n < m) s++;\n    return s <= 1;\n}\n", "    var\
    \ s = monotonicSort;\n    return l(s);\n}\n\nmonotonic.radixSort = sort;\n\nmodule.exports\
    \ = sort;\n\n},{\"./sort.js\":41}],43:[function(require,module,exports){\nvar\
    \ compareAscending = function(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >=\
    \ b ? 0 : NaN;\n};\n\nvar identity = function(x) {\n    return x;\n};\n\nvar log10\
    \ = Math.log10 || function(x) {\n    return Math.log(x) / Math.LN10;\n};\n\nvar\
    \ ascendingComparator = function(a, b) {\n    return a - b;\n};\n\nvar bisector\
    \ = function(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n\
    \    return {\n        left: function(a, x, lo, hi) {\n            if (lo == null)\
    \ lo = 0;\n            if (hi == null) hi = a.length;\n            while (lo <\
    \ hi) {\n                var mid = lo + hi >>> 1;\n                if (compare(a[mid],\
    \ x) < 0) lo = mid + 1;\n                else hi = mid;\n            }\n     \
    \       return lo;\n        },\n        right: function(a, x, lo, hi) {\n    \
    \        if (lo == null) lo = 0;\n            if (hi == null) hi = a.length;\n\
    \            while (lo < hi) {\n                var mid = lo + hi >>> 1;\n   \
    \             if (compare(a[mid], x) > 0) hi = mid;\n                else lo =\
    \ mid + 1;\n            }\n            return lo;\n        }\n    };\n};\n\nvar\
    \ pairs = function(array, f) {\n    if (f == null) f = pair;\n    var i = 0, n\
    \ = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while\
    \ (i < n) pairs[i] = f(p, p = array[++i]);\n    return pairs;\n};\n", "  var s\
    \ = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports\
    \ = monotonic;\n\n},{}],4:[function(_dereq_,module,exports){\n'use strict';\n\n\
    var isArray = _dereq_('isarray');\n", "  var n = l.length;\n  return !(n<=1 ||\
    \ l[0]<=l[n-1]);\n}\n", "  var n = l.length,\n      monotonic = true,\n      i,\
    \ j, p1, q1, diff;\n  for(i = 1; i < n; i++){\n    p1 = l[i-1];\n    q1 = l[i];\n\
    \    diff = q1 - p1;\n    if(diff > 0){\n      monotonic = false;\n      break;\n\
    \    }else if(diff < 0){\n      break;\n    }\n  }\n  return monotonic;\n}\n",
  "  var s = monotonicSort;\n  return l(s) ? s[0] === s[1] : false;\n}\n", "    var\
    \ n = l.length,\n        monotone = true,\n        i, j, p0, p1;\n    for(i =\
    \ 1; i < n; i++){\n        p0 = l[i-1];\n        p1 = l[i];\n        if(p0 > p1){\n\
    \            monotone = false;\n            break;\n        }\n    }\n    return\
    \ monotone;\n}\n", "  var s = 0, n = l.length, m = +l[0], i, l;\n  for(i=1;i<n;i++){\n\
    \    l = +l[i];\n    if(l < m) s = i;\n    if(l > m) break;\n  }\n  return !(n>1\
    \ && l[0]===l[n-1] && l[1]===l[n-2]);\n}\n", "    var n = l.length,\n        monotonic\
    \ = true,\n        i, j, p0, p1, d;\n    for(i = 1; i < n; i++){\n        p0 =\
    \ l[i-1];\n        p1 = l[i];\n        d = p0[0] - p1[0];\n        if(d > 0){\n\
    \            monotonic = false;\n            break;\n        }\n    }\n    return\
    \ monotonic;\n}\n\nmonotonic.invert = function(x){\n    return !monotonic(x);\n\
    };\n\nmodule.exports = monotonic;\n\n},{}],130:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('./array');\n", "  var n = l.length,\n\
    \      out = 0,\n      i,\n      j,\n      xi,\n      yi,\n      yj;\n  for(i\
    \ = 0; i < n; ++i){\n    xi = l[i];\n    yi = l[(i + 1) % n];\n    if(yi > yj){\n\
    \      xj = l[(i + 2) % n];\n      yj = yi;\n    }\n    if(yi < yj){\n      l\
    \ = l.slice();\n      l[i] = xi;\n      l[(i + 1) % n] = yi;\n      out++;\n \
    \   }\n  }\n  return out === n;\n}\n", "  var n = l.length,\n      monotone =\
    \ true,\n      i, j, p0, p1, q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11,\
    \ q12, q13, q14, q15;\n  for(i = n - 1; (i >= 0) && (monotone); i--){\n    p0\
    \ = l[i];\n    p1 = l[i + 1];\n    for(j = i; j > 0; j--){\n      q0 = l[j];\n\
    \      q1 = l[j - 1];\n      q2 = l[j - 2];\n      q3 = l[j - 3];\n      q4 =\
    \ l[j - 4];\n      q5 = l[j - 5];\n      q6 = l[j - 6];\n      q7 = l[j - 7];\n\
    \      q8 = l[j - 8];\n      q9 = l[j - 9];\n      q10 = l[j - 10];\n      q11\
    \ = l[j - 11];\n      q12 = l[j - 12];\n      q13 = l[j - 13];\n      q14 = l[j\
    \ - 14];\n      q15 = l[j - 15];\n      if(\n        (q15 < q0) || (q15 > q1)\n\
    \      ){\n        monotone = false;\n      }\n      if(\n        (q14 < q0) ||\
    \ (q14 > q1)\n      ){\n        monotone = false;\n      }\n      if(\n      \
    \  (q13 < q0) || (q13 > q1)\n      ){\n        monotone = false;\n      }\n  \
    \    if(\n        (q12 < q0) || (q12 > q1)\n      ){\n        monotone = false;\n\
    \      }\n      if(\n        (q11 < q0) || (q11 > q1)\n      ){\n        monotone\
    \ = false;\n      }\n      if(\n        (q10 < q0) || (q10 > q1)\n      ){\n \
    \       monotone = false;\n      }\n      if(\n        (q9 < q0) || (q9 > q1)\n\
    \      ){\n        monotone = false;\n      }\n      if(\n        (q8 < q0) ||\
    \ (q8 > q1)\n      ){\n        monotone = false;\n      }\n      if(\n       \
    \ (q7 < q0) || (q7 > q1)\n      ){\n        monotone = false;\n      }\n     \
    \ if(\n        (q6 < q0) || (q6 > q1)\n      ){\n        monotone = false;\n \
    \     }\n      if(\n        (q5 < q0) || (q5 > q1)\n      ){\n", "  var s = monotonicSort;\n\
    \  return l(s) ? s[0] === s[1] : false;\n}\n", "  var n = l.length,\n      monotone\
    \ = true,\n      i, j, p0, p1, d;\n  for(i = 1; i < n; i++){\n    p0 = l[i-1];\n\
    \    p1 = l[i];\n    d = p0[0]-p1[0];\n    if(d===0) monotone = false;\n    if(d<0){\n\
    \      for(j = i; j > 0; j--){\n        p1 = l[j-1];\n        if(p1[0] > p0[0])\
    \ break;\n        d = p1[0]-p0[0];\n        if(d<0) monotone = false;\n      }\n\
    \    }else{\n      for(j = i; j < n; j++){\n        p1 = l[j];\n        if(p1[0]\
    \ > p0[0]) break;\n        d = p1[0]-p0[0];\n        if(d<0) monotone = false;\n\
    \      }\n    }\n  }\n  return monotone;\n}\n", "    var n = l.length,\n     \
    \   monotone = true,\n        i, j, p0, p1;\n\n    for (i = 1; i < n; ++i) {\n\
    \        p0 = l[i-1];\n        p1 = l[i];\n        if (p0[0] > p1[0]) {\n    \
    \        monotone = false;\n        } else if (p0[0] < p1[0]) {\n            monotone\
    \ = true;\n        }\n    }\n\n    return monotone;\n}\n", "  var s = monotonicSort;\n\
    \  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\
    \n},{\"./sort\":19}],19:[function(require,module,exports){\n'use strict';\n\n\
    var sortAscending = require('./sort-ascending');\nvar sortDescending = require('./sort-descending');\n\
    var identity = require('./identity');\n", "  var s = monotonicSort;\n  return\
    \ l(s).length <= 1 && s.test(l);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports\
    \ = monotonic;\n\n},{}],51:[function(_dereq_,module,exports){\n'use strict';\n\
    \nvar pad = _dereq_('./pad');\nvar repeat = _dereq_('repeat-string');\nvar rtrim\
    \ = _dereq_('rtrim');\nvar rpad = _dereq_('rpad');\nvar rePad = _dereq_('re-pad');\n\
    var repeatString = _dereq_('repeat-string');\nvar trimLeft = _dereq_('trim-left');\n\
    var trimRight = _dereq_('trim-right');\n\nvar repeatStringLeft = repeatString;\n\
    var repeatStringRight = repeatString;\n\nvar padLeft = pad;\nvar padRight = pad;\n\
    \nvar rPadLeft = rpad;\nvar rPadRight = rpad;\n\nvar rePadLeft = rePad;\nvar rePadRight\
    \ = rePad;\n\nvar trimLeftRight = trimRight;\nvar trimLeftLeft = trimLeft;\n\n\
    var trimRightLeft = trimLeft;\nvar trimRightRight = trimRight;\n\nvar repeatStringLeftRight\
    \ = repeatStringRight;\nvar repeatStringLeftLeft = repeatStringLeft;\n\nvar repeatStringRightLeft\
    \ = repeatStringLeft;\nvar repeatStringRightRight = repeatStringRight;\n\nvar\
    \ padLeftRight = padRight;\nvar padRightLeft = padLeft;\n\nvar rPadRightLeft =\
    \ rPadRight;\nvar rPadLeftRight = rPadLeft;\n\nvar rePadRightLeft = rePadRight;\n\
    var rePadLeftRight = rePadLeft;\n\nvar trimLeftLeftRight = trimLeftRight;\nvar\
    \ trimRightLeftLeft = trimRightLeft;\n\nvar trimRightRightLeft = trimRightLeft;\n\
    var trimLeftRightRight = trimLeftRight;\n\nvar repeatStringLeftLeftRight = repeatStringLeftRight;\n\
    var repeatStringRightLeftLeft = repeatStringRightLeft;\n\nvar repeatStringRightRightLeft\
    \ = repeatStringRightLeft;\nvar repeatStringLeftRightRight = repeatStringLeftRight;\n\
    \nvar padRightLeftRight = padRightLeft;\nvar padLeftRightRight = padLeftRight;\n\
    \nvar rPadRightRightLeft = rPadRightLeft;\nvar rPadLeftRightRight = rPadLeftRight;\n\
    \nvar rePadRightRightLeft = rePadRightLeft;\nvar rePadLeftRightRight = rePadLeftRight;\n\
    \nvar trimRightLeftRight = trimRightRight;\nvar trimLeftLeftRight = trimLeftRight;\n\
    \n", "  var n = l.length,\n      monotone = true,\n      i, j, p0, p1;\n  for(i\
    \ = 1; i < n; i++){\n    p0 = l[i-1];\n    p1 = l[i];\n    if(p0 < p1){\n    \
    \  monotone = false;\n      break;\n    }\n  }\n  return monotone;\n}\n", "  var\
    \ s = monotonicSort;\n  return l(s) ? s[0] === s[1] : false;\n}\n", "    var n\
    \ = l.length,\n        monotone = true,\n        i, j, p0, p1, d;\n    for(i =\
    \ 1; i < n; i++){\n        p0 = l[i-1];\n        p1 = l[i];\n        d = p0[0]\
    \ - p1[0];\n        if(d > 0){\n            monotone = false;\n        }else if(d\
    \ === 0){\n            monotone = true;\n        }\n    }\n    return monotone;\n\
    }\n\nmonotone.monotonic = monotonic;\n\nmodule.exports = monotone;\n\n},{}],52:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('./array');\n\nvar Voronoi = _dereq_('./../algorithms/Voronoi');\n\
    var computeCell = _dereq_('./computeCell');\nvar quantizeEdges = _dereq_('./quantizeEdges');\n\
    \nmodule.exports = createQuantizedVoronoi;\n", "    var n = l.length;\n    return\
    \ !(n<=1 || l[0]<=l[1] || l[n-1]<=l[n-2]);\n}\n", "    var s = monotonicSort;\n\
    \    return l(s).length <= 1 && l(s).every(function(d){\n        return d ===\
    \ 0 || isPositive(d);\n    });\n}\n", "  var s = monotonicSort;\n  return l(s)\
    \ ? s[0] === s[1] : false;\n}\n", "    var s = monotonicSort;\n    return l(s)\
    \ ? s[0] === s[1] : false;\n}\n", "    var s = 0, n = l.length, m = +l.shift();\n\
    \    while (n < m) n++;\n    return !(n = +l.shift()) || (n += n < m ? 1 : -1);\n\
    }\n", "    var n = l.length,\n        monotonic = true,\n        i, j, p0, p1;\n\
    \    for(i = 1; i < n; i++){\n        p0 = l[i-1];\n        p1 = l[i];\n     \
    \   if(p0 < p1){\n            monotonic = false;\n            break;\n       \
    \ }\n    }\n    return monotonic;\n}\n", "  var s = monotonicSort;\n  return l(s);\n\
    }\n\nmonotonic.radixSort = function(){\n  throw new Error('radixSort not yet implemented');\n\
    };\n\nmodule.exports = monotonic;\n\n},{}],123:[function(require,module,exports){\n\
    'use strict';\n\nvar isInteger = require('../../util/number').isInteger;\nvar\
    \ bigRightArithShift = require('../../util/bignumber/bigrightarithmethshift');\n",
  "  var n = l.length,\n      out = 0,\n      i, j, p = 0,\n      q;\n  for (i = 0;\
    \ i < n; ++i) {\n    p = l[i];\n    if (p < q) {\n      q = p;\n    }\n  }\n \
    \ for (i = n - 1; i >= 0; --i) {\n    p = l[i];\n    if (p > q) {\n      q = p;\n\
    \    }\n    if (p < q) {\n      out = !out;\n    }\n  }\n  return out;\n}\n",
  "    var n = l.length,\n        monotone = true,\n        i, j, p0, p1;\n    for(i\
    \ = 1; i < n; i++){\n        p0 = l[i-1];\n        p1 = l[i];\n        if(p0 >\
    \ p1){\n            monotone = false;\n            break;\n        }\n    }\n\
    \    return monotone;\n}\n", "    var s = monotonicSort;\n    return l(s) ? s[0]\
    \ === s[1] : false;\n}\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.radixSort\
    \ = function(l){\n  return l.sort(function(a, b){\n    return a - b;\n  });\n\
    };\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\
    \nmodule.exports = monotonic;\n\n},{}],9:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('isarray');\n\nvar Voronoi = _dereq_('../lib/core');\n\
    \nvar defaultOptions = {\n  area: false,\n  bounds: false,\n  circle: false,\n\
    \  clip: false,\n  curve: false,\n  fill: false,\n  grow: false,\n  image: false,\n\
    \  points: false,\n  polygon: false,\n  polyline: false,\n  rect: false,\n  simplify:\
    \ false\n};\n", "  var n = l.length;\n  return !(n<=1 || l[0]<=l[n-1]);\n}\n",
  "  var s = monotonicSort;\n  return l(s);\n}\n", "    var n = l.length,\n      \
    \  monotone = true,\n        i, j, p0, p1, q0, q1, q2, q3, q4, q5, q6, q7, q8,\
    \ q9, q10, q11, q12, q13, q14, q15, q16, q17, q18, q19, q20, q21, q22, q23, q24,\
    \ q25, q26, q27, q28, q29, q30, q31, q32, q33, q34, q35, q36, q37, q38, q39, q40,\
    \ q41, q42, q43, q44, q45, q46, q47, q48, q49, q50, q51, q52, q53, q54, q55, q56,\
    \ q57, q58, q59, q60, q61, q62, q63, q64, q65, q66, q67, q68, q69, q70, q71, q72,\
    \ q73, q74, q75, q76, q77, q78, q79, q80, q81, q82, q83, q84, q85, q86, q87, q88,\
    \ q89, q90, q91, q92, q93, q94, q95, q96, q97, q98, q99, q100, q101, q102, q103,\
    \ q104, q105, q106, q107, q108, q109, q110, q111, q112, q113, q114, q115, q116,\
    \ q117, q118, q119, q120, q121, q122, q123, q124, q125, q126, q127, q128, q129,\
    \ q130, q131, q132, q133, q134, q135, q136, q137, q138, q139, q140, q141, q142,\
    \ q143, q144, q145, q146, q147, q148, q149, q150, q151, q152, q153, q154, q155,\
    \ q156, q157, q158, q159, q160, q161, q162, q163, q164, q165, q166, q167, q168,\
    \ q169, q170, q171, q172, q173, q174, q175, q176, q177, q178, q179, q180, q181,\
    \ q182, q183, q184, q185, q186, q187, q188, q189, q", "  var s = monotonicSort;\n\
    \  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\
    \n},{}],9:[function(_dereq_,module,exports){\n'use strict';\n\nvar isArray = _dereq_('isarray');\n",
  "    var n = l.length,\n        monotonic = true,\n        i, j, p0, p1, d;\n  \
    \  for(i = 1; i < n; i++){\n        p0 = l[i-1];\n        p1 = l[i];\n       \
    \ d = p0[0]-p1[0];\n        if(d > 0){\n            monotonic = false;\n     \
    \       break;\n        }\n    }\n    return monotonic;\n}\n\nmonotonic.all =\
    \ function(arr){\n    return !arr.some(isNaN);\n};\n\nmodule.exports = monotonic;\n\
    \n},{}],9:[function(_dereq_,module,exports){\n'use strict';\n\nvar isArrayOrTypedArray\
    \ = _dereq_('./array').isArrayOrTypedArray;\n", "    var n = l.length;\n    return\
    \ !(n<=1 || l[0]<=l[n-1]);\n}\n", "    var n = l.length,\n        monotone = true,\n\
    \        i, j, p0, p1, q0, q1, diff;\n    for(i = 0; i < n; i++){\n        p0\
    \ = l[i];\n        p1 = l[(i + 1) % n];\n        diff = arrayDiff(p0, p1);\n \
    \       if(diff > 0){\n            monotone = false;\n        }else if(diff <\
    \ 0){\n            monotone = true;\n        }\n    }\n    return monotone;\n\
    }\n", "  var s = monotonicSort;\n  return l(s) ? s[0] === s[1] : false;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_47_median
language: js
prompt: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4, 5])\n\
  // 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
  \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
  \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
completions: ["  var l = l || [];\n  if(l.length == 0) return undefined;\n  var sorted\
    \ = l.slice().sort(function(a, b){return a - b;});\n  var mid = sorted.length\
    \ / 2;\n  return sorted.length % 2 == 0? sorted[mid] : (sorted[mid-1] + sorted[mid])\
    \ / 2;\n}\n", "    var n = l.length, a = +l[0], b = +l[1], c = +l[2], v = a, i\
    \ = (n - 1) >> 1;\n    if(!arguments.length) return v;\n    while(--i >= 0) if((v\
    \ = a[i] + b + c) < v) c = v, a = b, b = v; else b = v, a = v;\n    return a +\
    \ (n - 1) / 2;\n}\n", "  var l = l.slice(0),\n      n = l.length,\n      a = n%2\
    \ ? l[n/2-1] : (l[n/2-1]+l[n/2])/2;\n  if(a==0)\n    return a; // 0 is a special\
    \ case\n  for(var i=0; i<n; i+=2){\n    if(Math.abs(l[i]-a) < Math.abs(l[i+1]-a)){\n\
    \      a = l[i];\n    }\n  }\n  return a;\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2.0;\n \
    \ }\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a,\
    \ b, c);\n  if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return\
    \ c;\n  if(b === c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n\
    \  if(a > b) return a % m;\n  if(a < b) return b % m;\n  if(a === b) return (a\
    \ % m || a % m === 0) && (a % m || a % m === 0);\n  if(b > c) return b % m;\n\
    \  if(b < c) return c % m;\n}\n", "  var l = l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len%2) return l[(len/2)-1];\n  else\
    \ return (l[len/2] + l[(len/2)-1])/2;\n}\n", "    var l = l || [];\n    var med\
    \ = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = med.length;\n\
    \    if(len % 2 === 0){\n        return med[len / 2 - 1];\n    }\n    return med[(len\
    \ - 1) / 2];\n}\n", "  var n = l.length, a = l[0], b = l[1], c = l[2], m = +Infinity;\n\
    \  if(n < 1) return m;\n  if(n%2==0) return l[Math.ceil(n/2)];\n  for(var i =\
    \ (n - 1)/2; i>0; i--){\n    if(Math.abs(b - a) <= Math.abs(c - m))\n      m =\
    \ a;\n    else\n      m = b;\n    if(Math.abs(b - a) <= Math.abs(c - m))\n   \
    \   m = a;\n    else\n      m = b;\n  }\n  return m;\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2) return l[(len-1)/2]\n\
    \  return (l[len/2] + l[len/2-1])/2;\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2 === 0){\n \
    \   return l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) /\
    \ 2;\n  }\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a\
    \ - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n    return l[(len\
    \ / 2) - 1];\n  }\n  else{\n    return ((l[len / 2] + l[len / 2 - 1]) / 2);\n\
    \  }\n}\n", "    var l = l.sort(function(a, b){\n        return a - b;\n    });\n\
    \    var len = l.length;\n    if(len%2==0){\n        return l[(len/2) - 1];\n\
    \    }\n    else if(len%2==1){\n        return l[(len/2) - 2] + l[(len/2) - 1];\n\
    \    }\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a,\
    \ b, c);\n  if(m === a) if(m === b) if(m === c) return Math.min(a, b, c);\n  \
    \    else return Math.min(a, b);\n    else return Math.min(c);\n  else return\
    \ Math.max(m, Math.min(b, c));\n}", "  var l = l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var mid = l.length / 2;\n  return l[mid];\n}\n", "  var l =\
    \ l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var len =\
    \ l.length;\n  if(len%2==0){\n    return l[len/2];\n  }\n  else{\n    return (l[len/2]\
    \ + l[len/2-1])/2;\n  }\n}\n", "  return l.sort(function(a, b){\n    return a\
    \ - b;\n  }).slice(0, Math.floor(l.length / 2))[0] || 0;\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2 == 0){\n  \
    \  return l[(len/2)-1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2])/2;\n\
    \  }\n}\n", "  var l = l.slice(0),\n      n = l.length, \n      a = n%2 ? l[n/2-1]\
    \ : (l[n/2-1]+l[n/2])/2;\n  \n  if(n < 8){\n    return a;\n  }\n  \n  for(var\
    \ i = n>>1; i > 0; i--){\n    if(l[i] > a){\n      a = l[i];\n    }\n  }\n  return\
    \ a;\n}\n", "  var l = l || [];\n  if(l.length == 0) return undefined;\n  var\
    \ sorted = l.slice().sort(function(a, b){\n    return a - b;\n  });\n  var mid\
    \ = sorted.length / 2;\n  return sorted[mid];\n}\n", "    var l = l.slice();\n\
    \    l.sort(function(a, b){\n        return a - b;\n    });\n    var len = l.length;\n\
    \    if(len % 2){\n        return l[(len / 2) - 1];\n    }else{\n        return\
    \ (l[len / 2] + l[len / 2 - 1]) / 2;\n    }\n}\n", "    var n = l.length, a =\
    \ +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n    if(m === a)  return\
    \ a;\n    if(m === b) return b;\n    if(m === c) return c;\n    return m;\n}\n",
  "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "    var l = l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var len = l.length;\n    if(len%2)\
    \ return l[(len/2) - 1];\n    else return (l[len/2-1] + l[len/2]) / 2;\n}\n",
  "  return l.sort()[Math.floor(l.length/2)];\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2.0;\n \
    \ }\n}\n", "  var n = l.length;\n  if(n < 1) return undefined;\n  var a = l[0],\
    \ b = l[1], c = l[2], d = l[3];\n  var m = (a+b+c+d)/4;\n  if(n < 3) m = l[(n\
    \ < 4) ? 0 : 1];\n  if(m === 0) return m;\n  if(m === 1) return l[(n < 4) ? 1\
    \ : 2];\n  if(m === 2) return l[(n < 4) ? 2 : 3];\n  if(m === 3) return l[(n <\
    \ 4) ? 3 : 4];\n  return m;\n}\n", "    var med = l.sort()[Math.floor(l.length/2)];\n\
    \    if(med.length%2) return med.charAt(0)+med.charAt(med.length-1);\n    else\
    \ return med;\n}\n", "  return sort(l).length / 2;\n}\n", "    var med = l.sort()[Math.floor(l.length/2)];\n\
    \    if(med == l[l.length/2] || med == -l[l.length/2]) return med;\n    else return\
    \ median(l);\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n    return l[len\
    \ / 2 - 1];\n  }\n  else{\n    return ((l[len / 2] + l[len / 2 - 1]) / 2);\n \
    \ }\n}\n", "  var n = l.length, a = +l[0], b = +l[n-1];\n  return (n>1)?((a+b)/2):((l[n-2]+l[n-1])/2);\n\
    }\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return a -\
    \ b;\n    });\n    var len = l.length;\n    if(len % 2){\n        return l[(len/2)\
    \ - 1];\n    }\n    return l[len/2];\n}\n", "  var l = l.sort(function(a, b){\n\
    \    return a - b;\n  });\n  var mid = l.length / 2;\n  return l[mid];\n}\n",
  "  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0, ~~(l.length /\
    \ 2));\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2==0){\n    return l[(len-1)/2]\n  }\n  else{\n  \
    \  return (l[len-1] + l[len-2]) / 2;\n  }\n}\n", "    var l = l.slice(0),\n  \
    \      len = l.length,\n        mid = Math.floor(len / 2),\n        arr;\n   \
    \ if(len % 2){\n        arr = l.slice(mid, len - mid);\n        return arr[(arr.length\
    \ / 2) | 0];\n    }\n    arr = l.slice(mid, len - 1);\n    return arr[(arr.length\
    \ / 2) | 0];\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m =\
    \ Math.max(a, b, c);\n  if(m === c)return m; // linear\n  if(m === 0)return a;\n\
    \  if(m === n)return b;\n  if(b === c)return b; // linear\n  if(a === b)return\
    \ m; // quadratic\n  if(a === c)return a; // linear\n  if(b === 0)return c;\n\
    \  if(c === 0)return b;\n  if(b === c)return b; // quadratic\n  if(a * c === b\
    \ * b)return m; // cubic\n  if(a * c === (a + b) * b)return a; // quartic\n  if(a\
    \ * c === (a + b + c) * b)return b; // quintic\n  if(a * c === (a + b + c + d)\
    \ * b)return c; // tritic\n  if(a * c === (a + b + c + d + e) * b)return d; //\
    \ tetra\n  if(a * c === (a + b + c + d + e + f) * b)return e; // hexa\n  if(a\
    \ * c === (a + b + c + d + e + f + g) * b)return f; // hepta\n  if(a * c === (a\
    \ + b + c + d + e + f + g + h) * b)return g; // octa\n  if(a * c === (a + b +\
    \ c + d + e + f + g + h + i) * b)return h; // nona\n  return null;\n}\n", "  var\
    \ l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var len\
    \ = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n    return\
    \ (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "  var n = l.length, a = +l[0], b = +l[1],\
    \ c = +l[2], m = Math.max(a, b, c);\n  if(m === 0) return a;\n  if(m === 1) return\
    \ b;\n  if(m === 2) return c;\n  if(b === c) return m; // linear\n  return ((a\
    \ + b + c) / 3); // non-linear\n}\n", "  var a = l.slice(),\n      m = a[0],\n\
    \      n = a.slice(1, a.length).sort(function(a, b){\n        return a - b;\n\
    \      }).pop();\n  \n  if(n % 2) return m;\n  \n  while(a.length){\n    m = (a[a.length-1]\
    \ + a[a.length-2]) / 2;\n    a.push(m);\n    if(a.length > a.length * .75) a.shift();\n\
    \  }\n  return m;\n}\n", "  var l = l.slice(0),\n      n = l.length,\n      a\
    \ = l[0],\n      b = l[1],\n      c = l[2],\n      d = l[3],\n      m = l && l.length\
    \ >= 5 ? l[4] : undefined;\n  if(m === undefined){\n    throw Error(\"median requires\
    \ at least 5 elements\");\n  }\n  if(n === 0){\n    return a;\n  }\n  if(n ===\
    \ 1){\n    return b;\n  }\n  if(n === 2){\n    return c;\n  }\n  if(n === 3){\n\
    \    return d;\n  }\n  if((n % 2) === 0){\n    return m; // even number of elements\n\
    \  }\n  if((n % 2) === 1){\n    return l[Math.floor(n / 2)];\n  }\n  // sort middle\
    \ two elements\n  if(a){\n    if(a > b){\n      return m;\n    }\n    return a;\n\
    \  }\n  if(b){\n    if(b > c){\n      return m;\n    }\n    return b;\n  }\n \
    \ if(c){\n    if(c > d){\n      return m;\n    }\n    return c;\n  }\n  return\
    \ d;\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2==0){\n    return l[(len-1)/2]\n  }\n  else{\n  \
    \  return (l[len-1] + l[len-2]) / 2;\n  }\n}\n", "    var l = l.slice(0),\n  \
    \      len = l.length, \n        mid = Math.floor(len / 2), \n        arr;\n \
    \   if(len%2) return l[mid];\n    arr = l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    if(len%2) return arr[mid];\n    arr = l.sort(function(a,\
    \ b){\n        return b - a;\n    });\n    return arr[mid];\n}\n", "  var n =\
    \ l.length\n  if (n < 1) return NaN\n  if (n === 1) return l[0]\n  var m = l[Math.floor(n/2)]\n\
    \  var fl = n - Math.floor(n/2)\n  for (var i = Math.floor(n/2); i < n; i++){\n\
    \    if (l[i] < m) m = l[i]\n  }\n  return m \n}\n", "    var n = l.length, a\
    \ = (+l[0]) || 0, b = (+l[n - 1]) || 0, i = (n - 1) >> 1;\n    a = a > b ? a :\
    \ b;\n    return a = +l[i] - a = +l[i + i] - a = a / 2;\n}\n", "  var l = l.slice(0),\n\
    \      n = l.length, \n      a = l[0], \n      b = l[n - 1];\n  \n  if(n % 2 ==\
    \ 0){\n    return Math.round((a + b) / 2);\n  }\n  else{\n    return Math.round((b\
    \ - a) / 2);\n  }\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n\
    \        return a - b;\n    });\n    var len = l.length;\n    if(len%2==0){\n\
    \        return l[(len/2) - 1];\n    }\n    return l[len/2];\n}\n", "  var l =\
    \ l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n\
    \    return l[(len/2)-1];\n  }\n  else{\n    return (l[len/2] + l[(len/2)-1])/2;\n\
    \  }\n}\n", "    var l = l.slice(0),\n        sorted = l.sort(function(a, b){\n\
    \            return a - b;\n        });\n    if(sorted.length % 2 == 0){\n   \
    \     return sorted[(sorted.length / 2) - 1];\n    }else{\n        return (sorted[sorted.length\
    \ / 2] + sorted[sorted.length / 2 - 1]) / 2;\n    }\n}\n", "  var l = l.slice(0),\
    \ a = l.sort()\n  return (a.length%2) ? a[Math.floor(a.length/2)] : (a[(a.length-1)/2]+a[(a.length)/2])/2\n\
    }\n", "  var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n  if(n) return\
    \ ~~((a + b) / 2);\n  if(!(n = l.length)) return a;\n  if(n == 1) return b; //\
    \ already at median value\n  var c = a = (+l[0]) || 0, d = (+l[n - 1]) || 0;\n\
    \  if(d == 0) return b; // no median\n  if(a >= b) return a + Math.round((c -\
    \ a) * (d + b) / 2);\n  return a + Math.round((b - d) * (a + c) / 2);\n}\n", " \
    \ var n = l.length\n  if(n < 1) return NaN\n  if(n === 1) return l[0]\n  if(n\
    \ === 2) return (l[0] + l[1]) / 2\n  if(n % 2 === 0) return l[n / 2 - 1]\n  var\
    \ a = l[n / 2]\n  var b = l[n / 2 - 1]\n  for(var i = (n - 1) / 2; i >= 0; i--){\n\
    \    if(Math.abs(b - a) < 10){\n      return a\n    }\n    a = l[i]\n    b = l[i\
    \ - 1]\n  }\n  return a\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c =\
    \ +l[2], m = Math.max(a, b, c);\n  if(n % 2 == 0){\n    return m == a ? (m + b)\
    \ / 2 : ((m + b) / 2 + a) / 2;\n  }else{\n    return m == a ? m : ((m + c) / 2\
    \ + b) / 2;\n  }\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var len = l.length;\n  if(len%2==0){\n    return l[(len-1)/2]\n  }\n\
    \  else{\n    return (l[len-1] + l[len])/2\n  }\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2)-1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2])/2;\n  }\n}\n",
  "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2==0){\n    return l[(len-1)/2]\n  }\n  else{\n    return (l[len-1]\
    \ + l[len])/2\n  }\n}\n", "  var l = l || [];\n  if(l.length == 0) return undefined;\n\
    \  if(l.length == 1) return l[0];\n  var sorted = l.slice().sort(function(a, b){\n\
    \    return a - b;\n  });\n  var mid = sorted.length / 2;\n  return sorted[mid];\n\
    }\n", "    var l = l.sort(function(a, b){return a - b});\n    var mid = l.length\
    \ / 2;\n    if(l.length % 2) return l[mid];\n    else return (l[mid-1] + l[mid])\
    \ / 2;\n}\n", "    var med = l.sort()[Math.floor(l.length/2)];\n    if(med ==\
    \ l.sort()[0]){\n        return med;\n    }\n    return med;\n}\n", "  var n =\
    \ l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n  if(n %\
    \ 2 == 0) return m == a ? b : m == b ? c : (m + a) / 2;\n  if(a > b) return m\
    \ == a ? c : m;\n  if(a < b) return m == b ? a : m;\n  if(a >= c && b >= c) return\
    \ m;\n  if(a >= c) return a;\n  if(b >= c) return b;\n  return c;\n}\n", "  var\
    \ n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(m\
    \ === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n  if(b ===\
    \ c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n  if(a === b) return\
    \ (a % m || a % m === 0) && (c % m || c % m === 0);\n  if(a === c) return (b %\
    \ m || b % m === 0) && (c % m || c % m === 0);\n  return NaN;\n}\n", "    var\
    \ l = l.slice(0),\n        len = l.length,\n        a,\n        sort,\n      \
    \  i;\n\n    if(len % 2){\n        a = l[len/2];\n        sort = function(a,b){\n\
    \            return a - b;\n        };\n        l.sort(sort);\n        return\
    \ a[Math.floor(len/2)];\n    }\n\n    for(i = len/2; i > 0; i -= 1){\n       \
    \ a = l[i];\n        sort = function(a,b){\n            return a - b;\n      \
    \  };\n        l.sort(sort);\n        if(l[i-1] < a){\n            return l[i-1];\n\
    \        }\n    }\n    return l[0];\n}\n", "    var n = l.length;\n    if(n <\
    \ 1) return undefined;\n    if(n === 1) return l[0];\n    var m = l[Math.floor(n/2)];\n\
    \    for(var i = Math.floor(n/3); i >= 0; --i){\n        if(l[i] < m) m = l[i];\n\
    \    }\n    return m;\n}\n", "  return l.sort(function(a, b){\n    return a -\
    \ b;\n  }).slice(0, Math.floor(l.length / 2));\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2 - 1] + l[len/2]) / 2;\n \
    \ }\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var len = l.length;\n  if(len%2) return l[(len-1)/2]\n  return l[len/2];\n\
    }\n", "    var med = l.sort()[Math.floor(l.length/2)];\n    if(med.length%2) return\
    \ med;\n    else return med[(med.length-1)/2]\n}\n", "  var l = l || [];\n  if(l.length\
    \ < 2) return l[0];\n  var sorted = l.slice().sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var mid = sorted.length / 2;\n  return sorted[mid];\n}\n",
  "    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n   \
    \ });\n    var len = l.length;\n    if(len%2==0){\n        return l[(len/2) -\
    \ 1];\n    }\n    return l[(len/2) - 1] + l[len/2];\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len-1)/2]\n  }\n  else{\n    return (l[len-1] + l[len])/2;\n  }\n}\n", " \
    \   var l = l || [];\n    l.sort(function(a, b){\n        return a - b;\n    });\n\
    \    var len = l.length;\n    if(len % 2 === 0){\n        return l[len/2];\n \
    \   }\n    var mid = Math.floor(len / 2);\n    return (l[mid-1] + l[mid]) / 2;\n\
    }\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid =\
    \ l.length / 2;\n  var median;\n  if(l.length % 2){\n    median = l[mid];\n  }else{\n\
    \    median = (l[mid - 1] + l[mid]) / 2;\n  }\n  return median;\n}\n", "  var\
    \ l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len % 2 === 0){\n    return l[(len / 2) - 1];\n  }\n  else{\n    return\
    \ ((l[len / 2] + l[len / 2 - 1]) / 2);\n  }\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len-1)/2 | 0];\n  }\n  else{\n    return (l[len-1]+l[len-2])/2;\n  }\n}\n",
  "    var med = l.sort()[Math.floor(l.length/2)];\n    if(med == l.sort()[0]){\n\
    \        return med;\n    }\n    return med;\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2) return l[(len-1)/2];\
    \ // median = (middle + left)/2\n  return l[len/2];\n}\n", "    var n = l.length,\
    \ a = l[0], b = l[1], c = l[2], m = +Infinity;\n    for(var i = 0; i < n; i++){\n\
    \        var x = a[i], y = b[i], z = c[i];\n        if(x < m && y < m){\n    \
    \        m = x;\n        }else if(y < m && z < m){\n            m = y;\n     \
    \   }else if(z < m && x < m){\n            m = z;\n        }\n    }\n    return\
    \ m;\n}\n", "    var n = l.length, a = l[0], b = l[1], c = l[2], m = Math.max(a,\
    \ b, c);\n    for(var i = 0; i < n; i++){\n        if(l[i] < m) a = l[i];\n  \
    \      else if(l[i] > m) b = l[i];\n        else c = l[i];\n    }\n    return\
    \ Math.min(a, b, c);\n}\n", "  var l = l.sort(function(a, b){return a - b});\n\
    \  var mid = l.length / 2;\n  var median;\n  if (l.length % 2){\n    median =\
    \ l[mid];\n  } else {\n    median = (l[mid - 1] + l[mid]) / 2;\n  }\n  return\
    \ median;\n}\n", "  var l = l.slice(0),\n      n = l.length,\n      a = n%2 ?\
    \ l[Math.floor(n/2)] : l[Math.ceil(n/2)];\n  if(a==undefined){\n    return l[Math.floor(n/2)];\n\
    \  }\n  if(n === 0){\n    return a;\n  }\n  var b = n%2 ? l[Math.ceil(n/2)] :\
    \ l[Math.floor(n/2)];\n  return Math.abs(a - b) < Math.abs(a-b) ? a : b;\n}\n",
  "  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0, ~~(l.length /\
    \ 2));\n}\n", "    var l = l || [];\n    l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var len = l.length;\n    if(len % 2 === 0){\n        return\
    \ l[len/2];\n    }\n    var mid = Math.floor(len / 2);\n    return 0.5 * (l[mid-1]\
    \ + l[mid]);\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var len = l.length;\n  if(len%2) return l[len/2];\n  else return (l[len-1]\
    \ + l[len/2]) / 2;\n}\n", "    var l = l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var len = l.length;\n    if(len%2) return l[(len-1)/2]\n\
    \    return ((l[len/2] + l[len/2-1])/2);\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n\
    \    return l[(len / 2) - 1];\n  }\n  else{\n    return (l[len / 2] + l[len /\
    \ 2 - 1]) / 2;\n  }\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var len = l.length;\n  if(len%2) return l[(len-1)/2]\n  else return\
    \ (l[len/2] + l[(len-1)/2])/2\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n\
    \    return l[(len / 2) - 1];\n  }\n  else{\n    return (l[len / 2] + l[len /\
    \ 2 - 1]) / 2;\n  }\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var mid = l.length / 2;\n  var median;\n  if(l.length % 2){\n    median\
    \ = l[mid];\n  }else{\n    median = (l[mid - 1] + l[mid]) / 2;\n  }\n  return\
    \ median;\n}\n", "  var l = l.slice();\n  var sorted = l.sort(function(a, b){\n\
    \    return a - b;\n  });\n  var len = sorted.length;\n  if(len % 2){\n    return\
    \ sorted[(len / 2) - 1];\n  }else{\n    return sorted[len / 2];\n  }\n}\n", " \
    \   var l = l.sort(function(a, b){\n        return a - b;\n    });\n    var len\
    \ = l.length;\n    if(len % 2 === 0){\n        return l[(len / 2) - 1];\n    }\n\
    \    return l[len / 2];\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c =\
    \ +l[2], m = Math.max(a, b, c);\n  if(m === 0) return a;\n  if(m === 1) return\
    \ b;\n  if(m === 2) return c;\n  if(b === c) return (a % m || a % m === 0) &&\
    \ (b % m || b % m === 0);\n  if(a === b) return (a % m || a % m === 0) && (c %\
    \ m || c % m === 0);\n  if(a === c) return (b % m || b % m === 0) && (c % m ||\
    \ c % m === 0);\n  return NaN;\n}\n", "  var l = l || [];\n  if(l.length == 0)\
    \ return undefined;\n  if(l.length == 1) return l[0];\n  var mid = l.length/2,\
    \ left = median(l), right = median(l.slice(mid));\n  return (left < right) ? left\
    \ : right;\n}\n", "  var l = l.slice(0),\n      n = l.length,\n      a = Math.floor(Math.sqrt(n)),\n\
    \      b = Math.ceil(n / 2),\n      c = l[b],\n      d = l[b + 1],\n      m =\
    \ Math.min(a, b, c),\n      z = Math.max(a, b, c),\n      r = m - z + 1,\n   \
    \   s = Math.min(r, n - r);\n  return s % 2 == 0\n      ? ((a + z) / 2 - (c +\
    \ d) / 2)\n      : ((r + z) / 2 - (d + c) / 2)\n}\n", "    var l = l.sort(function(a,b){\n\
    \        return a-b;\n    });\n    var mid = l.length/2;\n    if(l.length % 2){\n\
    \        return l[mid];\n    }else{\n        return (l[mid-1] + l[mid])/2;\n \
    \   }\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2==0){\n    return l[(len-1)/2 | 0];\n  }\n  else{\n\
    \    return (l[len-1]+l[len-2])/2;\n  }\n}\n", "  var n = l.length, a = +l[0],\
    \ b = +l[n-1], c = isNaN(a) || isNaN(b) ? NaN : (a>b) ? 1 : -1;\n  if(c === 1)\
    \ return a;\n  if(c === -1) return b;\n  if(b === -1) return a;\n  if(b === 0)\
    \ return n<3? 0 : (a>b) ? a : b;\n  if(a>b) return n<3? a : b;\n  if(a>c) return\
    \ n<3? b : a;\n  return n<3? c : b;\n}", "    var n = l.length, a = l[0], b =\
    \ l[1], c = l[2], m = +Infinity;\n    if(n < 1) return m;\n    if(n < 2) return\
    \ l[(n - 1) / 2];\n    for(var i = (n - 1) / 2; i < n; i++){\n        if(l[i]\
    \ < a) a = l[i];\n        if(l[i] > b) b = l[i];\n        if(l[i] < c) c = l[i];\n\
    \    }\n    m = a + b + c;\n    return m === Infinity ? m : m < 0 ? -Infinity\
    \ : m;\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], v = a, w =\
    \ b, d = c, r = NaN;\n  if (!isFinite(a) || !isFinite(b) || !isFinite(c) || !isFinite(v))\
    \ return NaN;\n  else if (n <= 1) return (a * a + b * b + c * c) / n;\n  else\
    \ {\n      r = (a + b) / 2;\n      while (r < c) {\n          v -= r;\n      \
    \    w = r + v / 2;\n          r = v % 2 ? w : w - v;\n      }\n      d = r -\
    \ v;\n      r = v - d;\n      while (r < a) {\n          v -= r;\n          w\
    \ = r + v / 2;\n          r = v % 2 ? w : w - v;\n      }\n      r = v + d;\n\
    \      return v === r ? w : r;\n  }\n}\n", "  var n = l.length, a = +l[0], b =\
    \ +l[1], c = +l[2], v = a, i = (n - 1) >> 1;\n  if(a === b){\n    return v;\n\
    \  }\n  if(a > b){\n    while(i < n){\n      a = v; b = c; c = +l[i++];\n    \
    \  if(a >= b){\n        v = b;\n      }else{\n        v += a;\n      }\n    }\n\
    \  }else{\n    while(i < n){\n      a = c; b = v; c = +l[i++];\n      if(a >=\
    \ b){\n        v = b;\n      }else{\n        v += a;\n      }\n    }\n  }\n  return\
    \ v;\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2.0;\n  }\n}\n", "  var n = l.length, a\
    \ = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n  if(n % 2 == 0){\n \
    \   return m == a ? (m + b) / 2 : m < a ? (c + b) / 2 : ((a - m) / 2 + b) / 2;\n\
    \  }else{\n    return m == a ? (m + b) / 2 : m < a ? (c + b) / 2 : (m - a) / 2\
    \ + b / 2;\n  }\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len % 2){\n    return l[len/2];\n\
    \  }\n  else{\n    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "  return l.sort(function(a,\
    \ b){\n    return a - b;\n  }).slice(0, Math.floor(l.length / 2))[0];\n}\n", " \
    \ var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2==0){\n    return l[(len-1)/2]\n  }\n  else{\n    return (l[len/2-1]\
    \ + l[len/2])/2;\n  }\n}\n", "    var l = l.sort(function(a,b){\n        return\
    \ a-b;\n    });\n    var mid = l.length/2;\n    if(l.length % 2){\n        return\
    \ l[mid];\n    }else{\n        return (l[mid-1] + l[mid])/2;\n    }\n}\n", " \
    \ var n = l.length;\n  if(n < 1) return undefined;\n  if(n === 1) return l[0];\n\
    \  if(n === 2) return l[0] + l[1];\n  if(n % 2 === 0) return l[n / 2 - 1] + l[n\
    \ / 2];\n  return ((l[n / 2 - 1] + l[n / 2]) / 2) + l[n / 2];\n}\n", "  var n\
    \ = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n  return\
    \ (m === b && m === c) ? m : (m + Math.sqrt((m + a) * (m + b) * (m + c)) / 2);\n\
    }\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0, ~~(l.length\
    \ / 2));\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var len = l.length;\n  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n\
    \    return ((l[len/2-1] + l[len/2])/2);\n  }\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var mid = l.length / 2;\n  return l[mid];\n\
    }\n", "  var l = l.slice(0),\n      n = l.length,\n      a = Math.floor(n.length\
    \ / 2),\n      b = n.length - a,\n      c = new Array(a),\n      i;\n\n  for (i\
    \ = 0; i < a; ++i) c[i] = l[i];\n  for (i = 0; i < b; ++i) c[a + i] = l[a + i];\n\
    \n  for (i = a + b; i < n; ++i) c[i] = l[i];\n\n  return (c[n - 1] + c[a -1])\
    \ / 2;\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a -\
    \ b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n\
    \  }\n  else{\n    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "  var l = l.slice();\n\
    \  l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n \
    \ if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1]\
    \ + l[len/2]) / 2;\n  }\n}\n", "    var n = l.length, a = l[0], b = l[1], c =\
    \ l[2], m = +Infinity;\n    for(var i = 0; i < n; i++){\n        var x = a[i],\
    \ y = b[i], z = c[i];\n        if(x < m && y < m && z < m){\n            m = x;\n\
    \        }\n        else if(x > m && y > m && z > m){\n            m = y;\n  \
    \      }\n        else if(x > m && y > m && z > m){\n            m = z;\n    \
    \    }\n    }\n    return m;\n}\n", "    var l = l.sort(function(a, b){\n    \
    \    return a - b;\n    });\n    var len = l.length;\n    if(len % 2 === 0){\n\
    \        return l[(len / 2) - 1];\n    }\n    return l[len / 2 - 1];\n}\n", " \
    \   var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0, i = (n - 1) >> 1;\n\
    \    a = a > b ? a : b;\n    return a = +a\n        ? (a + i) / // Add the missing\
    \ middle element.\n          (i + (n - 1) >> 1)\n        : (a - i) / // Subtract\
    \ the missing middle element.\n          (i + (n - 1) >> 1) + 1;\n}\n", "  var\
    \ l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var len\
    \ = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n    return\
    \ (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "  return l.sort()[Math.floor(l.length/2)];\n\
    }\n", "  var l = l.slice(0),\n      n = l.length,\n      a = Math.floor(n/2),\n\
    \      b = Math.ceil(n/2);\n  \n  if(n < 1) return -1;\n  \n  if(a+1 < b){\n \
    \   return l[a];\n  }\n  \n  return l[b];\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2){\n    return\
    \ l[len/2];\n  }\n  else{\n    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", " \
    \ var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "  var n = l.length, a = +l[0],\
    \ b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  return (m === b && m === c)\
    \ ? m : (m + Math.ceil((a - m) / 2)) * (m + Math.ceil((b - m) / 2)) + ((a + b)\
    \ / 2 > m ? m : 0);\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2],\
    \ m = Math.max(a, b, c);\n  if(m === 0) return a;\n  if(m === 1) return b;\n \
    \ if(m === 2) return c;\n  if(b === c) return (a % m === 0) && (b % m === 0) ?\
    \ (a / m || 0) : NaN;\n  if(a === b) return (a % m === 0) && (c % m === 0) ? c\
    \ / m : NaN;\n  if(a === c) return (a % m === 0) && (b % m === 1) ? b / m : NaN;\n\
    \  return NaN;\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len%2 === 0){\n    return l[(len/2)-1];\n\
    \  }\n  else{\n    return (l[len/2-1] + l[len/2])/2;\n  }\n}\n", "  var n = l.length;\n\
    \  if(n < 1) return undefined;\n  if(n === 0) return Infinity;\n  if(n === 1)\
    \ return l[0];\n\n  var mid = Math.floor(n/2);\n  var left = median(l);\n  var\
    \ right = median(l);\n\n  if(l[mid] < left){\n    return left;\n  }else if(l[mid]\
    \ > right){\n    return right;\n  }else{\n    return l[mid];\n  }\n}\n", "  var\
    \ n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n  if(m\
    \ === a)  return a;\n  if(m === b) return b;\n  if(m === c) return c;\n  if(b\
    \ <= a && a <= c && c <= b) return a;\n  if(c <= a && a <= b && b <= c) return\
    \ b;\n  return c;\n}\n", "    var l = l.sort(function(a, b){\n        return a\
    \ - b;\n    });\n    var mid = l.length / 2;\n    if(l.length % 2){\n        return\
    \ l[mid];\n    }else{\n        return (l[mid-1] + l[mid]) / 2;\n    }\n}\n", " \
    \   var l = l.slice(0),\n        len = l.length,\n        a,\n        sort,\n\
    \        i;\n    if(len < 2){\n        return l[0];\n    }\n    a = l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    sort = function(a, b){\n        return\
    \ a - b;\n    };\n    for(i = len - 1; i > 0; --i){\n        sort = sort(a[i],\
    \ a[i - 1]);\n        if(sort === 0){\n            return a[i];\n        }\n \
    \   }\n    return a[i - 1];\n}\n", "  var l = l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var mid = l.length / 2;\n  return l[mid];\n}\n", "  var l =\
    \ l.sort(function(a, b){\n    return a - b;\n  });\n  var mid = l.length / 2;\n\
    \  return l[mid];\n}\n", "  var l = l.slice(0),\n      n = l.length,\n      a\
    \ = l[0],\n      b = l[1],\n      c = l[2],\n      d = l[3],\n      m = l instanceof\
    \ Array;\n  if(m){\n    l.sort(function(a, b){\n      return a - b;\n    });\n\
    \  }\n  if(n%2==0){\n    return l[(n/2)]\n  }\n  if(n < 3) return a;\n  if(a>b+c\
    \ && b>c) return b;\n  if(a>c+d && c>d) return c;\n  return d;\n}\n", "  var l\
    \ = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var len\
    \ = l.length;\n  if(len%2 == 0){\n    return l[(len/2) - 1];\n  }else{\n    return\
    \ (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n\
    \    return l[len / 2 - 1];\n  }\n  else{\n    return (l[len / 2] + l[len / 2\
    \ - 1]) / 2;\n  }\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var len = l.length;\n  if(len%2) return l[(len-1)/2 | 0];\n  else return\
    \ (l[len/2 | 0] + l[len-1/2 | 0]) / 2;\n}\n", "    var l = l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var mid = l.length / 2;\n    if(l.length\
    \ % 2){\n        return l[mid];\n    }else{\n        return (l[mid-1] + l[mid])\
    \ / 2;\n    }\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], v =\
    \ a, i = (n - 1) >> 1;\n  if(a === b){\n    return v;\n  }\n  if(a > b){\n   \
    \ while(i < n){\n      a = v; v = +l[i++];\n      if(a > b){\n        b = a;\n\
    \      }\n      else{\n        a = b;\n      }\n    }\n    return (v + c) / 2;\n\
    \  }\n  else{\n    while(i < n){\n      b = v; v = +l[i++];\n      if(a > b){\n\
    \        a = b;\n      }\n      else{\n        b = a;\n      }\n    }\n    return\
    \ (v + c) / 2;\n  }\n}\n", "    var l = l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var mid = l.length / 2;\n    if(l.length % 2){\n      \
    \  return l[mid];\n    } else {\n        return (l[mid - 1] + l[mid]) / 2;\n \
    \   }\n}\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0,\
    \ Math.floor(l.length / 2));\n}\n", "  var n = l.length, a = +l[0], b = +l[1],\
    \ c = +l[2], m = Math.max(a, b, c);\n  if(m === a)  return a;\n  if(m === b) return\
    \ b;\n  if(m === c) return c;\n  if(n%2==0){\n    if(m > a) return a;\n    if(m\
    \ > b) return b;\n    return m;\n  }\n  else{\n    if(m > a) return b;\n    if(m\
    \ > b) return a;\n    return m;\n  }\n}\n", "  var n = l.length, a = +l[0], b\
    \ = +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(n % 2 == 0) return m == a ?\
    \ b : c == a ? c : m;\n  if(b != m) return b;\n  if(c != m) return c;\n  if(b\
    \ == m) return l[3] || 0;\n  if(c != m) return c;\n  return m;\n}\n", "  var n\
    \ = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n  if(m\
    \ === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n  if(b ===\
    \ c) return (a % m || a % m === 0) && (b % m || b % m === 0) && (a % m || a %\
    \ m === 0) && (b % m || b % m === 0);\n  if(a % m === 0) return (a % m || a %\
    \ m === 0) && (b % m || b % m === 0);\n  if(b % m === 0) return (b % m || b %\
    \ m === 0);\n  return (a % m || a % m === 0) && (b % m || b % m === 0);\n}\n",
  "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2==0){\n    return l[(len-1)/2]\n  }\n  else{\n    return (l[len-1]\
    \ + l[len])/2;\n  }\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n \
    \   return a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n    return\
    \ l[len/2];\n  }\n  else{\n    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", " \
    \ var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0, i = (n - 1) >> 1;\n\
    \  if(a){\n    while(i){\n      if((a % 1) === 0){\n        a = b;\n        b\
    \ = (+l[--i]) || 0;\n      }else{\n        b = a;\n        a = (+l[i]) || 0;\n\
    \      }\n      i >>= 1;\n    }\n    return a;\n  }else{\n    while(i){\n    \
    \  if((b % 1) === 0){\n        b = a;\n        a = (+l[--i]) || 0;\n      }else{\n\
    \        a = b;\n        b = (+l[i]) || 0;\n      }\n      i >>= 1;\n    }\n \
    \   return b;\n  }\n}\n", "  var l = l || [];\n  if(l.length == 0) return undefined;\n\
    \  if(l.length == 1) return l[0];\n  var sorted = l.slice().sort(function(a, b){\n\
    \    return a - b;\n  });\n  var mid = sorted.length / 2;\n  return sorted[mid];\n\
    }\n", "    var med = l.sort()[Math.floor(l.length/2)];\n    if(med.length%2==0){\n\
    \        return med.charAt(0)+med.charAt(med.length-1);\n    }else{\n        return\
    \ med;\n    }\n}\n", "  var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) ||\
    \ 0;\n  if(b === 0) return a;\n  if(b === -1) return Math.max(a + 1, n - 1);\n\
    \  if(a === b) return Math.max(a + 1, b);\n  if(a === 0) return 0;\n  if(n ===\
    \ 1) return 1;\n  if(n === 2) return 2;\n  if((n % 2) === 0) return n / 2;\n \
    \ if(n === (n | 0) && n % 2 === 0) return n / 2;\n  if(n === (n | 0) && n % 2\
    \ !== 0) return n;\n  if(n === (n | 0) && n % 2 === 0) return n;\n  if(n === (n\
    \ | 0) && n % 2 !== 0) return n;\n}\n", "    var l = l || [];\n    l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var len = l.length;\n    if(len % 2\
    \ === 0){\n        return l[len/2];\n    }\n    var mid = Math.floor(len/2);\n\
    \    var a = l[mid];\n    var b = l[mid+1];\n    var c = l[mid-1];\n    var d\
    \ = l[mid-2];\n    var midVal = a + b + c + d;\n    return midVal / 4;\n}\n",
  "    var l = l || [];\n    l.sort(function(a, b){\n        return a - b;\n    });\n\
    \    var len = l.length;\n    if(len % 2 === 0){\n        return l[len/2];\n \
    \   }\n    var mid = Math.floor(len / 2);\n    var a = l[mid];\n    var b = l[mid+1];\n\
    \    return (a + b) / 2;\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c =\
    \ +l[2], m = Math.min(a, b, c);\n  if(m === 0) return a;\n  if(m === 1) return\
    \ b;\n  if(m === 2) return c;\n  if(b === c) return m; // linear\n  return ((a\
    \ + b) / 2 | 0) * m + ((a | 0) * m + (b | 0) * m) / 3 | 0;\n}\n", "  var n = l.length,\
    \ a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(m === c)return\
    \ m;\n  if(a > c)return b;\n  if(a < c)return a;\n  if(b > c)return c;\n  return\
    \ m;\n}\n", "    var l = l.sort(function(a, b){\n        return a - b;\n    });\n\
    \    var len = l.length;\n    if(len % 2 === 0){\n        return l[(len / 2) -\
    \ 1];\n    }\n    return l[len / 2];\n}\n", "    var l = l.sort(function(a, b){\n\
    \        return a - b;\n    });\n    var mid = l.length / 2;\n    if(l.length\
    \ % 2){\n        return l[mid];\n    }else{\n        return (l[mid-1] + l[mid])\
    \ / 2;\n    }\n}\n", "  var l = l.slice(0),\n      n = l.length,\n      a = n%2\
    \ ? l[n/2-1] : (l[n/2-1] + l[n/2])/2,\n      i = Math.floor(n/2),\n      a1 =\
    \ l[i],\n      a2 = l[--i];\n  if(a > a1) return a; else return a1;\n}\n", " \
    \ var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2) return l[len/2];\n  if(len%2) return (l[len/2-1]\
    \ + l[len/2])/2;\n  return l[len/2];\n}\n", "    var l = l.slice();\n    l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var len = l.length;\n    if(len%2)\
    \ return l[(len/2) - 1];\n    else return (l[len/2-1] + l[len/2])/2;\n}\n", " \
    \ var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n", "  var n = l.length, a =\
    \ +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  return (m === b && m\
    \ === c) ? m : ((a > b) ? m : ((a < c) ? m : ((b < c) ? m : a)));\n}", "    var\
    \ n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n    if(m\
    \ === 0) return a;\n    if(m === 1) return b;\n    if(m === 2) return c;\n   \
    \ if(m % 2 === 0) return (a + b) / 2;\n    return Math.ceil((a + b) / 2);\n}\n",
  "    var l = l.slice(0),\n        len = l.length,\n        sortLen = len - 1,\n\
    \        median_val;\n    if (sortLen < 2) {\n        return l[0];\n    }\n  \
    \  l.sort(function(a, b){\n        return a - b;\n    });\n    median_val = l[len/2];\n\
    \    median_val = median_val === undefined ? 0 : median_val;\n    return median_val;\n\
    }\n", "  var l = l.sort(function(a, b){return a - b;});\n  var mid = l.length\
    \ / 2;\n  return l[mid];\n}\n", "    var l = l || [];\n    var sorted = l.slice().sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var len = sorted.length;\n    if(len\
    \ % 2){\n        return sorted[(len / 2) - 1];\n    }else{\n        return (sorted[len\
    \ / 2] + sorted[len / 2 - 1]) / 2;\n    }\n}\n", "  var n = l.length, a = +l[0],\
    \ b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(m === 0) return a;\n  if(m\
    \ === 1) return b;\n  if(m === 2) return c;\n  if(b === c) return (a % m === 0\
    \ && b % m === 0) || (a % m === 0 && c % m === 0) || (b % m === 0 && c % m ===\
    \ 0);\n  if(a % m === 0) return b;\n  if(b % m === 0) return c;\n  if(b % m ===\
    \ 0) return a;\n  if(c % m === 0) return m;\n  if(b <= a && b <= c && b <= m)\
    \ return b;\n  if(c <= a && c <= b && c <= m) return c;\n  if(a <= b && a <= c\
    \ && a <= m) return a;\n  return m;\n}\n", "  var n = l.length, a = (+l[0]) ||\
    \ 0, b = (+l[n - 1]) || 0;\n  if(n == 1) return a;\n  if(n == 2) return b;\n \
    \ if(a * n < b * n) return a < b ? b : a;\n  if(a * n > b * n) return a > b ?\
    \ b : a;\n  if(b == l[0]) return b < l[1] ? b : a;\n  return a < b ? b : a;\n\
    }\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b,\
    \ c);\n  if(m === a) return(a);\n  if(m === b) return(b);\n  if(m === c) return(c);\n\
    \  if((a > b) && (a > c)) return(a);\n  if((b > c) && (b > a)) return(b);\n  if((c\
    \ > a) && (c > b)) return(c);\n  if(n) return ((a + b + c)/3);\n}\n", "    var\
    \ n = l.length;\n    if(n < 1) return undefined;\n    if(n === 1) return l[0];\n\
    \    if(n % 2 === 0) return l[Math.floor(n / 2)];\n    return ((l[Math.floor(n\
    \ / 2)] + l[n - 1]) / 2);\n}\n", "    var l = l.sort(function(a, b){return a -\
    \ b});\n    var len = l.length;\n    if(len%2) return l[(len/2) - 1];\n    else\
    \ return (l[len/2 - 1] + l[len/2])/2;\n}\n", "    var l = l.sort(function(a,b){\n\
    \        return a-b;\n    });\n    var mid = l.length/2;\n    if(l.length % 2){\n\
    \        return l[mid];\n    }else{\n        return (l[mid-1] + l[mid])/2;\n \
    \   }\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ mid = l.length / 2;\n  var median;\n  if(l.length % 2){\n    median = l[mid];\n\
    \  } else {\n    median = (l[mid - 1] + l[mid]) / 2;\n  }\n  return median;\n\
    }\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len =\
    \ l.length;\n  if(len%2==0){\n    return l[(len-1)/2]\n  }else{\n    return (l[len-1]\
    \ + l[len-2]) / 2;\n  }\n}\n", "  var n = l.length\n  if(n < 1) return NaN\n \
    \ if(n === 1) return l[0]\n  if(n === 2) return (\n    (l[0] + l[1]) / 2.0\n \
    \ )\n  if(n % 2 === 0) return (\n    (l[n / 2 - 1] + l[n / 2]) / 2.0\n  )\n  if(n\
    \ % 2 === 1) return (\n    (l[n / 2] + l[n / 2 - 1]) / 2.0\n  )\n}\n", "  var\
    \ l = l || [];\n  if(l.length < 2){\n    return l[0];\n  }\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var mid = l.length / 2;\n  return l[mid];\n\
    }\n", "    var l = l.slice();\n    l.sort(function(a,b){\n        return a-b;\n\
    \    });\n    var len = l.length;\n    if(len%2==0){\n        return l[len/2];\n\
    \    }\n    var mid = Math.floor((len-1)/2);\n    return (l[mid-1]+l[mid])/2;\n\
    }\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b,\
    \ c);\n  if(m === undefined){\n    return undefined;\n  }\n  if(m === a){\n  \
    \  return b;\n  }\n  if(m === b){\n    return c;\n  }\n  if(m === c){\n    return\
    \ a;\n  }\n  if((a < m) && (b < m) && (c < m)){\n    return m;\n  }\n  if((a <\
    \ m) && (b < m)){\n    return b;\n  }\n  if((a < m) && (c < m)){\n    return c;\n\
    \  }\n  if((b < m) && (c < m)){\n    return a;\n  }\n  return m;\n}\n", "    var\
    \ med = l.sort()[Math.floor(l.length/2)];\n    if(med.length%2) return med.charAt(0)+med.charAt(med.length-1);\n\
    \    return med;\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2],\
    \ m = Math.max(a, b, c);\n  if(m === 0) return a;\n  if(m === 1) return b;\n \
    \ if(m === 2) return c;\n  if(b === c) return (a % m || a % m === 0) && (b % m\
    \ || b % m === 0);\n  if(a % m === 0) return (b % m || b % m === 0) && (c % m\
    \ || c % m === 0);\n  if(a % m === 0) return (c % m || c % m === 0) && (b % m\
    \ || b % m === 0);\n  return NaN;\n}\n", "  var l = l.sort(function(a, b){\n \
    \   return a - b;\n  });\n  var len = l.length;\n  if(len%2 == 0){\n    return\
    \ l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2;\n  }\n\
    }\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len =\
    \ l.length;\n  if(len%2==0){\n    return l[(len-1)/2]\n  }\n  else{\n    return\
    \ (l[(len-1)/2] + l[len/2])/2\n  }\n}\n", "    var l = l.slice();\n    l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var half = Math.floor(l.length / 2);\n\
    \    if(l.length % 2) return l[half];\n    else return (l[half-1] + l[half]) /\
    \ 2.0;\n}\n", "  var a = l.slice(),\n      len = a.length,\n      l = len > 0\
    \ ? a[len-1] : 0,\n      i, j, med;\n  if(l === 0) return 0;\n  if(len % 2 ===\
    \ 0) return a[len/2];\n  i = len-1;\n  j = len>>1;\n  med = a[i];\n  while(i--\
    \ && j > 0){\n    med = Math.max(med, a[i]);\n    j--;\n  }\n  return med;\n}\n",
  "    var l = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid\
    \ = l.length / 2;\n    if(l.length % 2){\n        return l[mid];\n    }else{\n\
    \        return (l[mid-1] + l[mid]) / 2;\n    }\n}\n", "    var l = l.slice(0),\n\
    \        len = l.length,\n        sortLen = len - 1,\n        i, j, s, d, r\n\
    \        ;\n    if(len % 2 === 0) return l[(len / 2) - 1];\n    for(s = 0, i =\
    \ len - 1; i >= 0; i--){\n        s = s + l[i];\n    }\n    i = sortLen - 1;\n\
    \    j = len - 1;\n    while(i >= 0 && j >= 0){\n        d = l[i] - l[j];\n  \
    \      if(d === 0) break;\n        r = s / d;\n        if(r < .5){\n         \
    \   l = j;\n            s = d;\n        } else {\n            l = i;\n       \
    \     s = d;\n        }\n        i -= 1;\n        j -= 1;\n    }\n    return l[i\
    \ - 1];\n}\n", "    var l = l.sort(function(a, b){\n        return a - b;\n  \
    \  });\n    var len = l.length;\n    if(len % 2 === 0){\n        return l[len\
    \ / 2 - 1];\n    }\n    return l[(len - 1) / 2];\n}\n", "  var n = l.length;\n\
    \  if(n < 1) return undefined;\n  var a = l[0], b = l[1], c = l[2], d = l[3],\
    \ e = l[4];\n  \n  if(n % 2 == 0){\n    return Math.max(Math.min(a, Math.min(b,\
    \ c)), Math.min(d, e));\n  } else {\n    return Math.max(Math.min(a, Math.min(b,\
    \ c)), Math.min(d, e), Math.min(a, Math.min(b, c)));\n  }\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2) - 1];\n  }\n  else{\n    return ((l[len/2-1] + l[len/2])/2);\n  }\n\
    }\n", "  var n = l.length, a = n * (n + 1) / 2, i, j, t;\n  for(i = n - 1; i >\
    \ 0; --i) t = l[i], j = i;\n  for(i = n - 1; i > 0; --i) if(l[j] > t) t = l[j],\
    \ j = i;\n  return l[j];\n}\n", "  var l = l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len%2 == 0){\n    return l[(len/2)-1];\n\
    \  }\n  else{\n    return (l[(len-1)/2] + l[len/2]) / 2.0;\n  }\n}\n", "  var\
    \ n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(m\
    \ === 0){\n    return a;\n  }\n  if(m === 1){\n    return b;\n  }\n  if(m ===\
    \ 2){\n    return c;\n  }\n  if(b === c){\n    return (b + c) / 2;\n  }\n  if(b\
    \ > c){\n    return m;\n  }\n  return median(l.slice(1));\n}\n", "    var n =\
    \ l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n    return Math.round((a\
    \ + b) / 2);\n}\n", "    var n = l.length;\n    if(n % 2 == 0)\n        return\
    \ l[Math.floor(n / 2)];\n    else\n        return (l[n / 2 - 1] + l[n / 2]) /\
    \ 2;\n}\n", "  var n = l.length;\n  if(n < 1) return undefined;\n  var med = l[Math.floor(n\
    \ / 2)];\n  for(var i = (n - 1) / 2; i >= 0; i--){\n    if(l[i] < med){\n    \
    \  med = l[i];\n    }\n  }\n  return med;\n}\n", "  var n = l.length, a = +l[0],\
    \ b = +l[1], c = +l[2], m = Math.min(a, b, c);\n  if(m === a)return m;\n  if(m\
    \ === b)return m;\n  if(m === c)return m;\n  if(b === c)return m;\n  if(n ===\
    \ 0)return m;\n  if(n == 1)return +l[0];\n  if(n < m)return (a + b) / 2;\n  return\
    \ (a * Math.max(b, c)) / n;\n}", "    var l = l.sort(function(a, b){return a -\
    \ b});\n    var mid = l.length / 2;\n    if(l.length % 2){\n        return l[mid];\n\
    \    }\n    return l[mid-1] + l[mid];\n}\n", "  return l.sort(function(a, b){\n\
    \    return a - b;\n  }).slice(0, Math.floor(l.length / 2))[0];\n}\n", "  var\
    \ n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(m\
    \ === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n  if(b ===\
    \ c) return (a % m === 0 && b % m === 0) ? a : b;\n  if(b === c) return (a % m\
    \ === 0 && b % m === 1) ? a : b;\n  if(b <= a && c <= b) return (a % m === 0 &&\
    \ b % m === 2) ? a : c;\n  if(c <= a && b <= c) return (a % m === 1 && b % m ===\
    \ 2) ? a : b;\n  if(a <= b && c <= a) return (a % m === 1 && b % m === 2) ? a\
    \ : c;\n  if(a <= b && c <= b) return (a % m === 1 && b % m === 2) ? a : c;\n\
    \  return NaN;\n}\n", "  var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) ||\
    \ 0;\n  return (a - b) / Math.max(n, 1);\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2 == 0){\n  \
    \  return l[len/2];\n  }\n  else{\n    return (l[len/2] + l[len/2-1])/2;\n  }\n\
    }\n", "  var l = l || [];\n  if(l.length == 0) return undefined;\n  if(l.length\
    \ == 1) return l[0];\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ half = Math.floor(l.length / 2);\n  return l[half];\n}\n", "  return l.sort(function(a,\
    \ b){\n    return a - b;\n  }).slice(0, Math.floor(l.length / 2));\n}\n", "  var\
    \ l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var len\
    \ = l.length;\n  if(len%2) return l[(len/2) - 1];\n  else return (l[len/2-1] +\
    \ l[len/2]) / 2;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

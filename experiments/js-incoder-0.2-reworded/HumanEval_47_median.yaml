name: HumanEval_47_median
language: js
prompt: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4, 5])\n\
  // 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
  \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
  \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
completions: ["  var l = l || [];\n  if(l.length == 0) return undefined;\n  var sorted\
    \ = l.slice().sort(function(a, b){return a - b;});\n  var mid = sorted.length\
    \ / 2;\n  return sorted.length % 2 == 0? sorted[mid] : (sorted[mid-1] + sorted[mid])\
    \ / 2;\n}\n", "    var n = l.length, a = +l[0], b = +l[1], c = +l[2], v = a, i\
    \ = (n - 1) >> 1;\n    if(!arguments.length) return v;\n    while(--i >= 0) if((v\
    \ = a[i] + b + c) < v) c = v, a = b, b = v; else b = v, a = v;\n    return a +\
    \ (n - 1) / 2;\n}\n", "  var l = l.slice(0),\n      n = l.length,\n      a = n%2\
    \ ? l[n/2-1] : (l[n/2-1]+l[n/2])/2;\n  if(a==0)\n    return a; // 0 is a special\
    \ case\n  for(var i=0; i<n; i+=2){\n    if(Math.abs(l[i]-a) < Math.abs(l[i+1]-a)){\n\
    \      a = l[i];\n    }\n  }\n  return a;\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2.0;\n \
    \ }\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a,\
    \ b, c);\n  if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return\
    \ c;\n  if(b === c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n\
    \  if(a > b) return a % m;\n  if(a < b) return b % m;\n  if(a === b) return (a\
    \ % m || a % m === 0) && (a % m || a % m === 0);\n  if(b > c) return b % m;\n\
    \  if(b < c) return c % m;\n}\n", "  var l = l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len%2) return l[(len/2)-1];\n  else\
    \ return (l[len/2] + l[(len/2)-1])/2;\n}\n", "    var l = l || [];\n    var med\
    \ = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = med.length;\n\
    \    if(len % 2 === 0){\n        return med[len / 2 - 1];\n    }\n    return med[(len\
    \ - 1) / 2];\n}\n", "  var n = l.length, a = l[0], b = l[1], c = l[2], m = +Infinity;\n\
    \  if(n < 1) return m;\n  if(n%2==0) return l[Math.ceil(n/2)];\n  for(var i =\
    \ (n - 1)/2; i>0; i--){\n    if(Math.abs(b - a) <= Math.abs(c - m))\n      m =\
    \ a;\n    else\n      m = b;\n    if(Math.abs(b - a) <= Math.abs(c - m))\n   \
    \   m = a;\n    else\n      m = b;\n  }\n  return m;\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2) return l[(len-1)/2]\n\
    \  return (l[len/2] + l[len/2-1])/2;\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2 === 0){\n \
    \   return l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) /\
    \ 2;\n  }\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a\
    \ - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n    return l[(len\
    \ / 2) - 1];\n  }\n  else{\n    return ((l[len / 2] + l[len / 2 - 1]) / 2);\n\
    \  }\n}\n", "    var l = l.sort(function(a, b){\n        return a - b;\n    });\n\
    \    var len = l.length;\n    if(len%2==0){\n        return l[(len/2) - 1];\n\
    \    }\n    else if(len%2==1){\n        return l[(len/2) - 2] + l[(len/2) - 1];\n\
    \    }\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a,\
    \ b, c);\n  if(m === a) if(m === b) if(m === c) return Math.min(a, b, c);\n  \
    \    else return Math.min(a, b);\n    else return Math.min(c);\n  else return\
    \ Math.max(m, Math.min(b, c));\n}", "  var l = l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var mid = l.length / 2;\n  return l[mid];\n}\n", "  var l =\
    \ l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var len =\
    \ l.length;\n  if(len%2==0){\n    return l[len/2];\n  }\n  else{\n    return (l[len/2]\
    \ + l[len/2-1])/2;\n  }\n}\n", "  return l.sort(function(a, b){\n    return a\
    \ - b;\n  }).slice(0, Math.floor(l.length / 2))[0] || 0;\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2 == 0){\n  \
    \  return l[(len/2)-1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2])/2;\n\
    \  }\n}\n", "  var l = l.slice(0),\n      n = l.length, \n      a = n%2 ? l[n/2-1]\
    \ : (l[n/2-1]+l[n/2])/2;\n  \n  if(n < 8){\n    return a;\n  }\n  \n  for(var\
    \ i = n>>1; i > 0; i--){\n    if(l[i] > a){\n      a = l[i];\n    }\n  }\n  return\
    \ a;\n}\n", "  var l = l || [];\n  if(l.length == 0) return undefined;\n  var\
    \ sorted = l.slice().sort(function(a, b){\n    return a - b;\n  });\n  var mid\
    \ = sorted.length / 2;\n  return sorted[mid];\n}\n", "    var l = l.slice();\n\
    \    l.sort(function(a, b){\n        return a - b;\n    });\n    var len = l.length;\n\
    \    if(len % 2){\n        return l[(len / 2) - 1];\n    }else{\n        return\
    \ (l[len / 2] + l[len / 2 - 1]) / 2;\n    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_131_digits
language: js
prompt: "//Given a positive integer n, return the product of the odd digits.\n// Return\
  \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
  // 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
  \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
  \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
  \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
completions: ["    var sum = 0;\n    while(n > 0){\n        sum += n % 10;\n     \
    \   n = Math.floor(n / 10);\n    }\n    return sum;\n}\n", "    var digits = 1;\n\
    \    while(n){\n        digits *= n % 2;\n        n /= 2;\n    }\n    return digits;\n\
    }\n", "  var sum = 0;\n  while (n){\n    sum += n % 2 ? 1 : 0\n    n = Math.floor(n\
    \ / 2)\n  }\n  return sum\n}\n", "\tif(n<0) return 0;\n\tif(n%2==0) return n*(n+1)/2;\n\
    \telse return n*(n-1)/2;\n}\n", "    var digits = 1;\n    while (n){\n       \
    \ digits *= n % 2;\n        n = Math.floor(n / 2);\n    }\n    return digits;\n\
    }\n", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\
    \tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return\
    \ n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000)\
    \ return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\
    \tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000)\
    \ return n*14;\n\tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000)\
    \ return n*16;\n\tif(n<100000000000000000) return n*17;\n\tif(n<100000000000000000)\
    \ return n*18;\n\tif(n<1000000000000000000) return n*19;\n\treturn 0;\n}\n", "\t\
    var digits = 1;\n\twhile(n){\n\t\tdigits *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn\
    \ digits;\n}\n", "  var result = 0;\n  while(n){\n    result *= 10;\n    result\
    \ += n % 10;\n    n /= 10;\n  }\n  return result;\n}\n", "  var product = 1;\n\
    \  while(n){\n    product *= n % 10;\n    n /= 10;\n  }\n  return product;\n}\n",
  "\tvar digits = 1;\n\twhile (n){\n\t\tdigits *= n % 10;\n\t\tn = Math.floor(n /\
    \ 10);\n\t}\n\treturn digits;\n}\n", "  var digits = 1;\n  while(n){\n    digits++;\n\
    \    n=Math.floor(n/10);\n  }\n  return digits;\n}\n", "\tif(n<10) return 1;\n\
    \tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\
    \tif(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return\
    \ n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000)\
    \ return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return\
    \ n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return n*14;\n\
    \tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000) return n*16;\n\
    \tif(n<100000000000000000) return n*17;\n\tif(n<1000000000000000010) return n*18;\n\
    \tif(n<10000000000000000100) return n*19;\n\tif(n<100000000000000001000) return\
    \ n*20;\n\tif(n<1000000000000000010000) return n*21;\n\tif(n<10000000000000000100000)\
    \ return n*22;\n\tif(n<100000000000000001000000) return n*23;\n\tif(n<1000000000000000010000000)\
    \ return n*24;\n\tif(n<10000000000000000100000000) return n*25;\n\tif(n<100000000000000001000000000)\
    \ return n*26;\n\tif(n<1000000000000000010000000000) return n*27;\n\tif(n<10000000000000000100000000000)\
    \ return n*28;\n\tif(n<100000000000000001000000000000) return n*29;\n\tif(n<1000000000000000010000000000000)\
    \ return n*30;\n\tif(n<10000000000000000100000000000000) return n*31;\n\tif(n<100000000000000001000000000000000)\
    \ return n*32;\n\tif(n<1000000000000000010000000000000000) return n*33;\n\tif(n<10000000000000000100000000000000000)\
    \ return n*34;\n\tif(n<100000000000000001000000000000000000) return n*35;\n\t\
    if(n<1000000000000000010000000000000000000) return n*36;\n\tif(n<10000000000000000100000000000000000000)\
    \ return n*37;\n\tif(n<100000000000000001000000000000000000000) return n*38;\n\
    \tif(n<1000000000000000010000000000000000000000) return n*39;\n\tif(n<10000000000000000100000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000001000000000000000000000000", "\tif(n<10)\
    \ return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000)\
    \ return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000)\
    \ return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\
    \tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000)\
    \ return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return\
    \ n*14;\n\tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000) return\
    \ n*16;\n\tif(n<100000000000000000) return n*17;\n\tif(n<1000000000000000010)\
    \ return n*18;\n\tif(n<10000000000000000100) return n*19;\n\tif(n<100000000000000001000)\
    \ return n*20;\n\tif(n<1000000000000000010000) return n*21;\n\tif(n<10000000000000000100000)\
    \ return n*22;\n\tif(n<100000000000000001000000) return n*23;\n\tif(n<1000000000000000010000000)\
    \ return n*24;\n\tif(n<10000000000000000100000000) return n*25;\n\tif(n<100000000000000001000000000)\
    \ return n*26;\n\tif(n<1000000000000000010000000000) return n*27;\n\tif(n<10000000000000000100000000000)\
    \ return n*28;\n\tif(n<100000000000000001000000000000) return n*29;\n\tif(n<1000000000000000010000000000000)\
    \ return n*30;\n\tif(n<10000000000000000100000000000000) return n*31;\n\tif(n<100000000000000001000000000000000)\
    \ return n*32;\n\tif(n<1000000000000000010000000000000000) return n*33;\n\tif(n<10000000000000000100000000000000000)\
    \ return n*34;\n\tif(n<100000000000000001000000000000000000) return n*35;\n\t\
    if(n<1000000000000000010000000000000000000) return n*36;\n\tif(n<10000000000000000100000000000000000000)\
    \ return n*37;\n\tif(n<100000000000000001000000000000000000000) return n*38;\n\
    \tif(n<1000000000000000010000000000000000000000) return n*39;\n\tif(n<10000000000000000100000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000001000000000000000000000000", "\tif(n<10)\
    \ return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000)\
    \ return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000)\
    \ return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\
    \tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000)\
    \ return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return\
    \ n*14;\n\tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000) return\
    \ n*16;\n\tif(n<100000000000000000) return n*17;\n\tif(n<1000000000000000010)\
    \ return n*18;\n\tif(n<10000000000000000100) return n*19;\n\tif(n<100000000000000001000)\
    \ return n*20;\n\tif(n<1000000000000000010000) return n*21;\n\tif(n<10000000000000000100000)\
    \ return n*22;\n\tif(n<100000000000000001000000) return n*23;\n\tif(n<1000000000000000010000000)\
    \ return n*24;\n\tif(n<10000000000000000100000000) return n*25;\n\tif(n<100000000000000001000000000)\
    \ return n*26;\n\tif(n<1000000000000000010000000000) return n*27;\n\tif(n<10000000000000000100000000000)\
    \ return n*28;\n\tif(n<100000000000000001000000000000) return n*29;\n\tif(n<1000000000000000010000000000000)\
    \ return n*30;\n\tif(n<10000000000000000100000000000000) return n*31;\n\tif(n<100000000000000001000000000000000)\
    \ return n*32;\n\tif(n<1000000000000000010000000000000000) return n*33;\n\tif(n<10000000000000000100000000000000000)\
    \ return n*34;\n\tif(n<100000000000000001000000000000000000) return n*35;\n\t\
    if(n<1000000000000000010000000000000000000) return n*36;\n\tif(n<10000000000000000100000000000000000000)\
    \ return n*37;\n\tif(n<100000000000000001000000000000000000000) return n*38;\n\
    \tif(n<1000000000000000010000000000000000000000) return n*39;\n\tif(n<10000000000000000100000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000001000000000000000000000000", "  var sum\
    \ = 0;\n  while(n){\n    sum += n % 10;\n    n = Math.floor(n / 10);\n  }\n  return\
    \ sum;\n}\n", "  var i = 1;\n  var product = 1;\n  while(i <= n){\n    product\
    \ *= n % 2;\n    i++;\n    n = Math.floor(n / 2);\n  }\n  return product;\n}\n",
  "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000)\
    \ return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000)\
    \ return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\
    \tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000)\
    \ return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return\
    \ n*14;\n\tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000) return\
    \ n*16;\n\tif(n<100000000000000000) return n*17;\n\tif(n<1000000000000000010)\
    \ return n*18;\n\tif(n<10000000000000000100) return n*19;\n\tif(n<100000000000000001000)\
    \ return n*20;\n\tif(n<1000000000000000010000) return n*21;\n\tif(n<10000000000000000100000)\
    \ return n*22;\n\tif(n<100000000000000001000000) return n*23;\n\tif(n<1000000000000000010000000)\
    \ return n*24;\n\tif(n<10000000000000000100000000) return n*25;\n\tif(n<100000000000000001000000000)\
    \ return n*26;\n\tif(n<1000000000000000010000000000) return n*27;\n\tif(n<10000000000000000100000000000)\
    \ return n*28;\n\tif(n<100000000000000001000000000000) return n*29;\n\tif(n<1000000000000000010000000000000)\
    \ return n*30;\n\tif(n<10000000000000000100000000000000) return n*31;\n\tif(n<100000000000000001000000000000000)\
    \ return n*32;\n\tif(n<1000000000000000010000000000000000) return n*33;\n\tif(n<10000000000000000100000000000000000)\
    \ return n*34;\n\tif(n<100000000000000001000000000000000000) return n*35;\n\t\
    if(n<1000000000000000010000000000000000000) return n*36;\n\tif(n<10000000000000000100000000000000000000)\
    \ return n*37;\n\tif(n<100000000000000001000000000000000000000) return n*38;\n\
    \tif(n<1000000000000000010000000000000000000000) return n*39;\n\tif(n<10000000000000000100000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000001000000000000000000000000", "  var digits\
    \ = n.toString().split('');\n  if(digits.length % 2 === 0){\n    return parseInt(digits.join(''),\
    \ 10);\n  }\n  else{\n    return 0;\n  }\n}\n", "  var digits = n.toString().split('')\n\
    \  digits.reverse()\n  var odd = digits.filter(function(d){\n    return d%2 ===\
    \ 1\n  })\n  return odd.length === 0 ? 0 : odd.reduce(function(a, b){\n    return\
    \ a*b\n  })\n}\n", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\tif(n<1000)\
    \ return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000)\
    \ return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return n*8;\n\t\
    if(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000)\
    \ return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return\
    \ n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000) return\
    \ n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000) return\
    \ n*17;\n\tif(n<100000000000000000) return n*18;\n\tif(n<1000000000000000000)\
    \ return n*19;\n}\n", "  var digits = n.toString().split('');\n  if(digits.length\
    \ % 2 === 0){\n    return parseInt(digits[digits.length-1]);\n  }\n  else{\n \
    \   return 0;\n  }\n}\n", "  var product = 1;\n  while(n){\n    product *= n %\
    \ 10;\n    n /= 10;\n  }\n  return product;\n}\n", "  var digits = 1;\n  while(n){\n\
    \    digits++;\n    n=Math.floor(n/10);\n  }\n  return digits;\n}\n", "\tif(n<0)\
    \ return 0;\n\tif(n%2==0) return n*(n+1)/2;\n\telse return n*(n+1)/2;\n}\n", "\t\
    if(n<10) return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000)\
    \ return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000)\
    \ return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\
    \tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000)\
    \ return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return\
    \ n*14;\n\tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000) return\
    \ n*16;\n\tif(n<100000000000000000) return n*17;\n\tif(n<1000000000000000010)\
    \ return n*18;\n\tif(n<10000000000000000100) return n*19;\n\tif(n<100000000000000001000)\
    \ return n*20;\n\tif(n<1000000000000000010000) return n*21;\n\tif(n<10000000000000000100000)\
    \ return n*22;\n\tif(n<100000000000000001000000) return n*23;\n\tif(n<1000000000000000010000000)\
    \ return n*24;\n\tif(n<10000000000000000100000000) return n*25;\n\tif(n<100000000000000001000000000)\
    \ return n*26;\n\tif(n<1000000000000000010000000000) return n*27;\n\tif(n<10000000000000000100000000000)\
    \ return n*28;\n\tif(n<100000000000000001000000000000) return n*29;\n\tif(n<1000000000000000010000000000000)\
    \ return n*30;\n\tif(n<10000000000000000100000000000000) return n*31;\n\tif(n<100000000000000001000000000000000)\
    \ return n*32;\n\tif(n<1000000000000000010000000000000000) return n*33;\n\tif(n<10000000000000000100000000000000000)\
    \ return n*34;\n\tif(n<100000000000000001000000000000000000) return n*35;\n\t\
    if(n<1000000000000000010000000000000000000) return n*36;\n\tif(n<10000000000000000100000000000000000000)\
    \ return n*37;\n\tif(n<100000000000000001000000000000000000000) return n*38;\n\
    \tif(n<1000000000000000010000000000000000000000) return n*39;\n\tif(n<100000000000000001000000000000000000000000)\
    \ return n*40;\n\tif(n<1000000000000000010000000000000000000000000) return ",
  "\tvar digits = 1;\n\twhile(n>0){\n\t\tdigits++;\n\t\tn--;\n\t}\n\treturn digits;\n\
    }\n", "  var digits = 1;\n  while (n){\n    digits *= n % 10;\n    n /= 10;\n\
    \  }\n  return digits;\n}\n", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\
    \tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\
    \tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return\
    \ n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000)\
    \ return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return\
    \ n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<10000000000000000) return\
    \ n*15;\n}\n", "\tvar digits = n.toString().split('');\n\tvar odd = [];\n\tfor(var\
    \ i = 0; i < digits.length; i++){\n\t\tif(digits[i] % 2 === 1){\n\t\t\todd.push(digits[i]);\n\
    \t\t}\n\t}\n\treturn odd.length === 0 ? 0 : Math.pow(10, digits.length - odd.length);\n\
    }\n", "  var digits = 1;\n  while (n){\n    digits *= n % 2;\n    n = Math.floor(n\
    \ / 2);\n  }\n  return digits;\n}\n", "\tvar digits = 1;\n\twhile(n>0){\n\t\t\
    if(n%2==1){\n\t\t\tdigits++;\n\t\t}\n\t\tn=Math.floor(n/2);\n\t}\n\treturn digits;\n\
    }\n", "    var product = 1;\n    while(n){\n        product *= n % 10;\n     \
    \   n /= 10;\n    }\n    return product;\n}\n", "\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<10000000000000000)\
    \ return n*15;\n\tif(n<100000000000000000) return n*16;\n\tif(n<1000000000000000000)\
    \ return n*17;\n\tif(n<10000000000000000000) return n*18;\n\tif(n<100000000000000000000)\
    \ return n*19;\n\tif(n<1000000000000000000000) return n*20;\n\tif(n<10000000000000000000000)\
    \ return n*21;\n\tif(n<1000000000000000000000000) return n*22;\n\tif(n<10000000000000000000000000)\
    \ return n*23;\n\tif(n<100000000000000000000000000) return n*24;\n\tif(n<1000000000000000000000000000)\
    \ return n*25;\n\tif(n<10000000000000000000000000000) return n*26;\n\tif(n<100000000000000000000000000000)\
    \ return n*27;\n\tif(n<1000000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000000) return n*32;\n\t\
    if(n<1000000000000000000000000000000000000) return n*33;\n\tif(n<10000000000000000000000000000000000000)\
    \ return n*34;\n\tif(n<100000000000000000000000000000000000000) return n*35;\n\
    \tif(n<10000000000000000000000000000000000000000) return n*36;\n\tif(n<100000000000000000000000000000000000000000)\
    \ return n*37;\n\tif(n<1000000000000000000000000000000000000000000) return n*38;\n\
    \tif(n<100000000000000000000000000000000000000000) return n*39;\n\tif(n<10000000000000000000000000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000000000000000000000000000000000) return n*41;\n\
    \tif(n<1000000000000000000000000000000000000000000000) return n*42;\n\tif(n<10000000000000000000000000000000000000000000000)\
    \ return n*", "    var digits = 1;\n    while (n){\n        digits *= n % 10;\n\
    \        n /= 10;\n    }\n    return digits;\n}\n", "    var digits = 1;\n   \
    \ while (n){\n        digits *= n % 2;\n        n = Math.floor(n/2);\n    }\n\
    \    return digits;\n}\n", "\tvar digits = 1;\n\twhile(n){\n\t\tdigits *= n %\
    \ 10;\n\t\tn /= 10;\n\t}\n\treturn digits;\n}\n", "  var digits = 1;\n  while\
    \ (n){\n    digits *= n % 2;\n    n = Math.floor(n / 2);\n  }\n  return digits;\n\
    }\n", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\
    \tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return\
    \ n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000)\
    \ return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\
    \tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000)\
    \ return n*14;\n\tif(n<10000000000000000) return n*15;\n}\n", "    var digits\
    \ = n.toString().split('');\n    var odd = [];\n    for(var i = 0; i < digits.length;\
    \ i++){\n        if(digits[i] % 2 === 1){\n            odd.push(digits[i]);\n\
    \        }\n    }\n    return odd.length === 0 ? 0 : Math.pow(10, odd.length);\n\
    }\n", "\tif(n<0) return 0;\n\tif(n%2==0) return n*(n+1)/2;\n\treturn n*Math.sqrt(n)*Math.sqrt(n+1)/2;\n\
    }\n", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\
    \tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return\
    \ n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000)\
    \ return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\
    \tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000)\
    \ return n*14;\n\tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000)\
    \ return n*16;\n\tif(n<100000000000000000) return n*17;\n\tif(n<100000000000000000)\
    \ return n*18;\n\tif(n<1000000000000000000) return n*19;\n\treturn 0;\n}\n", "\t\
    var digits = 1;\n\twhile (n > 0){\n\t\tdigits++;\n\t\tn /= 2;\n\t}\n\treturn digits;\n\
    }\n", "\tvar digits = 1;\n\twhile (n > 0){\n\t\tdigits *= n % 2;\n\t\tn = (n -\
    \ digits)/2;\n\t}\n\treturn digits;\n}\n", "  var sum = 0;\n  while(n){\n    sum\
    \ += n % 2 == 0 ? 0 : 1;\n    n = Math.floor(n / 10);\n  }\n  return sum;\n}\n",
  "  if(n < 0) return 0;\n  if(n == 0) return 1;\n  if(n == 1) return 1;\n  if(n ==\
    \ 2) return 2;\n  if(n == 3) return 3;\n  if(n == 4) return 6;\n  if(n == 5) return\
    \ 9;\n  if(n == 6) return 18;\n  if(n == 7) return 27;\n  if(n == 8) return 48;\n\
    \  if(n == 9) return 71;\n  if(n == 10) return 144;\n  if(n == 11) return 145;\n\
    \  if(n == 12) return 148;\n  if(n == 13) return 153;\n  if(n == 14) return 157;\n\
    \  if(n == 15) return 159;\n  if(n == 16) return 252;\n  if(n == 17) return 253;\n\
    \  if(n == 18) return 254;\n  if(n == 19) return 255;\n  if(n == 20) return 256;\n\
    \  if(n == 21) return 258;\n  if(n == 22) return 259;\n  if(n == 23) return 261;\n\
    \  if(n == 24) return 262;\n  if(n == 25) return 263;\n  if(n == 26) return 264;\n\
    \  if(n == 27) return 265;\n  if(n == 28) return 266;\n  if(n == 29) return 267;\n\
    \  if(n == 30) return 268;\n  if(n == 31) return 269;\n  if(n == 32) return 270;\n\
    \  if(n == 33) return 271;\n  if(n == 34) return 272;\n  if(n == 35) return 273;\n\
    \  if(n == 36) return 274;\n  if(n == 37) return 275;\n  if(n == 38) return 276;\n\
    \  if(n == 39) return 277;\n  if(n == 40) return 278;\n  if(n == 41) return 279;\n\
    \  if(n == 42) return 280;\n  if(n == 43) return 281;\n  if(n == 44) return 282;\n\
    \  if(n == 45) return 283;\n  if(n == 46) return 284;\n  if(n == 47) return 285;\n\
    \  if(n == 48) return 286;\n  if(n == 49) return 287;\n  if(n == 50) return 288;\n\
    \  if(n == 51) return 289;\n  if(n == 52) return 290;\n  if(n == 53) return 291;\n\
    \  if(n == 54) return 292;\n  if(n == 55) return 293;\n  if(n == 56) return 294;\n\
    \  if(n == 57) return 295;\n  if(n == ", "  var digits = n.toString().split('')\n\
    \  digits.reverse()\n  for(var i=0;i<digits.length;i++){\n    if(digits[i] % 2\
    \ === 0){\n      return 0\n    }\n  }\n  return parseInt(digits.join(''))\n}\n",
  "    var sum = 0;\n    while(n > 0){\n        sum += n % 10;\n        n = Math.floor(n\
    \ / 10);\n    }\n    return sum;\n}\n", "  if(n<10) return 1;\n  if(n<100) return\
    \ n*2;\n  if(n<1000) return n*3;\n  if(n<10000) return n*4;\n  if(n<100000) return\
    \ n*5;\n  if(n<1000000) return n*6;\n  if(n<10000000) return n*7;\n  if(n<100000000)\
    \ return n*8;\n  if(n<1000000000) return n*9;\n  if(n<10000000000) return n*10;\n\
    \  if(n<100000000000) return n*11;\n  if(n<1000000000000) return n*12;\n  if(n<10000000000000)\
    \ return n*13;\n  if(n<100000000000000) return n*14;\n  if(n<10000000000000000)\
    \ return n*15;\n  if(n<100000000000000000) return n*16;\n  if(n<1000000000000000000)\
    \ return n*17;\n  if(n<10000000000000000000) return n*18;\n  if(n<100000000000000000000)\
    \ return n*19;\n  if(n<1000000000000000000000) return n*20;\n  if(n<10000000000000000000000)\
    \ return n*21;\n  if(n<1000000000000000000000000) return n*22;\n  if(n<10000000000000000000000000)\
    \ return n*23;\n  if(n<100000000000000000000000000) return n*24;\n  if(n<1000000000000000000000000000)\
    \ return n*25;\n  if(n<10000000000000000000000000000) return n*26;\n  if(n<100000000000000000000000000000)\
    \ return n*27;\n  if(n<1000000000000000000000000000000) return n*28;\n  if(n<100000000000000000000000000000000)\
    \ return n*29;\n  if(n<1000000000000000000000000000000000) return n*30;\n  if(n<10000000000000000000000000000000000)\
    \ return n*31;\n  if(n<100000000000000000000000000000000000) return n*32;\n  if(n<1000000000000000000000000000000000000)\
    \ return n*33;\n  if(n<10000000000000000000000000000000000000) return n*34;\n\
    \  if(n<100000000000000000000000000000000000000) return n*35;\n  if(n<10000000000000000000000000000000000000000)\
    \ return n*36;\n  if(n<100000000000000000000000000000000000000000) return n*37;\n\
    \  if(n<1000000000000000000000000000000000000000000) return n*38;\n  if(n<100000000000000000000000000000000000000000)\
    \ return n*39;\n  if(n<10000000000000000000000000000000000000000000) return n*40;\n\
    \  if(n<100000000000000000000000000000000000000000000) return n*41;\n  if(n<1000000000000000000000000000000000000000000000)\
    \ return n*42;\n  if(n<10000000000000000000000000000000000000000000000) return\
    \ n*", "  if(n < 0){\n    return 0;\n  }\n  var result = 0;\n  while(n){\n   \
    \ if(n % 2 == 1){\n      result += 1;\n    }\n    n = Math.floor(n / 2);\n  }\n\
    \  return result;\n}\n", "\tvar product = 1;\n\twhile(n){\n\t\tproduct *= n %\
    \ 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n", "\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n", "\tvar sum = 0;\n\
    \twhile(n){\n\t\tsum += n % 2 ? 1 : -1;\n\t\tn = Math.floor(n / 10);\n\t}\n\t\
    return sum;\n}\n", "\tvar digits = 1;\n\twhile (n > 0){\n\t\tdigits *= n % 10;\n\
    \t\tn /= 10;\n\t}\n\treturn digits;\n}\n", "  var product = 1;\n  while(n){\n\
    \    product *= n % 10;\n    n /= 10;\n  }\n  return product;\n}\n", "    var\
    \ product = 1;\n    while(n){\n        product *= n % 2;\n        n /= 2;\n  \
    \  }\n    return product;\n}\n", "\tvar product = 1;\n\twhile(n){\n\t\tproduct\
    \ *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n", "  var digits = 1;\n \
    \ while (n){\n    digits *= n % 10;\n    n /= 10;\n  }\n  return digits;\n}\n",
  "  var digits = n.toString().split('');\n  var oddDigits = digits.filter(function(d){\n\
    \    return d % 2 === 1;\n  });\n  return oddDigits.length ? parseInt(oddDigits.join(''),\
    \ 10) : n;\n}\n", "    var digits = 1;\n    while(n){\n        digits *= n % 10;\n\
    \        n /= 10;\n    }\n    return digits;\n}\n", "\tvar product = 1;\n\twhile\
    \ (n > 0){\n\t\tproduct = product * n % 10;\n\t\tn = Math.floor(n / 10);\n\t}\n\
    \treturn product;\n}\n", "  var product = 1;\n  while(n){\n    product *= n %\
    \ 10;\n    n /= 10;\n  }\n  return product;\n}\n", "    var sum = 0;\n    while(n){\n\
    \        sum += n % 2 ? 1 : 0\n        n = Math.floor(n / 2)\n    }\n    return\
    \ sum\n}\n", "\tvar digits = 1;\n\twhile(n){\n\t\tdigits *= n % 2;\n\t\tn /= 2;\n\
    \t}\n\treturn digits;\n}\n", "  if(n < 0) return 0;\n  if(n == 0) return 1;\n\
    \  if(n == 1) return 1;\n  if(n == 2) return 2;\n  if(n == 3) return 3;\n  if(n\
    \ == 4) return 4;\n  if(n == 5) return 6;\n  if(n == 6) return 9;\n  if(n == 7)\
    \ return 12;\n  if(n == 8) return 15;\n  if(n == 9) return 21;\n  if(n == 10)\
    \ return 28;\n  if(n == 11) return 45;\n  if(n == 12) return 60;\n  if(n == 13)\
    \ return 91;\n  if(n == 14) return 123;\n  if(n == 15) return 159;\n  if(n ==\
    \ 16) return 184;\n  if(n == 17) return 243;\n  if(n == 18) return 278;\n  if(n\
    \ == 19) return 323;\n  if(n == 20) return 384;\n  if(n == 21) return 439;\n \
    \ if(n == 22) return 584;\n  if(n == 23) return 649;\n  if(n == 24) return 734;\n\
    \  if(n == 25) return 809;\n  if(n == 26) return 974;\n  if(n == 27) return 1059;\n\
    \  if(n == 28) return 1154;\n  if(n == 29) return 1259;\n  if(n == 30) return\
    \ 1354;\n  if(n == 31) return 1459;\n  if(n == 32) return 1554;\n  if(n == 33)\
    \ return 1659;\n  if(n == 34) return 1754;\n  if(n == 35) return 1859;\n  if(n\
    \ == 36) return 1954;\n  if(n == 37) return 2054;\n  if(n == 38) return 2159;\n\
    \  if(n == 39) return 2254;\n  if(n == 40) return 2355;\n  if(n == 41) return\
    \ 2459;\n  if(n == 42) return 2554;\n  if(n == 43) return 2659;\n  if(n == 44)\
    \ return 2754;\n  if(n == 45) return 2854;\n  if(n == 46) return 2959;\n  if(n\
    \ == 47) return 3054;\n  if(n == 48) return 3159;\n  if(n == 49) return 3254;\n\
    \  if(n == 50) return 3359;\n  if(n == 51) return 3454;\n  if(n == 52) return\
    \ 3559;\n  if(n == 53) return 3654;\n  if(n == 54) return 3759;\n  if(n == 55)\
    \ return 3844;\n", "\tvar digits = 1;\n\twhile (n){\n\t\tdigits *= n % 10;\n\t\
    \tn /= 10;\n\t}\n\treturn digits;\n}\n", "\tif(n<10) return 1;\n\tif(n<100) return\
    \ n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000) return\
    \ n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<10000000000000000)\
    \ return n*15;\n\tif(n<100000000000000000) return n*16;\n\tif(n<1000000000000000000)\
    \ return n*17;\n\tif(n<10000000000000000000) return n*18;\n\tif(n<100000000000000000000)\
    \ return n*19;\n\tif(n<1000000000000000000000) return n*20;\n\tif(n<10000000000000000000000)\
    \ return n*21;\n\tif(n<1000000000000000000000000) return n*22;\n\tif(n<10000000000000000000000000)\
    \ return n*23;\n\tif(n<100000000000000000000000000) return n*24;\n\tif(n<1000000000000000000000000000)\
    \ return n*25;\n\tif(n<10000000000000000000000000000) return n*26;\n\tif(n<100000000000000000000000000000)\
    \ return n*27;\n\tif(n<1000000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000000) return n*32;\n\t\
    if(n<1000000000000000000000000000000000000) return n*33;\n\tif(n<10000000000000000000000000000000000000)\
    \ return n*34;\n\tif(n<100000000000000000000000000000000000000) return n*35;\n\
    \tif(n<10000000000000000000000000000000000000000) return n*36;\n\tif(n<100000000000000000000000000000000000000000)\
    \ return n*37;\n\tif(n<1000000000000000000000000000000000000000000) return n*38;\n\
    \tif(n<100000000000000000000000000000000000000000) return n*39;\n\tif(n<10000000000000000000000000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000000000000000000000000000000000) return n*41;\n\
    \tif(n<1000000000000000000000000000000000000000000000) return n*42;\n\tif(n<10000000000000000000000000000000000000000000000)\
    \ return n*", "  if(n<10) return 1;\n  if(n<100) return n*2;\n  if(n<1000) return\
    \ n*3;\n  if(n<10000) return n*4;\n  if(n<100000) return n*5;\n  if(n<1000000)\
    \ return n*6;\n  if(n<10000000) return n*7;\n  if(n<100000000) return n*8;\n \
    \ if(n<1000000000) return n*9;\n  if(n<10000000000) return n*10;\n  if(n<100000000000)\
    \ return n*11;\n  if(n<1000000000000) return n*12;\n  if(n<10000000000000) return\
    \ n*13;\n  if(n<100000000000000) return n*14;\n  if(n<10000000000000000) return\
    \ n*15;\n  if(n<100000000000000000) return n*16;\n  if(n<1000000000000000000)\
    \ return n*17;\n  if(n<10000000000000000000) return n*18;\n  if(n<100000000000000000000)\
    \ return n*19;\n  if(n<1000000000000000000000) return n*20;\n  if(n<10000000000000000000000)\
    \ return n*21;\n  if(n<1000000000000000000000000) return n*22;\n  if(n<10000000000000000000000000)\
    \ return n*23;\n  if(n<100000000000000000000000000) return n*24;\n  if(n<1000000000000000000000000000)\
    \ return n*25;\n  if(n<10000000000000000000000000000) return n*26;\n  if(n<100000000000000000000000000000)\
    \ return n*27;\n  if(n<1000000000000000000000000000000) return n*28;\n  if(n<100000000000000000000000000000000)\
    \ return n*29;\n  if(n<1000000000000000000000000000000000) return n*30;\n  if(n<10000000000000000000000000000000000)\
    \ return n*31;\n  if(n<100000000000000000000000000000000000) return n*32;\n  if(n<1000000000000000000000000000000000000)\
    \ return n*33;\n  if(n<10000000000000000000000000000000000000) return n*34;\n\
    \  if(n<100000000000000000000000000000000000000) return n*35;\n  if(n<10000000000000000000000000000000000000000)\
    \ return n*36;\n  if(n<100000000000000000000000000000000000000000) return n*37;\n\
    \  if(n<1000000000000000000000000000000000000000000) return n*38;\n  if(n<100000000000000000000000000000000000000000)\
    \ return n*39;\n  if(n<10000000000000000000000000000000000000000000) return n*40;\n\
    \  if(n<100000000000000000000000000000000000000000000) return n*41;\n  if(n<1000000000000000000000000000000000000000000000)\
    \ return n*42;\n  if(n<10000000000000000000000000000000000000000000000) return\
    \ n*", "  var product = 1;\n  while(n){\n    product *= n % 2;\n    n /= 2;\n\
    \  }\n  return product;\n}\n", "    var digits = 1;\n    while (n){\n        digits++;\n\
    \        n /= 2;\n    }\n    return digits;\n}\n", "  var product = 1;\n  while\
    \ (n){\n    product *= n % 2;\n    n /= 2;\n  }\n  return product;\n}\n", "  var\
    \ sum = 0;\n  while(n){\n    sum += n % 2 ? 1 : 0\n    n = Math.floor(n / 2)\n\
    \  }\n  return sum\n}\n", "\tvar digits = 1;\n\twhile(n){\n\t\tdigits *= n % 2;\n\
    \t\tn /= 2;\n\t}\n\treturn digits;\n}\n", "    var product = 1;\n    while(n){\n\
    \        product *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\n",
  "  var sum = 0;\n  while (n){\n    sum += n % 2 ? 1 : 2;\n    n = Math.floor(n /\
    \ 10);\n  }\n  return sum;\n}\n", "  var digits = 1;\n  while (n){\n    digits\
    \ *= n % 10;\n    n = Math.floor(n / 10);\n  }\n  return digits;\n}\n", "    var\
    \ digits = \"\";\n    for(var i = n; i > 0; i /= 2){\n        digits += String.fromCharCode(i);\n\
    \    }\n    return digits;\n}\n", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\
    \tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\
    \tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return\
    \ n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000)\
    \ return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return\
    \ n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000) return\
    \ n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000) return\
    \ n*17;\n\tif(n<1000000000000000000) return n*18;\n\tif(n<10000000000000000000)\
    \ return n*19;\n\tif(n<100000000000000000000) return n*20;\n\tif(n<1000000000000000000000)\
    \ return n*21;\n\tif(n<10000000000000000000000) return n*22;\n\tif(n<100000000000000000000000)\
    \ return n*23;\n\tif(n<1000000000000000000000000) return n*24;\n\tif(n<10000000000000000000000000)\
    \ return n*25;\n\tif(n<100000000000000000000000000) return n*26;\n\tif(n<1000000000000000000000000000)\
    \ return n*27;\n\tif(n<10000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000) return n*32;\n\tif(n<1000000000000000000000000000000000)\
    \ return n*33;\n\tif(n<10000000000000000000000000000000000) return n*34;\n\tif(n<100000000000000000000000000000000000)\
    \ return n*35;\n\tif(n<1000000000000000000000000000000000000) return n*36;\n\t\
    if(n<10000000000000000000000000000000000000) return n*37;\n\tif(n<100000000000000000000000000000000000000)\
    \ return n*38;\n\tif(n<1000000000000000000000000000000000000000) return n*39;\n\
    \tif(n<10000000000000000000000000000000000000000) return n*40;\n\tif(n<100000000000000000000000000000000000000000)\
    \ return n*41;\n\tif(n<1000000000000000000000000000000000000000000) return n*42;\n\
    \tif(n<10000000000000000000000000000000000000000000) return n*43;\n", "    var\
    \ digits = n.toString().split('');\n    var odd = [];\n    for(var i = 0; i <\
    \ digits.length; i++){\n        if(digits[i] % 2 === 1){\n            odd.push(digits[i]);\n\
    \        }\n    }\n    return odd.length === 0 ? 0 : Math.pow(10, Math.max(odd.length,\
    \ 1));\n}\n", "    var digits = 1;\n    while (n){\n        digits *= n % 10;\n\
    \        n /= 10;\n    }\n    return digits;\n}\n", "  var product = 1;\n  while(n){\n\
    \    product *= n % 2;\n    n /= 2;\n  }\n  return product;\n}", "\tif(n<0) return\
    \ 0;\n\tif(n%2==0) return n*digits(n/2);\n\treturn digits(n/2)*3+1;\n}\n", " \
    \ var product = 1;\n  while(n){\n    product *= n % 2;\n    n /= 2;\n  }\n  return\
    \ product;\n}\n", "  var result = 0;\n  while(n){\n    if(n % 2 == 1){\n     \
    \ result *= 2;\n    }\n    n /= 2;\n  }\n  return result;\n}\n", "\tvar digits\
    \ = 1;\n\twhile(n){\n\t\tdigits *= n % 10;\n\t\tn /= 10;\n\t}\n\treturn digits;\n\
    }\n", "  var digits = n.toString().split('');\n  if(digits.length < 2){\n    return\
    \ 0;\n  }\n  var odd = digits.pop();\n  for(var i = 0; i < (digits.length - 1);\
    \ i++){\n    if(digits[i] % 2 != 0){\n      return 0;\n    }\n  }\n  return parseInt(odd,\
    \ 10);\n}\n", "  var product = 1;\n  while (n){\n    product *= n % 2;\n    n\
    \ /= 2;\n  }\n  return product;\n}\n", "  var i = 1;\n  var result = 0;\n  while(i<n){\n\
    \    result *= 2;\n    i++;\n  }\n  return result;\n}\n", "\tif(n<10) return 1;\n\
    \tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\
    \tif(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return\
    \ n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000)\
    \ return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return\
    \ n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return n*14;\n\
    \tif(n<10000000000000000) return n*15;\n}\n", "\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 10;\n\t\tn /= 10;\n\t}\n\treturn product;\n}\n", "\tvar product\
    \ = 1;\n\twhile (n>0){\n\t\tproduct = product*(n%10);\n\t\tn = Math.floor(n/10);\n\
    \t}\n\treturn product;\n}\n", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\
    \tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\
    \tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return\
    \ n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000)\
    \ return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return\
    \ n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000) return\
    \ n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000) return\
    \ n*17;\n\tif(n<1000000000000000000) return n*18;\n\tif(n<10000000000000000000)\
    \ return n*19;\n\tif(n<100000000000000000000) return n*20;\n\tif(n<1000000000000000000000)\
    \ return n*21;\n\tif(n<10000000000000000000000) return n*22;\n\tif(n<100000000000000000000000)\
    \ return n*23;\n\tif(n<1000000000000000000000000) return n*24;\n\tif(n<10000000000000000000000000)\
    \ return n*25;\n\tif(n<100000000000000000000000000) return n*26;\n\tif(n<1000000000000000000000000000)\
    \ return n*27;\n\tif(n<10000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000) return n*32;\n\tif(n<1000000000000000000000000000000000)\
    \ return n*33;\n\tif(n<1000000000000000000000000000000000) return n*34;\n\tif(n<10000000000000000000000000000000000)\
    \ return n*35;\n\tif(n<100000000000000000000000000000000000) return n*36;\n\t\
    if(n<1000000000000000000000000000000000000) return n*37;\n\tif(n<10000000000000000000000000000000000000)\
    \ return n*38;\n\tif(n<100000000000000000000000000000000000000) return n*39;\n\
    \tif(n<1000000000000000000000000000000000000000) return n*40;\n\tif(n<10000000000000000000000000000000000000000)\
    \ return n*41;\n\tif(n<100000000000000000000000000000000000000000) return n*42;\n\
    \tif(n<100000000000000000000000000000000000000000) return n*43;\n\tif", "  var\
    \ digits = n.toString().split('');\n  if(digits.length < 2){\n    return 0;\n\
    \  }\n  if(digits.length % 2 === 0){\n    return parseInt(digits[digits.length-1]);\n\
    \  }\n  else{\n    return parseInt(digits[digits.length-1]) * 2;\n  }\n}\n", " \
    \ var digits = n.toString().split('');\n  if(digits.length % 2 === 0){\n    return\
    \ parseInt(digits.join(''));\n  }\n  return 0;\n}\n", "  var digits = \"\";\n\
    \  for(var i = n; i > 0; i /= 2){\n    digits += String.fromCharCode(i%10);\n\
    \  }\n  return digits;\n}\n", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\
    \tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\
    \tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return\
    \ n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000)\
    \ return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return\
    \ n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<10000000000000000) return\
    \ n*15;\n\tif(n<100000000000000000) return n*16;\n\tif(n<1000000000000000000)\
    \ return n*17;\n\tif(n<10000000000000000000) return n*18;\n\tif(n<100000000000000000000)\
    \ return n*19;\n\tif(n<1000000000000000000000) return n*20;\n\tif(n<10000000000000000000000)\
    \ return n*21;\n\tif(n<1000000000000000000000000) return n*22;\n\tif(n<10000000000000000000000000)\
    \ return n*23;\n\tif(n<100000000000000000000000000) return n*24;\n\tif(n<1000000000000000000000000000)\
    \ return n*25;\n\tif(n<10000000000000000000000000000) return n*26;\n\tif(n<100000000000000000000000000000)\
    \ return n*27;\n\tif(n<1000000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000000) return n*32;\n\t\
    if(n<1000000000000000000000000000000000000) return n*33;\n\tif(n<10000000000000000000000000000000000000)\
    \ return n*34;\n\tif(n<100000000000000000000000000000000000000) return n*35;\n\
    \tif(n<10000000000000000000000000000000000000000) return n*36;\n\tif(n<100000000000000000000000000000000000000000)\
    \ return n*37;\n\tif(n<1000000000000000000000000000000000000000000) return n*38;\n\
    \tif(n<100000000000000000000000000000000000000000) return n*39;\n\tif(n<10000000000000000000000000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000000000000000000000000000000000) return n*41;\n\
    \tif(n<1000000000000000000000000000000000000000000000) return n*42;\n\tif(n<10000000000000000000000000000000000000000000000)\
    \ return n*", "\tvar digits = 1;\n\twhile(n>0){\n\t\tdigits++;\n\t\tn--;\n\t}\n\
    \treturn digits;\n}\n", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\tif(n<1000)\
    \ return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000)\
    \ return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return n*8;\n\t\
    if(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000)\
    \ return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return\
    \ n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<10000000000000000) return\
    \ n*15;\n\tif(n<100000000000000000) return n*16;\n\tif(n<1000000000000000000)\
    \ return n*17;\n\tif(n<10000000000000000000) return n*18;\n\tif(n<100000000000000000000)\
    \ return n*19;\n\tif(n<1000000000000000000000) return n*20;\n\tif(n<10000000000000000000000)\
    \ return n*21;\n\tif(n<1000000000000000000000000) return n*22;\n\tif(n<10000000000000000000000000)\
    \ return n*23;\n\tif(n<100000000000000000000000000) return n*24;\n\tif(n<1000000000000000000000000000)\
    \ return n*25;\n\tif(n<10000000000000000000000000000) return n*26;\n\tif(n<100000000000000000000000000000)\
    \ return n*27;\n\tif(n<1000000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000000) return n*32;\n\t\
    if(n<1000000000000000000000000000000000000) return n*33;\n\tif(n<10000000000000000000000000000000000000)\
    \ return n*34;\n\tif(n<100000000000000000000000000000000000000) return n*35;\n\
    \tif(n<10000000000000000000000000000000000000000) return n*36;\n\tif(n<100000000000000000000000000000000000000000)\
    \ return n*37;\n\tif(n<1000000000000000000000000000000000000000000) return n*38;\n\
    \tif(n<100000000000000000000000000000000000000000) return n*39;\n\tif(n<10000000000000000000000000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000000000000000000000000000000000) return n*41;\n\
    \tif(n<1000000000000000000000000000000000000000000000) return n*42;\n\tif(n<10000000000000000000000000000000000000000000000)\
    \ return n*", "  var digits = n.toString().split('')\n    , len = digits.length\n\
    \    , prod = 0\n    , mult = 1\n    ;\n  while(len--){\n    prod *= parseInt(digits[len],\
    \ 10);\n    mult++;\n  }\n  return prod * mult;\n}\n", "    var result = 0;\n\
    \    while(n){\n        result *= 10;\n        result += n % 10;\n        n /=\
    \ 10;\n    }\n    return result;\n}\n", "    var digits = \"\";\n    while(n>0){\n\
    \        digits+=(n%2==1?'1':'');\n        n=Math.floor(n/2);\n    }\n    return\
    \ digits;\n}\n", "  var digits = 1;\n  while (n>0){\n    digits++;\n    n=n%10;\n\
    \  }\n  return digits;\n}\n", "  var product = 1;\n  while(n){\n    product *=\
    \ n % 10;\n    n /= 10;\n  }\n  return product;\n}\n", "  var sum = 0;\n  while(n){\n\
    \    sum += n % 2 ? 1 : 0; //add digit\n    n /= 2;\n  }\n  return sum;\n}\n",
  "    var digits = \"\";\n    for(var i = n; i > 0; i--){\n        digits = digits+(i%2==1?'':i);\n\
    \    }\n    return digits;\n}\n", "  var digits = 1;\n  while (n){\n    digits++;\n\
    \    n /= 2;\n  }\n  return digits;\n}\n", "\tvar digits = 1;\n\twhile (n>0){\n\
    \t\tdigits++;\n\t\tn--;\n\t}\n\treturn digits;\n}\n", "\tvar product = 1;\n\t\
    while(n){\n\t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n", "\t\
    if(n<10) return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000)\
    \ return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000)\
    \ return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\
    \tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000)\
    \ return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return\
    \ n*14;\n\tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000) return\
    \ n*16;\n\tif(n<100000000000000000) return n*17;\n\tif(n<100000000000000000) return\
    \ n*18;\n\tif(n<1000000000000000000) return n*19;\n\treturn 0;\n}\n", "\tvar product\
    \ = 1;\n\twhile (n > 0){\n\t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n\
    }\n", "    var sum = 0;\n    while(n){\n        sum += n % 2 == 1 ? 0 : 1;\n \
    \       n = Math.floor(n / 10);\n    }\n    return sum;\n}\n", "  if(n<10) return\
    \ 1;\n  if(n<100) return n*2;\n  if(n<1000) return n*3;\n  if(n<10000) return\
    \ n*4;\n  if(n<100000) return n*5;\n  if(n<1000000) return n*6;\n  if(n<10000000)\
    \ return n*7;\n  if(n<100000000) return n*8;\n  if(n<1000000000) return n*9;\n\
    \  if(n<10000000000) return n*10;\n  if(n<100000000000) return n*11;\n  if(n<1000000000000)\
    \ return n*12;\n  if(n<10000000000000) return n*13;\n  if(n<100000000000000) return\
    \ n*14;\n  if(n<10000000000000000) return n*15;\n  if(n<100000000000000000) return\
    \ n*16;\n  if(n<1000000000000000000) return n*17;\n  if(n<10000000000000000000)\
    \ return n*18;\n  if(n<100000000000000000000) return n*19;\n  if(n<1000000000000000000000)\
    \ return n*20;\n  if(n<10000000000000000000000) return n*21;\n  if(n<1000000000000000000000000)\
    \ return n*22;\n  if(n<10000000000000000000000000) return n*23;\n  if(n<100000000000000000000000000)\
    \ return n*24;\n  if(n<1000000000000000000000000000) return n*25;\n  if(n<10000000000000000000000000000)\
    \ return n*26;\n  if(n<100000000000000000000000000000) return n*27;\n  if(n<1000000000000000000000000000000)\
    \ return n*28;\n  if(n<100000000000000000000000000000000) return n*29;\n  if(n<1000000000000000000000000000000000)\
    \ return n*30;\n  if(n<10000000000000000000000000000000000) return n*31;\n  if(n<100000000000000000000000000000000000)\
    \ return n*32;\n  if(n<1000000000000000000000000000000000000) return n*33;\n \
    \ if(n<10000000000000000000000000000000000000) return n*34;\n  if(n<100000000000000000000000000000000000000)\
    \ return n*35;\n  if(n<10000000000000000000000000000000000000000) return n*36;\n\
    \  if(n<100000000000000000000000000000000000000000) return n*37;\n  if(n<1000000000000000000000000000000000000000000)\
    \ return n*38;\n  if(n<100000000000000000000000000000000000000000) return n*39;\n\
    \  if(n<10000000000000000000000000000000000000000000) return n*40;\n  if(n<100000000000000000000000000000000000000000000)\
    \ return n*41;\n  if(n<1000000000000000000000000000000000000000000000) return\
    \ n*42;\n  if(n<10000000000000000000000000000000000000000000000) return n*", "\t\
    var product = 1;\n\twhile(n){\n\t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn\
    \ product;\n}\n", "\tvar product = 1;\n\twhile(n){\n\t\tproduct *= n % 10;\n\t\
    \tn /= 10;\n\t}\n\treturn product;\n}\n", "  var product = 1;\n  while(n){\n \
    \   product *= n % 2;\n    n /= 2;\n  }\n  return product;\n}\n", "  var sum =\
    \ 0;\n  while(n){\n    sum += n % 2 ? 1 : 0\n    n = Math.floor(n / 2)\n  }\n\
    \  return sum\n}\n", "  var sum = 0;\n  while(n > 0){\n    sum += n % 2;\n   \
    \ n = Math.floor(n / 2);\n  }\n  return sum;\n}\n", "\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\telse return n*(n-1)/2;\n}\n", "  var i = 1;\n  var product\
    \ = 1;\n  while(i<n){\n    product = product*(i%2);\n    i++;\n  }\n  return product;\n\
    }\n", "\tif(n<0) return 0;\n\tif(n==0) return 1;\n\tif(n%2==0) return digits(n/2);\n\
    \treturn digits(n/2)+digits(n%2);\n}\n", "  var digits = 1;\n  while (n){\n  \
    \  digits *= n % 2;\n    n = Math.floor(n / 2);\n  }\n  return digits;\n}\n",
  "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000)\
    \ return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000)\
    \ return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\
    \tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000)\
    \ return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return\
    \ n*14;\n\tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000) return\
    \ n*16;\n\tif(n<100000000000000000) return n*17;\n\tif(n<1000000000000000000)\
    \ return n*18;\n\tif(n<10000000000000000000) return n*19;\n\tif(n<100000000000000000000)\
    \ return n*20;\n\tif(n<1000000000000000000000) return n*21;\n\tif(n<10000000000000000000000)\
    \ return n*22;\n\tif(n<100000000000000000000000) return n*23;\n\tif(n<1000000000000000000000000)\
    \ return n*24;\n\tif(n<10000000000000000000000000) return n*25;\n\tif(n<100000000000000000000000000)\
    \ return n*26;\n\tif(n<1000000000000000000000000000) return n*27;\n\tif(n<10000000000000000000000000000)\
    \ return n*28;\n\tif(n<100000000000000000000000000000) return n*29;\n\tif(n<1000000000000000000000000000000)\
    \ return n*30;\n\tif(n<10000000000000000000000000000000) return n*31;\n\tif(n<100000000000000000000000000000000)\
    \ return n*32;\n\tif(n<1000000000000000000000000000000000) return n*33;\n\tif(n<1000000000000000000000000000000000)\
    \ return n*34;\n\tif(n<10000000000000000000000000000000000) return n*35;\n\tif(n<100000000000000000000000000000000000)\
    \ return n*36;\n\tif(n<1000000000000000000000000000000000000) return n*37;\n\t\
    if(n<10000000000000000000000000000000000000) return n*38;\n\tif(n<100000000000000000000000000000000000000)\
    \ return n*39;\n\tif(n<1000000000000000000000000000000000000000) return n*40;\n\
    \tif(n<10000000000000000000000000000000000000000) return n*41;\n\tif(n<100000000000000000000000000000000000000000)\
    \ return n*42;\n\tif(n<100000000000000000000000000000000000000000) return n*43;\n\
    \tif", "\tif(n<0) return 0;\n\tif(n%2==0) return n*(n-1);\n\telse return n*(n-1);\n\
    }\n", "  var digits = \"\";\n  while(n){\n    digits += n % 2 == 0 ? parseInt(n/2,10)\
    \ : n % 2 == 1 ? parseInt(n/10) : parseInt(n/10);\n    n = parseInt(n/10);\n \
    \ }\n  return digits;\n}\n", "  var product = 1;\n  while(n){\n    product *=\
    \ n % 10;\n    n /= 10;\n  }\n  return product;\n}\n", "  var i = 1;\n  var product\
    \ = 1;\n  while(n){\n    if(n % 2 == 1){\n      product *= 2;\n      n /= 2;\n\
    \    }else{\n      product *= n % 10;\n      n /= 10;\n    }\n    i++;\n  }\n\
    \  return product;\n}\n", "\tvar digits = 1;\n\twhile(n){\n\t\tdigits *= n % 2;\n\
    \t\tn /= 2;\n\t}\n\treturn digits;\n}\n", "  var digits = n.toString().split('');\n\
    \  if(digits.length % 2 === 0){\n    return parseInt(digits[digits.length-1]);\n\
    \  }\n  else{\n    return 0;\n  }\n}\n", "\tif(n<10) return 1;\n\tif(n<100) return\
    \ n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000) return\
    \ n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<10000000000000000)\
    \ return n*15;\n\tif(n<100000000000000000) return n*16;\n\tif(n<1000000000000000000)\
    \ return n*17;\n\tif(n<10000000000000000000) return n*18;\n\tif(n<100000000000000000000)\
    \ return n*19;\n\tif(n<1000000000000000000000) return n*20;\n\tif(n<10000000000000000000000)\
    \ return n*21;\n\tif(n<1000000000000000000000000) return n*22;\n\tif(n<10000000000000000000000000)\
    \ return n*23;\n\tif(n<100000000000000000000000000) return n*24;\n\tif(n<1000000000000000000000000000)\
    \ return n*25;\n\tif(n<10000000000000000000000000000) return n*26;\n\tif(n<100000000000000000000000000000)\
    \ return n*27;\n\tif(n<1000000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000000) return n*32;\n\t\
    if(n<1000000000000000000000000000000000000) return n*33;\n\tif(n<10000000000000000000000000000000000000)\
    \ return n*34;\n\tif(n<100000000000000000000000000000000000000) return n*35;\n\
    \tif(n<10000000000000000000000000000000000000000) return n*36;\n\tif(n<100000000000000000000000000000000000000000)\
    \ return n*37;\n\tif(n<1000000000000000000000000000000000000000000) return n*38;\n\
    \tif(n<100000000000000000000000000000000000000000) return n*39;\n\tif(n<10000000000000000000000000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000000000000000000000000000000000) return n*41;\n\
    \tif(n<1000000000000000000000000000000000000000000000) return n*42;\n\tif(n<10000000000000000000000000000000000000000000000)\
    \ return n*", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return\
    \ n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000)\
    \ return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return n*8;\n\t\
    if(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000)\
    \ return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return\
    \ n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<10000000000000000) return\
    \ n*15;\n\tif(n<100000000000000000) return n*16;\n\tif(n<1000000000000000000)\
    \ return n*17;\n\tif(n<10000000000000000000) return n*18;\n\tif(n<100000000000000000000)\
    \ return n*19;\n\tif(n<1000000000000000000000) return n*20;\n\tif(n<10000000000000000000000)\
    \ return n*21;\n\tif(n<1000000000000000000000000) return n*22;\n\tif(n<10000000000000000000000000)\
    \ return n*23;\n\tif(n<100000000000000000000000000) return n*24;\n\tif(n<1000000000000000000000000000)\
    \ return n*25;\n\tif(n<10000000000000000000000000000) return n*26;\n\tif(n<100000000000000000000000000000)\
    \ return n*27;\n\tif(n<1000000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000000) return n*32;\n\t\
    if(n<1000000000000000000000000000000000000) return n*33;\n\tif(n<10000000000000000000000000000000000000)\
    \ return n*34;\n\tif(n<100000000000000000000000000000000000000) return n*35;\n\
    \tif(n<10000000000000000000000000000000000000000) return n*36;\n\tif(n<100000000000000000000000000000000000000000)\
    \ return n*37;\n\tif(n<1000000000000000000000000000000000000000000) return n*38;\n\
    \tif(n<100000000000000000000000000000000000000000) return n*39;\n\tif(n<10000000000000000000000000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000000000000000000000000000000000) return n*41;\n\
    \tif(n<1000000000000000000000000000000000000000000000) return n*42;\n\tif(n<10000000000000000000000000000000000000000000000)\
    \ return n*", "\tvar digits = 1;\n\twhile(n){\n\t\tdigits *= n % 10;\n\t\tn /=\
    \ 10;\n\t}\n\treturn digits;\n}\n", "    var digits = 1;\n    while(n){\n    \
    \    digits *= n % 10;\n        n /= 10;\n    }\n    return digits;\n}\n", " \
    \   var digits = 1;\n    while (n){\n        digits++;\n        n /= 10;\n   \
    \ }\n    return digits;\n}\n", "  var result = 0;\n  while(n){\n    result *=\
    \ 10;\n    result += n % 10;\n    n /= 10;\n  }\n  return result;\n}\n", "  var\
    \ product = 1;\n  while(n){\n    product *= n % 10;\n    n /= 10;\n  }\n  return\
    \ product;\n}\n", "  var digits = n.toString().split('');\n  for(var i=0;i<digits.length;i++){\n\
    \    if(digits[i] % 2 === 1){\n      return 0;\n    }\n  }\n  return parseInt(digits[digits.length-1]);\n\
    }\n", "  var digits = 1;\n  while (n) {\n    digits *= n % 10;\n    n /= 10;\n\
    \  }\n  return digits;\n}\n", "  var product = 1;\n  while(n){\n    product *=\
    \ n % 2;\n    n /= 2;\n  }\n  return product;\n}\n", "  var digits = 1;\n  while(n){\n\
    \    digits *= n % 10;\n    n /= 10;\n  }\n  return digits;\n}\n", "\tif(n<10)\
    \ return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000)\
    \ return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000)\
    \ return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\
    \tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000)\
    \ return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return\
    \ n*14;\n\tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000) return\
    \ n*16;\n\tif(n<100000000000000000) return n*17;\n\tif(n<1000000000000000010)\
    \ return n*18;\n\tif(n<10000000000000000100) return n*19;\n\tif(n<100000000000000001000)\
    \ return n*20;\n\tif(n<1000000000000000010000) return n*21;\n\tif(n<10000000000000000100000)\
    \ return n*22;\n\tif(n<100000000000000001000000) return n*23;\n\tif(n<1000000000000000010000000)\
    \ return n*24;\n\tif(n<10000000000000000100000000) return n*25;\n\tif(n<100000000000000001000000000)\
    \ return n*26;\n\tif(n<1000000000000000010000000000) return n*27;\n\tif(n<10000000000000000100000000000)\
    \ return n*28;\n\tif(n<100000000000000001000000000000) return n*29;\n\tif(n<1000000000000000010000000000000)\
    \ return n*30;\n\tif(n<10000000000000000100000000000000) return n*31;\n\tif(n<100000000000000001000000000000000)\
    \ return n*32;\n\tif(n<1000000000000000010000000000000000) return n*33;\n\tif(n<10000000000000000100000000000000000)\
    \ return n*34;\n\tif(n<100000000000000001000000000000000000) return n*35;\n\t\
    if(n<1000000000000000010000000000000000000) return n*36;\n\tif(n<10000000000000000100000000000000000000)\
    \ return n*37;\n\tif(n<100000000000000001000000000000000000000) return n*38;\n\
    \tif(n<1000000000000000010000000000000000000000) return n*39;\n\tif(n<10000000000000000100000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000001000000000000000000000000", "  var sum\
    \ = 0;\n  while(n){\n    sum += n % 2 ? 1 : 0\n    n = Math.floor(n / 2)\n  }\n\
    \  return sum\n}\n", "\tvar sum = 0;\n\twhile(n > 0){\n\t\tsum += n % 10;\n\t\t\
    n = Math.floor(n / 10);\n\t}\n\treturn sum;\n}\n", "  var sum = 0;\n  while(n){\n\
    \    sum += n % 2 ? 1 : 0; \n    n = Math.floor(n / 10);\n  }\n  return sum;\n\
    }\n", "\tvar digits = 1;\n\twhile(n){\n\t\tdigits *= n % 10;\n\t\tn /= 10;\n\t\
    }\n\treturn digits;\n}\n", "\tvar digits = 1;\n\twhile (n){\n\t\tdigits *= n %\
    \ 10;\n\t\tn = Math.floor(n / 10);\n\t}\n\treturn digits;\n}\n", "\tif(n<10) return\
    \ 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return\
    \ n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000)\
    \ return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\
    \tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000)\
    \ return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return\
    \ n*14;\n\tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000) return\
    \ n*16;\n\tif(n<100000000000000000) return n*17;\n\tif(n<1000000000000000000)\
    \ return n*18;\n\tif(n<10000000000000000000) return n*19;\n\tif(n<100000000000000000000)\
    \ return n*20;\n\tif(n<1000000000000000000000) return n*21;\n\tif(n<10000000000000000000000)\
    \ return n*22;\n\tif(n<100000000000000000000000) return n*23;\n\tif(n<1000000000000000000000000)\
    \ return n*24;\n\tif(n<10000000000000000000000000) return n*25;\n\tif(n<100000000000000000000000000)\
    \ return n*26;\n\tif(n<1000000000000000000000000000) return n*27;\n\tif(n<10000000000000000000000000000)\
    \ return n*28;\n\tif(n<100000000000000000000000000000) return n*29;\n\tif(n<1000000000000000000000000000000)\
    \ return n*30;\n\tif(n<10000000000000000000000000000000) return n*31;\n\tif(n<100000000000000000000000000000000)\
    \ return n*32;\n\tif(n<1000000000000000000000000000000000) return n*33;\n\tif(n<1000000000000000000000000000000000)\
    \ return n*34;\n\tif(n<10000000000000000000000000000000000) return n*35;\n\tif(n<100000000000000000000000000000000000)\
    \ return n*36;\n\tif(n<1000000000000000000000000000000000000) return n*37;\n\t\
    if(n<10000000000000000000000000000000000000) return n*38;\n\tif(n<100000000000000000000000000000000000000)\
    \ return n*39;\n\tif(n<1000000000000000000000000000000000000000) return n*40;\n\
    \tif(n<10000000000000000000000000000000000000000) return n*41;\n\tif(n<100000000000000000000000000000000000000000)\
    \ return n*42;\n\tif(n<100000000000000000000000000000000000000000) return n*43;\n\
    \tif", "  var digits = 1;\n  while(n){\n    digits++;\n    n=Math.floor(n/10);\n\
    \  }\n  return digits;\n}\n", "  var sum = 0;\n  while(n){\n    sum += n % 2 ?\
    \ 1 : 0\n    n = Math.floor(n / 2)\n  }\n  return sum\n}\n", "  var digits = 1;\n\
    \  while (n){\n    digits *= n % 2;\n    n = Math.floor(n / 2);\n  }\n  return\
    \ digits;\n}\n", "  if(n<0) return 0;\n  if(n%2==0) return n*digits(n/2);\n  else\
    \ return digits(n/2)*n;\n}\n", "  var digits = n.toString().split('');\n  for(var\
    \ i=0;i<digits.length;i++){\n    if(digits[i] % 2 === 1){\n      return 0;\n \
    \   }\n  }\n  return parseInt(digits[digits.length-1]);\n}\n", "  var digits =\
    \ n.toString().split('');\n  if(digits.length%2 == 1){\n    return parseInt(digits[digits.length-1]);\n\
    \  }\n  return 0;\n}\n", "\tif(n<0) return 0;\n\tif(n%2==0) return n*(n+1)/2;\n\
    \telse return n*(n-1)/2;\n}\n", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\
    \tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\
    \tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return\
    \ n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000)\
    \ return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return\
    \ n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000) return\
    \ n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000) return\
    \ n*17;\n\tif(n<1000000000000000010) return n*18;\n\tif(n<10000000000000000100)\
    \ return n*19;\n\tif(n<100000000000000001000) return n*20;\n\tif(n<1000000000000000010000)\
    \ return n*21;\n\tif(n<10000000000000000100000) return n*22;\n\tif(n<100000000000000001000000)\
    \ return n*23;\n\tif(n<1000000000000000010000000) return n*24;\n\tif(n<10000000000000000100000000)\
    \ return n*25;\n\tif(n<100000000000000001000000000) return n*26;\n\tif(n<1000000000000000010000000000)\
    \ return n*27;\n\tif(n<10000000000000000100000000000) return n*28;\n\tif(n<100000000000000001000000000000)\
    \ return n*29;\n\tif(n<1000000000000000010000000000000) return n*30;\n\tif(n<10000000000000000100000000000000)\
    \ return n*31;\n\tif(n<100000000000000001000000000000000) return n*32;\n\tif(n<1000000000000000010000000000000000)\
    \ return n*33;\n\tif(n<10000000000000000100000000000000000) return n*34;\n\tif(n<100000000000000001000000000000000000)\
    \ return n*35;\n\tif(n<1000000000000000010000000000000000000) return n*36;\n\t\
    if(n<10000000000000000100000000000000000000) return n*37;\n\tif(n<100000000000000001000000000000000000000)\
    \ return n*38;\n\tif(n<1000000000000000010000000000000000000000) return n*39;\n\
    \tif(n<10000000000000000100000000000000000000000) return n*40;\n\tif(n<100000000000000001000000000000000000000000",
  "  var digits = n.toString().split('');\n  if(digits.length % 2 === 0){\n    return\
    \ parseInt(digits.join(''));\n  }\n  return 0;\n}\n", "\tif(n<10) return 1;\n\t\
    if(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\t\
    if(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return\
    \ n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000)\
    \ return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return\
    \ n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return n*14;\n\
    \tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000) return n*16;\n\
    \tif(n<100000000000000000) return n*17;\n\tif(n<1000000000000000010) return n*18;\n\
    \tif(n<10000000000000000100) return n*19;\n\tif(n<100000000000000001000) return\
    \ n*20;\n\tif(n<1000000000000000010000) return n*21;\n\tif(n<10000000000000000100000)\
    \ return n*22;\n\tif(n<100000000000000001000000) return n*23;\n\tif(n<1000000000000000010000000)\
    \ return n*24;\n\tif(n<10000000000000000100000000) return n*25;\n\tif(n<100000000000000001000000000)\
    \ return n*26;\n\tif(n<1000000000000000010000000000) return n*27;\n\tif(n<10000000000000000100000000000)\
    \ return n*28;\n\tif(n<100000000000000001000000000000) return n*29;\n\tif(n<1000000000000000010000000000000)\
    \ return n*30;\n\tif(n<10000000000000000100000000000000) return n*31;\n\tif(n<100000000000000001000000000000000)\
    \ return n*32;\n\tif(n<1000000000000000010000000000000000) return n*33;\n\tif(n<10000000000000000100000000000000000)\
    \ return n*34;\n\tif(n<100000000000000001000000000000000000) return n*35;\n\t\
    if(n<1000000000000000010000000000000000000) return n*36;\n\tif(n<10000000000000000100000000000000000000)\
    \ return n*37;\n\tif(n<100000000000000001000000000000000000000) return n*38;\n\
    \tif(n<1000000000000000010000000000000000000000) return n*39;\n\tif(n<10000000000000000100000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000001000000000000000000000000", "  var digits\
    \ = 1;\n  while(n){\n    digits *= n % 2;\n    n /= 2;\n  }\n  return digits;\n\
    }\n", "\tif(n<0) return 0;\n\tif(n%2==0) return n*(n+1)/2;\n\telse return n*(n-1)*(2*n+1)/6;\n\
    }\n", "  var sum = 0;\n  while(n){\n    sum += n % 2;\n    n = Math.floor(n /\
    \ 2);\n  }\n  return sum;\n}", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\
    \tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\
    \tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return\
    \ n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000)\
    \ return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return\
    \ n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<10000000000000000) return\
    \ n*15;\n\tif(n<100000000000000000) return n*16;\n\tif(n<1000000000000000000)\
    \ return n*17;\n\tif(n<10000000000000000000) return n*18;\n\tif(n<100000000000000000000)\
    \ return n*19;\n\tif(n<1000000000000000000000) return n*20;\n\tif(n<10000000000000000000000)\
    \ return n*21;\n\tif(n<1000000000000000000000000) return n*22;\n\tif(n<10000000000000000000000000)\
    \ return n*23;\n\tif(n<100000000000000000000000000) return n*24;\n\tif(n<1000000000000000000000000000)\
    \ return n*25;\n\tif(n<10000000000000000000000000000) return n*26;\n\tif(n<100000000000000000000000000000)\
    \ return n*27;\n\tif(n<1000000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000000) return n*32;\n\t\
    if(n<1000000000000000000000000000000000000) return n*33;\n\tif(n<10000000000000000000000000000000000000)\
    \ return n*34;\n\tif(n<100000000000000000000000000000000000000) return n*35;\n\
    \tif(n<10000000000000000000000000000000000000000) return n*36;\n\tif(n<100000000000000000000000000000000000000000)\
    \ return n*37;\n\tif(n<1000000000000000000000000000000000000000000) return n*38;\n\
    \tif(n<100000000000000000000000000000000000000000) return n*39;\n\tif(n<10000000000000000000000000000000000000000000)\
    \ return n*40;\n\tif(n<100000000000000000000000000000000000000000000) return n*41;\n\
    \tif(n<1000000000000000000000000000000000000000000000) return n*42;\n\tif(n<10000000000000000000000000000000000000000000000)\
    \ return n*", "\tif(n<0) return 0;\n\tif(n%2==0) return n*(n+1)/2;\n\treturn n*Math.sqrt(n)/2;\n\
    }\n", "\tvar digits = 1;\n\twhile(n){\n\t\tdigits *= n % 10;\n\t\tn /= 10;\n\t\
    }\n\treturn digits;\n}\n", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\t\
    if(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\
    \tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return\
    \ n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000)\
    \ return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return\
    \ n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000) return\
    \ n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000) return\
    \ n*17;\n\tif(n<1000000000000000010) return n*18;\n\tif(n<10000000000000000100)\
    \ return n*19;\n\tif(n<100000000000000001000) return n*20;\n\tif(n<1000000000000000010000)\
    \ return n*21;\n\tif(n<10000000000000000100000) return n*22;\n\tif(n<100000000000000001000000)\
    \ return n*23;\n\tif(n<1000000000000000010000000) return n*24;\n\tif(n<10000000000000000100000000)\
    \ return n*25;\n\tif(n<100000000000000001000000000) return n*26;\n\tif(n<1000000000000000010000000000)\
    \ return n*27;\n\tif(n<10000000000000000100000000000) return n*28;\n\tif(n<100000000000000001000000000000)\
    \ return n*29;\n\tif(n<1000000000000000010000000000000) return n*30;\n\tif(n<10000000000000000100000000000000)\
    \ return n*31;\n\tif(n<100000000000000001000000000000000) return n*32;\n\tif(n<1000000000000000010000000000000000)\
    \ return n*33;\n\tif(n<10000000000000000100000000000000000) return n*34;\n\tif(n<100000000000000001000000000000000000)\
    \ return n*35;\n\tif(n<1000000000000000010000000000000000000) return n*36;\n\t\
    if(n<10000000000000000100000000000000000000) return n*37;\n\tif(n<100000000000000001000000000000000000000)\
    \ return n*38;\n\tif(n<1000000000000000010000000000000000000000) return n*39;\n\
    \tif(n<10000000000000000100000000000000000000000) return n*40;\n\tif(n<100000000000000001000000000000000000000000",
  "  var digits = n.toString().split('');\n  if(digits.length % 2 === 0){\n    return\
    \ parseInt(digits[digits.length-1]);\n  }\n  return 0;\n}\n", "  var product =\
    \ 1;\n  while (n){\n    product *= n % 10;\n    n /= 10;\n  }\n  return product;\n\
    }\n", "    var digits = \"\";\n    for(var i = n; i > 0; i--){\n        var remainder\
    \ = n % 10;\n        digits = remainder + digits;\n        n = Math.floor(n/10);\n\
    \    }\n    return digits;\n}\n", "  var sum = 0;\n  while(n){\n    sum += n %\
    \ 2;\n    n = Math.floor(n / 2);\n  }\n  return sum;\n}\n", "    var digits =\
    \ 1;\n    while(n){\n        digits++;\n        n /= 2;\n    }\n    return digits;\n\
    }\n", "  var digits = 1;\n  while(n){\n    digits *= n % 10;\n    n /= 10;\n \
    \ }\n  return digits;\n}\n", "    var product = 1;\n    while(n){\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\n", "\tvar sum =\
    \ 0;\n\twhile(n){\n\t\tsum += n % 10;\n\t\tn = Math.floor(n / 10);\n\t}\n\treturn\
    \ sum;\n}\n", "\tvar digits = n.toString().split('');\n\tvar odd = [];\n\tfor(var\
    \ i = 0; i < digits.length; i++){\n\t\tif(digits[i] % 2 === 1){\n\t\t\todd.push(digits[i]);\n\
    \t\t}\n\t}\n\treturn odd.length === 0 ? 0 : Math.pow(10, digits.length - odd.length);\n\
    }\n", "\tvar sum = 0;\n\twhile(n){\n\t\tsum += n % 2 ? 1 : 2;\n\t\tn = Math.floor(n\
    \ / 2);\n\t}\n\treturn sum;\n}\n", "\tif(n<0) return 0;\n\tif(n%2==0) return n*(n+1)/2;\n\
    \treturn n*(n+1)/2+digits(n-1);\n}\n", "  var sum = 0;\n  while(n){\n    sum +=\
    \ n % 2;\n    n = Math.floor(n / 2);\n  }\n  return sum;\n}\n", "  var product\
    \ = 1;\n  while(n){\n    product *= n % 2;\n    n /= 2;\n  }\n  return product;\n\
    }\n", "\tvar product = 1;\n\twhile(n > 0){\n\t\tif(n%2 === 0){\n\t\t\tproduct\
    \ *= 2;\n\t\t}\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n", "  var result = 0;\n\
    \  while(n){\n    result *= 10;\n    result += n % 10;\n    n /= 10;\n  }\n  return\
    \ result;\n}\n", "  var digits = 1;\n  while (n){\n    digits *= n % 10;\n   \
    \ n = Math.floor(n / 10);\n  }\n  return digits;\n}\n", "\tif(n<10) return 1;\n\
    \tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\
    \tif(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return\
    \ n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000)\
    \ return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return\
    \ n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return n*14;\n\
    \tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000) return n*16;\n\
    \tif(n<100000000000000000) return n*17;\n\tif(n<1000000000000000000) return n*18;\n\
    \treturn 0;\n}\n", "\tvar digits = n.toString().split('');\n\tvar odd = [];\n\t\
    for(var i=0;i<digits.length;i++){\n\t\tif(digits[i] % 2 === 1){\n\t\t\todd.push(digits[i]);\n\
    \t\t}\n\t}\n\treturn odd.length == 0 ? 0 : Math.pow(10,odd.length);\n}\n", " \
    \ if(n < 0) return 0;\n  if(n == 0) return 1;\n  if(n == 1) return 1;\n  if(n\
    \ == 2) return 2;\n  if(n == 3) return 3;\n  if(n == 4) return 6;\n  if(n == 5)\
    \ return 9;\n  if(n == 6) return 18;\n  if(n == 7) return 27;\n  if(n == 8) return\
    \ 36;\n  if(n == 9) return 45;\n  if(n == 10) return 60;\n  if(n == 11) return\
    \ 91;\n  if(n == 12) return 121;\n  if(n == 13) return 151;\n  if(n == 14) return\
    \ 181;\n  if(n == 15) return 241;\n  if(n == 16) return 301;\n  if(n == 17) return\
    \ 391;\n  if(n == 18) return 480;\n  if(n == 19) return 579;\n  if(n == 20) return\
    \ 678;\n  if(n == 21) return 778;\n  if(n == 22) return 979;\n  if(n == 23) return\
    \ 1079;\n  if(n == 24) return 1279;\n  if(n == 25) return 1479;\n  if(n == 26)\
    \ return 1679;\n  if(n == 27) return 1869;\n  if(n == 28) return 2069;\n  if(n\
    \ == 29) return 2269;\n  if(n == 30) return 2469;\n  if(n == 31) return 2769;\n\
    \  if(n == 32) return 2969;\n  if(n == 33) return 3269;\n  if(n == 34) return\
    \ 3469;\n  if(n == 35) return 3690;\n  if(n == 36) return 3900;\n  if(n == 37)\
    \ return 4100;\n  if(n == 38) return 4200;\n  if(n == 39) return 4300;\n  if(n\
    \ == 40) return 4400;\n  if(n == 41) return 4500;\n  if(n == 42) return 4600;\n\
    \  if(n == 43) return 4700;\n  if(n == 44) return 4800;\n  if(n == 45) return\
    \ 4900;\n  if(n == 46) return 5000;\n  if(n == 47) return 5100;\n  if(n == 48)\
    \ return 5200;\n  if(n == 49) return 5300;\n  if(n == 50) return 5400;\n  if(n\
    \ == 51) return 5500;\n  if(n == 52) return 5600;\n  if(n == 53) return 5700;\n\
    \  if(n == 54) return 5800;\n  if(n == 55) return 5900;\n  if(n == 56) return\
    \ 6000;", "  if(n < 0) return 0;\n  if(n == 0) return 1;\n  if(n == 1) return\
    \ 1;\n  if(n == 2) return 2;\n  if(n == 3) return 3;\n  if(n == 4) return 6;\n\
    \  if(n == 5) return 9;\n  if(n == 6) return 18;\n  if(n == 7) return 27;\n  if(n\
    \ == 8) return 48;\n  if(n == 9) return 71;\n  if(n == 10) return 144;\n  if(n\
    \ == 11) return 211;\n  if(n == 12) return 282;\n  if(n == 13) return 343;\n \
    \ if(n == 14) return 486;\n  if(n == 15) return 513;\n  if(n == 16) return 640;\n\
    \  if(n == 17) return 715;\n  if(n == 18) return 828;\n  if(n == 19) return 945;\n\
    \  if(n == 20) return 1060;\n  if(n == 21) return 1185;\n  if(n == 22) return\
    \ 1310;\n  if(n == 23) return 1446;\n  if(n == 24) return 1569;\n  if(n == 25)\
    \ return 1615;\n  if(n == 26) return 1728;\n  if(n == 27) return 1845;\n  if(n\
    \ == 28) return 1960;\n  if(n == 29) return 2085;\n  if(n == 30) return 2210;\n\
    \  if(n == 31) return 2346;\n  if(n == 32) return 2469;\n  if(n == 33) return\
    \ 2615;\n  if(n == 34) return 2738;\n  if(n == 35) return 2963;\n  if(n == 36)\
    \ return 3100;\n  if(n == 37) return 3236;\n  if(n == 38) return 3463;\n  if(n\
    \ == 39) return 3610;\n  if(n == 40) return 3745;\n  if(n == 41) return 3890;\n\
    \  if(n == 42) return 4045;\n  if(n == 43) return 4180;\n  if(n == 44) return\
    \ 4315;\n  if(n == 45) return 4450;\n  if(n == 46) return 4575;\n  if(n == 47)\
    \ return 4705;\n  if(n == 48) return 4850;\n  if(n == 49) return 4975;\n  if(n\
    \ == 50) return 5105;\n  if(n == 51) return 5250;\n  if(n == 52) return 5375;\n\
    \  if(n == 53) return 5510;\n  if(n == 54) return 5645;\n  if(n == 55) return\
    \ 57", "  var digits = n.toString().split('');\n  if(digits.length == 1 && digits[0]\
    \ == 0){\n    return 0;\n  }\n  if(digits.length % 2 == 1){\n    return digits[digits.length\
    \ - 1];\n  }\n  var sum = 0;\n  for(var i = 0; i < digits.length; i++){\n    sum\
    \ += digits[i] * digits[digits.length - i - 1];\n  }\n  return sum % 10;\n}\n",
  "\tvar product = 1;\n\twhile (n > 0){\n\t\tproduct *= n % 10;\n\t\tn /= 10;\n\t\
    }\n\treturn product;\n}\n", "  var digits = \"\";\n  while(n){\n    digits +=\
    \ n % 2 == 0 ? parseInt(n/2,10) : n % 2;\n    n = parseInt(n/2,10);\n  }\n  return\
    \ digits;\n}\n", "  if(n < 0) return 0;\n  if(n == 0) return 1;\n  if(n == 1)\
    \ return 1;\n  if(n == 2) return 2;\n  if(n == 3) return 3;\n  if(n == 4) return\
    \ 4;\n  if(n == 5) return 5;\n  if(n == 6) return 6;\n  if(n == 7) return 7;\n\
    \  if(n == 8) return 8;\n  if(n == 9) return 9;\n  if(n == 10) return 10;\n  if(n\
    \ == 11) return 11;\n  if(n == 12) return 12;\n  if(n == 13) return 13;\n  if(n\
    \ == 14) return 14;\n  if(n == 15) return 15;\n  if(n == 16) return 16;\n  if(n\
    \ == 17) return 17;\n  if(n == 18) return 18;\n  if(n == 19) return 19;\n  if(n\
    \ == 20) return 20;\n  if(n == 23) return 23;\n  if(n == 24) return 24;\n  if(n\
    \ == 25) return 25;\n  if(n == 26) return 26;\n  if(n == 27) return 27;\n  if(n\
    \ == 28) return 28;\n  if(n == 29) return 29;\n  if(n == 30) return 30;\n  if(n\
    \ == 31) return 31;\n  if(n == 32) return 32;\n  if(n == 33) return 33;\n  if(n\
    \ == 34) return 34;\n  if(n == 35) return 35;\n  if(n == 36) return 36;\n  if(n\
    \ == 37) return 37;\n  if(n == 38) return 38;\n  if(n == 39) return 39;\n  if(n\
    \ == 40) return 40;\n  if(n == 41) return 41;\n  if(n == 42) return 42;\n  if(n\
    \ == 43) return 43;\n  if(n == 44) return 44;\n  if(n == 45) return 45;\n  if(n\
    \ == 46) return 46;\n  if(n == 47) return 47;\n  if(n == 48) return 48;\n  if(n\
    \ == 49) return 49;\n  if(n == 50) return 50;\n  if(n == 51) return 51;\n  if(n\
    \ == 52) return 52;\n  if(n == 53) return 53;\n  if(n == 54) return 54;\n  if(n\
    \ == 55) return 55;\n  if(n == 56) return 56;\n  if(n == 57) return 57;\n  if(n\
    \ == 58) return 58;\n  if(n == 59) return 59;\n  if(n == 60) return 60;\n  if(n\
    \ == 61) return 61;\n", "\tvar product = 1;\n\twhile(n){\n\t\tproduct *= n % 2;\n\
    \t\tn /= 2;\n\t}\n\treturn product;\n}\n", "  var sum = 0;\n  while(n){\n    sum\
    \ += n % 10;\n    n = Math.floor(n / 10);\n  }\n  return sum;\n}\n", "    var\
    \ digits = 1;\n    while (n){\n        digits *= n % 10;\n        n /= 10;\n \
    \   }\n    return digits;\n}\n", "    var digits = 1;\n    while (n){\n      \
    \  digits *= n % 10;\n        n /= 10;\n    }\n    return digits;\n}\n", "   \
    \ var sum = 0;\n    while(n > 0){\n        sum += n % 2;\n        n = Math.floor(n\
    \ / 2);\n    }\n    return sum;\n}\n", "  var digits = \"\";\n  while(n){\n  \
    \  digits = digits+(n%10+1);\n    n = Math.floor(n/10);\n  }\n  return digits;\n\
    }\n", "\tif(n<10) return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\
    \tif(n<10000) return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return\
    \ n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000)\
    \ return n*9;\n\tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\
    \tif(n<1000000000000) return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000)\
    \ return n*14;\n\tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000)\
    \ return n*16;\n\tif(n<100000000000000000) return n*17;\n\tif(n<100000000000000000)\
    \ return n*18;\n\tif(n<1000000000000000000) return n*19;\n\treturn 0;\n}\n", "\t\
    if(n<10) return 1;\n\tif(n<100) return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000)\
    \ return n*4;\n\tif(n<100000) return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000)\
    \ return n*7;\n\tif(n<100000000) return n*8;\n\tif(n<1000000000) return n*9;\n\
    \tif(n<10000000000) return n*10;\n\tif(n<100000000000) return n*11;\n\tif(n<1000000000000)\
    \ return n*12;\n\tif(n<10000000000000) return n*13;\n\tif(n<100000000000000) return\
    \ n*14;\n\tif(n<1000000000000000) return n*15;\n\tif(n<10000000000000000) return\
    \ n*16;\n\tif(n<100000000000000000) return n*17;\n\tif(n<100000000000000000) return\
    \ n*18;\n\tif(n<1000000000000000000) return n*19;\n}\n", "    var digits = 1;\n\
    \    while (n>0){\n        digits++;\n        n=n>>1;\n    }\n    return digits;\n\
    }\n", "  var digits = 1;\n  while (n){\n    digits *= n % 10;\n    n /= 10;\n\
    \  }\n  return digits;\n}\n", "  if(n < 10) return 1;\n  if(n < 100) return n*2;\n\
    \  if(n < 1000) return n*3;\n  if(n < 10000) return n*4;\n  if(n < 100000) return\
    \ n*5;\n  if(n < 1000000) return n*6;\n  if(n < 10000000) return n*7;\n  if(n\
    \ < 100000000) return n*8;\n  if(n < 1000000000) return n*9;\n  if(n < 10000000000)\
    \ return n*10;\n  if(n < 100000000000) return n*11;\n  if(n < 1000000000000) return\
    \ n*12;\n  if(n < 10000000000000) return n*13;\n  if(n < 100000000000000) return\
    \ n*14;\n  if(n < 1000000000000000) return n*15;\n  if(n < 10000000000000000)\
    \ return n*16;\n  if(n < 100000000000000000) return n*17;\n  if(n < 100000000000000000)\
    \ return n*18;\n  if(n < 1000000000000000000) return n*19;\n  return 0;\n}\n",
  "    var digits = 1;\n    while(n){\n        digits++;\n        n /= 10;\n    }\n\
    \    return digits;\n}\n", "  var digits = n.toString().split('')\n  digits.reverse()\n\
    \  digits = digits.map(function(d){\n    return parseInt(d,10)\n  })\n  var product\
    \ = 1\n  digits.forEach(function(d){\n    product *= d\n  })\n  return product\n\
    }\n", "\tvar digits = 1;\n\twhile (n > 0) {\n\t\tdigits++;\n\t\tn /= 2;\n\t}\n\
    \treturn digits;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_58_common
language: js
prompt: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
  \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
  \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5,\
  \ 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2,\
  \ 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4,\
  \ 3, 2, 8], []),[]);\n}\n\ntest();"
completions: ["  var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n\
    \    if(l2.indexOf(l1[i]) === -1){\n      result.push(l1[i]);\n    }\n  }\n  return\
    \ result;\n}\n", "  var result = [];\n  while(l1.length > 0 && l2.length > 0){\n\
    \    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n      l1.shift();\n    \
    \  l2.shift();\n    }else if(l1[0] < l2[0]){\n      result.push(l1[0]);\n    \
    \  l1.shift();\n    }else{\n      result.push(l2[0]);\n      l2.shift();\n   \
    \ }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                result.push(l1[i]);\n      \
    \          break;\n            }\n        }\n    }\n    return result;\n}\n",
  "    var result = [];\n    var lLen = l1.length;\n    var l2 = l2.length;\n    var\
    \ i = 0;\n    while(i<lLen && i<l2){\n        if(l1[i]===l2[i]){\n           \
    \ result.push(l1[i]);\n            i++;\n        }else{\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l1.shift();\n\
    \    }else{\n      l2.shift();\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = Math.min(l1.length,\
    \ l2.length);\n    while(i < l1 || j < l2){\n        if(l1 && l1[i] === l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l2 && l2[j] === l1[i]){\n            result.push(l2[j]);\n        \
    \    j++;\n        }else{\n            i++;\n            j++;\n            k++;\n\
    \        }\n    }\n    return result;\n}\n", "  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.splice(0, 1);\n      l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n\
    \      l1.splice(0, 1);\n    }else{\n      l2.splice(0, 1);\n    }\n  }\n  return\
    \ out;\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n    var lLen2\
    \ = l2.length;\n    var lIdx = 0;\n    var l2Idx = 0;\n    while (lIdx < lLen1\
    \ && l2Idx < lLen2){\n        if (l1[lIdx] === l2[l2Idx]){\n            result.push(l1[lIdx]);\n\
    \            lIdx += 1;\n            l2Idx += 1;\n        }else{\n           \
    \ lIdx += 1;\n        }\n    }\n    return result.concat(l1.slice(lIdx)).concat(l2.slice(l2Idx));\n\
    }\n", "    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n\
    \    var l = 0;\n    var n1 = l1.length;\n    var n2 = l2.length;\n    while(i<n1\
    \ && j<n2){\n        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n   \
    \         i++;\n            j++;\n        }else if(l1[i]<l2[j]){\n           \
    \ j++;\n        }else{\n            i++;\n        }\n    }\n    while(i<n1){\n\
    \        result.push(l1[i]);\n        i++;\n    }\n    while(j<n2){\n        result.push(l2[j]);\n\
    \        j++;\n    }\n    return result;\n}\n", "  var lc = l1.length;\n  var\
    \ lp = l2.length;\n  var result = [];\n  while(lc){\n    if(lc === lp){\n    \
    \  result.push(l1[lc-1]);\n      lc--;\n      lp--;\n    }else{\n      if(lc >\
    \ lp){\n        lc--;\n      }else{\n        lp--;\n      }\n    }\n  }\n  return\
    \ result;\n}\n", "  var l = [], i = 0, j = 0;\n  while(l1.length > i){\n    if(l2.length\
    \ > j){\n      l.push(l1[i]);\n      if(l1[i] === l2[j]){\n        l1.splice(i--,\
    \ 1);\n        l2.splice(j--, 1);\n      }\n    }else{\n      l.push(l1[i]);\n\
    \      l1.splice(i--, 1);\n    }\n  }\n  while(l2.length > j){\n    l.push(l2[j]);\n\
    \    l2.splice(j--, 1);\n  }\n  return l;\n}\n", "    var result = [];\n    var\
    \ i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var len1 = l1.length;\n\
    \    var len2 = l2.length;\n    while (i < len1 && j < len2){\n        if (l1[i]\
    \ === l2[j]){\n            result.push(l1[i]);\n            i++;\n           \
    \ j++;\n        }\n        else if (l1[i] < l2[j]){\n            i++;\n      \
    \  }\n        else{\n            j++;\n        }\n    }\n    while (i < len1){\n\
    \        result.push(l1[i]);\n        i++;\n    }\n    while (j < len2){\n   \
    \     result.push(l2[j]);\n        j++;\n    }\n    return result;\n}\n", "  \
    \  var result = [];\n    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n\
    \            j++;\n        }\n    }\n    return result;\n}\n", "    var out =\
    \ [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var n = l1.length;\n\
    \    var m = l2.length;\n    while(i < n && j < m){\n        if(l1[i] === l2[j]){\n\
    \            out.push(l1[i]);\n            i++;\n            j++;\n        }\n\
    \        else if(l1[i] < l2[j]){\n            i++;\n        }\n        else{\n\
    \            j++;\n        }\n    }\n    return out;\n}\n", "    var result =\
    \ [];\n    var i = 0;\n    var j = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if(l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    return result;\n\
    }\n", "    var out = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n   \
    \ var l;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            out.push(l1[i]);\n            i++;\n            j++;\n        }else\
    \ if(l1[i]<l2[j]){\n            k++;\n        }else{\n            k--;\n     \
    \   }\n    }\n    while(i<l1.length){\n        out.push(l1[i]);\n        i++;\n\
    \    }\n    while(j<l2.length){\n        out.push(l2[j]);\n        j++;\n    }\n\
    \    return out;\n}\n", "    var out = [];\n    var lLen1 = l1.length;\n    var\
    \ lLen2 = l2.length;\n    var l1, l2, i;\n    for(i = 0; i < lLen1; i++){\n  \
    \      l1 = l1[i];\n        for(i = 0; i < lLen2; i++){\n            l2 = l2[i];\n\
    \            if(l1 === l2){\n                out.push(l1);\n                break;\n\
    \            }\n        }\n    }\n    return out;\n}\n", "    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var n = l1.length;\n    var\
    \ m = l2.length;\n    while (i < n && j < m) {\n        if (l1[i] === l2[j]) {\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ } else if (l1[i] < l2[j]) {\n            i++;\n        } else {\n          \
    \  j++;\n        }\n    }\n    return result;\n}\n", "    var out = [];\n    var\
    \ i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = l1.length;\n\
    \    var n = l2.length;\n    while(i < m && j < n){\n        if(l1[i] === l2[j]){\n\
    \            out.push(l1[i]);\n            i++;\n            j++;\n        }else{\n\
    \            if(l1[i] < l2[j]){\n                i++;\n            }else{\n  \
    \              j++;\n            }\n        }\n    }\n    return out;\n}\n", " \
    \ var l = [], i = 0, j = 0;\n  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n\
    \      l.push(l1[i]);\n      i++;\n      j++;\n    }else if(l1[i]<l2[j]){\n  \
    \    i++;\n    }else{\n      j++;\n    }\n  }\n  return l;\n}\n", "  var out =\
    \ [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n\
    \      if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return out;\n}\n", "  var out = [];\n  var i = 0;\n  while(l1.length\
    \ > i){\n    if(l2.indexOf(l1[i]) == -1){\n      out.push(l1[i]);\n    }\n   \
    \ i++;\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "    var result = [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n\
    \    var i = 0;\n    var j = 0;\n    while(i<lLen1 && j<lLen2){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        if(l2.indexOf(l1[i]) != -1){\n        \
    \    result.push(l1[i]);\n        }\n    }\n    return result;\n}\n", "    var\
    \ result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n\
    \    var len1 = l1.length;\n    var len2 = l2.length;\n    while(i<len1 && j<len2){\n\
    \        if(l1[i] === l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else if(l1[i] < l2[j]){\n            i++;\n      \
    \  }else{\n            j++;\n        }\n    }\n    while(i<len1){\n        result.push(l1[i]);\n\
    \        i++;\n    }\n    while(j<len2){\n        result.push(l2[j]);\n      \
    \  j++;\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i = 0,\
    \ len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) === -1){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "    var out = [];\n    var lLen1 = l1.length;\n\
    \    var lLen2 = l2.length;\n    var lIdx = 0;\n    var i;\n    var j;\n    for(i\
    \ = 0; i < lLen1; i++){\n        for(j = 0; j < lLen2; j++){\n            if(l1[lIdx]\
    \ === l2[j]){\n                out.push(l1[lIdx]);\n                lIdx++;\n\
    \                break;\n            }\n        }\n    }\n    return out;\n}\n",
  "  var l = [],\n      i = 0,\n      j = 0,\n      n = l1.length,\n      m = l2.length,\n\
    \      c;\n  while( i < n && j < m ){\n    c = l1[i];\n    while( c === l2[j]\
    \ ){\n      j++;\n      if( j === m ){\n        j = 0;\n        i++;\n      }\n\
    \    }\n    if( c !== l2[j] ){\n      l.push( c );\n      i++;\n    }else{\n \
    \     j++;\n    }\n  }\n  return l;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n", "  var out = [];\n  while(l1.length > 0 && l2.length\
    \ > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n\
    \      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n   \
    \   l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n    }\n\
    \  }\n  return out;\n}\n", "  var result = [];\n  for(var i = 0, len = l1.length;\
    \ i < len; i++){\n    for(var j = 0, len2 = l2.length; j < len2; j++){\n     \
    \ if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n", "  var out = [],\n      ln = l1.length,\n\
    \      lnn2 = l2.length,\n      i = 0, j = 0;\n  while(i<ln){\n    if(l2[j] ===\
    \ l1[i]){\n      out.push(l2[j]);\n      i++;\n      j++;\n    }else{\n      j++;\n\
    \    }\n  }\n  return out;\n}\n", "    var out = [];\n    var i = 0, j = 0;\n\
    \    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n        \
    \    out.push(l1[i]);\n            i++;\n            j++;\n        }\n       \
    \ else if(l1[i]<l2[j]){\n            j++;\n        }\n        else{\n        \
    \    i++;\n        }\n    }\n    return out;\n}\n", "    var result = [];\n  \
    \  var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = Math.min(l1.length,\
    \ l2.length);\n    while(i < l1 || j < l2){\n        if(l1.length < l2.length){\n\
    \            if(!l1){\n                break;\n            }\n            i++;\n\
    \        }else{\n            if(!l2){\n                break;\n            }\n\
    \            j++;\n        }\n        if(l1.charAt(i) === l2.charAt(j)){\n   \
    \         result.push(l1.charAt(i));\n            i++;\n            j++;\n   \
    \     }else{\n            k++;\n        }\n    }\n    return result;\n}\n", " \
    \ var result = [];\n  for(var i = 0, len = Math.min(l1.length, l2.length); i <\
    \ len; i++){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    var i = 0;\n    var j = 0;\n\
    \    var k = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else{\n            if(l1[i]<l2[j]){\n                i++;\n            }else{\n\
    \                j++;\n            }\n        }\n    }\n    while(i<l1.length){\n\
    \        result.push(l1[i]);\n        i++;\n    }\n    while(j<l2.length){\n \
    \       result.push(l2[j]);\n        j++;\n    }\n    return result;\n}\n", " \
    \ var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "    var result = [];\n    var i\
    \ = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }\n        else if(l1[i]<l2[j]){\n            i++;\n        }\n        else{\n\
    \            j++;\n        }\n    }\n    return result;\n}\n", "  var result =\
    \ [];\n  var i = 0;\n  var j = 0;\n  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n\
    \      result.push(l1[i]);\n      i++;\n      j++;\n    }else{\n      i++;\n \
    \   }\n  }\n  return result;\n}\n", "    var out = [];\n    var common;\n    for(var\
    \ i = 0, len = l1.length; i < len; i++){\n        common = false;\n        for(var\
    \ j = 0, len2 = l2.length; j < len2; j++){\n            if(l1[i] === l2[j]){\n\
    \                common = true;\n                break;\n            }\n     \
    \   }\n        if(common){\n            out.push(l1[i]);\n        }\n    }\n \
    \   return out;\n}\n", "  var result = [];\n  for(var i = 0, len = l1.length;\
    \ i < len; i++){\n    if(l2.indexOf(l1[i]) !== -1){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "  var result = [];\n  var lLen = l1.length;\n  var l2 = l2.slice(0);\n\
    \  while(lLen--){\n    if(l2.indexOf(l1[lLen]) === -1) result.push(l1[lLen]);\n\
    \  }\n  return result;\n}\n", "  var result = [];\n  var lLen = l1.length;\n \
    \ var l2 = l2.length;\n  while(lLen > 0 && l2.indexOf(l1[lLen - 1]) !== -1){\n\
    \    lLen--;\n  }\n  while(lLen > 0){\n    if(l1[lLen - 1] === l2[lLen - 1]){\n\
    \      result.push(l1[lLen - 1]);\n      lLen--;\n    }else{\n      if(l1[lLen\
    \ - 1] < l2[lLen - 1]){\n        lLen--;\n      }else{\n        l2.pop();\n  \
    \    }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  var i = 0;\n\
    \  var j = 0;\n  while (i < l1.length && j < l2.length){\n    if (l1[i] === l2[j]){\n\
    \      result.push(l1[i]);\n      i++;\n      j++;\n    } else if (l1[i] > l2[j]){\n\
    \      i++;\n    } else {\n      j++;\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i])\
    \ === -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", " \
    \ var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var result = [];\n  var lLen = l1.length;\n\
    \  var l2 = l2.length;\n  if(lLen > l2){\n    lLen = l2;\n  }\n  while(lLen >\
    \ 0){\n    if(l1[lLen - 1] === l2[lLen - 1]){\n      result.push(l1[lLen - 1]);\n\
    \      lLen--;\n    } else {\n      lLen--;\n    }\n  }\n  return result;\n}\n",
  "  var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i])\
    \ === -1) result.push(l1[i]);\n  }\n  return result;\n}\n", "  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n", "    var result = [];\n    var i = 0;\n \
    \   var j = 0;\n    var k = 0;\n    var l = 0;\n    var n1 = l1.length;\n    var\
    \ n2 = l2.length;\n    while(i<n1 && j<n2){\n        if(l1[i]===l2[j]){\n    \
    \        result.push(l1[i]);\n            i++;\n            j++;\n        }else\
    \ if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n     \
    \   }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i = 0,\
    \ len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) === -1) result.push(l1[i]);\n\
    \  }\n  return result;\n}\n", "  var result = [];\n  for(var i = 0, len = l1.length;\
    \ i < len; i++){\n    if(l2.indexOf(l1[i]) != -1){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i = 0, len\
    \ = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) == -1){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n     \
    \   out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n}\n",
  "  var lc = 0, // common length\n      lp, // length of previous run\n      ll,\
    \ // length of current run\n      i, j, // iterator\n      ii = l1.length,\n \
    \     jj = l2.length,\n      lll = Math.max(jj,ii); // check lengths\n\n  for(i\
    \ = ll; i < lll; i++){\n    lp = l1[i];\n    ll = l2;\n    for(j = ii-1; j >=\
    \ lll; j--){\n      lc = ll + common(lp, l2[j]);\n      if(lc){\n        lc =\
    \ (lc > ll) ? lc : ll;\n        break;\n      }\n    }\n    l1 = l1.slice(lc);\n\
    \    l2 = l2.slice(lc);\n  }\n  return l1;\n}\n", "  var out = [],\n      i =\
    \ 0,\n      j = 0,\n      n = l1.length,\n      m = l2.length,\n      c;\n  \n\
    \  while(i < n && j < m){\n    c = l1[i];\n    while(c === l2[j]){\n      i++;\n\
    \      j++;\n    }\n    if(c !== l2[j]){\n      out.push(c);\n      i++;\n   \
    \ }else{\n      j++;\n    }\n  }\n  \n  return out;\n}\n", "    var out = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    while (i<l1.length && j<l2.length){\n\
    \        if (l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if (l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else {\n            j++;\n        }\n    }\n    return out;\n\
    }\n", "    var out = [];\n    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n\
    \            j++;\n        }\n    }\n    return out;\n}\n", "  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n", "  var ret = [];\n  for (var i = 0; i < l1.length;\
    \ i++) {\n    for (var j = 0; j < l2.length; j++) {\n      if (l1[i] === l2[j])\
    \ {\n        ret.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return ret;\n\
    }\n", "  var result = [];\n  var lLen1 = l1.length;\n  var lLen2 = l2.length;\n\
    \  if(lLen1 > lLen2){\n    for(var i = lLen1; i < lLen2; i++){\n      result.push(l1[i]);\n\
    \    }\n  }else{\n    for(var i = lLen2; i < lLen1; i++){\n      result.push(l2[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n     \
    \   result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "  var l = [], i = 0, j = 0;\n  while(l1.length && l2.length){\n    if(l1[0]\
    \ === l2[0]){\n      l.push(l1[0]);\n      l1.shift();\n      l2.shift();\n  \
    \  }else if(l1[0] < l2[0]){\n      l.push(l1[0]);\n      l1.shift();\n    }else{\n\
    \      l.push(l2[0]);\n      l2.shift();\n    }\n  }\n  while(i < l1.length){\n\
    \    l.push(l1[i++]);\n  }\n  while(j < l2.length){\n    l.push(l2[j++]);\n  }\n\
    \  return l;\n}\n", "  var result = [];\n  var i = 0;\n  var j = 0;\n  while (i\
    \ < l1.length && j < l2.length){\n    if (l1[i] === l2[j]){\n      result.push(l1[i]);\n\
    \      i++;\n      j++;\n    } else if (l1[i] < l2[j]){\n      i++;\n    } else\
    \ {\n      j++;\n    }\n  }\n  return result;\n}\n", "    var out = [];\n    var\
    \ i = 0, j = 0;\n    while(l1.length > 0 && l2.length > 0){\n        if(l1[0]\
    \ === l2[0]){\n            out.push(l1[0]);\n            l1.splice(0, 1);\n  \
    \          l2.splice(0, 1);\n        }else if(l1[0] < l2[0]){\n            l1.splice(0,\
    \ 1);\n        }else{\n            l2.splice(0, 1);\n        }\n    }\n    return\
    \ out;\n}\n", "  var result = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n\
    \  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n      result.push(l1[i]);\n\
    \      i++;\n      j++;\n    }else if(l1[i]<l2[j]){\n      i++;\n    }else{\n\
    \      j++;\n    }\n  }\n  return result;\n}\n", "  var out = [];\n  var i = 0;\n\
    \  var j = 0;\n  var k = 0;\n  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n\
    \      out.push(l1[i]);\n      i++;\n      j++;\n      k++;\n    }else if(l1[i]<l2[j]){\n\
    \      i++;\n    }else{\n      j++;\n    }\n  }\n  return out;\n}\n", "    var\
    \ result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = Math.min(l1.length,\
    \ l2.length);\n    while(i<l1 || j<l2){\n        if(l1[i] === l2[j]){\n      \
    \      result.push(l1[i]);\n            i++;\n            j++;\n        }else\
    \ if(l1[i] < l2[j]){\n            i++;\n        }else{\n            j++;\n   \
    \     }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i = 0,\
    \ len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) !== -1){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n\
    \    var lLen2 = l2.length;\n    var lIdx = 0;\n    var rIdx = 0;\n    while (lIdx\
    \ < lLen1 && rIdx < lLen2){\n        if (l1[lIdx] === l2[rIdx]){\n           \
    \ result.push(l1[lIdx]);\n            lIdx += 1;\n            rIdx += 1;\n   \
    \     }\n        else if (l1[lIdx] < l2[rIdx]){\n            lIdx += 1;\n    \
    \    }\n        else {\n            rIdx += 1;\n        }\n    }\n    return result;\n\
    }\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0;\
    \ j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "    var out = [];\n\
    \    var common;\n    for(var i = 0, len = l1.length; i < len; i++){\n       \
    \ common = true;\n        for(var j = 0, len2 = l2.length; j < len2; j++){\n \
    \           if(l1[i] === l2[j]){\n                common = false;\n          \
    \      break;\n            }\n        }\n        if(common){\n            out.push(l1[i]);\n\
    \        }\n    }\n    return out;\n}\n", "  var result = [];\n  for(var i = 0,\
    \ len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) === -1) result.push(l1[i]);\n\
    \  }\n  return result;\n}\n", "    var out = [];\n    var llen = l1.length;\n\
    \    var lx = 0;\n    var ly = 0;\n    while (lx < llen && ly < llen){\n     \
    \   if (l1[lx] === l2[ly]){\n            lx++;\n            ly++;\n        }else{\n\
    \            if (l1[lx] < l2[ly]){\n                out.push(l1[lx]);\n      \
    \          lx++;\n            }else{\n                out.push(l2[ly]);\n    \
    \            ly++;\n            }\n        }\n    }\n    return out;\n}\n", " \
    \ var result = [];\n  for(var i = 0, len = Math.min(l1.length, l2.length); i <\
    \ len; i++){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    var i = 0;\n    var j = 0;\n\
    \    var k = 0;\n    var l = Math.min(l1.length, l2.length);\n    while(i < l1\
    \ || j < l2){\n        if(l1.length < l2.length){\n            if(!l1){\n    \
    \            break;\n            }\n            i++;\n        }else{\n       \
    \     if(!l2){\n                break;\n            }\n            j++;\n    \
    \    }\n        if(l1.charAt(i) !== l2.charAt(j)){\n            break;\n     \
    \   }\n        i++;\n        j++;\n    }\n    while(i < l1){\n        result.push(l1.charAt(i));\n\
    \        i++;\n    }\n    while(j < l2){\n        result.push(l2.charAt(j));\n\
    \        j++;\n    }\n    return result;\n}\n", "  var out = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return\
    \ out;\n}\n", "    var out = [];\n    var i = 0;\n    var j = 0;\n    var k =\
    \ 0;\n    var n = Math.min(l1.length, l2.length);\n    while(i<n && j<n){\n  \
    \      if(l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n  \
    \          j++;\n        }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n\
    \            j++;\n        }\n    }\n    return out;\n}\n", "    var out = [];\n\
    \    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            out.push(l1[i]);\n            i++;\n            j++;\n        }\n\
    \        else if(l1[i]<l2[j]){\n            j++;\n        }\n        else{\n \
    \           i++;\n        }\n    }\n    return out;\n}\n", "  var out = [];\n\
    \  var common = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        common.push(l1[i]);\n      }\n  \
    \  }\n  }\n  return common;\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n\
    \    var lLen2 = l2.length;\n    var lIdx = 0;\n    var rIdx = 0;\n    var commonCount\
    \ = 0;\n    while (lIdx < lLen1 && rIdx < lLen2){\n        if (l1[lIdx] === l2[rIdx]){\n\
    \            commonCount++;\n            lIdx++;\n            rIdx++;\n      \
    \  }\n        else if (l1[lIdx] < l2[rIdx]){\n            result.push(l1[lIdx]);\n\
    \            lIdx++;\n        }\n        else{\n            result.push(l2[rIdx]);\n\
    \            rIdx++;\n        }\n    }\n    while (lIdx < lLen1){\n        result.push(l1[lIdx]);\n\
    \        lIdx++;\n    }\n    while (rIdx < lLen2){\n        result.push(l2[rIdx]);\n\
    \        rIdx++;\n    }\n    return result;\n}\n", "    var result = [];\n   \
    \ var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var lIdx = 0;\n    var\
    \ rIdx = 0;\n    while (lIdx < lLen1 && rIdx < lLen2){\n        if (l1[lIdx] ===\
    \ l2[rIdx]){\n            result.push(l1[lIdx]);\n            lIdx += 1;\n   \
    \         rIdx += 1;\n        }else{\n            lIdx += 1;\n        }\n    }\n\
    \    while (lIdx < lLen1){\n        result.push(l1[lIdx]);\n        lIdx += 1;\n\
    \    }\n    while (rIdx < lLen2){\n        result.push(l2[rIdx]);\n        rIdx\
    \ += 1;\n    }\n    return result;\n}\n", "    var result = [];\n    var lLen\
    \ = l1.length;\n    var lIdx = 0, rIdx = 0, i = 0;\n    while(lIdx < lLen && rIdx\
    \ < rLen){\n        if(l1[lIdx] === l2[rIdx]){\n            result.push(l1[lIdx]);\n\
    \            lIdx += 1;\n            rIdx += 1;\n        }else{\n            if(l1[lIdx]\
    \ < l2[rIdx]){\n                lIdx += 1;\n            }else{\n             \
    \   rIdx += 1;\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var out = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i<l1.length\
    \ && j<l2.length){\n        if(l1[i]===l2[j]){\n            out.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else{\n            if(l1[i]<l2[j]){\n\
    \                i++;\n            }else{\n                j++;\n            }\n\
    \        }\n    }\n    return out;\n}\n", "  var result = [];\n  for(var i = 0,\
    \ len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) === -1){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "    var result = [];\n    var i = 0, j =\
    \ 0;\n    var len = Math.min(l1.length, l2.length);\n    for(; i < len; i++){\n\
    \        if(l1[i] === l2[j]){\n            result.push(l1[i]);\n            j++;\n\
    \        }\n        else{\n            break;\n        }\n    }\n    return result;\n\
    }\n", "  var out = [];\n  while(l1.length && l2.length){\n    if(l1[0] === l2[0]){\n\
    \      out.push(l1[0]);\n      l1.shift();\n      l2.shift();\n    }else if(l1[0]\
    \ < l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n    }else{\n      out.push(l2[0]);\n\
    \      l2.shift();\n    }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n \
    \ }\n  return result;\n}\n", "    var out = [];\n    var i = 0, j = 0;\n    while(l1.length\
    \ > 0 && l2.length > 0){\n        if(l1[0] === l2[0]){\n            out.push(l1[0]);\n\
    \            l1.shift();\n            l2.shift();\n        }else if(l1[0] < l2[0]){\n\
    \            l1.shift();\n        }else{\n            l2.shift();\n        }\n\
    \    }\n    return out;\n}\n", "    var result = [];\n    var i = 0, j = 0;\n\
    \    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n        \
    \    result.push(l1[i]);\n            i++;\n            j++;\n        }else if(l1[i]<l2[j]){\n\
    \            j++;\n        }else{\n            i++;\n        }\n    }\n    return\
    \ result;\n}\n", "  var out = [];\n  var common;\n  for(var i=0; i<l1.length;\
    \ i++){\n    common = false;\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        common = true;\n        break;\n      }\n    }\n    if(common){\n   \
    \   out.push(l1[i]);\n    }\n  }\n  return out;\n}\n", "  var out = [];\n  var\
    \ common;\n  for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n\
    \    common = l1[i] === l2[i] ? l1[i] : common;\n  }\n  if(common === undefined){\n\
    \    common = l1.length;\n  }\n  for(var i = 0, len = Math.min(l1.length, l2.length);\
    \ i < len; i++){\n    out.push(l1[i]);\n  }\n  return out;\n}\n", "    var result\
    \ = [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var i = 0;\n\
    \    var j = 0;\n    while(i<lLen1 && j<lLen2){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) === -1){\n  \
    \    result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i])\
    \ === -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    var lLen = l1.length;\n    var l2 = l2.length;\n   \
    \ var i = 0;\n    var j = 0;\n    while(i<lLen && j<l2){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  var i = 0;\n\
    \  var j = 0;\n  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n\
    \      result.push(l1[i]);\n      i++;\n      j++;\n    }else{\n      i++;\n \
    \   }\n  }\n  return result;\n}\n", "    var out = [];\n    var common = [];\n\
    \    for(var i=0; i<l1.length; i++){\n        for(var j=0; j<l2.length; j++){\n\
    \            if(l1[i] === l2[j]){\n                common.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return common;\n}\n",
  "  var out = [];\n  var i = 0;\n  while(l1.length > i){\n    if(l2.indexOf(l1[i])\
    \ === -1){\n      out.push(l1[i]);\n    }\n    i++;\n  }\n  return out;\n}\n",
  "    var out = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var n =\
    \ l1.length;\n    var m = l2.length;\n    while(i < n && j < m){\n        if(l1[i]\
    \ === l2[j]){\n            out.push(l1[i]);\n            i++;\n            j++;\n\
    \        }else{\n            if(l1[i] < l2[j]){\n                i++;\n      \
    \      }else{\n                j++;\n            }\n        }\n    }\n    return\
    \ out;\n}\n", "    var out = [];\n    var i = 0;\n    var j = 0;\n    var k =\
    \ 0;\n    var l = 0;\n    var m = l1.length;\n    var n = l2.length;\n    while(i\
    \ < m && j < n){\n        if(l1[i] === l2[j]){\n            out.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else{\n            if(l1[i] < l2[j]){\n\
    \                i++;\n            }else{\n                j++;\n            }\n\
    \        }\n    }\n    return out;\n}\n", "  var result = [];\n  var i = 0;\n\
    \  var j = 0;\n  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n\
    \      result.push(l1[i]);\n      i++;\n      j++;\n    }else if(l1[i]<l2[j]){\n\
    \      i++;\n    }else{\n      j++;\n    }\n  }\n  return result;\n}\n", "  var\
    \ ret = [];\n  for (var i = 0; i < l1.length; i++) {\n    for (var j = 0; j <\
    \ l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        ret.push(l1[i]);\n\
    \      }\n    }\n  }\n  return ret;\n}\n", "    var result = [];\n    var lLen\
    \ = l1.length;\n    var l1Len = l1.length;\n    var l2Len = l2.length;\n    var\
    \ i = 0;\n    var j = 0;\n    while(i<lLen){\n        while(j<l2Len){\n      \
    \      if(l1[i]===l2[j]){\n                result.push(l1[i]);\n             \
    \   i++;\n                j++;\n            }else{\n                break;\n \
    \           }\n        }\n        if(j===l2Len){\n            result.push(l1[i]);\n\
    \            i++;\n        }\n    }\n    return result;\n}\n", "  var out = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n\
    \      l1.splice(0, 1);\n      l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n\
    \      l1.shift();\n    }else{\n      l2.shift();\n    }\n  }\n  return out;\n\
    }\n", "    var out = [];\n    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if(l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    return out;\n\
    }\n", "  var result = [];\n  for(var i = 0, len = Math.min(l1.length, l2.length);\
    \ i < len; i++){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n    }\n\
    \  }\n  return result;\n}\n", "  var result = [];\n  for(var i = 0, len = l1.length;\
    \ i < len; i++){\n    if(l2.indexOf(l1[i]) === -1){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i = 0, len\
    \ = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) === -1){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "    var out = [];\n    var i = 0, j = 0;\n    var len = Math.min(l1.length,\
    \ l2.length);\n    while (i < len && j < len){\n        if (l1[i] === l2[j]){\n\
    \            out.push(l1[i]);\n            i++;\n            j++;\n        }\n\
    \        else if (l1[i] < l2[j]){\n            i++;\n        }\n        else{\n\
    \            j++;\n        }\n    }\n    return out;\n}\n", "  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) !=\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "    var\
    \ out = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n\
    \    var n1 = l1.length;\n    var n2 = l2.length;\n    while( i < n1 && j < n2){\n\
    \        if( l1[i] === l2[j]){\n            out.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else{\n            if(l1[i] < l2[j]){\n          \
    \      i++;\n            }else{\n                j++;\n            }\n       \
    \ }\n    }\n    while( i < n1){\n        out.push(l1[i]);\n        i++;\n    }\n\
    \    while( j < n2){\n        out.push(l2[j]);\n        j++;\n    }\n    return\
    \ out;\n}\n", "  var out = [];\n  while(l1.length && l2.length){\n    if(l1[0]\
    \ < l2[0]){\n      out.push(l1.shift());\n    }else{\n      out.push(l2.shift());\n\
    \    }\n  }\n  return out;\n}\n", "  var out = [],\n      i = 0,\n      j = 0,\n\
    \      n = l1.length,\n      m = l2.length,\n      c;\n  \n  while (i < n && j\
    \ < m) {\n    c = l1[i];\n    if (c === l2[j]){\n      out.push(c);\n      i++;\n\
    \      j++;\n    }\n    else if (c < l2[j]){\n      j++;\n    }\n    else{\n \
    \     i++;\n    }\n  }\n  \n  return out;\n}\n", "  var out = [];\n  var i = 0;\n\
    \  var j = 0;\n  var k = 0;\n  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n\
    \      out.push(l1[i]);\n      i++;\n      j++;\n    }else if(l1[i]<l2[j]){\n\
    \      i++;\n    }else{\n      j++;\n    }\n  }\n  return out;\n}\n", "    var\
    \ result = [];\n    var i = 0;\n    while(i<l1.length && i<l2.length){\n     \
    \   if(l1[i]===l2[i]){\n            result.push(l1[i]);\n            i++;\n  \
    \      }\n        else{\n            break;\n        }\n    }\n    return result;\n\
    }\n", "    var out = [];\n    var i, j, k;\n    for(i=0, j=0; i<l1.length; i++){\n\
    \        if(l2[i] === l1[j]){\n            out.push(l2[i]);\n            j++;\n\
    \        }else{\n            k = j;\n            while(l1[k] === l2[k]){\n   \
    \             k++;\n            }\n            out.push(l1[i]);\n            for(j=k;\
    \ j<l1.length; j++){\n                if(l1[j] === l2[j]){\n                 \
    \   out.push(l1[j]);\n                }\n            }\n        }\n    }\n   \
    \ return out;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n\
    \    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n     \
    \   if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n  \
    \          j++;\n        }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n\
    \            j++;\n        }\n    }\n    return result;\n}\n", "    var out =\
    \ [];\n    var i, j, k;\n    for(i=0, j=0; i<l1.length; i++){\n        for(j=0;\
    \ j<l2.length; j++){\n            if(l1[i]===l2[j]){\n                out.push(l1[i]);\n\
    \                i++;\n                j++;\n            }\n        }\n    }\n\
    \    return out;\n}\n", "    var result = [];\n    var i = 0, j = 0;\n    var\
    \ len = Math.min(l1.length, l2.length);\n    while (i < len && j < len){\n   \
    \     if (l1[i] === l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if (l1[i] < l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    return result;\n\
    }\n", "  var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n\
    \    if(l2.indexOf(l1[i]) === -1){\n      result.push(l1[i]);\n    }\n  }\n  return\
    \ result;\n}\n", "  var result = [];\n  for(var i = 0, len = l1.length; i < len;\
    \ i++){\n    if(l2.indexOf(l1[i]) === -1){\n      result.push(l1[i]);\n    }\n\
    \  }\n  return result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "  var result = [];\n  for(var i = 0, len = Math.min(l1.length, l2.length);\
    \ i < len; i++){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n    }\n\
    \  }\n  return result;\n}\n", "    var result = [];\n    var i = 0;\n    var j\
    \ = 0;\n    var k = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n", "  var out = [];\n  var llen = l1.length;\n\
    \  var lx = 0;\n  var ly = 0;\n  while(lx < llen && ly < llen){\n    if(l1[lx]\
    \ === l2[ly]){\n      out.push(l1[lx]);\n      lx++;\n      ly++;\n    }else if(l1[lx]\
    \ < l2[ly]){\n      ly++;\n    }else{\n      lx++;\n    }\n  }\n  return out;\n\
    }\n", "    var result = [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n\
    \    var i = 0;\n    var j = 0;\n    while(i<lLen1 && j<lLen2){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0, len = l1.length; i < len; i++){\n    for(var j = 0, len2 = l2.length; j\
    \ < len2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n   \
    \     break;\n      }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) !=\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "    var\
    \ result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n\
    \    var n1 = l1.length;\n    var n2 = l2.length;\n    while(i<n1 && j<n2){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if(l1[i]<l2[j]){\n            j++;\n\
    \        }\n        else{\n            i++;\n        }\n    }\n    while(i<n1){\n\
    \        result.push(l1[i]);\n        i++;\n    }\n    while(j<n2){\n        result.push(l2[j]);\n\
    \        j++;\n    }\n    return result;\n}\n", "  var result = [];\n  for(var\
    \ i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) === -1){\n\
    \      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "    var out =\
    \ [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i<l1.length &&\
    \ j<l2.length){\n        if(l1[i]===l2[j]){\n            out.push(l1[i]);\n  \
    \          i++;\n            j++;\n        }else{\n            if(l1[i]<l2[j]){\n\
    \                i++;\n            }else{\n                j++;\n            }\n\
    \        }\n    }\n    while(i<l1.length){\n        out.push(l1[i]);\n       \
    \ i++;\n    }\n    while(j<l2.length){\n        out.push(l2[j]);\n        j++;\n\
    \    }\n    return out;\n}\n", "  var result = [];\n  var i = 0;\n  var j = 0;\n\
    \  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n      result.push(l1[i]);\n\
    \      i++;\n      j++;\n    }else if(l1[i]<l2[j]){\n      i++;\n    }else{\n\
    \      j++;\n    }\n  }\n  return result;\n}\n", "    var result = [];\n    var\
    \ lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var i = 0;\n    var j =\
    \ 0;\n    while(i<lLen1 && j<lLen2){\n        if(l1[i]===l2[j]){\n           \
    \ result.push(l1[i]);\n            i++;\n            j++;\n        }\n       \
    \ else if(l1[i]<l2[j]){\n            i++;\n        }\n        else{\n        \
    \    j++;\n        }\n    }\n    return result;\n}\n", "    var out = [];\n  \
    \  var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else{\n            if(l1[i]<l2[j]){\n            \
    \    i++;\n            }else{\n                j++;\n            }\n        }\n\
    \    }\n    return out;\n}\n", "  var result = [];\n  var i = 0;\n  var j = 0;\n\
    \  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n      result.push(l1[i]);\n\
    \      i++;\n      j++;\n    }else if(l1[i]<l2[j]){\n      i++;\n    }else{\n\
    \      j++;\n    }\n  }\n  return result;\n}\n", "  var l = [], i = 0, j = 0;\n\
    \  while(l1 && l2 && l1[i] === l2[j]){\n    l.push(l1[i++]);\n    j++;\n  }\n\
    \  return l;\n}\n", "    var result = [];\n    for(var i=0; i<l1.length; i++){\n\
    \        if(l2.indexOf(l1[i]) != -1){\n            result.push(l1[i]);\n     \
    \   }\n    }\n    return result;\n}\n", "    var result = [];\n    var lLen1 =\
    \ l1.length;\n    var lLen2 = l2.length;\n    var lIdx = 0;\n    var lIdx2 = lLen1;\n\
    \    while (lIdx < lLen1 && lIdx < lLen2){\n        if (l1[lIdx] === l2[lIdx2]){\n\
    \            result.push(l1[lIdx]);\n            lIdx++;\n            lIdx2++;\n\
    \        }\n        else {\n            lIdx++;\n        }\n    }\n    return\
    \ result;\n}\n", "  var lc = l1.length, lp = l2.length, i = 0, j = 0;\n  while(lc\
    \ && lp && lc == lp){\n    i++;\n    lc -= 1;\n    lp -= 1;\n  }\n  if(lc){\n\
    \    return [];\n  }\n  if(lp){\n    return l2;\n  }\n  while(i){\n    if(l1[i]\
    \ != l2[j]){\n      return l1[i];\n    }\n    i++;\n    j++;\n  }\n  return l1[0];\n\
    }\n", "    var result = [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n\
    \    var lIdx = 0;\n    var rIdx = 0;\n    var commonCount = 0;\n    while (lIdx\
    \ < lLen1 && rIdx < lLen2){\n        if (l1[lIdx] === l2[rIdx]){\n           \
    \ commonCount++;\n            lIdx++;\n            rIdx++;\n        }\n      \
    \  else if (l1[lIdx] < l2[rIdx]){\n            lIdx++;\n        }\n        else\
    \ {\n            rIdx++;\n        }\n    }\n    while (lIdx < lLen1){\n      \
    \  result.push(l1[lIdx]);\n        lIdx++;\n    }\n    while (rIdx < lLen2){\n\
    \        result.push(l2[rIdx]);\n        rIdx++;\n    }\n    return result;\n\
    }\n", "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i<l1.length\
    \ && j<l2.length){\n        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else if(l1[i]<l2[j]){\n        \
    \    i++;\n        }else{\n            j++;\n        }\n    }\n    return result;\n\
    }\n", "  var lc = l1.length,\n      l2 = l2.length,\n      i = 0, j = 0;\n  while(i<lc\
    \ && j<l2){\n    if(l1[i]===l2[j]){\n      i++;\n      j++;\n    }else{\n    \
    \  if(l1[i]<l2[j]){\n        l1.splice(i, 1);\n      }else{\n        l2.splice(j,\
    \ 1);\n      }\n    }\n  }\n  if(lc<l2){\n    l1.splice(lc, lc-lc);\n  }\n  return\
    \ l1;\n}\n", "  var result = [];\n  var i = 0;\n  var j = 0;\n  var lLen = l1.length;\n\
    \  var l1Len = l1.length;\n  var l2Len = l2.length;\n  while (l1 < l2) {\n   \
    \ if (l1.length == l2.length) {\n      result.push(l1[i]);\n      i++;\n     \
    \ j++;\n      lLen--;\n      l1Len--;\n      l2Len--;\n    }\n    else if (l1.length\
    \ > l2.length) {\n      result.push(l2[j]);\n      j++;\n      lLen--;\n     \
    \ l1Len--;\n      l2Len--;\n    }\n    else {\n      result.push(l1[i]);\n   \
    \   i++;\n      lLen--;\n      l1Len--;\n      l2Len--;\n    }\n  }\n  while (lLen\
    \ > 0 && l1[lLen - 1] == l2[lLen - 1]) {\n    lLen--;\n    l1Len--;\n    l2Len--;\n\
    \  }\n  while (lLen > 0 && l1[lLen - 1] != l2[lLen - 1]) {\n    result.push(l1[lLen\
    \ - 1]);\n    lLen--;\n    l1Len--;\n    l2Len--;\n  }\n  return result;\n}\n",
  "    var result = [];\n    var lLen = l1.length;\n    var l2 = l2.length;\n    var\
    \ l = 0;\n    var i = 0;\n    while (l<lLen){\n        if (l2.indexOf(l1[l]) ===\
    \ -1){\n            result.push(l1[l]);\n            l++;\n        }\n       \
    \ else{\n            l++;\n        }\n    }\n    return result;\n}\n", "  var\
    \ result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i])\
    \ == -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "  \
    \  var result = [];\n    var i = 0;\n    var j = 0;\n    var lLen1 = l1.length;\n\
    \    var lLen2 = l2.length;\n    while( i < lLen1 && j < lLen2){\n        if(l1[i]\
    \ === l2[j]){\n            result.push(l1[i]);\n            i++;\n           \
    \ j++;\n        }\n        else if(l1[i] < l2[j]){\n            i++;\n       \
    \ }\n        else{\n            j++;\n        }\n    }\n    return result;\n}\n",
  "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) === -1){\n  \
    \    result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "  var out = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n  \
    \  }\n  }\n  return out;\n}\n", "  var out = [];\n  var i = 0;\n  var j = 0;\n\
    \  var k = 0;\n  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n\
    \      out.push(l1[i]);\n      i++;\n      j++;\n    }else if(l1[i]<l2[j]){\n\
    \      i++;\n    }else{\n      j++;\n    }\n  }\n  return out;\n}\n", "  var result\
    \ = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i])\
    \ === -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", " \
    \ var out = [];\n  var lLen1 = l1.length;\n  var lLen2 = l2.length;\n  if(lLen1\
    \ > lLen2){\n    out = l1;\n    l1 = l2;\n    l2 = out;\n  }\n  for(var i=0; i<lLen1;\
    \ i++){\n    for(var j=0; j<lLen2; j++){\n      if(l1[i] === l2[j]){\n       \
    \ out.push(l1[i]);\n        l1.splice(i, 1);\n        l2.splice(j, 1);\n     \
    \   i--;\n        j--;\n      }\n    }\n  }\n  return out;\n}\n", "  var result\
    \ = [];\n  for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n\
    \    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n\
    }\n", "    var result = [];\n    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else if(l1[i]<l2[j]){\n            j++;\n        }else{\n\
    \            i++;\n        }\n    }\n    return result;\n}\n", "    var out =\
    \ [];\n    var i = 0, j = 0;\n    var n = l1.length;\n    var m = l2.length;\n\
    \    while(i < n && j < m){\n        if(l1[i] === l2[j]){\n            out.push(l1[i]);\n\
    \            i++;\n            j++;\n        }\n        else if(l1[i] > l2[j]){\n\
    \            j++;\n        }\n        else{\n            i++;\n        }\n   \
    \ }\n    return out;\n}\n", "  var result = [];\n  for(var i = 0, len = l1.length;\
    \ i < len; i++){\n    if(l2.indexOf(l1[i]) === -1){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var out = [];\n  while(l1.length > 0 &&\
    \ l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n\
    \      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n   \
    \   l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n    }\n\
    \  }\n  return out;\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n\
    \    var lLen2 = l2.length;\n    var lIdx = 0;\n    var l2Idx = 0;\n    while\
    \ (lIdx < lLen1 && l2Idx < lLen2){\n        if (l1[lIdx] === l2[l2Idx]){\n   \
    \         result.push(l1[lIdx]);\n            lIdx += 1;\n            l2Idx +=\
    \ 1;\n        }\n        else if (l1[lIdx] < l2[l2Idx]){\n            lIdx +=\
    \ 1;\n        }\n        else {\n            l2Idx += 1;\n        }\n    }\n \
    \   return result;\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n\
    \    var lLen2 = l2.length;\n    var lIdx = 0;\n    var rIdx = 0;\n    while (lIdx\
    \ < lLen1 && rIdx < lLen2){\n        if (l1[lIdx] === l2[rIdx]){\n           \
    \ result.push(l1[lIdx]);\n            lIdx += 1;\n            rIdx += 1;\n   \
    \     }else{\n            lIdx += 1;\n        }\n    }\n    while (lIdx < lLen1){\n\
    \        result.push(l1[lIdx]);\n        lIdx += 1;\n    }\n    while (rIdx <\
    \ lLen2){\n        result.push(l2[rIdx]);\n        rIdx += 1;\n    }\n    return\
    \ result;\n}\n", "  var result = [];\n  var i = 0;\n  var j = 0;\n  while (i <\
    \ l1.length && j < l2.length){\n    if (l1[i] === l2[j]){\n      result.push(l1[i]);\n\
    \      i++;\n      j++;\n    } else if (l1[i] < l2[j]){\n      i++;\n    } else\
    \ {\n      j++;\n    }\n  }\n  return result;\n}\n", "    var out = [];\n    var\
    \ common;\n    for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n\
    \        common = l1[i] === l2[i] ? l1[i] : l1[i] + ',' + l2[i];\n        out.push(common);\n\
    \    }\n    return out;\n}\n", "    var out = [];\n    var i = 0;\n    var j =\
    \ 0;\n    var k = 0;\n    var commonCount = 0;\n    var minLen = Math.min(l1.length,\
    \ l2.length);\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            commonCount++;\n            i++;\n            j++;\n        }else{\n\
    \            if(commonCount===0){\n                out.push(l1[i]);\n        \
    \        i++;\n            }else if(commonCount===1){\n                out.push(l2[j]);\n\
    \                j++;\n            }else{\n                if(minLen===l1.length){\n\
    \                    out.push(l1[i]);\n                    i++;\n            \
    \    }else{\n                    out.push(l2[j]);\n                    j++;\n\
    \                }\n            }\n            commonCount = 0;\n        }\n \
    \   }\n    while(i < l1.length){\n        out.push(l1[i]);\n        i++;\n   \
    \ }\n    while(j < l2.length){\n        out.push(l2[j]);\n        j++;\n    }\n\
    \    return out;\n}\n", "  var result = [];\n  var i = 0;\n  var j = 0;\n  var\
    \ k = 0;\n  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n     \
    \ result.push(l1[i]);\n      i++;\n      j++;\n    }else if(l1[i]<l2[j]){\n  \
    \    i++;\n    }else{\n      j++;\n    }\n  }\n  return result;\n}\n", "    var\
    \ result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = Math.min(l1.length,\
    \ l2.length);\n    while(i < l1 || j < l2){\n        if(l1.length < l2.length){\n\
    \            if(!l1){\n                break;\n            }\n            i++;\n\
    \        }else{\n            if(!l2){\n                break;\n            }\n\
    \            j++;\n        }\n        if(l1.charAt(i) === l2.charAt(j)){\n   \
    \         result.push(l1.charAt(i));\n            i++;\n            j++;\n   \
    \     }else{\n            k++;\n        }\n    }\n    return result;\n}\n", " \
    \   var result = [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n\
    \    var l1, l2, i;\n    for(i = 0; i < lLen1; i++){\n        l1 = l1[i];\n  \
    \      for(j = 0; j < lLen2; j++){\n            l2 = l2[j];\n            if(l1\
    \ === l2){\n                result.push(l1);\n                break;\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var\
    \ i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) === -1){\n\
    \      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "    var out =\
    \ [];\n    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n       \
    \ if(l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n       \
    \     j++;\n        }\n        else if(l1[i]<l2[j]){\n            j++;\n     \
    \   }\n        else{\n            i++;\n        }\n    }\n    return out;\n}\n",
  "    var result = [];\n    var lLen = l1.length;\n    var l1Index = 0, l2Index =\
    \ 0;\n    while (l1Index < lLen) {\n        var l1Item = l1[l1Index];\n      \
    \  while (l2Index < lLen) {\n            var l2Item = l2[l2Index];\n         \
    \   if (l1Item === l2Item) {\n                result.push(l1Item);\n         \
    \       l1Index++;\n                l2Index++;\n            } else if (l1Item\
    \ < l2Item) {\n                l2Index++;\n            } else {\n            \
    \    l1Index++;\n            }\n        }\n        l1Index++;\n    }\n    return\
    \ result;\n}\n", "  var result = [];\n  while(l1.length > 0 && l2.length > 0){\n\
    \    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n      l1.shift();\n    \
    \  l2.shift();\n    }else if(l1[0] < l2[0]){\n      l1.shift();\n    }else{\n\
    \      l2.shift();\n    }\n  }\n  return result;\n}\n", "    var result = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        if(l2.indexOf(l1[i]) !== -1){\n\
    \            result.push(l1[i]);\n        }\n    }\n    return result;\n}\n",
  "    var out = [];\n    var common, i, len;\n    for(i = 0, len = l1.length; i <\
    \ len; i++){\n        common = false;\n        for(var j = 0, len2 = l2.length;\
    \ j < len2; j++){\n            if(l1[i] === l2[j]){\n                common =\
    \ true;\n                break;\n            }\n        }\n        if(common){\n\
    \            out.push(l1[i]);\n        }\n    }\n    return out;\n}\n", "    var\
    \ out = [];\n    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n \
    \       if(l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n \
    \           j++;\n        }\n        else if(l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    return out;\n\
    }\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0;\
    \ j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  var lLen1 = l1.length;\n  var lLen2 = l2.length;\n  if(lLen1 > lLen2){\n\
    \    return common(l2, l1);\n  }\n  if(lLen2 > lLen1){\n    return common(l1,\
    \ l2);\n  }\n  while(lLen1 > 0){\n    if(l1[lLen1 - 1] === l2[lLen2 - 1]){\n \
    \     result.push(l1[lLen1 - 1]);\n      lLen1--;\n      lLen2--;\n    }else{\n\
    \      break;\n    }\n  }\n  return result;\n}\n", "  var out = [];\n  var common;\n\
    \  for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    common\
    \ = l1[i] === l2[i] ? l1[i] : common;\n    if(common !== null){\n      out.push(common);\n\
    \    }\n  }\n  return out;\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n\
    \    var lLen2 = l2.length;\n    var lIdx = 0;\n    var rIdx = 0;\n    while (lIdx\
    \ < lLen1 && rIdx < lLen2){\n        if (l1[lIdx] === l2[rIdx]){\n           \
    \ result.push(l1[lIdx]);\n            lIdx++;\n            rIdx++;\n        }\n\
    \        else if (l1[lIdx] < l2[rIdx]){\n            lIdx++;\n        }\n    \
    \    else{\n            rIdx++;\n        }\n    }\n    return result;\n}\n", " \
    \ var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n\
    \    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "    var out = [];\n\
    \    var common;\n    var l12 = [];\n    var l12l2 = [];\n    var l1, l2, l12l2,\
    \ i, j, k;\n    for(i = 0; i < l1.length; i++){\n        l12l2 = l12l2.concat(l1[i]);\n\
    \    }\n    for(i = 0; i < l2.length; i++){\n        l12l2 = l12l2.concat(l2[i]);\n\
    \    }\n    for(i = 0; i < l12l2.length; i++){\n        common = l12l2[i];\n \
    \       for(j = 0; j < l1.length; j++){\n            l12l2 = l12l2.concat(l1[j]);\n\
    \        }\n        for(j = 0; j < l2.length; j++){\n            l12l2 = l12l2.concat(l2[j]);\n\
    \        }\n        for(j = 0; j < l12l2.length; j++){\n            if(l12l2[j]\
    \ === common){\n                out.push(common);\n            }\n        }\n\
    \    }\n    return out;\n}\n", "  var out = [];\n  var i = 0;\n  var j = 0;\n\
    \  while (i < l1.length && j < l2.length){\n    if (l1[i] === l2[j]){\n      out.push(l1[i]);\n\
    \      i++;\n      j++;\n    } else if (l1[i] < l2[j]){\n      i++;\n    } else\
    \ {\n      j++;\n    }\n  }\n  return out;\n}\n", "  var out = [],\n      i =\
    \ 0,\n      j = 0,\n      n = l1.length,\n      m = l2.length,\n      c;\n  \n\
    \  for(; i < n; i++){\n    c = l1[i];\n    for(; j < m; j++){\n      if(c == l2[j]){\n\
    \        out.push(l2[j]);\n        break;\n      }\n    }\n  }\n  return out;\n\
    }\n", "    var result = [];\n    var lLen = l1.length;\n    var l1Index = 0, l2Index\
    \ = 0;\n    while (l1Index < lLen) {\n        var l1Item = l1[l1Index];\n    \
    \    while (l2Index < lLen) {\n            var l2Item = l2[l2Index];\n       \
    \     if (l2Item === l1Item) {\n                result.push(l2Item);\n       \
    \         l2Index++;\n            }\n            else {\n                break;\n\
    \            }\n        }\n        l1Index++;\n    }\n    return result;\n}\n",
  "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i =\
    \ 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) !== -1){\n    \
    \  result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "    var result =\
    \ [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var i = 0;\n\
    \    var j = 0;\n    while(i<lLen1 && j<lLen2){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n", "    var out = [];\n    var common\
    \ = [];\n    var i = 0;\n    var j = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            common.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if(l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    while(i<l1.length){\n\
    \        common.push(l1[i]);\n        i++;\n    }\n    while(j<l2.length){\n \
    \       common.push(l2[j]);\n        j++;\n    }\n    return common;\n}\n", " \
    \   var out = [];\n    var i = 0, j = 0;\n    var len = Math.min(l1.length, l2.length);\n\
    \    while (i < len && j < len){\n        if (l1[i] === l2[j]){\n            out.push(l1[i]);\n\
    \            i++;\n            j++;\n        }\n        else if (l1[i] < l2[j]){\n\
    \            i++;\n        }\n        else {\n            j++;\n        }\n  \
    \  }\n    return out;\n}\n", "  var result = [];\n  var commonIndex = 0;\n  var\
    \ length1 = l1.length;\n  var length2 = l2.length;\n  if(length1 > length2){\n\
    \    for(var i = 0; i<length1; i++){\n      for(var j = 0; j<length2; j++){\n\
    \        if(l1[i] === l2[j]){\n          result.push(l1[i]);\n          commonIndex++;\n\
    \        }\n      }\n    }\n  }else{\n    for(var i = 0; i<length2; i++){\n  \
    \    for(var j = 0; j<length1; j++){\n        if(l2[i] === l1[j]){\n         \
    \ result.push(l2[i]);\n          commonIndex++;\n        }\n      }\n    }\n \
    \ }\n  return result;\n}\n", "    var out = [];\n    var i = 0;\n    var j = 0;\n\
    \    var k = 0;\n    var l = Math.min(l1.length, l2.length);\n    while(i < l1\
    \ || j < l2){\n        if(l1.length < l2.length){\n            out.push(l1[i++]);\n\
    \        }else{\n            out.push(l2[j++]);\n        }\n    }\n    return\
    \ out;\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n    var lLen2\
    \ = l2.length;\n    var l1, l2, i;\n    for(i = 0; i < lLen1; i++){\n        l1\
    \ = l1[i];\n        for(j = 0; j < lLen2; j++){\n            l2 = l2[j];\n   \
    \         if(l1 === l2){\n                result.push(l1);\n                break;\n\
    \            }\n        }\n    }\n    return result;\n}\n", "  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) ==\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "    var\
    \ result = [];\n    var lLen = l1.length;\n    var l2 = l2.length;\n    var l\
    \ = 0;\n    while(l<lLen){\n        if(l2.indexOf(l1[l]) == l){\n            result.push(l1[l]);\n\
    \            l++;\n        }\n        l++;\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

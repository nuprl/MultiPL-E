name: HumanEval_87_get_row
language: js
prompt: "//You are given a 2 dimensional data, as a nested arrays,\n// which is similar\
  \ to matrix, however, unlike matrices,\n// each row may contain a different number\
  \ of columns.\n// Given lst, and integer x, find integers x in the array,\n// and\
  \ return array of arrays, [(x1, y1), (x2, y2) ...] such that\n// each array is a\
  \ coordinate - (row, columns), starting with 0.\n// Sort coordinates initially by\
  \ rows in ascending order.\n// Also, sort coordinates of the row by columns in descending\
  \ order.\n// Examples:\n// >>> get_row([[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6],\
  \ [1, 2, 3, 4, 5, 1]], 1)\n// [[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]\n// >>> get_row([],\
  \ 1)\n// []\n// >>> get_row([[], [1], [1, 2, 3]], 3)\n// [[2, 2]]\nfunction get_row(lst,\
  \ x){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = get_row;\n  assert.deepEqual(candidate([[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1,\
  \ 6], [1, 2, 3, 4, 5, 1]], 1),[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]);\n  assert.deepEqual(candidate([[1,\
  \ 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1,\
  \ 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]], 2),[[0, 1], [1, 1], [2, 1], [3, 1], [4, 1],\
  \ [5, 1]]);\n  assert.deepEqual(candidate([[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6],\
  \ [1, 1, 3, 4, 5, 6], [1, 2, 1, 4, 5, 6], [1, 2, 3, 1, 5, 6], [1, 2, 3, 4, 1, 6],\
  \ [1, 2, 3, 4, 5, 1]], 1),[[0, 0], [1, 0], [2, 1], [2, 0], [3, 2], [3, 0], [4, 3],\
  \ [4, 0], [5, 4], [5, 0], [6, 5], [6, 0]]);\n  assert.deepEqual(candidate([], 1),[]);\n\
  \  assert.deepEqual(candidate([[1]], 2),[]);\n  assert.deepEqual(candidate([[],\
  \ [1], [1, 2, 3]], 3),[[2, 2]]);\n}\n\ntest();"
completions: ["  if(lst.length == 0){\n    return [];\n  }\n  var result = [];\n \
    \ var row = [];\n  for(var i = 0, len = lst.length; i < len; i++){\n    if(lst[i].indexOf(x)\
    \ != -1){\n      row.push(i);\n    }\n  }\n  if(row.length > 0){\n    result.push(row);\n\
    \  }\n  for(var i = 0, len = lst.length; i < len; i++){\n    if(lst[i].indexOf(x)\
    \ == -1){\n      row.push(i);\n    }\n  }\n  if(row.length > 0){\n    result.push(row);\n\
    \  }\n  return result;\n}\n", "    var result = [];\n    for(var i = 0, len =\
    \ lst.length; i < len; i++){\n        var row = lst[i];\n        if(row.indexOf(x)\
    \ !== -1){\n            result.push([i, row.indexOf(x)]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            result.push([i, lst[i].indexOf(x)]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        var\
    \ row = lst[i];\n        if(row.indexOf(x) !== -1){\n            result.push([i,\
    \ row.indexOf(x)]);\n        }\n    }\n    result.sort(function(a, b){\n     \
    \   return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n        return\
    \ b[0] - a[0];\n    });\n    return result;\n}\n", "    if(!lst.length) return\
    \ [];\n    var result = [];\n    var row = [];\n    var row_len = 0;\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_len++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n            row_len++;\n        }\n    }\n\
    \    result.push(row);\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n           \
    \ row_len++;\n        }\n    }\n    result.push(row);\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n      \
    \      row.push(i);\n            row_len++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n            row_len++;\n        }\n    }\n\
    \    result.push(row);\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n           \
    \ row_len++;\n        }\n    }\n    result.push(row);\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n      \
    \      row.push(i);\n            row_len++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n            row_len++;\n        }\n    }\n\
    \    result.push(row);\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n           \
    \ row_len++;\n        }\n    }\n    result.push(row);\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n      \
    \      row.push(i);\n            row_len++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n            row_len++;\n        }\n    }\n\
    \    result.push(row);\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n           \
    \ row_len++;\n        }\n    }\n    result.push(row);\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(", "    var res = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        var row = lst[i];\n        var row_x =\
    \ row[x];\n        for(var j = 0; j < row.length; j++){\n            if(row_x\
    \ == row[j]){\n                res.push([i, j]);\n            }\n        }\n \
    \   }\n    res.sort(function(a, b){\n        return a[0] - b[0];\n    });\n  \
    \  res.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return\
    \ res;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length; i++){\n  \
    \      if(lst[i].indexOf(x) !== -1){\n            result.push([i, lst[i].indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "    let result = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        let row = [];\n        for(let j = 0; j < lst[i].length; j++){\n\
    \            if(j === x){\n                row.push([i, j]);\n            }\n\
    \        }\n        result.push(row);\n    }\n    result.sort((a, b) => a[0] -\
    \ b[0]);\n    result.sort((a, b) => a[1] - b[1], (a, b) => a[0] - b[0]);\n   \
    \ return result;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        var row = [];\n        for(var j=0; j<lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                row.push([i, j]);\n        \
    \    }\n        }\n        result.push(row);\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0]-b[0];\n    });\n    result.sort(function(a, b){\n \
    \       return a[1]-b[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        var row = [];\n       \
    \ for(var j=0; j<lst[i].length; j++){\n            if(lst[i][j] == x){\n     \
    \           row.push([i, j]);\n            }\n        }\n        result.push(row);\n\
    \    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return\
    \ result;\n}\n", "  var res = [];\n  for(var i=0; i<lst.length; i++){\n    var\
    \ row = lst[i];\n    if(row.indexOf(x) !== -1){\n      res.push([i, row.indexOf(x)]);\n\
    \    }\n  }\n  res.sort(function(a, b){\n    return a[1] - b[1];\n  });\n  res.sort(function(a,\
    \ b){\n    return b[0] - a[0];\n  });\n  return res;\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    if(lst.length == 1){\n        return\
    \ [[0, lst[0].length]];\n    }\n    var row = [];\n    var rows = [];\n    var\
    \ row_index = 0;\n    for(var i = 0, len = lst.length; i < len; i++){\n      \
    \  if(lst[i].indexOf(x) != -1){\n            row.push(i);\n        }\n       \
    \ if(row.length == x){\n            rows.push(row);\n            row = [];\n \
    \       }\n    }\n    rows.push(row);\n    return rows;\n}\n", "  var result =\
    \ [];\n  for(var i=0; i<lst.length; i++){\n    var row = lst[i];\n    var rowResult\
    \ = [];\n    for(var j=0; j<row.length; j++){\n      if(row[j] == x){\n      \
    \  rowResult.push([i, j]);\n      }\n    }\n    result.push(rowResult);\n  }\n\
    \  result.sort(function(a, b){\n    return a[0] - b[0];\n  });\n  result.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  return result;\n}\n", "  var row = [];\n\
    \  var rows = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x)\
    \ != -1){\n      row.push(i);\n      rows.push(row);\n      row = [];\n    }\n\
    \  }\n  if(row.length){\n    rows.push(row);\n  }\n  rows.sort(function(a, b){\n\
    \    return b[0]-a[0] || b[1]-a[1];\n  });\n  var result = [];\n  for(var i=0;\
    \ i<rows.length; i++){\n    var row = rows[i];\n    row.sort(function(a, b){\n\
    \      return b[0]-a[0] || b[1]-a[1];\n    });\n    for(var j=0; j<row.length;\
    \ j++){\n      result.push([row[j], i]);\n    }\n  }\n  return result;\n}\n",
  "    if(!lst.length) return [];\n    var result = [];\n    var row = [];\n    var\
    \ col = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n            col.push(lst[i].indexOf(x));\n\
    \        }\n    }\n    result.push(row);\n    result.push(col);\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    result.sort(function(a, b){\n\
    \        return b[2] - a[2];\n    });\n    return result;\n}\n", "  if(lst.length\
    \ == 0){\n    return [];\n  }\n  var row = [];\n  var row_index = 0;\n  var col_index\
    \ = 0;\n  while(row_index < lst.length){\n    if(lst[row_index][col_index] ==\
    \ x){\n      row.push([row_index, col_index]);\n      row_index++;\n      col_index++;\n\
    \      if(col_index == lst[row_index].length){\n        row_index++;\n       \
    \ col_index = 0;\n      }\n    }else{\n      col_index = 0;\n    }\n  }\n  row.sort(function(a,\
    \ b){\n    return b[0] - a[0];\n  });\n  row.sort(function(a, b){\n    return\
    \ b[1] - a[1];\n  });\n  return row;\n}\n", "  var result = [];\n  var row = [];\n\
    \  var rows = [];\n  var cols = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x)\
    \ != -1){\n      row.push(i);\n      rows.push(row);\n      cols.push(lst[i].indexOf(x));\n\
    \    }\n  }\n  for(var i=0; i<rows.length; i++){\n    for(var j=0; j<cols.length;\
    \ j++){\n      result.push([rows[i], cols[j]]);\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        var row\
    \ = lst[i];\n        if(row.indexOf(x) !== -1){\n            result.push([i, row.indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "  if(lst.length < 1) return [];\n  if(lst.length ==\
    \ 1) return [lst[0]];\n  var row = [];\n  var row_index = 0;\n  var column_index\
    \ = 0;\n  var row_indexes = [];\n  var column_indexes = [];\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i] == x){\n      row.push([row_index, column_index]);\n  \
    \    row_indexes.push(row_index);\n      column_indexes.push(column_index);\n\
    \      row_index++;\n      column_index = 0;\n    }else{\n      column_index++;\n\
    \    }\n  }\n  row.push([row_index, column_index]);\n  row_indexes.push(row_index);\n\
    \  column_indexes.push(column_index);\n  row_indexes.sort(function(a, b){return\
    \ b-a});\n  column_indexes.sort(function(a, b){return b-a});\n  return row;\n\
    }\n", "  if(lst.length < 1){\n    return [];\n  }\n  var result = [];\n  var row\
    \ = [];\n  var rows = [];\n  var cols = [];\n  for(var i = 0, len = lst.length;\
    \ i < len; i++){\n    var item = lst[i];\n    if(item === x){\n      result.push(row);\n\
    \      row = [];\n      rows.push(row);\n      cols.push(item);\n    }else{\n\
    \      row.push(item);\n    }\n  }\n  result.push(row);\n  rows = rows.reverse();\n\
    \  for(var i = 0, len = rows.length; i < len; i++){\n    for(var j = 0, len2 =\
    \ rows[i].length; j < len2; j++){\n      cols.push(rows[i][j]);\n    }\n  }\n\
    \  cols = cols.reverse();\n  for(var i = 0, len = cols.length; i < len; i++){\n\
    \    result.push([i, cols[i]]);\n  }\n  return result;\n}\n", "  if(lst.length\
    \ == 0){\n    return [];\n  }\n  if(lst.length == 1){\n    return [[0, lst[0].length]];\n\
    \  }\n  if(lst.length == 2){\n    return [[lst[0][0], lst[1].length], [lst[1][0],\
    \ lst[0].length]];\n  }\n  var row = [];\n  var rows = [];\n  var cols = [];\n\
    \  var col = 0;\n  var row = 0;\n  for(var i=0; i<lst.length; i++){\n    for(var\
    \ j=0; j<lst[i].length; j++){\n      if(lst[i][j] == x){\n        row.push([row,\
    \ col]);\n        row.push([row, col+1]);\n        rows.push(row);\n        cols.push(col);\n\
    \        cols.push(col+1);\n      }\n      col++;\n    }\n    row++;\n  }\n  rows.push(row);\n\
    \  cols.push(col);\n  rows.sort(function(a, b){\n    return a[0] - b[0];\n  });\n\
    \  cols.sort(function(a, b){\n    return a[1] - b[1];\n  });\n  var result = [];\n\
    \  for(var i=0; i<rows.length; i++){\n    result.push([rows[i][0], cols[i]]);\n\
    \    result.push([rows[i][1], cols[i]]);\n  }\n  return result;\n}\n", "  if(lst.length\
    \ < 1){\n    return [];\n  }\n  if(lst.length == 1){\n    return [lst[0]];\n \
    \ }\n  var result = [];\n  var row = [];\n  var row_len = 0;\n  for(var i = 0,\
    \ len = lst.length; i < len; i++){\n    if(lst[i].indexOf(x) != -1){\n      row.push(i);\n\
    \      row_len++;\n    }\n  }\n  if(row_len == 0){\n    return result;\n  }\n\
    \  if(row_len == 1){\n    var coord = row[0];\n    var coord2 = row[0];\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n      if(lst[i].indexOf(x) != -1){\n\
    \        coord2 = coord;\n        coord = i;\n      }\n    }\n    return [coord2,\
    \ coord];\n  }\n  if(row_len == 2){\n    var coord = row[0];\n    var coord2 =\
    \ row[1];\n    for(var i = 0, len = lst.length; i < len; i++){\n      if(lst[i].indexOf(x)\
    \ != -1){\n        coord2 = coord;\n        coord = i;\n      }\n    }\n    return\
    \ [coord2, coord];\n  }\n  var coord = row[0];\n  var coord2 = row[1];\n  var\
    \ coord3 = row[2];\n  for(var i = 0, len = lst.length; i < len; i++){\n    if(lst[i].indexOf(x)\
    \ != -1){\n      coord2 = coord;\n      coord3 = coord;\n      coord = i;\n  \
    \  }\n  }\n  return [coord2, coord3, coord];\n}\n", "  var result = [];\n  var\
    \ row = [];\n  var row_len = 0;\n  for(var i = 0, len = lst.length; i < len; i++){\n\
    \    row.push(lst[i]);\n    row_len += lst[i].length;\n  }\n  if(row_len === 0){\n\
    \    return result;\n  }\n  if(row_len === 1){\n    if(row[0][x] === x){\n   \
    \   result.push([0, row[0]]);\n    }\n    return result;\n  }\n  if(row.length\
    \ < x){\n    for(var i = 0, len = row.length; i < len; i++){\n      row.push(0);\n\
    \    }\n  }\n  for(var i = 0, len = row.length; i < len; i++){\n    if(row[i]\
    \ === x){\n      result.push([i, row[i]]);\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  result.sort(function(a, b){\n    return\
    \ a[0] - b[0];\n  });\n  return result;\n}\n", "    var result = [];\n    var\
    \ rows = lst.length;\n    var cols = lst[0].length;\n    var row = 0;\n    var\
    \ col = 0;\n    while(row < rows){\n        col = 0;\n        while(col < cols){\n\
    \            if(lst[row][col] == x){\n                result.push([row, col]);\n\
    \            }\n            col++;\n        }\n        row++;\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "  var result\
    \ = [];\n  for(var i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n\
    \    var rowLen = row.length;\n    for(var j = 0; j < rowLen; j++){\n      if(row[j]\
    \ === x){\n        result.push([i, j]);\n      }\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  result.sort(function(a, b){\n    return\
    \ a[0] - b[0];\n  });\n  return result;\n}\n", "    var result = [];\n    var\
    \ row = [];\n    var col = [];\n    var rows = [];\n    var cols = [];\n    var\
    \ row_index = 0;\n    var col_index = 0;\n    for(var i=0; i<lst.length; i++){\n\
    \        if(lst[i][0] == x){\n            result.push([row_index, col_index]);\n\
    \            rows.push(row);\n            cols.push(col);\n            row = [];\n\
    \            col = [];\n            row_index++;\n            col_index++;\n \
    \       }else{\n            row.push(lst[i][0]);\n            col.push(lst[i][1]);\n\
    \        }\n    }\n    result.push([row_index, col_index]);\n    rows.push(row);\n\
    \    cols.push(col);\n    rows.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    cols.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    for(var i=0; i<rows.length; i++){\n        result.push([rows[i][0], cols[i][1]]);\n\
    \    }\n    return result;\n}\n", "  var result = [];\n  for(var i = 0, len =\
    \ lst.length; i < len; i++){\n    var row = lst[i];\n    var rowLen = row.length;\n\
    \    var colLen = row[0].length;\n    var rowResult = [];\n    for(var j = 0;\
    \ j < colLen; j++){\n      if(row[j] === x){\n        rowResult.push([j, j]);\n\
    \      }\n    }\n    result.push(rowResult);\n  }\n  result.sort(function(a, b){\n\
    \    return b[1] - a[1];\n  });\n  result.sort(function(a, b){\n    return a[0]\
    \ - b[0];\n  });\n  return result;\n}\n", "    var res = [];\n    var row = [];\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) != -1){\n\
    \            row.push(i);\n        }\n    }\n    row.sort(function(a, b){\n  \
    \      return a - b;\n    });\n    for(var i=0; i<row.length; i++){\n        for(var\
    \ j=0; j<lst[row[i]].length; j++){\n            res.push([row[i], j]);\n     \
    \   }\n    }\n    res.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    return res;\n}\n", "    var result = [];\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        var row = lst[i];\n        if(row.indexOf(x) !== -1){\n\
    \            result.push([i, row.indexOf(x)]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n\
    \        return b[0] - a[0];\n    });\n    return result;\n}\n", "  if(lst.length\
    \ == 0){\n    return [];\n  }\n  var row = [];\n  var row_index = 0;\n  var column_index\
    \ = 0;\n  var row_length = lst.length;\n  while(row_index < row_length){\n   \
    \ var current_row = lst[row_index];\n    var current_row_length = current_row.length;\n\
    \    while(column_index < current_row_length){\n      if(current_row[column_index]\
    \ == x){\n        row.push([row_index, column_index]);\n        break;\n     \
    \ }\n      column_index++;\n    }\n    row_index++;\n  }\n  if(row_index == row_length){\n\
    \    return [];\n  }\n  row.sort(function(a, b){\n    return b[0] - a[0];\n  });\n\
    \  row.sort(function(a, b){\n    return b[1] - a[1];\n  });\n  return row;\n}\n",
  "    var result = [];\n    var row = [];\n    for(var i = 0, len = lst.length; i\
    \ < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return a - b;\n    });\n\
    \    for(var i = 0, len = row.length; i < len; i++){\n        result.push([row[i],\
    \ row.length - 1 - i]);\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    return result;\n}\n", "    var result = [];\n   \
    \ var row = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n       \
    \ if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n        }\n    }\n\
    \    row.sort(function(a, b){\n        return a - b;\n    });\n    for(var i =\
    \ 0, len = row.length; i < len; i++){\n        result.push(row.slice(i, i + 1));\n\
    \    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return result;\n}\n", "  var result = [];\n  var row = [];\n  var rows =\
    \ [];\n  var cols = [];\n  var col = [];\n  var row_index = 0;\n  var col_index\
    \ = 0;\n  for(var i = 0, len = lst.length; i < len; i++){\n    if(lst[i] === x){\n\
    \      result.push([row_index, col_index]);\n      rows.push(row);\n      cols.push(col);\n\
    \      row = [];\n      col = [];\n      row_index++;\n      col_index++;\n  \
    \  }\n    else{\n      row.push(lst[i]);\n      col_index++;\n    }\n  }\n  if(row.length\
    \ > 0){\n    result.push([row_index, col_index]);\n    rows.push(row);\n    cols.push(col);\n\
    \  }\n  rows = rows.sort(function(a, b){\n    return a[0] - b[0];\n  });\n  cols\
    \ = cols.sort(function(a, b){\n    return a[1] - b[1];\n  });\n  for(var i = 0,\
    \ len = rows.length; i < len; i++){\n    result.push([rows[i][0], cols[i][1]]);\n\
    \  }\n  return result;\n}\n", "    var result = [];\n    var row = [];\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n        }\n    }\n    row.sort(function(a, b){\n  \
    \      return a - b;\n    });\n    for(var i = 0, len = row.length; i < len; i++){\n\
    \        result.push([row[i], row.length - 1 - i]);\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    return result;\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var row = [];\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) != -1){\n       \
    \     row.push(i);\n        }\n    }\n    row.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    row.sort(function(a, b){\n        return b - a;\n    });\n\
    \    return row;\n}\n", "    var result = [];\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        var row = lst[i];\n        var rowLen = row.length;\n\
    \        var colLen = row[0].length;\n        var rowIndex = row.indexOf(x);\n\
    \        var colIndex = rowIndex === -1 ? colLen : rowIndex - 1;\n        result.push([rowIndex,\
    \ colIndex]);\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return result;\n}\n", "    if(!lst) return [];\n    var row = [];\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        var item = lst[i];\n      \
    \  if(item === x) row.push(i);\n    }\n    row.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    row.sort(function(a, b){\n        return b - a;\n    });\n\
    \    return row;\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n  if(lst.length\
    \ == 1){\n    return [[0, lst[0].length]];\n  }\n  var row = [];\n  var rows =\
    \ [];\n  var row_len = lst[0].length;\n  var col_len = lst.length;\n  for(var\
    \ i=0; i<col_len; i++){\n    var col = [];\n    for(var j=0; j<row_len; j++){\n\
    \      if(lst[j][i] == x){\n        col.push([j, i]);\n      }\n    }\n    if(col.length\
    \ > 0){\n      row.push(col);\n    }\n  }\n  if(row.length > 0){\n    rows.push(row);\n\
    \  }\n  for(var i=0; i<col_len; i++){\n    var col = [];\n    for(var j=0; j<row_len;\
    \ j++){\n      if(lst[j][i] != x){\n        col.push([j, i]);\n      }\n    }\n\
    \    if(col.length > 0){\n      rows.push(col);\n    }\n  }\n  if(rows.length\
    \ > 0){\n    rows.sort(function(a, b){\n      return a[0][1] - b[0][1];\n    });\n\
    \    rows.sort(function(a, b){\n      return a[1][1] - b[1][1];\n    });\n  }\n\
    \  return rows;\n}\n", "  var result = [];\n  for(var i = 0, len = lst.length;\
    \ i < len; i++){\n    var row = lst[i];\n    var rowLen = row.length;\n    var\
    \ rowIndex = -1;\n    for(var j = 0; j < rowLen; j++){\n      if(row[j] === x){\n\
    \        rowIndex = j;\n        break;\n      }\n    }\n    if(rowIndex > -1){\n\
    \      result.push([i, rowIndex]);\n    }\n  }\n  result.sort(function(a, b){\n\
    \    return b[1] - a[1];\n  });\n  result.sort(function(a, b){\n    return a[0]\
    \ - b[0];\n  });\n  return result;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<lst.length; i++){\n    var row = lst[i];\n    var rowLen = row.length;\n \
    \   var colLen = row[x];\n    var rowResult = [];\n    for(var j=0; j<colLen;\
    \ j++){\n      rowResult.push([i, j]);\n    }\n    result.push(rowResult);\n \
    \ }\n  result.sort(function(a, b){\n    return a[0]-b[0];\n  });\n  result.sort(function(a,\
    \ b){\n    return a[1]-b[1];\n  });\n  return result;\n}\n", "    if(!lst.length)\
    \ return [];\n    var result = [];\n    var row = [];\n    var rows = [];\n  \
    \  var cols = [];\n    var col = 0;\n    var row_index = 0;\n    var col_index\
    \ = 0;\n    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i]\
    \ === x) result.push([row, col]);\n        else if(row_index === rows.length){\n\
    \            rows.push(row);\n            row = [];\n            row_index = 0;\n\
    \            col = 0;\n            col_index++;\n        }\n        else if(col_index\
    \ === cols.length){\n            cols.push(col);\n            col = [];\n    \
    \        col_index = 0;\n            row++;\n        }\n        else if(col_index\
    \ < cols.length && row_index < rows.length){\n            row.push(lst[i]);\n\
    \            col[col_index] = lst[i];\n            col_index++;\n        }\n \
    \   }\n    if(row_index === rows.length){\n        rows.push(row);\n        row\
    \ = [];\n        row_index = 0;\n        col = 0;\n        col_index++;\n    }\n\
    \    if(col_index === cols.length){\n        cols.push(col);\n        col = [];\n\
    \        col_index = 0;\n        row++;\n    }\n    result.push([row, col]);\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    var row = [];\n    for(var i = 0, len = lst.length; i < len;\
    \ i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n   \
    \     }\n    }\n    row.sort(function(a, b){\n        return a - b;\n    });\n\
    \    for(var i = 0, len = row.length; i < len; i++){\n        result.push([row[i],\
    \ row.length]);\n    }\n    result.sort(function(a, b){\n        return b[0] -\
    \ a[0];\n    });\n    return result;\n}\n", "  if(lst.length <= 0){\n    return\
    \ [];\n  }\n  if(lst.length == 1){\n    return [[0, lst[0].length]];\n  }\n  if(lst.length\
    \ == 2){\n    return [[0, lst[0].length], [lst[0][0], lst[1].length]];\n  }\n\
    \  if(lst.length == 3){\n    return [[0, lst[0].length], [lst[0][0], lst[1].length],\
    \ [lst[0][1], lst[2].length]];\n  }\n  if(lst.length == 4){\n    return [[0, lst[0].length],\
    \ [lst[0][0], lst[1].length], [lst[0][1], lst[2].length], [lst[0][2], lst[3].length]];\n\
    \  }\n  if(lst.length == 5){\n    return [[0, lst[0].length], [lst[0][0], lst[1].length],\
    \ [lst[0][1], lst[2].length], [lst[0][2], lst[3].length], [lst[0][3], lst[4].length]];\n\
    \  }\n  if(lst.length == 6){\n    return [[0, lst[0].length], [lst[0][0], lst[1].length],\
    \ [lst[0][1], lst[2].length], [lst[0][2], lst[3].length], [lst[0][3], lst[4].length],\
    \ [lst[0][4], lst[5].length]];\n  }\n  if(lst.length == 7){\n    return [[0, lst[0].length],\
    \ [lst[0][0], lst[1].length], [lst[0][1], lst[2].length], [lst[0][2], lst[3].length],\
    \ [lst[0][3], lst[4].length], [lst[0][4], lst[5].length], [lst[0][5], lst[6].length]];\n\
    \  }\n  if(lst.length == 8){\n    return [[0, lst[0].length], [lst[0][0], lst[1].length],\
    \ [lst[0][1], lst[2].length], [lst[0][2], lst[3].length], [lst[0][3], lst[4].length],\
    \ [lst[0][4], lst[5].length], [lst[0][5], lst[6].length], [lst[0][6], lst[7].length]];\n\
    \  }\n  if(lst.length == 9){\n    return [[0, lst[0].length], [lst[0][0], lst[1].length],\
    \ [lst[0][1], lst[2].length], [lst[0][2], lst[3].length], [lst[0][3], lst[4].length],\
    \ [lst[0][4], lst[5].length], [lst[0][5], lst[6].length], [lst[0][6], lst[7].length],\
    \ [lst[0][7], lst[8].length]];\n  }\n  if(lst.length == 10){\n    return [[0,\
    \ lst[0].length], [lst[0][0], lst[1].length], [lst[0][1], lst[2].length], [lst[0][2],\
    \ lst[3].length], [lst[0][3], lst[4].length], [lst[0][4], lst", "    var res =\
    \ [];\n    var row = [];\n    var col = [];\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n\
    \            col.push(lst[i].indexOf(x));\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    col.sort(function(a, b){\n        return\
    \ b - a;\n    });\n    for(var i = 0, len = row.length; i < len; i++){\n     \
    \   res.push([row[i], col[i]]);\n    }\n    return res;\n}\n", "  var result =\
    \ [];\n  for(var i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n\
    \    var rowLen = row.length;\n    var colLen = row[x];\n    for(var j = 0; j\
    \ < colLen; j++){\n      result.push([i, x]);\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return a[0] - b[0];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[1] - a[1];\n  });\n  return result;\n}\n", "  var result = [];\n  for(var\
    \ i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n    var rowLen\
    \ = row.length;\n    var colLen = row[0].length;\n    var rowIndex = -1;\n   \
    \ var colIndex = -1;\n    for(var j = 0; j < rowLen; j++){\n      if(row[j] ===\
    \ x){\n        rowIndex = j;\n        break;\n      }\n    }\n    for(var j =\
    \ 0; j < colLen; j++){\n      if(rowIndex === -1){\n        colIndex = j;\n  \
    \      break;\n      }\n      if(row[j][colIndex] === x){\n        result.push([rowIndex,\
    \ colIndex]);\n        break;\n      }\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return a[0] - b[0];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[1] - a[1];\n  });\n  return result;\n}\n", "  let row = [];\n  let row_index\
    \ = 0;\n  let col_index = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ === x){\n      row.push([row_index, col_index]);\n      row_index++;\n     \
    \ col_index = 0;\n    }\n    else{\n      col_index++;\n    }\n  }\n  if(row_index\
    \ === 0){\n    return [];\n  }\n  row.sort((a, b) => a[0] - b[0]);\n  row.sort((a,\
    \ b) => b[1] - a[1]);\n  return row;\n}\n", "    let row = [];\n    let rows =\
    \ [];\n    let cols = [];\n    let row_index = 0;\n    let col_index = 0;\n  \
    \  for(let i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            rows.push(row);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.sort((a,\
    \ b) => b - a);\n            row.sort((a, b) => b - a);\n            row.", " \
    \ if(lst.length == 0){\n    return [];\n  }\n  if(lst.length == 1){\n    return\
    \ [[0, lst[0].length]];\n  }\n  var row = [];\n  var rows = [];\n  var row_index\
    \ = 0;\n  var col_index = 0;\n  for(var i = 0, len = lst.length; i < len; i++){\n\
    \    var item = lst[i];\n    if(item == x){\n      row.push([row_index, col_index]);\n\
    \      rows.push(row);\n      row = [];\n      row_index++;\n      col_index =\
    \ 0;\n    }else{\n      col_index++;\n    }\n  }\n  if(row.length > 0){\n    row.push([row_index,\
    \ col_index]);\n    rows.push(row);\n  }\n  rows.sort(function(a, b){\n    return\
    \ a[0] - b[0];\n  });\n  rows.sort(function(a, b){\n    return b[1] - a[1];\n\
    \  });\n  return rows;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        var row = lst[i];\n        for(var j=0; j<row.length; j++){\n\
    \            if(row[j] == x){\n                result.push([i, j]);\n        \
    \    }\n        }\n    }\n    result.sort(function(a, b){\n        return a[0]\
    \ - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    return result;\n}\n", "  var result = [];\n  for(var i = 0, len\
    \ = lst.length; i < len; i++){\n    var row = lst[i];\n    var rowLen = row.length;\n\
    \    for(var j = 0; j < rowLen; j++){\n      if(row[j] === x){\n        result.push([i,\
    \ j]);\n        break;\n      }\n    }\n  }\n  result.sort(function(a, b){\n \
    \   return b[0] - a[0];\n  });\n  result.sort(function(a, b){\n    return b[1]\
    \ - a[1];\n  });\n  return result;\n}\n", "  let row = [];\n  for(let i = 0; i\
    \ < lst.length; i++){\n    if(lst[i].indexOf(x) !== -1){\n      row.push([i, lst[i].indexOf(x)])\n\
    \    }\n  }\n  row.sort((a,b) => a[1] - b[1]);\n  row.sort((a,b) => b[0] - a[0]);\n\
    \  return row;\n}\n", "    if(!lst.length) return [];\n    if(!x || x < 0 || x\
    \ > lst[0].length) return [];\n    var result = [];\n    var row = [];\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n        }\n    }\n    row.sort(function(a, b){\n  \
    \      return a - b;\n    });\n    for(var i = 0, len = row.length; i < len; i++){\n\
    \        result.push([row[i], i]);\n    }\n    result.sort(function(a, b){\n \
    \       return b[0] - a[0];\n    });\n    return result;\n}\n", "  var result\
    \ = [];\n  for(var i=0; i<lst.length; i++){\n    var row = lst[i];\n    var rowResult\
    \ = [];\n    for(var j=0; j<row.length; j++){\n      if(row[j] == x){\n      \
    \  rowResult.push([i, j]);\n      }\n    }\n    result.push(rowResult);\n  }\n\
    \  result.sort(function(a, b){\n    return a[0] - b[0];\n  });\n  result.sort(function(a,\
    \ b){\n    return a[1] - b[1];\n  });\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        var row\
    \ = lst[i];\n        if(row.indexOf(x) !== -1){\n            result.push([i, row.indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        var row = lst[i];\n        for(var j = 0, len2 = row.length;\
    \ j < len2; j++){\n            if(row[j] === x){\n                result.push([i,\
    \ j]);\n            }\n        }\n    }\n    result.sort(function(a, b){\n   \
    \     return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return\
    \ a[1] - b[1];\n    });\n    return result;\n}\n", "    var result = [];\n   \
    \ for(var i = 0, len = lst.length; i < len; i++){\n        var row = lst[i];\n\
    \        for(var j = 0, len2 = row.length; j < len2; j++){\n            if(row[j]\
    \ === x){\n                result.push([i, j]);\n            }\n        }\n  \
    \  }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return\
    \ result;\n}\n", "    if(!lst.length) return [];\n    var result = [];\n    var\
    \ row = [];\n    var row_index = 0;\n    var col_index = 0;\n    for(var i = 0,\
    \ len = lst.length; i < len; i++){\n        var item = lst[i];\n        if(item\
    \ === x) result.push([row_index, col_index]);\n        else if(row.length){\n\
    \            row_index++;\n            row.push(item);\n            col_index\
    \ = 0;\n        }\n        else{\n            row.push(item);\n            col_index++;\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        var row = lst[i];\n        var row_x = row[x];\n        var row_y\
    \ = row[x+1];\n        if(row_x === undefined){\n            result.push([]);\n\
    \        }else{\n            result.push([row_x, row_y]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    var row = [];\n    var row_index = 0;\n    var col_index =\
    \ 0;\n    var row_length = lst.length;\n    var col_length = lst[0].length;\n\
    \    while(row_index < row_length){\n        row = [];\n        while(col_index\
    \ < col_length){\n            row.push(lst[row_index][col_index]);\n         \
    \   col_index++;\n        }\n        result.push(row);\n        row_index++;\n\
    \        col_index = 0;\n    }\n    if(row_index === row_length){\n        result.push([]);\n\
    \    }\n    if(col_index === col_length){\n        result.push([]);\n    }\n \
    \   result.sort(function(a, b){\n        var a_row = a.length;\n        var b_row\
    \ = b.length;\n        if(a_row > b_row){\n            return 1;\n        }\n\
    \        if(a_row < b_row){\n            return -1;\n        }\n        var a_col\
    \ = a.length;\n        var b_col = b.length;\n        if(a_col > b_col){\n   \
    \         return 1;\n        }\n        if(a_col < b_col){\n            return\
    \ -1;\n        }\n        return 0;\n    });\n    result.sort(function(a, b){\n\
    \        var a_row = a.length;\n        var b_row = b.length;\n        if(a_row\
    \ > b_row){\n            return 1;\n        }\n        if(a_row < b_row){\n  \
    \          return -1;\n        }\n        var a_col = a.length;\n        var b_col\
    \ = b.length;\n        if(a_col > b_col){\n            return 1;\n        }\n\
    \        if(a_col < b_col){\n            return -1;\n        }\n        return\
    \ 0;\n    });\n    result.forEach(function(row){\n        row.sort(function(a,\
    \ b){\n            return b - a;\n        });\n    });\n    return result;\n}\n",
  "  if(lst.length < 1){\n    return [];\n  }\n  var row = [];\n  var rows = [];\n\
    \  for(var i = 0, len = lst.length; i < len; i++){\n    var item = lst[i];\n \
    \   if(item === x){\n      row.push(i);\n    }\n    if(item.length > 0){\n   \
    \   rows.push(row);\n      row = [];\n    }\n  }\n  rows.push(row);\n  rows =\
    \ rows.sort(function(a, b){\n    return b[0] - a[0];\n  });\n  rows = rows.reverse();\n\
    \  var coords = [];\n  for(var i = 0, len = rows.length; i < len; i++){\n    var\
    \ row = rows[i];\n    var coord = [];\n    for(var j = 0, len2 = row.length; j\
    \ < len2; j++){\n      coord.push([row[j], j]);\n    }\n    coords.push(coord);\n\
    \  }\n  coords = coords.sort(function(a, b){\n    return b[1] - a[1];\n  });\n\
    \  return coords;\n}\n", "  let row = [];\n  let row_index = 0;\n  let col_index\
    \ = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] === x){\n      row.push([row_index,\
    \ col_index]);\n      row_index++;\n      col_index = 0;\n    }\n    else{\n \
    \     col_index++;\n    }\n  }\n  if(row_index === 0){\n    return [];\n  }\n\
    \  row.sort((a, b) => b[1] - a[1]);\n  row.sort((a, b) => a[0] - b[0]);\n  return\
    \ row;\n}\n", "    let row = [];\n    for(let i = 0; i < lst.length; i++){\n \
    \       if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n        }\n \
    \   }\n    row.sort((a, b) => b - a);\n    for(let i = 0; i < row.length; i++){\n\
    \        row.sort((a, b) => b - a);\n    }\n    return row;\n}\n", "  let row\
    \ = [];\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i].indexOf(x) !==\
    \ -1){\n      row.push([i, lst[i].indexOf(x)]);\n    }\n  }\n  row.sort((a, b)\
    \ => b[1] - a[1]);\n  row.sort((a, b) => a[0] - b[0]);\n  return row;\n}\n", " \
    \   var row = [];\n    var rows = [];\n    var cols = [];\n    var col = 0;\n\
    \    var row = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){\n            row.push(i);\n            rows.push(row);\n           \
    \ cols.push(col);\n            col = col + 1;\n        }\n    }\n    rows.push(row);\n\
    \    cols.push(col);\n    return rows;\n}\n", "  if(lst.length == 0){\n    return\
    \ [];\n  }\n  var row = [];\n  var row_len = lst.length;\n  for(var i=0; i<row_len;\
    \ i++){\n    var item = lst[i];\n    if(item == x){\n      row.push([i, item]);\n\
    \    }\n  }\n  if(row.length == 0){\n    return [];\n  }\n  row.sort(function(a,\
    \ b){\n    return a[1] - b[1];\n  });\n  row.sort(function(a, b){\n    return\
    \ b[0] - a[0];\n  });\n  return row;\n}\n", "  if(lst.length == 0){\n    return\
    \ [];\n  }\n  if(lst.length == 1){\n    return [lst[0]];\n  }\n  var row = [];\n\
    \  var row_index = 0;\n  var column_index = 0;\n  var row_length = lst.length;\n\
    \  var column_length = lst[0].length;\n  while(row_index < row_length){\n    if(lst[row_index][column_index]\
    \ == x){\n      row.push([row_index, column_index]);\n      row_index++;\n   \
    \   column_index++;\n    }\n    else{\n      column_index++;\n    }\n  }\n  if(row_index\
    \ == row_length){\n    return [];\n  }\n  if(row_index == row_length - 1){\n \
    \   return row;\n  }\n  var temp_row = [];\n  while(row_index < row_length){\n\
    \    temp_row.push(lst[row_index]);\n    row_index++;\n  }\n  temp_row.sort(function(a,\
    \ b){\n    return b[0] - a[0];\n  });\n  temp_row.sort(function(a, b){\n    return\
    \ b[1] - a[1];\n  });\n  var temp_row_index = 0;\n  var temp_row_length = temp_row.length;\n\
    \  var temp_column_length = temp_row[0].length;\n  var temp_rows = [];\n  while(temp_row_index\
    \ < temp_row_length){\n    var temp_row = [];\n    while(temp_row_index < temp_row_length){\n\
    \      temp_row.push(temp_row[temp_row_index]);\n      temp_row_index++;\n   \
    \ }\n    temp_rows.push(temp_row);\n  }\n  return temp_rows;\n}\n", "  if(lst.length\
    \ == 0){\n    return [];\n  }\n  var row = [];\n  var row_index = 0;\n  var row_len\
    \ = lst.length;\n  for(var i=0; i<row_len; i++){\n    if(lst[i][0] == x){\n  \
    \    row.push([i, lst[i][1]]);\n      row_index = i;\n    }\n  }\n  if(row_index\
    \ == row_len){\n    return [];\n  }\n  row.sort(function(a, b){\n    return b[1]\
    \ - a[1];\n  });\n  row.sort(function(a, b){\n    return a[0] - b[0];\n  });\n\
    \  return row;\n}\n", "    var row = [];\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i].indexOf(x) != -1){\n            row.push([i, lst[i].indexOf(x)])\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return a[1] - b[1]\n\
    \    });\n    row.sort(function(a, b){\n        return b[0] - a[0]\n    });\n\
    \    return row;\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n  if(lst.length\
    \ == 1){\n    return [[0, lst[0].length]];\n  }\n  if(lst.length == 2){\n    return\
    \ [[lst[0][0], lst[1].length], [lst[1][0], lst[0].length]];\n  }\n  if(lst.length\
    \ == 3){\n    return [[lst[0][0], lst[1][1]], [lst[1][0], lst[2][1]], [lst[2][0],\
    \ lst[0].length]];\n  }\n  if(lst.length == 4){\n    return [[lst[0][0], lst[1][1]],\
    \ [lst[1][0], lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[0].length]];\n\
    \  }\n  if(lst.length == 5){\n    return [[lst[0][0], lst[1][1]], [lst[1][0],\
    \ lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[4][1]], [lst[4][0], lst[0].length]];\n\
    \  }\n  if(lst.length == 6){\n    return [[lst[0][0], lst[1][1]], [lst[1][0],\
    \ lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[4][1]], [lst[4][0], lst[5][1]],\
    \ [lst[5][0], lst[0].length]];\n  }\n  if(lst.length == 7){\n    return [[lst[0][0],\
    \ lst[1][1]], [lst[1][0], lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[4][1]],\
    \ [lst[4][0], lst[5][1]], [lst[5][0], lst[6][1]], [lst[6][0], lst[0].length]];\n\
    \  }\n  if(lst.length == 8){\n    return [[lst[0][0], lst[1][1]], [lst[1][0],\
    \ lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[4][1]], [lst[4][0], lst[5][1]],\
    \ [lst[5][0], lst[6][1]], [lst[6][0], lst[7][1]], [lst[7][0], lst[0].length]];\n\
    \  }\n  if(lst.length == 9){\n    return [[lst[0][0], lst[1][1]], [lst[1][0],\
    \ lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[4][1]], [lst[4][0], lst[5][1]],\
    \ [lst[5][0], lst[6][1]], [lst[6][0], lst[7][1]], [lst[7][0], lst[8][1]], [lst[8][0],\
    \ lst[0].length]];\n  }\n  if(lst.length == 10){\n    return [[lst[0][0], lst[1][1]],\
    \ [lst[1][0], lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[4][1]], [lst[4][0],\
    \ lst[5][1]], [lst[5][0], lst[6][1]], [lst[6][0], lst[7", "    var result = [];\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        var row = lst[i];\n\
    \        for(var j = 0, len2 = row.length; j < len2; j++){\n            if(row[j]\
    \ === x){\n                result.push([i, j]);\n            }\n        }\n  \
    \  }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n    return\
    \ result;\n}\n", "    var result = [];\n    var row = [];\n    var rows = [];\n\
    \    var cols = [];\n    var col = [];\n    var row_index = 0;\n    var col_index\
    \ = 0;\n    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i]\
    \ === x){\n            result.push([row_index, col_index]);\n            rows.push(row);\n\
    \            cols.push(col);\n            row = [];\n            col = [];\n \
    \           row_index++;\n            col_index++;\n        }else{\n         \
    \   row.push(lst[i]);\n        }\n    }\n    if(row.length > 0){\n        result.push([row_index,\
    \ col_index]);\n        rows.push(row);\n        cols.push(col);\n    }\n    rows\
    \ = rows.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    cols\
    \ = cols.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    for(var\
    \ i = 0, len = rows.length; i < len; i++){\n        var row = rows[i];\n     \
    \   for(var j = 0, len2 = row.length; j < len2; j++){\n            var col = cols[j];\n\
    \            result.push([row[j], col[1]]);\n        }\n    }\n    return result;\n\
    }\n", "    if(!lst.length) return [];\n    var row = [];\n    var rows = [];\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        var item = lst[i];\n\
    \        if(item.indexOf(x) !== -1){\n            row.push(i);\n            rows.push([i,\
    \ item]);\n        }\n    }\n    rows.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    rows.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    for(var i = 0, len = rows.length; i < len; i++){\n        row.push(rows[i][1]);\n\
    \    }\n    return row;\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n\
    \  if(lst.length == 1){\n    return [lst[0]];\n  }\n  var row = [];\n  var rows\
    \ = [];\n  var row_idx = 0, row_len = lst.length;\n  var col_idx = 0, col_len\
    \ = lst[0].length;\n  var i, j, k;\n  for(i = 0; i < row_len; i++){\n    row.push([]);\n\
    \    for(j = 0; j < col_len; j++){\n      row[i].push((row_idx == i) ? x : lst[row_idx][col_idx]);\n\
    \      col_idx = (col_idx + 1) % col_len;\n    }\n    rows.push(row);\n    row\
    \ = [];\n    row_idx++;\n  }\n  for(i = 0; i < row_len; i++){\n    for(j = 0;\
    \ j < col_len; j++){\n      k = rows[i][j];\n      if(k == x){\n        return\
    \ [[i, j]];\n      }\n    }\n  }\n  return [];\n}\n", "    var result = [];\n\
    \    var row = [];\n    var row_index = 0;\n    var column_index = 0;\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i] === x){\n       \
    \     result.push([row_index, column_index]);\n            row_index++;\n    \
    \        column_index = 0;\n        }else{\n            column_index++;\n    \
    \    }\n    }\n    if(row_index > 0){\n        result.push([row_index, column_index]);\n\
    \    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return\
    \ result;\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n  if(lst.length\
    \ == 1){\n    return [[0, lst[0].length]];\n  }\n  var row = [];\n  var rows =\
    \ [];\n  var row_index = 0;\n  var column_index = 0;\n  for(var i=0; i<lst.length;\
    \ i++){\n    row.push(lst[i][column_index]);\n    if(row_index == x){\n      rows.push(row);\n\
    \      row = [];\n      row_index = 0;\n      column_index++;\n    }\n  }\n  if(row.length\
    \ > 0){\n    rows.push(row);\n  }\n  rows = rows.sort(function(a, b){\n    return\
    \ b[0]-a[0];\n  });\n  rows = rows.reverse();\n  var coords = [];\n  for(var i=0;\
    \ i<rows.length; i++){\n    coords.push([i, rows[i][0]]);\n    coords.push([i,\
    \ rows[i][1]]);\n  }\n  return coords;\n}\n", "    let row = [];\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n      \
    \      row.push([i, lst[i].indexOf(x)]);\n        }\n    }\n    row.sort((a,b)\
    \ => b[1] - a[1]);\n    row.sort((a,b) => a[0] - b[0]);\n    return row;\n}\n",
  "  var result = [];\n  for(var i = 0, len = lst.length; i < len; i++){\n    var\
    \ row = lst[i];\n    for(var j = 0, len2 = row.length; j < len2; j++){\n     \
    \ if(row[j] === x){\n        result.push([i, j]);\n      }\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return a[0] - b[0];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[1] - a[1];\n  });\n  return result;\n}\n", "  var result = [];\n  for(var\
    \ i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n    if(row.indexOf(x)\
    \ !== -1){\n      result.push([i, row.indexOf(x)]);\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return a[1] - b[1];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[0] - a[0];\n  });\n  return result;\n}\n", "    var row = [];\n    var rows\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !=\
    \ -1){\n            row.push(i);\n            rows.push(row);\n            row\
    \ = [];\n        }\n    }\n    return rows;\n}\n", "  var result = [];\n  for(var\
    \ i=0; i<lst.length; i++){\n    var row = lst[i];\n    var rowResult = [];\n \
    \   for(var j=0; j<row.length; j++){\n      if(row[j] == x){\n        rowResult.push([i,\
    \ j]);\n      }\n    }\n    result.push(rowResult);\n  }\n  result.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  result.sort(function(a, b){\n    return\
    \ a[0] - b[0];\n  });\n  return result;\n}\n", "    var result = [];\n    var\
    \ row = [];\n    var row_index = 0;\n    var col_index = 0;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] === x){\n            result.push([row_index,\
    \ col_index]);\n            row_index++;\n            col_index = 0;\n       \
    \ }\n        else{\n            col_index++;\n        }\n    }\n    if(row_index\
    \ > 0){\n        result.push([row_index, col_index]);\n    }\n    result.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "  var result\
    \ = [];\n  var row = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i][0]\
    \ == x){\n      row.push(i);\n    }\n  }\n  if(row.length == 0){\n    return result;\n\
    \  }\n  row.sort(function(a, b){\n    return b - a;\n  });\n  for(var i=0; i<row.length;\
    \ i++){\n    result.push(get_col(lst, row[i]));\n  }\n  return result;\n}\n",
  "    let row = [];\n    let row_index = 0;\n    let col_index = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] === x){\n            row.push([row_index,\
    \ col_index]);\n            row_index++;\n            col_index = 0;\n       \
    \ }\n        else{\n            col_index++;\n        }\n    }\n    return row;\n\
    }\n", "    var result = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        var row = lst[i];\n        if(row.indexOf(x) !== -1){\n            result.push([i,\
    \ row.indexOf(x)]);\n        }\n    }\n    result.sort(function(a, b){\n     \
    \   return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n        return\
    \ b[0] - a[0];\n    });\n    return result;\n}\n", "  if(lst.length == 0){\n \
    \   return [];\n  }\n  var row = [];\n  var rows = [];\n  var cols = [];\n  var\
    \ col = 0;\n  var row = 0;\n  var rows = [];\n  for(var i = 0, len = lst.length;\
    \ i < len; i++){\n    if(lst[i].indexOf(x) != -1){\n      row.push(i);\n     \
    \ cols.push(col);\n      rows.push(row);\n      col = 0;\n      row++;\n    }\n\
    \    else{\n      col++;\n    }\n  }\n  rows.push(row);\n  cols.push(col);\n \
    \ rows.sort(function(a, b){\n    return a - b;\n  });\n  cols.sort(function(a,\
    \ b){\n    return b - a;\n  });\n  var result = [];\n  for(var i = 0, len = rows.length;\
    \ i < len; i++){\n    var row = [];\n    for(var j = 0, len2 = cols.length; j\
    \ < len2; j++){\n      row.push([rows[i], cols[j]]);\n    }\n    result.push(row);\n\
    \  }\n  return result;\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n \
    \ if(lst.length == 1){\n    return [[0, lst[0].length]];\n  }\n  var row = [];\n\
    \  var rows = [];\n  var row_index = 0;\n  var col_index = 0;\n  var cols = [];\n\
    \  var cols_index = 0;\n  var row_len = lst.length;\n  var col_len = lst[0].length;\n\
    \  while(row_index < row_len){\n    while(col_index < col_len){\n      if(lst[row_index][col_index]\
    \ == x){\n        row.push([row_index, col_index]);\n        cols.push(col_index);\n\
    \        cols_index++;\n        break;\n      }\n      col_index++;\n    }\n \
    \   row_index++;\n    col_index = 0;\n  }\n  rows.push(row);\n  cols.reverse();\n\
    \  cols.unshift(cols_index);\n  return rows;\n}\n", "  var result = [];\n  for(var\
    \ i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n    if(row.indexOf(x)\
    \ !== -1){\n      result.push([i, row.indexOf(x)]);\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return a[1] - b[1];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[0] - a[0];\n  });\n  return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        var row = lst[i];\n       \
    \ if(row.indexOf(x) !== -1){\n            result.push([i, row.indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        var row = lst[i];\n        var rowLen = row.length;\n\
    \        var colLen = row[0].length;\n        var rowIndex = -1;\n        var\
    \ colIndex = -1;\n        for(var j = 0; j < rowLen; j++){\n            if(row[j]\
    \ === x){\n                rowIndex = j;\n                break;\n           \
    \ }\n        }\n        for(var j = 0; j < colLen; j++){\n            if(rowIndex\
    \ === -1 || row[j] === row[0][j]){\n                colIndex = j;\n          \
    \      break;\n            }\n        }\n        if(rowIndex === -1 || colIndex\
    \ === -1){\n            result.push([-1, -1]);\n            continue;\n      \
    \  }\n        result.push([rowIndex, colIndex]);\n    }\n    result.sort(function(a,\
    \ b){\n        var aRow = a[0];\n        var aCol = a[1];\n        var bRow =\
    \ b[0];\n        var bCol = b[1];\n        if(aRow === bRow){\n            return\
    \ aCol - bCol;\n        }\n        return aRow - bRow;\n    });\n    result.sort(function(a,\
    \ b){\n        var aRow = a[0];\n        var aCol = a[1];\n        var bRow =\
    \ b[0];\n        var bCol = b[1];\n        if(aCol === bCol){\n            return\
    \ aRow - bRow;\n        }\n        return aCol - bCol;\n    });\n    return result;\n\
    }\n", "    var result = [];\n    var row = [];\n    var col = [];\n    var row_index\
    \ = 0;\n    var col_index = 0;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] === x){\n            result.push([row_index, col_index]);\n  \
    \          row_index++;\n            col_index = 0;\n        }\n        else if(row_index\
    \ === 0){\n            row.push(lst[i]);\n            col_index++;\n        }\n\
    \        else{\n            row.push(lst[i]);\n            col_index--;\n    \
    \    }\n    }\n    result.push(row);\n    result.sort(function(a, b){\n      \
    \  return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return\
    \ a[1] - b[1];\n    });\n    return result;\n}\n", "  let result = [];\n  let\
    \ row = [];\n  let col = [];\n  for(let i = 0; i < lst.length; i++){\n    row.push(i);\n\
    \    col.push(0);\n  }\n  row.sort((a, b) => a - b);\n  col.sort((a, b) => b -\
    \ a);\n  for(let i = 0; i < row.length; i++){\n    for(let j = 0; j < col.length;\
    \ j++){\n      if(row[i] === x && col[j] === 0){\n        result.push([row[i],\
    \ col[j]]);\n      }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n\
    \  for(var i=0; i<lst.length; i++){\n    var row = lst[i];\n    if(row[x]){\n\
    \      result.push([i, row[x]]);\n    }\n  }\n  result.sort(function(a, b){\n\
    \    return b[1] - a[1];\n  });\n  result.sort(function(a, b){\n    return a[0]\
    \ - b[0];\n  });\n  return result;\n}\n", "  if(lst.length == 0){\n    return\
    \ [];\n  }\n  var row = [];\n  var rows = [];\n  var row_len = 0;\n  var row_lens\
    \ = [];\n  var row_lens_len = 0;\n  var row_lens_lens = [];\n  var row_lens_lens_len\
    \ = 0;\n  var row_lens_lens_lens = [];\n  var row_lens_lens_lens_len = 0;\n  var\
    \ row_lens_lens_lens_lens = [];\n  var row_lens_lens_lens_lens_len = 0;\n  var\
    \ row_lens_lens_lens_lens_lens = [];\n  var row_lens_lens_lens_lens_lens_len =\
    \ 0;\n  var row_lens_lens_lens_lens_lens_lens = [];\n  var row_lens_lens_lens_lens_lens_lens_len\
    \ = 0;\n  var row_lens_lens_lens_lens_lens_lens_lens = [];\n  var row_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0;\n  var row_lens_lens_lens_lens_lens_lens_lens_lens = [];\n  var row_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0;\n  var row_lens_lens_lens_lens_lens_lens_lens_lens_lens = [];\n  var row_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0;\n  var row_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens = [];\n  var\
    \ row_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = 0;\n  var row_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [];\n  var row_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0;\n  var row_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [];\n  var row_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0;\n  var row_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [];\n  var row_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0;\n  var row_lens_lens_lens_lens_lens_lens_lens_lens_", "  var result = [];\n\
    \  if(lst.length == 0){\n    return result;\n  }\n  if(lst.length == 1){\n   \
    \ if(lst[0].length == 1){\n      if(lst[0][0] == x){\n        return [lst[0]];\n\
    \      }\n    }\n  }\n  for(var i = 0, len = lst.length; i < len; i++){\n    var\
    \ row = get_row(lst[i], x);\n    if(row.length > 0){\n      result.push(row);\n\
    \    }\n  }\n  result.sort(function(a, b){\n    var aRow = a[0];\n    var bRow\
    \ = b[0];\n    if(aRow == bRow){\n      return a[1] - b[1];\n    }\n    return\
    \ aRow - bRow;\n  });\n  result.sort(function(a, b){\n    var aCol = a[1];\n \
    \   var bCol = b[1];\n    if(aCol == bCol){\n      return a[0] - b[0];\n    }\n\
    \    return aCol - bCol;\n  });\n  return result;\n}\n", "  var result = [];\n\
    \  if(lst.length == 0){\n    return result;\n  }\n  var row = [];\n  var row_len\
    \ = 0;\n  for(var i = 0, len = lst.length; i < len; i++){\n    var item = lst[i];\n\
    \    if(item == x){\n      result.push(row);\n      row = [];\n      row_len =\
    \ 0;\n    }\n    else{\n      row.push(item);\n      row_len++;\n    }\n  }\n\
    \  if(row.length != 0){\n    result.push(row);\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    var row = [];\n    var rows = [];\n    var cols = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n\
    \    var col = [];\n    var cols = [];\n    var row = [];\n    var rows = [];\n",
  "  if(lst.length == 0){\n    return [];\n  }\n  if(lst.length == 1){\n    return\
    \ [[0, lst[0].length]];\n  }\n  if(lst.length == 2){\n    return [[lst[0][0],\
    \ lst[1].length], [lst[1][0], lst[0].length]];\n  }\n  var row = [];\n  var rows\
    \ = [];\n  var row_index = 0;\n  var col_index = 0;\n  var row_len = lst[0].length;\n\
    \  var col_len = lst[1].length;\n  while(row_index < lst.length){\n    var row_start\
    \ = row_index;\n    var row_end = row_index + 1;\n    var col_start = col_index;\n\
    \    var col_end = col_index + 1;\n    if(row_end >= lst.length){\n      row_end\
    \ = lst.length - 1;\n    }\n    if(col_end >= lst[0].length){\n      col_end =\
    \ lst[0].length - 1;\n    }\n    var row_len = row_end - row_start + 1;\n    var\
    \ col_len = col_end - col_start + 1;\n    var row_coords = [];\n    var col_coords\
    \ = [];\n    while(row_index < row_end){\n      row_coords.push(lst[row_start][col_index]);\n\
    \      row_index++;\n    }\n    while(col_index < col_end){\n      col_coords.push(lst[row_end][col_index]);\n\
    \      col_index++;\n    }\n    row.push(row_coords);\n    rows.push(col_coords);\n\
    \  }\n  rows.sort((a, b) => b[1] - a[1]);\n  row.sort((a, b) => b[1] - a[1]);\n\
    \  return row;\n}\n", "    var result = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        var row = lst[i];\n        var rowResult = [];\n        for(var\
    \ j = 0; j < row.length; j++){\n            if(row[j] == x){\n               \
    \ rowResult.push([i, j]);\n            }\n        }\n        result.push(rowResult);\n\
    \    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n    return\
    \ result;\n}\n", "  let result = [];\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i].indexOf(x) !== -1){\n      result.push([i, lst[i].indexOf(x)]);\n\
    \    }\n  }\n  result.sort((a,b) => b[1] - a[1]);\n  result.sort((a,b) => b[0]\
    \ - a[0]);\n  return result;\n}\n", "    var result = [];\n    for(var i = 0;\
    \ i < lst.length; i++){\n        var row = lst[i];\n        if(row.indexOf(x)\
    \ !== -1){\n            result.push([i, row.indexOf(x)]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    return result;\n}\n", "  if(lst.length\
    \ == 0){\n    return [];\n  }\n  if(lst.length == 1){\n    return [lst[0]];\n\
    \  }\n  let row = [];\n  let row_index = 0;\n  let row_len = lst[0].length;\n\
    \  let col_len = lst.length;\n  for(let i = 0; i < row_len; i++){\n    let col\
    \ = [];\n    for(let j = 0; j < col_len; j++){\n      if(lst[j][i] == x){\n  \
    \      col.push([i, j, lst[j][i]]);\n      }\n    }\n    row.push(col);\n  }\n\
    \  row.sort((a, b) => {\n    if(a[0] < b[0]){\n      return -1;\n    }\n    if(a[0]\
    \ > b[0]){\n      return 1;\n    }\n    if(a[1] < b[1]){\n      return -1;\n \
    \   }\n    if(a[1] > b[1]){\n      return 1;\n    }\n    return 0;\n  });\n  row.sort((a,\
    \ b) => {\n    if(a[2] < b[2]){\n      return -1;\n    }\n    if(a[2] > b[2]){\n\
    \      return 1;\n    }\n    return 0;\n  });\n  return row;\n}\n", "  var result\
    \ = [];\n  for(var i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n\
    \    var rowLen = row.length;\n    if(rowLen === x){\n      result.push([i, row]);\n\
    \    }\n  }\n  result.sort(function(a, b){\n    return a[0] - b[0];\n  });\n \
    \ result.sort(function(a, b){\n    return a[1] - b[1];\n  });\n  return result;\n\
    }\n", "    var result = [];\n    var row = [];\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return a - b;\n    });\n\
    \    for(var i = 0, len = row.length; i < len; i++){\n        result.push([row[i],\
    \ row.length]);\n    }\n    result.sort(function(a, b){\n        return b[0] -\
    \ a[0];\n    });\n    return result;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<lst.length; i++){\n    var row = lst[i];\n    for(var j=0; j<row.length; j++){\n\
    \      if(row[j] === x){\n        result.push([i, j]); \n        break;\n    \
    \  }\n    }\n  }\n  result.sort(function(a, b){\n    return a[0] - b[0];\n  });\n\
    \  result.sort(function(a, b){\n    return a[1] - b[1];\n  });\n  return result;\n\
    }\n", "  var row = [];\n  for(var i = 0, len = lst.length; i < len; i++){\n  \
    \  if(lst[i].indexOf(x) !== -1){\n      row.push([i, lst[i].indexOf(x)])\n   \
    \ }\n  }\n  row.sort(function(a, b){\n    return b[1] - a[1]\n  });\n  row.sort(function(a,\
    \ b){\n    return a[0] - b[0]\n  });\n  return row;\n}\n", "    var result = [];\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        var row = lst[i];\n\
    \        if(row.indexOf(x) !== -1){\n            result.push([i, row.indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var row = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n      \
    \      row.push(i);\n        }\n    }\n    result.push(row);\n    for(var i =\
    \ 0; i < row.length; i++){\n        var row = [];\n        for(var j = 0; j <\
    \ lst[row[i]].length; j++){\n            row.push(lst[row[i]][j]);\n        }\n\
    \        result.push(row);\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n    var rowLen\
    \ = row.length;\n    if(rowLen === 0){\n      result.push([]);\n      continue;\n\
    \    }\n    var rowIndex = row.indexOf(x);\n    if(rowIndex === -1){\n      result.push([]);\n\
    \      continue;\n    }\n    var rowCoord = row.slice(0, rowIndex);\n    var rowCoordLen\
    \ = rowCoord.length;\n    var rowCoordReversed = rowCoord.slice().reverse();\n\
    \    var rowCoordReversedLen = rowCoordReversed.length;\n    var colIndex = rowCoordReversed.indexOf(x);\n\
    \    if(colIndex === -1){\n      result.push([]);\n      continue;\n    }\n  \
    \  var colCoord = rowCoordReversed.slice(0, colIndex);\n    var colCoordLen =\
    \ colCoord.length;\n    var colCoordReversed = colCoord.slice().reverse();\n \
    \   var colCoordReversedLen = colCoordReversed.length;\n    var rowCoordReversedIndex\
    \ = rowCoordReversed.indexOf(rowIndex);\n    var colCoordReversedIndex = colCoordReversed.indexOf(colIndex);\n\
    \    var rowCoordReversedIndex = rowCoordReversed.indexOf(rowIndex);\n    var\
    \ colCoordReversedIndex = colCoordReversed.indexOf(colIndex);\n    var rowCoordReversedIndexLen\
    \ = rowCoordReversedIndex.length;\n    var colCoordReversedIndexLen = colCoordReversedIndex.length;\n\
    \    var rowCoordReversedIndexLen = rowCoordReversedIndex.length;\n    var colCoordReversedIndexLen\
    \ = colCoordReversedIndex.length;\n    var rowCoordReversedIndexLen = rowCoordReversedIndex.length;\n\
    \    var colCoordReversedIndexLen = colCoordReversedIndex.length;\n    var rowCoordReversedIndexLen\
    \ = rowCoordReversedIndex.length;\n    var colCoordReversedIndexLen = colCoordReversedIndex.length;\n\
    \    var rowCoordReversedIndexLen = rowCoordReversedIndex.length;\n    var colCoordReversedIndexLen\
    \ = colCoordReversedIndex.length;\n    var rowCoordReversedIndexLen = rowCoordReversedIndex.length;\n\
    \    var colCoordReversedIndexLen = colCoordReversedIndex.length;\n    var rowCoordReversedIndexLen\
    \ = rowCoordReversedIndex.length;\n    var colCoordReversedIndexLen = colCoordReversedIndex.length;\n\
    \    var rowCoordReversedIndexLen = rowCoordReversedIndex.length;\n    var colCoordReversedIndexLen\
    \ = colCoordReversedIndex.length;\n    var rowCoordReversedIndexLen = rowCoordReversedIndex.length;\n\
    \    var colCoordReversedIndexLen = colCoordReversedIndex.length;\n", "    var\
    \ result = [];\n    var row = [];\n    var row_index = 0;\n    var column_index\
    \ = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] === x){\n\
    \            result.push([row_index, column_index]);\n            row_index++;\n\
    \            column_index = 0;\n        }\n        else{\n            column_index++;\n\
    \        }\n    }\n    if(row_index > 0){\n        result.push([row_index, column_index]);\n\
    \    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return\
    \ result;\n}\n", "    var result = [];\n    var row = [];\n    var col = [];\n\
    \    var row_index = 0;\n    var col_index = 0;\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        if(lst[i] === x){\n            result.push([row_index,\
    \ col_index]);\n            row_index++;\n            col_index = 0;\n       \
    \ }\n        else if(row_index === 0){\n            row_index++;\n           \
    \ col_index = 0;\n        }\n        else if(col_index === 0){\n            row_index\
    \ = 0;\n            col_index++;\n        }\n        else{\n            row_index++;\n\
    \            col_index++;\n        }\n    }\n    result.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n     \
    \   return a[1] - b[1];\n    });\n    return result;\n}\n", "    var result =\
    \ [];\n    var row = [];\n    var row_len = 0;\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n\
    \            row_len++;\n        }\n    }\n    row.sort(function(a, b){\n    \
    \    return a - b;\n    });\n    for(var i = 0, len = row.length; i < len; i++){\n\
    \        result.push([row[i], row_len - row[i]]);\n    }\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return result;\n}\n", "    if(!lst.length)\
    \ return [];\n    var result = [];\n    var row = [];\n    var row_idx = 0, col_idx\
    \ = 0;\n    while(row_idx < lst.length){\n        while(col_idx < lst[row_idx].length){\n\
    \            if(lst[row_idx][col_idx] == x){\n                result.push([row_idx,\
    \ col_idx]);\n                break;\n            }\n            col_idx++;\n\
    \        }\n        col_idx = 0;\n        row_idx++;\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    let row\
    \ = [];\n    let row_len = 0;\n    for(let i = 0; i < lst.length; i++){\n    \
    \    if(lst[i].indexOf(x) !== -1){\n            row.push([i, lst[i].indexOf(x)]);\n\
    \            row_len++;\n        }\n    }\n    if(row_len === 0){\n        return\
    \ [];\n    }\n    row.sort((a,b) => a[1] - b[1]);\n    for(let i = 0; i < row.length;\
    \ i++){\n        row.sort((a,b) => b[0] - a[0]);\n    }\n    return row;\n}\n",
  "    if(!lst) return [];\n    var res = [];\n    var row = [];\n    var col = [];\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        row.push(lst[i][0]);\n\
    \        col.push(lst[i][1]);\n    }\n    row.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    col.sort(function(a, b){\n        return b - a;\n    });\n\
    \    for(var i = 0, len = row.length; i < len; i++){\n        for(var j = 0, len2\
    \ = col.length; j < len2; j++){\n            if(row[i] === col[j]){\n        \
    \        res.push([row[i], col[j]]);\n            }\n        }\n    }\n    return\
    \ res;\n}\n", "    let row = [];\n    for(let i = 0; i < lst.length; i++){\n \
    \       if(lst[i].includes(x)){\n            row.push([i, lst[i].indexOf(x)]);\n\
    \        }\n    }\n    row.sort((a, b) => b[1] - a[1]);\n    row.sort((a, b) =>\
    \ b[0] - a[0]);\n    return row;\n}\n", "    var result = [];\n    for(var i =\
    \ 0, len = lst.length; i < len; i++){\n        var row = lst[i];\n        if(row.indexOf(x)\
    \ !== -1){\n            result.push([i, row.indexOf(x)]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i = 0; i < lst.length; i++){\n        var row = lst[i];\n\
    \        var row_x = row[x];\n        var row_y = row[x - 1];\n        result.push([row_x,\
    \ row_y]);\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return result;\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n  var\
    \ row = [];\n  var row_index = 0;\n  var row_len = lst.length;\n  for(var i=0;\
    \ i<row_len; i++){\n    if(lst[i][0] == x){\n      row.push([i, lst[i][1]]);\n\
    \      row_index = i;\n    }\n  }\n  if(row_index == row_len){\n    return [];\n\
    \  }\n  row.sort(function(a, b){\n    return b[1] - a[1];\n  });\n  row.sort(function(a,\
    \ b){\n    return a[0] - b[0];\n  });\n  return row;\n}\n", "    var result =\
    \ [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<row.length; i++){\n        var row = [];\n        for(var\
    \ j=0; j<lst[row[i]].length; j++){\n            row.push(lst[row[i]][j]);\n  \
    \      }\n        result.push(row);\n    }\n    result.sort(function(a, b){\n\
    \        return a[0]-b[0];\n    });\n    result.sort(function(a, b){\n       \
    \ return a[1]-b[1];\n    });\n    return result;\n}\n", "    var result = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        var row = lst[i];\n       \
    \ if(row.indexOf(x) !== -1){\n            result.push([i, row.indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "  let row = [];\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(lst[i].indexOf(x) !== -1){\n      row.push([i, lst[i].indexOf(x)]);\n\
    \    }\n  }\n  row.sort((a, b) => a[1] - b[1]);\n  row.sort((a, b) => b[0] - a[0]);\n\
    \  return row;\n}\n", "    var result = [];\n    var row = [];\n    var col =\
    \ [];\n    var rows = [];\n    var cols = [];\n    var row_index = 0;\n    var\
    \ col_index = 0;\n    var row_len = lst.length;\n    var col_len = lst[0].length;\n\
    \    for(var i=0; i<row_len; i++){\n        row.push(lst[i]);\n        if(row_index\
    \ == x){\n            rows.push(row);\n            row = [];\n            row_index\
    \ = 0;\n        }\n        row_index++;\n    }\n    for(var i=0; i<col_len; i++){\n\
    \        col.push(lst[0][i]);\n        if(col_index == x){\n            cols.push(col);\n\
    \            col = [];\n            col_index = 0;\n        }\n        col_index++;\n\
    \    }\n    for(var i=0; i<rows.length; i++){\n        for(var j=0; j<cols.length;\
    \ j++){\n            result.push([rows[i][j], cols[j][col_index]]);\n        }\n\
    \    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return\
    \ result;\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n  if(lst.length\
    \ == 1){\n    return [[0, lst[0].length-1]];\n  }\n  if(lst.length == 2){\n  \
    \  return [[lst[0][0], lst[1].length-1], [lst[1][0], lst[0].length-1]];\n  }\n\
    \  if(lst.length == 3){\n    return [[lst[0][0], lst[1][1]], [lst[1][0], lst[2][1]],\
    \ [lst[2][0], lst[0].length-1]];\n  }\n  if(lst.length == 4){\n    return [[lst[0][0],\
    \ lst[1][1]], [lst[1][0], lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[0].length-1]];\n\
    \  }\n  if(lst.length == 5){\n    return [[lst[0][0], lst[1][1]], [lst[1][0],\
    \ lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[4][1]], [lst[4][0], lst[0].length-1]];\n\
    \  }\n  if(lst.length == 6){\n    return [[lst[0][0], lst[1][1]], [lst[1][0],\
    \ lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[4][1]], [lst[4][0], lst[5][1]],\
    \ [lst[5][0], lst[0].length-1]];\n  }\n  if(lst.length == 7){\n    return [[lst[0][0],\
    \ lst[1][1]], [lst[1][0], lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[4][1]],\
    \ [lst[4][0], lst[5][1]], [lst[5][0], lst[6][1]], [lst[6][0], lst[0].length-1]];\n\
    \  }\n  if(lst.length == 8){\n    return [[lst[0][0], lst[1][1]], [lst[1][0],\
    \ lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[4][1]], [lst[4][0], lst[5][1]],\
    \ [lst[5][0], lst[6][1]], [lst[6][0], lst[7][1]], [lst[7][0], lst[0].length-1]];\n\
    \  }\n  if(lst.length == 9){\n    return [[lst[0][0], lst[1][1]], [lst[1][0],\
    \ lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[4][1]], [lst[4][0], lst[5][1]],\
    \ [lst[5][0], lst[6][1]], [lst[6][0], lst[7][1]], [lst[7][0], lst[8][1]], [lst[8][0],\
    \ lst[0].length-1]];\n  }\n  if(lst.length == 10){\n    return [[lst[0][0], lst[1][1]],\
    \ [lst[1][0], lst[2][1]], [lst[2][0], lst[3][1]], [lst[3][0], lst[4][1]], [lst[4][0],\
    \ lst[5][1]], [lst[5][0], lst[6][1]], [lst[6][0], lst", "    var row = [];\n \
    \   for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push([i, lst[i].indexOf(x)]);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    row.sort(function(a, b){\n  \
    \      return a[0] - b[0];\n    });\n    return row;\n}\n", "    var result =\
    \ [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        var row =\
    \ lst[i];\n        var rowLen = row.length;\n        var colLen = row[x];\n  \
    \      var rowResult = [];\n        for(var j = 0; j < colLen; j++){\n       \
    \     rowResult.push([i, j]);\n        }\n        result.push(rowResult);\n  \
    \  }\n    result.sort(function(a, b){\n        var aRow = a[0];\n        var bRow\
    \ = b[0];\n        if(aRow < bRow){\n            return -1;\n        }else if(aRow\
    \ > bRow){\n            return 1;\n        }else{\n            return 0;\n   \
    \     }\n    });\n    result.sort(function(a, b){\n        var aCol = a[1];\n\
    \        var bCol = b[1];\n        if(aCol < bCol){\n            return -1;\n\
    \        }else if(aCol > bCol){\n            return 1;\n        }else{\n     \
    \       return 0;\n        }\n    });\n    return result;\n}\n", "  if(lst.length\
    \ == 0){\n    return [];\n  }\n  var row = [];\n  var row_index = 0;\n  var row_len\
    \ = lst.length;\n  for(var i=0; i<row_len; i++){\n    if(lst[i][0] == x){\n  \
    \    row.push([i, lst[i][1]]);\n    }\n  }\n  if(row.length == 0){\n    return\
    \ [];\n  }\n  row.sort(function(a, b){\n    return b[1] - a[1];\n  });\n  row.sort(function(a,\
    \ b){\n    return a[0] - b[0];\n  });\n  return row;\n}\n", "  if(lst.length <=\
    \ 0){\n    return [];\n  }\n  if(lst.length == 1){\n    return [[0, lst[0].length]];\n\
    \  }\n  var row = [];\n  var row_index = 0;\n  var row_indexes = [];\n  var row_indexes_index\
    \ = 0;\n  var row_length = 0;\n  var row_length_index = 0;\n  var row_lengths\
    \ = [];\n  var row_lengths_index = 0;\n  for(var i = 0, len = lst.length; i <\
    \ len; i++){\n    if(lst[i].length == x){\n      row.push([i, lst[i].length]);\n\
    \      row_indexes.push(row_index);\n      row_index++;\n      row_lengths.push(row_length);\n\
    \      row_length_index++;\n      row_length = 0;\n    }\n    row_length += lst[i].length;\n\
    \  }\n  row_indexes.sort(function(a, b){\n    return b - a;\n  });\n  row_indexes.reverse();\n\
    \  row_lengths.sort(function(a, b){\n    return b - a;\n  });\n  row_lengths.reverse();\n\
    \  var result = [];\n  for(var i = 0, len = row_indexes.length; i < len; i++){\n\
    \    var row_indexes_index = row_indexes[i];\n    var row_lengths_index = row_lengths[i];\n\
    \    for(var j = 0, len2 = row_lengths_index; j < len2; j++){\n      result.push([row_indexes_index\
    \ + j, lst[row_indexes_index + j][row_lengths_index - j - 1]]);\n    }\n  }\n\
    \  return result;\n}\n", "    var res = [];\n    var row = [];\n    for(var i\
    \ = 0; i < lst.length; i++){\n        if(lst[i] === x){\n            row.push(i);\n\
    \        }\n        else if(row.length > 0){\n            res.push(row.slice(0).reverse());\n\
    \            row = [];\n        }\n    }\n    if(row.length > 0){\n        res.push(row.slice(0).reverse());\n\
    \    }\n    return res;\n}\n", "    var result = [];\n    for(var i = 0, len =\
    \ lst.length; i < len; i++){\n        var row = lst[i];\n        for(var j = 0,\
    \ len2 = row.length; j < len2; j++){\n            if(row[j] === x){\n        \
    \        result.push([i, j]);\n            }\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "  var result\
    \ = [];\n  for(var i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n\
    \    if(row.indexOf(x) !== -1){\n      result.push([i, row.indexOf(x)]);\n   \
    \ }\n  }\n  result.sort(function(a, b){\n    return a[1] - b[1];\n  });\n  result.sort(function(a,\
    \ b){\n    return b[0] - a[0];\n  });\n  return result;\n}\n", "  var res = [];\n\
    \  var row = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x)\
    \ !== -1){\n      row.push(i);\n    }\n  }\n  if(row.length){\n    for(var i=0;\
    \ i<row.length; i++){\n      res.push([row[i], row[i]]);\n    }\n    res.sort(function(a,\
    \ b){\n      return b[0] - a[0];\n    });\n    res.sort(function(a, b){\n    \
    \  return b[1] - a[1];\n    });\n  }\n  return res;\n}\n", "  var result = [];\n\
    \  var row = [];\n  var col = [];\n  var row_index = 0;\n  var col_index = 0;\n\
    \  for(var i = 0, len = lst.length; i < len; i++){\n    if(lst[i] === x){\n  \
    \    result.push([row, col]);\n      row = [];\n      col = [];\n      row_index\
    \ = 0;\n      col_index = 0;\n    }\n    row.push(lst[i]);\n    if(row_index ===\
    \ 0){\n      col_index++;\n    }\n    if(row_index === lst[i].length){\n     \
    \ row_index++;\n      col_index = 0;\n    }\n  }\n  result.push([row, col]);\n\
    \  return result;\n}\n", "    var result = [];\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        var row = lst[i];\n        if(row.indexOf(x) !== -1){\n\
    \            result.push([i, row.indexOf(x)]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n\
    \        return b[0] - a[0];\n    });\n    return result;\n}\n", "  let result\
    \ = [];\n  let row = [];\n  let row_sorted = [];\n  let col_sorted = [];\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i].includes(x)){\n      row.push(i);\n\
    \      row_sorted.push(row);\n      row = [];\n    }\n  }\n  for(let i = 0; i\
    \ < row_sorted.length; i++){\n    col_sorted.push([]);\n    for(let j = 0; j <\
    \ row_sorted[i].length; j++){\n      col_sorted[i].push(row_sorted[i][j]);\n \
    \   }\n  }\n  col_sorted.sort((a, b) => b[0] - a[0]);\n  for(let i = 0; i < col_sorted.length;\
    \ i++){\n    result.push(col_sorted[i]);\n  }\n  return result;\n}\n", "    var\
    \ result = [];\n    var row = [];\n    var col = [];\n    var row_sorted = [];\n\
    \    var col_sorted = [];\n    var i = 0;\n    while(i < lst.length){\n      \
    \  row.push(lst[i]);\n        col_sorted.push(lst[i].indexOf(x));\n        col_sorted.sort(function(a,\
    \ b){return b-a});\n        col_sorted.reverse();\n        col_sorted.forEach(function(val,\
    \ i){\n            row.push(val);\n            col_sorted.splice(i, 1);\n    \
    \    });\n        row_sorted.push(row);\n        row.splice(0, row.length);\n\
    \        i++;\n    }\n    row_sorted.sort(function(a, b){return b - a});\n   \
    \ row_sorted.reverse();\n    row_sorted.forEach(function(row, i){\n        col_sorted.forEach(function(col,\
    \ j){\n            result.push([i, col_sorted[j]]);\n        });\n    });\n  \
    \  return result;\n}\n", "    var result = [];\n    var row = [];\n    var col\
    \ = [];\n    var row_index = 0;\n    var col_index = 0;\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(lst[i] === x){\n            result.push([row_index,\
    \ col_index]);\n            row_index++;\n            col_index = 0;\n       \
    \ }\n        else if(row_index > 0){\n            row.push(lst[i]);\n        \
    \    col_index++;\n        }\n        else{\n            result.push([row_index,\
    \ col_index]);\n            row_index = 0;\n            col_index++;\n       \
    \ }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n   \
    \ });\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return result;\n}\n", "    var res = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        var row = lst[i];\n        if(row.indexOf(x) !== -1){\n     \
    \       res.push([i, row.indexOf(x)]);\n        }\n    }\n    res.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    res.sort(function(a, b){\n  \
    \      return b[0] - a[0];\n    });\n    return res;\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var row = [];\n    var row_index = 0;\n\
    \    var row_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].length\
    \ == 0){\n            continue;\n        }\n        row_length += lst[i].length;\n\
    \        if(row_length == x){\n            row.push([row_index, i]);\n       \
    \ }\n        row_index++;\n        row_length--;\n    }\n    row.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    row.sort(function(a, b){\n  \
    \      return b[0] - a[0];\n    });\n    return row;\n}\n", "  var result = [];\n\
    \  for(var i=0; i<lst.length; i++){\n    var row = lst[i];\n    var rowResult\
    \ = [];\n    for(var j=0; j<row.length; j++){\n      if(row[j] == x){\n      \
    \  rowResult.push([i, j]);\n      }\n    }\n    result.push(rowResult);\n  }\n\
    \  result.sort(function(a, b){\n    return b[1] - a[1];\n  });\n  result.sort(function(a,\
    \ b){\n    return a[0] - b[0];\n  });\n  return result;\n}\n", "  if(lst.length\
    \ == 0){\n    return [];\n  }\n  var row = [];\n  var row_index = 0;\n  var column_index\
    \ = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i] == x){\n      row.push([row_index,\
    \ column_index]);\n      row_index++;\n      column_index = 0;\n    }\n    else{\n\
    \      column_index++;\n    }\n  }\n  row.push([row_index, column_index]);\n \
    \ row.sort(function(a, b){\n    return b[0] - a[0];\n  });\n  row.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  return row;\n}\n", "    if(!lst.length)\
    \ return [];\n    var row = [];\n    var rows = [];\n    var row_idx = -1;\n \
    \   var row_len = lst.length;\n    var col_len = lst[0].length;\n    var col_arr\
    \ = [];\n    for(var i=0; i<col_len; i++){\n        col_arr.push(i);\n    }\n\
    \    col_arr.sort(function(a, b){\n        return b-a;\n    });\n    for(var i=0;\
    \ i<col_len; i++){\n        col_arr.reverse();\n        col_arr.unshift(i);\n\
    \    }\n    col_arr.reverse();\n    for(var i=0; i<row_len; i++){\n        row_idx++;\n\
    \        row.push([row_idx, 0]);\n        row_idx = col_arr[row_idx];\n    }\n\
    \    for(var i=0; i<lst.length; i++){\n        for(var j=0; j<col_len; j++){\n\
    \            if(lst[i][j] == x){\n                row.push([i, j]);\n        \
    \    }\n        }\n    }\n    rows.sort(function(a, b){\n        return a[0] -\
    \ b[0];\n    });\n    rows.reverse();\n    return rows;\n}\n", "    var result\
    \ = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        var row\
    \ = lst[i];\n        if(row.indexOf(x) !== -1){\n            result.push([i, row.indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var row = [];\n    var row_len\
    \ = 0;\n    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){\n            row.push(i);\n            row_len++;\n        }\n    }\n\
    \    result.push(row);\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n            row_len++;\n\
    \        }\n    }\n    result.push(row);\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n\
    \            row_len++;\n        }\n    }\n    result.push(row);\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) != -1){\n\
    \            row.push(i);\n            row_len++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){\n            row.push(i);\n            row_len++;\n        }\n    }\n\
    \    result.push(row);\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n            row_len++;\n\
    \        }\n    }\n    result.push(row);\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n\
    \            row_len++;\n        }\n    }\n    result.push(row);\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) != -1){\n\
    \            row.push(i);\n            row_len++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){\n            row.push(i);\n            row_len++;\n        }\n    }\n\
    \    result.push(row);\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n            row_len++;\n\
    \        }\n    }\n    result.push(row);\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n\
    \            row_len++;\n        }\n    }\n    result.push(row);\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) != -1){\n\
    \            row.push(i);\n            row_len++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){", "    var result = [];\n    var row = [];\n    var row_length = 0;\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_length++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            ", "    var result = [];\n    for(var i=0; i<lst.length; i++){\n\
    \        var row = lst[i];\n        if(row.indexOf(x) !== -1){\n            result.push([i,\
    \ row.indexOf(x)]);\n        }\n    }\n    result.sort(function(a, b){\n     \
    \   return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n        return\
    \ b[0] - a[0];\n    });\n    return result;\n}\n", "  var result = [];\n  for(var\
    \ i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n    for(var\
    \ j = 0, len2 = row.length; j < len2; j++){\n      if(row[j] === x){\n       \
    \ result.push([i, j]);\n      }\n    }\n  }\n  result.sort(function(a, b){\n \
    \   return a[0] - b[0];\n  });\n  result.sort(function(a, b){\n    return b[1]\
    \ - a[1];\n  });\n  return result;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<lst.length; i++){\n    if(lst[i].indexOf(x) != -1){\n      result.push([i,\
    \ lst[i].indexOf(x)]);\n    }\n  }\n  result.sort(function(a, b){\n    return\
    \ b[1] - a[1];\n  });\n  result.sort(function(a, b){\n    return b[0] - a[0];\n\
    \  });\n  return result;\n}\n", "    var result = [];\n    for(var i = 0; i <\
    \ lst.length; i++){\n        var row = [];\n        for(var j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                row.push([i, j]);\n\
    \            }\n        }\n        result.push(row);\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !=\
    \ -1){\n            result.push([i, lst[i].indexOf(x)]);\n        }\n    }\n \
    \   result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    return result;\n}\n", "  var\
    \ result = [];\n  for(var i=0; i<lst.length; i++){\n    var row = lst[i];\n  \
    \  var rowResult = [];\n    for(var j=0; j<row.length; j++){\n      if(row[j]\
    \ == x){\n        rowResult.push([i, j]);\n      }\n    }\n    result.push(rowResult);\n\
    \  }\n  result.sort(function(a, b){\n    return a[0]-b[0];\n  });\n  result.sort(function(a,\
    \ b){\n    return b[1]-a[1];\n  });\n  return result;\n}\n", "    let row = [];\n\
    \    let row_index = 0;\n    let col_index = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] === x){\n            row.push([row_index, col_index]);\n\
    \            row_index++;\n            col_index = 0;\n        }else{\n      \
    \      col_index++;\n        }\n    }\n    return row;\n}\n", "    var row = [];\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        var item = lst[i];\n\
    \        if(item === x){\n            row.push(i);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    row.sort(function(a, b){\n        return\
    \ b - a;\n    });\n    return row;\n}\n", "  var res = [];\n  var row = [];\n\
    \  for(var i = 0, len = lst.length; i < len; i++){\n    if(lst[i].indexOf(x) !==\
    \ -1){\n      row.push(i);\n    }\n  }\n  if(row.length > 0){\n    row.sort(function(a,\
    \ b){\n      return a - b;\n    });\n    row.sort(function(a, b){\n      return\
    \ b - a;\n    });\n    for(var i = 0, len = row.length; i < len; i++){\n     \
    \ res.push([row[i], i]);\n    }\n  }\n  return res;\n}\n", "  var result = [];\n\
    \  for(var i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n  \
    \  for(var j = 0, len2 = row.length; j < len2; j++){\n      if(row[j] === x){\n\
    \        result.push([i, j]);\n      }\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return a[0] - b[0];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[1] - a[1];\n  });\n  return result;\n}\n", "  var result = [];\n  for(var\
    \ i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n    if(row.indexOf(x)\
    \ !== -1){\n      result.push([i, row.indexOf(x)]);\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return a[1] - b[1];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[0] - a[0];\n  });\n  return result;\n}\n", "    let result = [];\n    let\
    \ row = [];\n    let col = [];\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i].includes(x)){\n            row.push(i);\n            col.push(lst[i].indexOf(x));\n\
    \        }\n    }\n    result.push(row);\n    result.push(col);\n    result.sort((a,b)\
    \ => b[1] - a[1]);\n    result.sort((a,b) => b[2] - a[2]);\n    return result;\n\
    }\n", "    var result = [];\n    for(var i = 0; i < lst.length; i++){\n      \
    \  var row = lst[i];\n        var rowResult = [];\n        for(var j = 0; j <\
    \ row.length; j++){\n            if(row[j] == x){\n                rowResult.push([i,\
    \ j]); //(row, column)\n            }\n        }\n        result.push(rowResult);\n\
    \    }\n    result.sort(function(a, b){\n        return a[0] - b[0]; //sort by\
    \ row\n    });\n    result.sort(function(a, b){\n        return a[1] - b[1]; //sort\
    \ by column\n    });\n    return result;\n}\n", "  var result = [];\n  for(var\
    \ i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n    if(row.indexOf(x)\
    \ !== -1){\n      result.push([i, row.indexOf(x)]);\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return a[1] - b[1];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[0] - a[0];\n  });\n  return result;\n}\n", "  let row = [];\n  for(let i =\
    \ 0; i < lst.length; i++){\n    if(lst[i].indexOf(x) !== -1){\n      row.push([i,\
    \ lst[i].indexOf(x)]);\n    }\n  }\n  row.sort((a, b) => b[1] - a[1]);\n  row.sort((a,\
    \ b) => b[0] - a[0]);\n  return row;\n}\n", "    var result = [];\n    var row\
    \ = [];\n    var col = [];\n    var rows = [];\n    var cols = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) != -1){\n           \
    \ row.push(i);\n            col.push(lst[i].indexOf(x));\n        }\n    }\n \
    \   rows = row.sort(function(a, b){return b-a});\n    cols = col.sort(function(a,\
    \ b){return b-a});\n    for(var i=0; i<rows.length; i++){\n        result.push([rows[i],\
    \ cols[i]]);\n    }\n    result.sort(function(a, b){return a[0]-b[0]});\n    return\
    \ result;\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n  if(lst.length\
    \ == 1){\n    return [lst[0]];\n  }\n  var row = [];\n  var rows = [];\n  var\
    \ row_index = 0;\n  var col_index = 0;\n  var row_length = 0;\n  var col_length\
    \ = 0;\n  for(var i = 0, len = lst.length; i < len; i++){\n    var item = lst[i];\n\
    \    if(item == x){\n      row.push([row_index, col_index]);\n      rows.push(row);\n\
    \      row = [];\n      row_index++;\n      col_index = 0;\n      row_length++;\n\
    \    }\n    else{\n      if(row_length == 0){\n        row.push([row_index, col_index]);\n\
    \        rows.push(row);\n        row = [];\n        row_index++;\n        col_index\
    \ = 0;\n        row_length++;\n      }\n      if(col_length == 0){\n        col_index++;\n\
    \        col_length++;\n      }\n      else{\n        col_index++;\n        col_length--;\n\
    \      }\n    }\n  }\n  if(row_length == 0){\n    row.push([row_index, col_index]);\n\
    \    rows.push(row);\n  }\n  if(col_length == 0){\n    col_index++;\n  }\n  else{\n\
    \    col_index++;\n    col_length--;\n  }\n  return rows;\n}\n", "    var res\
    \ = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        var row\
    \ = lst[i];\n        for(var j = 0, len2 = row.length; j < len2; j++){\n     \
    \       if(row[j] === x){\n                res.push([i, j]); break;\n        \
    \    }\n        }\n    }\n    res.sort(function(a, b){\n        return a[0] -\
    \ b[0] || a[1] - b[1];\n    });\n    res.sort(function(a, b){\n        return\
    \ b[0] - a[0] || b[1] - a[1];\n    });\n    return res;\n}\n", "    var result\
    \ = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        var row\
    \ = lst[i];\n        var rowLen = row.length;\n        var colLen = row[x];\n\
    \        if(rowLen === colLen){\n            result.push([i, x]);\n        }\n\
    \        else if(rowLen < colLen){\n            result.push([i, x]);\n       \
    \ }\n        else{\n            var j;\n            for(j = 0; j < colLen; j++){\n\
    \                result.push([i, j]);\n            }\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        var aRow = a[0];\n        var bRow = b[0];\n        if(aRow < bRow){\n\
    \            return -1;\n        }\n        else if(aRow > bRow){\n          \
    \  return 1;\n        }\n        return 0;\n    });\n    result.sort(function(a,\
    \ b){\n        var aCol = a[1];\n        var bCol = b[1];\n        if(aCol < bCol){\n\
    \            return -1;\n        }\n        else if(aCol > bCol){\n          \
    \  return 1;\n        }\n        return 0;\n    });\n    return result;\n}\n",
  "  var result = [];\n  var row = [];\n  var col = [];\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i][0] == x){\n      row.push(i);\n      col.push(lst[i][1]);\n\
    \    }\n  }\n  result.push(row);\n  result.push(col);\n  result.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  result.sort(function(a, b){\n    return\
    \ a[0] - b[0];\n  });\n  return result;\n}\n", "  var row = [];\n  var row_index\
    \ = 0;\n  var column_index = 0;\n  for(var i = 0, len = lst.length; i < len; i++){\n\
    \    if(lst[i] === x){\n      row.push([row_index, column_index]);\n      row_index++;\n\
    \      column_index = 0;\n    }\n    else{\n      column_index++;\n    }\n  }\n\
    \  if(row_index > 0){\n    row.push([row_index, column_index]);\n  }\n  return\
    \ row;\n}\n", "    var result = [];\n    var row = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n   \
    \     }\n    }\n    result.push(row);\n    for(var i=0; i<row.length; i++){\n\
    \        var row = [];\n        for(var j=0; j<lst[row[i]].length; j++){\n   \
    \         row.push(lst[row[i]][j]);\n        }\n        result.push(row);\n  \
    \  }\n    result.sort(function(a, b){\n        return b[0]-a[0];\n    });\n  \
    \  result.sort(function(a, b){\n        return b[1]-b[0];\n    });\n    return\
    \ result;\n}\n", "  var result = [];\n  for(var i = 0, len = lst.length; i < len;\
    \ i++){\n    var row = lst[i];\n    for(var j = 0, len2 = row.length; j < len2;\
    \ j++){\n      if(row[j] === x){\n        result.push([i, j]);\n      }\n    }\n\
    \  }\n  result.sort(function(a, b){\n    return a[0] - b[0];\n  });\n  result.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  return result;\n}\n", "  if(lst.length\
    \ == 0){\n    return [];\n  }\n  var row = [];\n  var rows = [];\n  for(var i\
    \ = 0, len = lst.length; i < len; i++){\n    if(lst[i].indexOf(x) != -1){\n  \
    \    row.push(i);\n      rows.push(row);\n      row = [];\n    }\n  }\n  if(row.length){\n\
    \    rows.push(row);\n  }\n  rows.sort(function(a, b){\n    return b[1] - a[1];\n\
    \  });\n  var result = [];\n  for(var i = 0, len = rows.length; i < len; i++){\n\
    \    result.push(get_coords(rows[i]));\n  }\n  return result;\n}\n", "    let\
    \ row = [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i].includes(x)){\n\
    \            row.push([i, lst[i].indexOf(x)])\n        }\n    }\n    row.sort((a,b)\
    \ => b[1] - a[1])\n    row.sort((a,b) => b[0] - a[0])\n    return row\n}\n", " \
    \ var result = [];\n  var rows = lst.length;\n  var cols = lst[0].length;\n  var\
    \ row = 0;\n  var col = 0;\n  var found = false;\n  while(!found && row < rows){\n\
    \    found = true;\n    while(!found && col < cols){\n      if(lst[row][col] ===\
    \ x){\n        result.push([row, col]);\n        found = true;\n      }\n    \
    \  col++;\n    }\n    row++;\n  }\n  result.sort(function(a, b){\n    return b[0]\
    \ - a[0];\n  });\n  result.sort(function(a, b){\n    return b[1] - a[1];\n  });\n\
    \  return result;\n}\n", "  if(lst.length < 1) return [];\n  if(lst.length ==\
    \ 1) return [lst[0]];\n  var row = [];\n  var row_index = 0;\n  var col_index\
    \ = 0;\n  var row_length = lst[0].length;\n  for(var i=0; i<lst.length; i++){\n\
    \    if(lst[i].indexOf(x) != -1){\n      row.push([row_index, col_index]);\n \
    \     row_index++;\n      col_index = 0;\n    }\n    else col_index++;\n  }\n\
    \  row.push([row_index, col_index]);\n  row.sort(function(a, b){\n    return a[0]\
    \ - b[0];\n  });\n  row.sort(function(a, b){\n    return a[1] - b[1];\n  });\n\
    \  return row;\n}\n", "  var res = [];\n  var row = [];\n  for(var i = 0, len\
    \ = lst.length; i < len; i++){\n    if(lst[i].indexOf(x) != -1){\n      row.push(i);\n\
    \      res.push(row);\n      row = [];\n    }\n  }\n  if(row.length){\n    res.push(row);\n\
    \  }\n  return res;\n}\n", "    var result = [];\n    var row = [];\n    var col\
    \ = [];\n    var row_len = lst.length;\n    var col_len = lst[0].length;\n   \
    \ var i, j;\n    for(i = 0; i < row_len; i++){\n        row.push(0);\n    }\n\
    \    for(i = 0; i < col_len; i++){\n        col.push(0);\n    }\n    for(i = 0;\
    \ i < row_len; i++){\n        for(j = 0; j < col_len; j++){\n            if(lst[i][j]\
    \ === x){\n                row[i] = j;\n                col[j] = i;\n        \
    \    }\n        }\n        result.push([row, col]);\n    }\n    result.sort(function(a,\
    \ b){\n        var a_row = a[0][0];\n        var a_col = a[0][1];\n        var\
    \ b_row = b[0][0];\n        var b_col = b[0][1];\n        if(a_row > b_row){\n\
    \            return 1;\n        }\n        if(a_row < b_row){\n            return\
    \ -1;\n        }\n        if(a_col > b_col){\n            return 1;\n        }\n\
    \        if(a_col < b_col){\n            return -1;\n        }\n        return\
    \ 0;\n    });\n    return result;\n}\n", "    var result = [];\n    var row =\
    \ [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n        }\n    }\n    result.push(row);\n\
    \    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[2] - b[2];\n    });\n    return result;\n}\n", "  var\
    \ result = [];\n  if(lst.length == 0){\n    return result;\n  }\n  var row = [];\n\
    \  for(var i=0; i<lst.length; i++){\n    row.push(lst[i][x]);\n  }\n  row.sort(function(a,\
    \ b){\n    return a-b;\n  });\n  row.sort(function(a, b){\n    return b-a;\n \
    \ });\n  for(var i=0; i<row.length; i++){\n    result.push([i, row[i]]);\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    var row = [];\n    var col\
    \ = [];\n    var row_index = 0;\n    var col_index = 0;\n    var row_indexes =\
    \ [];\n    var col_indexes = [];\n    var row_len = lst.length;\n    var col_len\
    \ = lst[0].length;\n    var row_max = Math.max(row_len, col_len);\n    var col_max\
    \ = Math.max(row_len, col_len);\n    var row_min = Math.min(row_len, col_len);\n\
    \    var col_min = Math.min(row_len, col_len);\n    var row_row_len = row_len\
    \ - 1;\n    var row_col_len = col_len - 1;\n    var row_col_max = Math.max(row_len,\
    \ col_len);\n    var row_col_min = Math.min(row_len, col_len);\n    var col_col_len\
    \ = col_len - 1;\n    var col_col_max = Math.max(row_len, col_len);\n    var col_col_min\
    \ = Math.min(row_len, col_len);\n    var row_row_max = Math.max(row_len, col_len);\n\
    \    var row_col_min = Math.min(row_len, col_len);\n    var col_col_min = Math.min(row_len,\
    \ col_len);\n    var row_col_max = Math.max(row_len, col_len);\n    var col_col_max\
    \ = Math.max(row_len, col_len);\n    var row_col_col_len = col_col_len - 1;\n\
    \    var row_col_col_max = Math.max(row_len, col_len);\n    var row_col_col_min\
    \ = Math.min(row_len, col_len);\n    var col_col_col_len = col_col_len - 1;\n\
    \    var col_col_col_max = Math.max(row_len, col_len);\n    var col_col_col_min\
    \ = Math.min(row_len, col_len);\n    var row_col_col_max = Math.max(row_len, col_len);\n\
    \    var row_col_col_min = Math.min(row_len, col_len);\n    var col_col_col_min\
    \ = Math.min(row_len, col_len);\n    var row_col_col_max = Math.max(row_len, col_len);\n\
    \    var row_col_col_col_len = col_col_col_len - 1;\n    var row_col_col_col_max\
    \ = Math.max(row_len, col_len);\n    var row_col_col_col_min = Math.min(row_len,\
    \ col_len);\n    var col_col_col_col_len = col_col_col_len - 1;\n    var col_col_col_col_max\
    \ = Math.max(row_len, col_len);\n    var col_col_col_col_min = Math.min(row_len,\
    \ col_len);\n    var row_col_col_col_max = Math.max(row_len, col_len);\n    var\
    \ row_col_col_col_min = Math.min(row_len, col_len);\n    var col_col_col_col_min\
    \ = Math.min(row_len, col_len);\n    var row_col_col_col_max = Math.max(row_len,\
    \ col_len);\n    var row_col_col_col_col_len = col_col_col_col_len - 1;\n    var\
    \ row_col_col_col_col_max = Math.max(row_len, col_len);\n    var row_col_col_col_col_min\
    \ = Math.min(row_len, col_len);\n    var col_col_col_col_col_len = col_col_col_col_len\
    \ - 1;\n    var col_col_col_col_col_max = Math.max(row_len, col_len);\n    var\
    \ col_col_", "    var result = [];\n    var row = [];\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(lst[i] === x){\n            result.push(row);\n\
    \            row = [];\n        }else{\n            row.push(lst[i]);\n      \
    \  }\n    }\n    if(row.length > 0){\n        result.push(row);\n    }\n    return\
    \ result;\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n  var row = [];\n\
    \  var row_index = 0;\n  var col_index = 0;\n  for(var i = 0, len = lst.length;\
    \ i < len; i++){\n    if(lst[i] == x){\n      row.push([row_index, col_index]);\n\
    \      row_index++;\n      col_index = 0;\n    }\n    else{\n      col_index++;\n\
    \    }\n  }\n  if(row_index > 0){\n    row.push([row_index, col_index]);\n  }\n\
    \  row.sort(function(a, b){\n    return a[0] - b[0];\n  });\n  row.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  return row;\n}\n", "  var result = [];\n\
    \  var row = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x)\
    \ !== -1){\n      row.push(i);\n    }\n  }\n  if(row.length){\n    result.push(row);\n\
    \    for(var i=0; i<row.length; i++){\n      result.push(get_row(lst[row[i]],\
    \ x));\n    }\n  }\n  return result;\n}\n", "  if(lst.length == 0){\n    return\
    \ [];\n  }\n  var row = [];\n  var row_len = lst[0].length;\n  for(var i=0; i<row_len;\
    \ i++){\n    if(lst[0][i] == x){\n      row.push([i, lst[0][i]]);\n    }\n  }\n\
    \  if(row.length == 0){\n    return [];\n  }\n  row.sort(function(a, b){\n   \
    \ return b[1] - a[1];\n  });\n  row.sort(function(a, b){\n    return a[0] - b[0];\n\
    \  });\n  return row;\n}\n", "    var result = [];\n    var row = [];\n    var\
    \ rows = [];\n    var cols = [];\n    var col = 0;\n    var row_index = 0;\n \
    \   var col_index = 0;\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i] === x){\n            result.push([row_index, col_index]);\n\
    \            rows.push(row);\n            row = [];\n            cols.push(col);\n\
    \            col = 0;\n            row_index++;\n            col_index++;\n  \
    \      }else{\n            row.push(lst[i]);\n            col++;\n        }\n\
    \    }\n    result.push([row_index, col_index]);\n    rows.push(row);\n    cols.push(col);\n\
    \    rows = rows.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    cols = cols.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    for(var i = 0, len = rows.length; i < len; i++){\n        result.push([rows[i][0],\
    \ cols[i][1]]);\n    }\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        var row = [];\n        for(var j = 0;\
    \ j < lst[i].length; j++){\n            if(lst[i][j] == x){\n                row.push([i,\
    \ j]);\n            }\n        }\n        result.push(row);\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        var row\
    \ = lst[i];\n        if(row.indexOf(x) !== -1){\n            result.push([i, row.indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "    let row = [];\n    let row_index = 0;\n    let\
    \ col_index = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ === x){\n            row.push([row_index, col_index]);\n            row_index++;\n\
    \            col_index = 0;\n        }\n        else{\n            col_index++;\n\
    \        }\n    }\n    return row;\n}\n", "  let row = [];\n  for(let i = 0; i\
    \ < lst.length; i++){\n    let col = [];\n    for(let j = 0; j < lst[i].length;\
    \ j++){\n      if(lst[i][j] === x){\n        col.push([i, j]);\n      }\n    }\n\
    \    row.push(col);\n  }\n  row.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  row.sort((a,\
    \ b) => b[1] > a[1] ? 1 : -1);\n  return row;\n}\n", "    var row = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            row.push([i,\
    \ lst[i][1]]);\n        }\n    }\n    row.sort(function(a, b){\n        return\
    \ a[1] - b[1];\n    });\n    row.sort(function(a, b){\n        return b[0] - a[0];\n\
    \    });\n    return row;\n}\n", "    if(!lst.length) return [];\n    var row\
    \ = [];\n    var rows = [];\n    var row_index = 0;\n    for(var i = 0, len =\
    \ lst.length; i < len; i++){\n        var item = lst[i];\n        if(item.indexOf(x)\
    \ !== -1){\n            row.push(i);\n            rows.push(row);\n          \
    \  row = [];\n        }\n    }\n    if(row.length) rows.push(row);\n    rows =\
    \ rows.sort(function(a, b){\n        return b[1] - a[1];\n    });\n    rows =\
    \ rows.reverse();\n    var result = [];\n    for(var i = 0, len = rows.length;\
    \ i < len; i++){\n        var row = rows[i];\n        var coords = [];\n     \
    \   for(var j = 0, len2 = row.length; j < len2; j++){\n            coords.push([row[j],\
    \ 0]);\n        }\n        result.push(coords);\n    }\n    return result;\n}\n",
  "    var result = [];\n    var row = [];\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n        }\n\
    \    }\n    result.push(row);\n    for(var i = 0; i < row.length; i++){\n    \
    \    var row = [];\n        for(var j = 0; j < lst[row[i]].length; j++){\n   \
    \         row.push([row[i], j]);\n        }\n        result.push(row);\n    }\n\
    \    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    return result;\n}\n", "  var\
    \ result = [];\n  var row = [];\n  for(var i = 0, len = lst.length; i < len; i++){\n\
    \    if(lst[i].indexOf(x) !== -1){\n      row.push(i);\n    }\n  }\n  if(row.length){\n\
    \    result.push(row);\n    for(var i = 0, len = row.length; i < len; i++){\n\
    \      var col = [];\n      for(var j = 0, len2 = row[i].length; j < len2; j++){\n\
    \        col.push(row[i][j]);\n      }\n      result.push(col);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        var row = lst[i];\n        var rowLen = row.length;\n\
    \        var colLen = row[x];\n        var rowResult = [];\n        for(var j\
    \ = 0; j < colLen; j++){\n            rowResult.push([i, j]);\n        }\n   \
    \     result.push(rowResult);\n    }\n    result.sort(function(a, b){\n      \
    \  return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return\
    \ a[1] - b[1];\n    });\n    return result;\n}\n", "    var result = [];\n   \
    \ var rows = lst.length;\n    var cols = lst[0].length;\n    for(var i=0; i<rows;\
    \ i++){\n        var row = [];\n        for(var j=0; j<cols; j++){\n         \
    \   row.push((lst[i][j] == x) ? [i, j] : [-1, -1]);\n        }\n        result.push(row);\n\
    \    }\n    result.sort(function(a, b){\n        if(a[0] > b[0]) return 1;\n \
    \       if(a[0] < b[0]) return -1;\n        if(a[1] > b[1]) return 1;\n      \
    \  if(a[1] < b[1]) return -1;\n        return 0;\n    });\n    result.sort(function(a,\
    \ b){\n        if(a[0] > b[0]) return 1;\n        if(a[0] < b[0]) return -1;\n\
    \        if(a[1] > b[1]) return 1;\n        if(a[1] < b[1]) return -1;\n     \
    \   return 0;\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        var row = lst[i];\n        if(row.indexOf(x)\
    \ !== -1){\n            result.push([i, row.indexOf(x)]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    var row = [];\n    var col = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n   \
    \         col.push(lst[i].indexOf(x));\n        }\n    }\n    result.push(row);\n\
    \    result.push(col);\n    result.sort(function(a, b){\n        return b[1] -\
    \ a[1];\n    });\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    return result;\n}\n", "  var res = [];\n  for(var i = 0, len = lst.length;\
    \ i < len; i++){\n    var row = lst[i];\n    var rowLen = row.length;\n    if(rowLen\
    \ === 0){\n      continue;\n    }\n    var rowRes = [];\n    for(var j = 0; j\
    \ < rowLen; j++){\n      if(row[j] === x){\n        rowRes.push([i, j]);\n   \
    \   }\n    }\n    rowRes.sort(function(a, b){\n      return b[1] - a[1];\n   \
    \ });\n    rowRes.sort(function(a, b){\n      return a[0] - b[0];\n    });\n \
    \   res.push(rowRes);\n  }\n  res.sort(function(a, b){\n    return a[0].length\
    \ - b[0].length;\n  });\n  return res;\n}\n", "  var result = [];\n  var row =\
    \ [];\n  var col = [];\n  for(var i=0; i<lst.length; i++){\n    row.push(lst[i][0]);\n\
    \    col.push(lst[i][1]);\n  }\n  if(row.length == 0){\n    return result;\n \
    \ }\n  if(row.length == 1){\n    if(col.length == 0){\n      return [[0, 0], [1,\
    \ 0]];\n    }\n    if(col.length == 1){\n      return [[0, 0], [1, col[0]]];\n\
    \    }\n  }\n  if(row.length == 2){\n    if(col.length == 0){\n      return [[0,\
    \ 0], [1, 0], [2, 0]];\n    }\n    if(col.length == 1){\n      return [[0, 0],\
    \ [1, col[0]], [2, col[1]]];\n    }\n    if(col.length == 2){\n      return [[0,\
    \ 0], [1, col[0]], [2, col[1]], [3, col[2]]];\n    }\n  }\n  if(row.length ==\
    \ 3){\n    if(col.length == 0){\n      return [[0, 0], [1, 0], [2, 0], [3, 0]];\n\
    \    }\n    if(col.length == 1){\n      return [[0, 0], [1, col[0]], [2, col[1]],\
    \ [3, col[2]], [4, col[3]]];\n    }\n    if(col.length == 2){\n      return [[0,\
    \ 0], [1, col[0]], [2, col[1]], [3, col[2]], [4, col[3]], [5, col[4]]];\n    }\n\
    \    if(col.length == 3){\n      return [[0, 0], [1, col[0]], [2, col[1]], [3,\
    \ col[2]], [4, col[3]], [5, col[4]], [6, col[5]]];\n    }\n  }\n  if(row.length\
    \ == 4){\n    if(col.length == 0){\n      return [[0, 0], [1, 0], [2, 0], [3,\
    \ 0], [4, 0]];\n    }\n    if(col.length == 1){\n      return [[0, 0], [1, col[0]],\
    \ [2, col[1]], [3, col[2]], [4, col[3]], [5, col[4]], [6, col[5]]];\n    }\n \
    \   if(col.length == 2){\n      return [[0, 0], [1, col[0]], [2, col[1]], [3,\
    \ col[2]], [4, col[3]], [5, col[4]], [6, col[5]], [7, col[6]]];\n    }\n    if(col.length\
    \ == 3){\n      return [[0, 0], [1, col[0]], [2, col[1]], [3, col[2]], [4, col[3]],\
    \ [5, col[4]], [6, col[5]], [7, col[6]], [8, col[7]]];\n    }\n    if(col.length\
    \ == 4){\n      return [[0, 0], [1, col[0]], [2, col[1]], [3, col[2]], [4, col[3]],\
    \ [5, col[4]], [6, col[5]], [7, col[6]], [8, col[7]", "  var result = [];\n  for(var\
    \ i=0; i<lst.length; i++){\n    var row = lst[i];\n    for(var j=0; j<row.length;\
    \ j++){\n      if(row[j] == x){\n        result.push([i, row.length-j-1]);\n \
    \     }\n    }\n  }\n  result.sort(function(a, b){\n    return a[1] - b[1];\n\
    \  });\n  result.sort(function(a, b){\n    return b[0] - a[0];\n  });\n  return\
    \ result;\n}\n", "  let row = [];\n  for(let i = 0; i < lst.length; i++){\n  \
    \  if(lst[i].includes(x)){\n      row.push([i, lst[i].indexOf(x)])\n    }\n  }\n\
    \  row.sort((a,b) => b[1] - a[1]);\n  row.sort((a,b) => b[0] - a[0]);\n  return\
    \ row;\n}\n", "    var row = [];\n    var row_index = 0;\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n      \
    \      row.push([row_index, lst[i].indexOf(x)]);\n            row_index++;\n \
    \       }\n    }\n    row.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    row.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return row;\n}\n", "    var result = [];\n    var row = [];\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n        }\n    }\n    result.push(row);\n    for(var\
    \ i = 0, len = row.length; i < len; i++){\n        var row = [];\n        for(var\
    \ j = 0, len2 = lst[row[i]].length; j < len2; j++){\n            row.push([row[i],\
    \ j]);\n        }\n        result.push(row);\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

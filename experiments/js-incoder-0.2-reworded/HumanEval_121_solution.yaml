name: HumanEval_121_solution
language: js
prompt: "//Given a non-empty array of integers, return the sum of all of the odd elements\
  \ that are in even positions.\n// Examples\n// >>> solution([5, 8, 7, 1])\n// 12\n\
  // >>> solution([3, 3, 3, 3, 3])\n// 9\n// >>> solution([30, 13, 24, 321])\n// 0\n\
  function solution(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = solution;\n  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
  \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
  \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
  \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
completions: ["    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=javascript,arrays |>\n<code>", "    let\
    \ sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 ===\
    \ 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=arrays,javascript |>\n<| a tags=arrays,javascript |>\n<code>\nvar arr\
    \ = [5, 8, 7, 1];\nvar sum = 0;\narr.forEach(function(item) {\n  if (item % 2\
    \ === 0) {\n    sum += item;\n  }\n});", "    return lst.filter(function(elem,\
    \ index, arr){\n        return index % 2 === 1;\n    }).reduce(function(acc, elem){\n\
    \        return acc + elem;\n    }, 0);\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| c |>\nThis doesn't answer the question, which is about how to do this\
    \ without using filter or reduce.\n<|/ c |>\n<| c |>\nI believe this does answer\
    \ the question. He wants to know how to do this without using filter or reduce.\n\
    <|/ c |>\n<| c |>\nThe question asks how to do this without using filter or reduce.\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to know how\
    \ to do this without using filter or reduce.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ answer the question, which is about how to do this without using filter or reduce.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\nvar sum = 0;\nfor (var i = 0; i < arr.length;\
    \ i++) {\n    if (i % 2 === 0) {\n        sum += arr[i];\n    }\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| c |>\nThis doesn't answer the question, which\
    \ is about how to do this without using filter or reduce.\n<|/ c |>\n<| c |>\n\
    This doesn't answer the question, which is about how to do this without using\
    \ filter or reduce.\n<|/ c |>\n<| c |>\nThis doesn't answer the question, which\
    \ is about how to do this without using filter or reduce.\n<|/ c |>\n<| c |>\n\
    This doesn't answer the question, which is about how to do this without using\
    \ filter or reduce.\n<|/ c |>\n<| a dscore=5 |>\n<code>\nvar sum = 0;\nfor (var\
    \ i = 0; i < arr.length; i++) {\n    if (i % 2 === 0) {\n        sum += arr[i];\n\
    \    }\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| c |>\nThis doesn't answer\
    \ the question, which is about how to do this without using filter or reduce.\n\
    <|/ c |>\n<| c |>\nThis doesn't answer the question, which is about how to do\
    \ this without using filter or reduce.\n<|/ c |>\n<| c |>\nThis doesn't answer\
    \ the question, which is about how to do this without using filter or reduce.\n\
    <|/ c |>\n<| a |>\n<code>\nvar sum = 0;\nfor (var i = 0; i < arr.length; i++)\
    \ {\n    if (i % 2 === 0) {\n        sum += arr[i];\n    }\n}\n</code>\n<|/ a\
    \ tags=javascript,arrays dscore=5 |>\n<| c |>\nThis doesn't answ", "    let sum\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=javascript,arrays |>\n<| c |>\nThis doesn't answer the question asked.\n\
    <|/ c |>\n<| c |>\nIt does answer the question asked, as stated in the first line\
    \ of the question: \"Given a non-empty array of integers, return the sum of all\
    \ of the odd elements that are in even positions.\"\n<|/ c |>\n<| c |>\nThe question\
    \ asked is \"Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\" Your answer doesn't do that.\n<|/\
    \ c |>\n<| c |>\nThe question asked is \"Given a non-empty array of integers,\
    \ return the sum of all of the odd elements that are in even positions.\" Your\
    \ answer doesn't do that.\n<|/ c |>\n<| c |>\nThe question asked is \"Given a\
    \ non-empty array of integers, return the sum of all of the odd elements that\
    \ are in even positions.\" Your answer doesn't do that.\n<|/ c |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n       \
    \ if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    var sum = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            sum+=lst[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n\
    <| a tags=javascript,arrays |>\n<code>", "  var sum = 0;\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i]%2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n\
    }\n", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n</code>\n<|/ a tags=javascript,arrays,algorithm |>\n<| c |>\nThis doesn't work.\
    \ Try `solution([30, 13, 24, 321])`\n<|/ c |>\n<| c |>\nI see what you mean. Thanks\
    \ for pointing that out. I've updated the answer.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work. Try `solution([30, 13, 24, 321])`\n<|/ c |>\n<| c |>\nI see what you mean.\
    \ Thanks for pointing that out. I've updated the answer.\n<|/ c |>\n<| c |>\n\
    This doesn't work. Try `solution([30, 13, 24, 321])`\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>", "  return lst.filter(function(x){\n    return x % 2 === 1;\n  }).reduce(function(acc,\
    \ x){\n    return acc + x;\n  }, 0);\n}\n", "    return lst.filter(function(el){\n\
    \        return el%2==0;\n    }).reduce(function(acc, el){\n        return acc+el;\n\
    \    }, 0);\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if you have a negative\
    \ number in the array\n<|/ c |>\n<| c |>\nI didn't say it wouldn't. Just that\
    \ negative numbers are not allowed in the array. I'll update my answer to include\
    \ a check for negative numbers. Thanks for pointing that out.\n<|/ c |>\n<| a\
    \ dscore=2 |>\n<code>\nvar sumOdds = function(arr) {\n  var sum = 0;\n  for(var\
    \ i=0;i<arr.length;i++) {\n    if(arr[i]%2 != 0) {\n      sum += arr[i];\n   \
    \ }\n  }\n  return sum;\n};\n</code>\n<|/ a tags=javascript,arrays |>\n<| c |>\n\
    This doesn't work if you have a negative number in the array\n<|/ c |>\n<| a tags=javascript,arrays\
    \ |>\n<code>\nvar sumOdds = function(arr) {\n  var sum = 0;\n  for(var i=0;i<arr.length;i++)\
    \ {\n    if(arr[i]%2 != 0) {\n      sum += arr[i];\n    }\n  }\n  return sum;\n\
    };\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\nvar sumOdds = function(arr)\
    \ {\n  var sum = 0;\n  for(var i=0;i<arr.length;i++) {\n    if(arr[i]%2 != 0)\
    \ {\n      sum += arr[i];\n    }\n  }\n  return sum;\n};\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| a dscore=1 |>\n<code>\nvar sumOdds = function(arr) {\n  var sum = 0;\n\
    \  for(var i=0;i<arr.length;i++) {\n    if(arr[i]%2 != 0) {\n      sum += arr[i];\n\
    \    }\n  }\n  return sum;\n};\n</code>\n<|/ a tags=javascript,arrays |>\n<| a\
    \ tags=javascript,arrays |>\n<code>\nvar sumOdds = function(arr) {\n  var sum\
    \ = 0;\n  for(var i=0;i<arr.length;i++) {\n    if(arr[i]%2 != 0) {\n      sum\
    \ += arr[i];\n    }\n  }\n  return sum;\n};\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ dscore=1 |>\n<code>\nvar sumOdds = function(arr) {\n  var sum = 0;\n  for(var\
    \ i=0;i<arr.length;i++) {\n    if(arr[i]%2 != 0) {\n      sum += arr[i];\n   \
    \ }\n  }\n  return sum;\n};\n</code>\n<|/ a tags=", "  var sum = 0;\n  for(var\
    \ i=0; i<lst.length; i++){\n    if(lst[i]%2 === 0){\n      sum += lst[i];\n  \
    \  }\n  }\n  return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nThis solution does not\
    \ work if you have a list of negative numbers. For example, solution([-1, -2,\
    \ -3, -4, -5]) returns -5 instead of 5.\n<|/ c |>\n<| c |>\nThis solution does\
    \ not work if you have a list of negative numbers. For example, solution([-1,\
    \ -2, -3, -4, -5]) returns -5 instead of 5.\n<|/ c |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n       \
    \ if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n</code>\n<|/ a tags=javascript,arrays |>\n<| c |>\nThis does not provide an\
    \ answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/10366773)\n\
    <|/ c |>\n<| c |>\nI believe it does provide an answer to the question. He asked\
    \ \"Given a non-empty array of integers, return the sum of all of the odd elements\
    \ that are in even positions.\" The code I provided does exactly that. He also\
    \ asked \"Can you do this without using loops?\" The code I provided does exactly\
    \ that. He also asked \"Can you do this without using any built-in functions?\"\
    \ The code I provided does exactly that. He also asked \"Can you do this without\
    \ using any built-in functions?\" The code I provided does exactly that. He also\
    \ asked \"Can you do this without using any built-in functions?\" The code I provided\
    \ does exactly that. He also asked \"Can you do this without using any built-in\
    \ functions?\" The code I provided does exactly that. He also asked \"Can you\
    \ do this without using any built-in functions?\" The code I provided does exactly\
    \ that. He also asked \"Can you do this without using any built-in functions?\"\
    \ The code I provided does exactly that. He also asked \"Can you do this without\
    \ using any built-in functions?\" The code I provided does exactly that. He also\
    \ asked \"Can you do this without using any built-in functions?\" The code I provided\
    \ does exactly that. He also asked \"Can you do this without using any built-in\
    \ functions?\" The code I provided does exactly that. He also asked \"Can you\
    \ do this without using any built-in functions?\" The code I provided does exactly\
    \ that. He also asked \"Can you do this without using any built-in functions?\"\
    \ The code I provided does exactly that. He also asked \"Can you do this without\
    \ using any built-in functions?\" The code I provided does exactly that. He also\
    \ asked \"Can you do this without using any built-in functions?\" The code I provided\
    \ does exactly that. He also asked \"Can you do this without using any built-in\
    \ functions?\" The code I provided does exactly that. He also ", "    let evenSum\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n\
    \            evenSum += lst[i];\n        }\n    }\n    return evenSum;\n}\n",
  "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n      sum+=lst[i];\n\
    \    }\n  }\n  return sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return\
    \ sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    var\
    \ sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=javascript |>\n<code>", "    let sum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a dscore=0\
    \ |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n \
    \       if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    var\
    \ sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] % 2 ===\
    \ 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>", "    var sum = 0;\n    for(var i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] % 2 === 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n \
    \       if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", " \
    \   let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0){\n            evenSum += lst[i];\n        }\n    }\n    return evenSum;\n\
    }\n</code>\n<|/ a tags=javascript,arrays,algorithm |>\n<| a |>\n<code>", "   \
    \ var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=arrays,javascript |>\n<| c |>\nThis does not provide an answer to the\
    \ question. To critique or request clarification from an author, leave a comment\
    \ below their post. - [From Review](/review/low-quality-posts/11507373)\n<|/ c\
    \ |>\n<| c |>\nI believe this does answer the question. He asked how to find the\
    \ sum of all odd numbers in an array. He also asked how to find the sum of all\
    \ odd numbers in an array. He also asked how to find the sum of all odd numbers\
    \ in an array. He also asked how to find the sum of all odd numbers in an array.\
    \ He also asked how to find the sum of all odd numbers in an array. He also asked\
    \ how to find the sum of all odd numbers in an array. He also asked how to find\
    \ the sum of all odd numbers in an array. He also asked how to find the sum of\
    \ all odd numbers in an array. He also asked how to find the sum of all odd numbers\
    \ in an array. He also asked how to find the sum of all odd numbers in an array.\
    \ He also asked how to find the sum of all odd numbers in an array. He also asked\
    \ how to find the sum of all odd numbers in an array. He also asked how to find\
    \ the sum of all odd numbers in an array. He also asked how to find the sum of\
    \ all odd numbers in an array. He also asked how to find the sum of all odd numbers\
    \ in an array. He also asked how to find the sum of all odd numbers in an array.\
    \ He also asked how to find the sum of all odd numbers in an array. He also asked\
    \ how to find the sum of all odd numbers in an array. He also asked how to find\
    \ the sum of all odd numbers in an array. He also asked how to find the sum of\
    \ all odd numbers in an array. He also asked how to find the sum of all odd numbers\
    \ in an array. He also asked how to find the sum of all odd numbers in an array.\
    \ He also asked how to find the sum of all odd numbers in an array. He also asked\
    \ how to find the sum of all odd numbers in an array. He also asked how to find\
    \ the sum of all odd numbers in an array. He also asked how to find the sum of\
    \ all odd numbers in an array. He also asked how to ", "    return lst.filter(function(x){\n\
    \        return x % 2 === 1;\n    }).reduce(function(acc, x){\n        return\
    \ acc + x;\n    }, 0);\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=javascript |>\n<| a tags=javascript |>\n<code>",
  "    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0){\n            evenSum += lst[i];\n        }\n    }\n    return evenSum;\n\
    }\n", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n</code>\n<|/ a tags=arrays,javascript |>\n<| a tags=arrays,javascript |>\n\
    <code>", "    return lst.filter(function(x){\n        return x % 2 === 1;\n  \
    \  }).reduce(function(acc, x){\n        return acc + x;\n    }, 0);\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=arrays,javascript |>\n<code>", "    var sum = 0;\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\nvar sumOddEven = function(arr) {\n  var sum = 0;\n \
    \ arr.forEach(function(item) {\n    if (item % 2 === 0) {\n      sum += item;\n\
    \    }\n  });\n  return sum;\n};\n</code>\n<|/ a tags=arrays,javascript |>\n<|\
    \ a tags=arrays,javascript |>\n<code>\nvar sumOddEven = function(arr) {\n  var\
    \ sum = 0;\n  arr.forEach(function(item) {\n    if (item % 2 === 0) {\n      sum\
    \ += item;\n    }\n  });\n  return sum;\n};\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ tags=arrays,javascript |>\n<code>\nvar sumOddEven = function(arr) {\n  var sum\
    \ = 0;\n  arr.forEach(function(item) {\n    if (item % 2 === 0) {\n      sum +=\
    \ item;\n    }\n  });\n  return sum;\n};\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript\
    \ |>\n<code>\nvar sumOddEven = function(arr) {\n  var sum = 0;\n  arr.forEach(function(item)\
    \ {\n    if (item % 2 === 0) {\n      sum += item;\n    }\n  });\n  return sum;\n\
    };\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nvar sumOddEven = function(arr)\
    \ {\n  var sum = 0;\n  arr.forEach(function(item) {\n    if (item % 2 === 0) {\n\
    \      sum += item;\n    }\n  });\n  return sum;\n};\n</code>\n<|/ a tags=arrays,javascript\
    \ |>\n<| a tags=arrays,javascript |>\n<code>\nvar sumOddEven = function(arr) {\n\
    \  var sum = 0;\n  arr.forEach(function(item) {\n    if (item % 2 === 0) {\n \
    \     sum += item;\n    }\n  });\n  return sum;\n};\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=arrays,javascript |>\n<code>\nvar sumOddEven = function(arr) {\n  var\
    \ sum = 0;\n  arr.forEach(function(item) {\n    if (item % 2 === 0) {\n      sum\
    \ += item;\n    }\n  });\n  return sum;\n};\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nPlease don't post only code as an answer, but also provide an explanation\
    \ of what your code does and how it solves the problem of the question. Answers\
    \ with an explanation are usually more helpful and of better quality, and are ",
  "  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2==0){\n    \
    \  sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\n", "    return lst.filter(function(x){\n\
    \        return x % 2 === 1;\n    }).reduce(function(acc, x){\n        return\
    \ acc + x;\n    }, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript\
    \ |>\n<code>", "    return lst.filter(function(num){\n        return num%2 ===\
    \ 1;\n    }).reduce(function(acc, num){\n        return acc + num;\n    }, 0);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n   \
    \         sum += lst[i];\n        }\n    }\n    return sum;\n}\n", "  var sum\
    \ = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n      sum += lst[i];\n\
    \    }\n  }\n  return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return\
    \ sum;\n}\n", "  return lst.filter(function(x){\n    return x % 2 === 1;\n  }).reduce(function(acc,\
    \ x){\n    return acc + x;\n  }, 0);\n}\n", "    var sum = 0;\n    for(var i=0;\
    \ i<lst.length; i++){\n        if(lst[i]%2==0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n\
    <| a |>\n<code>", "    var sum = 0;\n    for(var i = 0; i<lst.length; i++){\n\
    \        if(lst[i]%2 === 0){\n            sum += lst[i];\n        }\n    }\n \
    \   return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,arrays |>\n\
    <code>", "  return lst.filter(function(x){\n    return x % 2 === 1;\n  }).reduce(function(acc,\
    \ x){\n    return acc + x;\n  }, 0);\n}\n", "    var sum = 0;\n    for(var i =\
    \ 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=arrays,javascript |>\n\
    <| a tags=arrays,javascript |>\n<code>\nvar arr = [5, 8, 7, 1];\nvar sum = 0;\n\
    for (var i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n        sum\
    \ += arr[i];\n    }\n}", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript |>\n\
    <code>", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    let\
    \ evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] %\
    \ 2 === 0){\n            evenSum += lst[i];\n        }\n    }\n    return evenSum;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "  return lst.filter(function(elem,\
    \ index, arr){\n    return index%2 === 1;\n  }).reduce(function(acc, val){\n \
    \   return acc + val;\n  }, 0);\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i]%2==0){\n      sum+=lst[i];\n    }\n  }\n  return sum;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| c |>\nThis doesn't work if the array is empty\n\
    <|/ c |>\n<| c |>\nIt does work. Try it yourself. It returns 0 if the array is\
    \ empty.\n<|/ c |>\n<| c |>\nIt returns 0 if the array is empty. Try it yourself.\
    \ It returns 0 if the array is empty.\n<|/ c |>\n<| c |>\nIt returns 0 if the\
    \ array is empty. Try it yourself. It returns 0 if the array is empty.\n<|/ c\
    \ |>\n<| c |>\nIt returns 0 if the array is empty. Try it yourself. It returns\
    \ 0 if the array is empty.\n<|/ c |>\n<| a tags=javascript,arrays |>\n<code>",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=javascript |>\n<code>", "    var sum = 0;\n    for(var\
    \ i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n  \
    \  }\n    return evenSum;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work. Try `solution([5, 8, 7, 1])`\n<|/ c |>\n<| c |>\nI fixed the code now.\
    \ Thanks for pointing out.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    let evenSum\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n\
    \            evenSum += lst[i];\n        }\n    }\n    return evenSum;\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] %\
    \ 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] %\
    \ 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    </code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\nvar sumOddEven = function(arr) {\n\
    \    var sum = 0;\n    arr.forEach(function(item) {\n        if (item % 2 ===\
    \ 0) {\n            sum += item;\n        }\n    });\n    return sum;\n};\n</code>\n\
    <|/ a tags=javascript |>\n<| a dscore=0 |>\n<code>", "  return lst.filter(function(x){\n\
    \    return x % 2 === 1;\n  }).reduce(function(acc, x){\n    return acc + x;\n\
    \  }, 0);\n}\n", "    return lst.filter(function(x){\n        return x % 2 ===\
    \ 1;\n    }).reduce(function(acc, x){\n        return acc + x;\n    }, 0);\n}\n\
    </code>\n<|/ a |>\n<| a tags=javascript,arrays |>\n<code>\nvar arr = [5, 8, 7,\
    \ 1];\nvar sum = 0;\nvar evenIndexes = [];\nvar oddIndexes = [];\narr.forEach(function(item,\
    \ index){\n    if(item % 2 === 0){\n        evenIndexes.push(index);\n    }else{\n\
    \        oddIndexes.push(index);\n    }\n});\nevenIndexes.forEach(function(item){\n\
    \    sum += arr[item];\n});\noddIndexes.forEach(function(item){\n    sum -= arr[item];\n\
    });", "  return lst.filter(function(elem, index, arr){\n    return index % 2 ===\
    \ 1;\n  }).reduce(function(acc, val){\n    return acc + val;\n  }, 0);\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] %\
    \ 2 === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "  return lst.filter(function(x){\n\
    \    return x % 2 === 1;\n  }).reduce(function(acc, x){\n    return acc + x;\n\
    \  }, 0);\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript\
    \ |>\n<code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n       \
    \ if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript |>\n<code>", "    var\
    \ sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n \
    \           sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=javascript,arrays |>\n<| c |>\n`var sum = 0;` should be `var sum = 0;`\n\
    <|/ c |>\n<| c |>\nThanks, I fixed it.\n<|/ c |>\n<| a dscore=1 |>\n<code>", " \
    \ let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] % 2 ===\
    \ 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    var sum = 0;\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n         \
    \   sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| c |>\nThis doesn't answer the question. OP wants to know if there's a\
    \ way to do this without looping through the entire array.\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. OP wants to know if there's a way to\
    \ do this without looping through the entire array. OP wants to know if there's\
    \ a way to do this without looping through the entire array. OP wants to know\
    \ if there's a way to do this without looping through the entire array. OP wants\
    \ to know if there's a way to do this without looping through the entire array.\
    \ OP wants to know if there's a way to do this without looping through the entire\
    \ array. OP wants to know if there's a way to do this without looping through\
    \ the entire array. OP wants to know if there's a way to do this without looping\
    \ through the entire array. OP wants to know if there's a way to do this without\
    \ looping through the entire array. OP wants to know if there's a way to do this\
    \ without looping through the entire array. OP wants to know if there's a way\
    \ to do this without looping through the entire array. OP wants to know if there's\
    \ a way to do this without looping through the entire array. OP wants to know\
    \ if there's a way to do this without looping through the entire array.\n<|/ c\
    \ |>\n<| c |>\nI believe this does answer the question. OP wants to know if there's\
    \ a way to do this without looping through the entire array. OP wants to know\
    \ if there's a way to do this without looping through the entire array. OP wants\
    \ to know if there's a way to do this without looping through the entire array.\
    \ OP wants to know if there's a way to do this without looping through the entire\
    \ array. OP wants to know if there's a way to do this without looping through\
    \ the entire array. OP wants to know if there's a way to do this without looping\
    \ through the entire array. OP wants to know if there's a way to do this without\
    \ looping through the entire array. OP wants to know if there's a way to do this\
    \ without looping through the entire array. OP wants to know if there's a way\
    \ to do this without looping through the entire array. OP wants to know if there's\
    \ a way to do this without looping through the entire array. OP wants to know\
    \ if there's a way to do this without looping through the entire array. OP wants\
    \ to know if there's a way to do this without looping through the entire array.\
    \ OP wants to know if there's a way to do this without looping through the entire\
    \ array. OP ", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n \
    \       if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a tags=arrays,javascript |>\n<| a tags=arrays,javascript\
    \ |>\n<code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n       \
    \ if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n</code>\n<|/ a tags=javascript |>\n<| c |>\nThis doesn't work if the array\
    \ is empty\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting.\n<|/\
    \ c |>\n<| c |>\nIt doesn't work if you pass an empty array\n<|/ c |>\n<| c |>\n\
    It does work. Try it yourself. It returns 0 if the array is empty.\n<|/ c |>\n\
    <| c |>\nIt does work. Try it yourself. It returns 0 if the array is empty.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>", "  let sum = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return\
    \ sum;\n}\n", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n  \
    \      if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n \
    \   return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", " \
    \   return lst.filter(function(el){\n        return el % 2 === 1;\n    }).reduce(function(acc,\
    \ el){\n        return acc + el;\n    }, 0);\n}\n</code>\n<|/ a tags=arrays,javascript\
    \ |>\n<| a dscore=0 |>\n<code>", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i]%2 === 0){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>", "  \
    \  var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=arrays,javascript |>\n<| a |>\n<code>\nvar arr = [5, 8, 7, 1];\nvar sum\
    \ = 0;\nvar even = 0;\nvar odd = 0;\narr.forEach(function(item) {\n  if (item\
    \ % 2 === 0) {\n    even = even + item;\n  } else {\n    odd = odd + item;\n \
    \ }\n});", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP wants to know how\
    \ to use `reduce` instead of `for` loops.\n<|/ c |>\n<| c |>\nI agree with you.\
    \ My answer was more to show how reduce works. I didn't want to give the full\
    \ solution as OP asked for reduce only. Thanks for pointing out.\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n\
    \        if(lst[i]%2 === 0){\n            sum += lst[i];\n        }\n    }\n \
    \   return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease don't post only\
    \ code as an answer, but also provide an explanation of what your code does and\
    \ how it solves the problem of the question. Answers with an explanation are usually\
    \ more helpful and of better quality, and are more likely to attract upvotes.\n\
    <|/ c |>\n<| c |>\nI added some explanation to the answer\n<|/ c |>\n<| a tags=arrays,javascript\
    \ |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n \
    \       if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a dscore=0 |>\n\
    <code>", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    let\
    \ sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 ===\
    \ 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| a dscore=0 |>\n<code>", "  return lst.filter(function(x){\n\
    \    return x % 2 === 1;\n  }).reduce(function(acc, x){\n    return acc + x;\n\
    \  }, 0);\n}\n", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n   \
    \     if(lst[i]%2 === 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n     \
    \   if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,arrays |>\n<code>",
  "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\n<code>", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n  \
    \  if(i % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n", " \
    \   let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,arrays,algorithm |>\n<code>",
  "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=arrays,javascript |>\n<| a dscore=0 |>\n<code>", "    var sum = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=arrays,javascript\
    \ |>\n<| a dscore=0 |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n     \
    \   if(lst[i]%2 === 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a dscore=0 |>\n<code>\n\
    var arr = [5, 8, 7, 1];\nvar sum = 0;\narr.forEach(function(el){\n    if(el%2\
    \ === 0){\n        sum += el;\n    }\n});", "  var sum = 0;\n  for(var i = 0;\
    \ i<lst.length; i++){\n    if(lst[i]%2 === 0){\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 1){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=arrays,javascript |>\n<| a dscore=0\
    \ |>\n<code>", "  return lst.filter(function(x){\n    return x % 2 === 1;\n  }).reduce(function(acc,\
    \ x){\n    return acc + x;\n  }, 0);\n}\n", "  return lst.filter(function(el){\n\
    \    return el%2 === 1;\n  }).reduce(function(acc, el){\n    return acc + el;\n\
    \  }, 0);\n}\n", "  return lst.filter(function(x){\n    return x % 2 === 1;\n\
    \  }).reduce(function(acc, x){\n    return acc + x;\n  }, 0);\n}\n", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n   \
    \         sum+=lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=arrays,javascript\
    \ |>\n<| a tags=arrays,javascript |>\n<code>", "    let evenSum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            evenSum\
    \ += lst[i];\n        }\n    }\n    return evenSum;\n}\n</code>\n<|/ a tags=javascript\
    \ |>\n<| a tags=javascript |>\n<code>", "  return lst.filter(function(x){\n  \
    \  return x % 2 === 1;\n  }).reduce(function(acc, x){\n    return acc + x;\n \
    \ }, 0);\n}\n", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n    \
    \    if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\n<code>\nvar arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar sum = 0;\narr.forEach(function(item,\
    \ index){\n    if(index % 2 === 0){\n        sum += item;\n    }\n});", "    let\
    \ sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 ===\
    \ 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| c |>\nThis answer does not explain why the\
    \ OP's code does not work. Also, the OP has already accepted an answer that does\
    \ work, so this answer does not add anything to the already accepted answer.\n\
    <|/ c |>\n<| c |>\nI agree with you. But the OP has accepted the answer that does\
    \ not work and I thought it would be helpful to explain why the OP's code does\
    \ not work. Also I thought that my answer was more concise and easier to understand.\n\
    <|/ c |>\n<| c |>\nI agree with you, but I do not think it adds anything to the\
    \ already accepted answer. Your answer does not explain why the OP's code does\
    \ not work. Also, the OP has already accepted an answer that does work, so this\
    \ answer does not add anything to the already accepted answer.\n<|/ c |>\n<| c\
    \ |>\nI agree with you. But the OP has accepted the answer that does not work\
    \ and I thought it would be helpful to explain why the OP's code does not work.\
    \ Also I thought that my answer was more concise and easier to understand.\n<|/\
    \ c |>\n<| c |>\nI agree with you. But the OP has accepted the answer that does\
    \ not work and I thought it would be helpful to explain why the OP's code does\
    \ not work. Also I thought that my answer was more concise and easier to understand.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>", "  return lst.filter(function(x){\n\
    \    return x % 2 === 1;\n  }).reduce(function(acc, x){\n    return acc + x;\n\
    \  }, 0);\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n\
    \      sum+=lst[i];\n    }\n  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| c |>\n`var sum = 0;` should be `var sum = 0;`\n<|/ c |>\n<| c |>\nThanks\
    \ for catching that. I've fixed it.\n<|/ c |>\n<| a tags=javascript,arrays |>\n\
    <code>", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    </code>\n<|/ a tags=javascript,arrays |>\n<| a dscore=0 |>\n<code>", "    let\
    \ sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 ===\
    \ 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "  var sum = 0;\n  for(var i=0;\
    \ i<lst.length; i++){\n    if(lst[i]%2 === 0){\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;\n}\n", "    return lst.filter(function(x){\n        return\
    \ x % 2 === 1;\n    }).reduce(function(acc, x){\n        return acc + x;\n   \
    \ }, 0);\n}\n", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n    \
    \    if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,arrays,algorithm |>\n\
    <code>\nvar arr = [5, 8, 7, 1];\nvar sum = 0;\narr.forEach(function(item) {\n\
    \    if (item % 2 === 0) {\n        sum += item;\n    }\n});", "    var sum =\
    \ 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n         \
    \   sum+=lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| c |>\nThis solution doesn't work if there are negative numbers in the\
    \ array\n<|/ c |>\n<| c |>\nThis solution doesn't work if there are negative numbers\
    \ in the array\n<|/ c |>\n<| c |>\nThis solution doesn't work if there are negative\
    \ numbers in the array\n<|/ c |>\n<| c |>\nThis solution doesn't work if there\
    \ are negative numbers in the array\n<|/ c |>\n<| c |>\nThis solution doesn't\
    \ work if there are negative numbers in the array\n<|/ c |>\n<| a tags=javascript,arrays\
    \ |>\n<code>\nvar sum = 0;\nvar arr = [5, 8, 7, 1];\nvar even = [];\nvar odds\
    \ = [];\narr.forEach(function(item) {\n  if (item % 2 == 0) {\n    even.push(item);\n\
    \  } else {\n    odds.push(item);\n  }\n});\neven.forEach(function(item) {\n \
    \ sum += item;\n});\nodds.forEach(function(item) {\n  sum += item;\n});", "  return\
    \ lst.filter(function(x){\n    return x % 2 === 1;\n  }).reduce(function(acc,\
    \ x){\n    return acc + x;\n  }, 0);\n}\n", "  var sum = 0;\n  for(var i = 0;\
    \ i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      sum += lst[i];\n   \
    \ }\n  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n\
    \    if(lst[i]%2==0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nI appreciate your effort but this does not answer\
    \ the question. Your code does not take into account the fact that there are multiple\
    \ odd numbers in the array. Also, your code is very inefficient and does not use\
    \ any built-in functions. I appreciate your effort though.\n<|/ c |>\n<| c |>\n\
    I appreciate your effort but this does not answer the question. Your code does\
    \ not take into account the fact that there are multiple odd numbers in the array.\
    \ Also, your code is very inefficient and does not use any built-in functions.\
    \ I appreciate your effort though.\n<|/ c |>\n<| c |>\nI appreciate your effort\
    \ but this does not answer the question. Your code does not take into account\
    \ the fact that there are multiple odd numbers in the array. Also, your code is\
    \ very inefficient and does not use any built-in functions. I appreciate your\
    \ effort though.\n<|/ c |>\n<| c |>\nI appreciate your effort but this does not\
    \ answer the question. Your code does not take into account the fact that there\
    \ are multiple odd numbers in the array. Also, your code is very inefficient and\
    \ does not use any built-in functions. I appreciate your effort though.\n<|/ c\
    \ |>\n<| c |>\nI appreciate your effort but this does not answer the question.\
    \ Your code does not take into account the fact that there are multiple odd numbers\
    \ in the array. Also, your code is very inefficient and does not use any built-in\
    \ functions. I appreciate your effort though.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] %\
    \ 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    </code>\n<|/ a tags=javascript,arrays |>\n<| c |>\nThank you so much! I appreciate\
    \ it!\n<|/ c |>\n<| a tags=javascript,arrays |>\n<code>", "    var sum = 0;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n   \
    \         sum += lst[i];\n        }\n    }\n    return sum;\n}\n", "    let sum\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=javascript,arrays |>\n<| a dscore=0 |>\n<code>", "    var sum = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| a dscore=0 |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nThis solution does not\
    \ work for negative numbers. `solution([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])`\
    \ returns `0` instead of `-5`.\n<|/ c |>\n<| c |>\nThe question states \"Given\
    \ a non-empty array of integers, return the sum of all of the odd elements that\
    \ are in even positions.\" The example you gave is `[5, 8, 7, 1]` which should\
    \ return `12`\n<|/ c |>\n<| c |>\nYes, but `solution([-5, -4, -3, -2, -1, 0, 1,\
    \ 2, 3, 4, 5])` returns `-5` instead of `0`.\n<|/ c |>\n<| c |>\nI see what you\
    \ mean. I've updated my answer to account for negative numbers.\n<|/ c |>\n<|\
    \ c |>\nThis solution does not work for negative numbers. `solution([-5, -4, -3,\
    \ -2, -1, 0, 1, 2, 3, 4, 5])` returns `0` instead of `-5`.\n<|/ c |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n \
    \       if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| c |>\nThis doesn't\
    \ answer the question. OP wants to know why his code doesn't work, not how to\
    \ fix it.\n<|/ c |>\n<| c |>\nI see your point. I've edited my answer to include\
    \ a solution that doesn't use any loops.\n<|/ c |>\n<| c |>\nThis answer doesn't\
    \ answer the question. OP wants to know why his code doesn't work, not how to\
    \ fix it.\n<|/ c |>\n<| c |>\nI see your point. I've edited my answer to include\
    \ a solution that doesn't use any loops.\n<|/ c |>\n<| a tags=javascript,arrays\
    \ |>\n<code>\nvar arr = [5, 8, 7, 1];\nvar sum = 0;\nfor (var i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n        sum += arr[i];\n    }\n}", "  \
    \  var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum+=lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=javascript,arrays |>\n<| a tags=javascript,arrays |>\n<code>", "    var\
    \ sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] % 2 === 0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a |>\n<| c |>\nThanks for your answer! But I still don't understand why my code\
    \ doesn't work. Could you please explain it a little bit more?\n<|/ c |>\n<| c\
    \ |>\nI added some explanation to the answer. Hope it helps.\n<|/ c |>\n<| c |>\n\
    Thanks for your explanation! But I still don't understand why my code doesn't\
    \ work. Could you please explain it a little bit more?\n<|/ c |>\n<| c |>\nThe\
    \ code in your question doesn't work because you didn't add the `return` statement\
    \ to the `if` statement. Without it, `sum` will always be `0` because `sum` is\
    \ initialized to `0` before the `for` loop is executed.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer! But I still don't understand why my code doesn't work. Could\
    \ you please explain it a little bit more?\n<|/ c |>\n<| a tags=javascript |>\n\
    <code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n       \
    \ if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,arrays |>\n<code>",
  "  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2==0){\n    \
    \  sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| a dscore=0 |>\n<code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript |>\n<code>",
  "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] % 2 ===\
    \ 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| a |>\n<code>", "    let sum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n\
    \        if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=arrays,javascript |>\n<| a dscore=0 |>\n<code>",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] %\
    \ 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    </code>\n<|/ a tags=javascript,arrays |>\n<| a dscore=0 |>\n<code>", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n   \
    \         sum+=lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\nvar arr = [5, 8, 7, 1];\nvar sum = 0;\narr.forEach(function(el){\n\
    \    if(el%2 === 0){\n        sum += el;\n    }\n});", "    var sum = 0;\n   \
    \ for(var i=0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays,algorithm\
    \ |>\n<| c |>\nThis solution doesn't work if you have a list of length 0 or 1.\n\
    <|/ c |>\n<| c |>\nI added a solution that doesn't require the list to be of length\
    \ 0 or 1.\n<|/ c |>\n<| c |>\nThis solution doesn't work if you have a list of\
    \ length 0 or 1.\n<|/ c |>\n<| c |>\nI added a solution that doesn't require the\
    \ list to be of length 0 or 1.\n<|/ c |>\n<| c |>\nThis solution doesn't work\
    \ if you have a list of length 0 or 1.\n<|/ c |>\n<| a tags=javascript,arrays,algorithm\
    \ |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n \
    \       if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays,algorithm |>\n<| c\
    \ |>\nThis solution will fail for `[3, 3, 3, 3, 3]`\n<|/ c |>\n<| c |>\nYes, I\
    \ noticed that and fixed it.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    var sum\
    \ = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] % 2 === 0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=javascript,arrays |>\n<| a tags=javascript,arrays |>\n<code>", "  let\
    \ sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    var sum = 0;\n  \
    \  for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=arrays,javascript\
    \ |>\n<| c |>\nThis doesn't answer the question. OP wants to know why his code\
    \ doesn't work, not how to fix it.\n<|/ c |>\n<| c |>\nI agree with you, but I\
    \ thought that OP will learn something from my solution. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from his code and will learn something from my solution. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something from his code. He will learn something\
    \ from my solution and will learn something ", "  return lst.filter((item, index)\
    \ => index % 2 === 1).reduce((acc, item) => acc + item, 0);\n}\n", "  var sum\
    \ = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n      sum+=lst[i];\n\
    \    }\n  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=javascript,arrays,algorithm |>\n<| c |>\nI believe\
    \ this solution is O(n^2) because of the nested for loops. A better solution would\
    \ be to iterate through the array once and add up all the odd numbers and then\
    \ iterate through the array again and add up all the even numbers. That would\
    \ take O(n) time.\n<|/ c |>\n<| c |>\nYes, you are right. I was thinking about\
    \ it too much. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI believe this\
    \ solution is O(n^2) because of the nested for loops. A better solution would\
    \ be to iterate through the array once and add up all the odd numbers and then\
    \ iterate through the array again and add up all the even numbers. That would\
    \ take O(n) time.\n<|/ c |>\n<| c |>\nYes, you are right. I was thinking about\
    \ it too much. Thanks for pointing it out.\n<|/ c |>\n<| a dscore=1 |>\n<code>",
  "    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0){\n            evenSum += lst[i];\n        }\n    }\n    return evenSum;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>", "    var sum = 0;\n    for(var\
    \ i = 0; i< lst.length; i++){\n        if(lst[i] % 2 === 0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=arrays,javascript |>\n<code>", "    return lst.filter(function(x){\n\
    \        return x % 2 === 1;\n    }).reduce(function(acc, x){\n        return\
    \ acc + x;\n    }, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work.\
    \ Try it with `solution([3, 3, 3, 3, 3])`\n<|/ c |>\n<| c |>\nI see what you mean.\
    \ I've edited my answer to fix it.\n<|/ c |>\n<| a tags=javascript,arrays |>\n\
    <code>", "    var sum = 0;\n    for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    </code>\n<|/ a tags=arrays,javascript |>\n<| a dscore=0 |>\n<code>", "    let\
    \ sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 ===\
    \ 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript |>\n<| a |>\n<code>", "  return lst.filter(function(el){\n\
    \    return el%2==0;\n  }).reduce(function(acc, el){\n    return acc + el;\n \
    \ }, 0);\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a dscore=0 |>\n<code>",
  "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] %\
    \ 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    </code>\n<|/ a tags=javascript,arrays |>\n<| c |>\nThis solution doesn't work\
    \ if you have a list like `[3, 3, 3, 3, 3, 3]`\n<|/ c |>\n<| c |>\nI believe this\
    \ solution does work, since it checks the even positions first. Try it out with\
    \ [3, 3, 3, 3, 3, 3]\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting\
    \ my comment. Try it out with [3, 3, 3, 3, 3, 3]\n<|/ c |>\n<| c |>\nYes, it does.\
    \ I tested it before posting my comment. Try it out with [3, 3, 3, 3, 3, 3]\n\
    <|/ c |>\n<| c |>\nI tested it before posting my comment. Try it out with [3,\
    \ 3, 3, 3, 3, 3]\n<|/ c |>\n<| a dscore=5 |>\n<code>", "    var sum = 0;\n   \
    \ for(var i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays,algorithm\
    \ |>\n<| c |>\nThis solution doesn't work for negative numbers. `solution([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10])` returns `-10` instead of `0`.\n<|/ c\
    \ |>\n<| c |>\nThis solution doesn't work for negative numbers. `solution([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10])` returns `-10` instead of `0`.\n<|/ c\
    \ |>\n<| c |>\nThis solution doesn't work for negative numbers. `solution([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10])` returns `-10` instead of `0`.\n<|/ c\
    \ |>\n<| c |>\nThis solution doesn't work for negative numbers. `solution([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10])` returns `-10` instead of `0`.\n<|/ c\
    \ |>\n<| c |>\nThis solution doesn't work for negative numbers. `solution([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10])` returns `-10` instead of `0`.\n<|/ c\
    \ |>\n<| a tags=javascript,arrays,algorithm |>\n<code>", "  return lst.filter(function(item,\
    \ index, arr){\n    return index % 2 === 1;\n  }).reduce(function(acc, item){\n\
    \    return acc + item;\n  }, 0);\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i]%2==0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays |>\n<code>", "  \
    \  var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=javascript,arrays |>\n<| a |>\n<code>\nvar arr = [5, 8, 7, 1];\nvar sum\
    \ = 0;\narr.forEach(function(item) {\n    if (item % 2 === 0) {\n        sum +=\
    \ item;\n    }\n});", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n\
    \      sum+=lst[i];\n    }\n  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var\
    \ i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "  return lst.filter(function(x){\n    return x % 2 === 1;\n  }).reduce(function(acc,\
    \ x){\n    return acc + x;\n  }, 0);\n}\n", "    let sum = 0;\n    for(let i =\
    \ 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            sum +=\
    \ lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=arrays,javascript\
    \ |>\n<| c |>\nThis answer doesn't seem to address the OP's question of how to\
    \ solve this problem without using loops.\n<|/ c |>\n<| c |>\nI agree with you.\
    \ My answer was more of a \"how would you do it\" type of answer. I'll update\
    \ my answer to include a more \"how would you do it\" type of answer.\n<|/ c |>\n\
    <| c |>\nI updated my answer to include a more \"how would you do it\" type of\
    \ answer. Hopefully this helps.\n<|/ c |>\n<| c |>\nThis answer doesn't seem to\
    \ address the OP's question of how to solve this problem without using loops.\n\
    <|/ c |>\n<| c |>\nI agree with you. My answer was more of a \"how would you do\
    \ it\" type of answer. I'll update my answer to include a more \"how would you\
    \ do it\" type of answer.\n<|/ c |>\n<| a tags=arrays,javascript |>\n<code>",
  "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n      sum+=lst[i];\n\
    \    }\n  }\n  return sum;\n}\n</code>\n<|/ a tags=arrays,javascript |>\n<| a\
    \ tags=arrays,javascript |>\n<code>", "    let sum = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n     \
    \   if(lst[i]%2 === 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=javascript,arrays,algorithm |>\n<| c |>\nThis solution\
    \ is O(n^2) which is not ideal for large arrays. A better solution would be to\
    \ sort the array and iterate over it once.\n<|/ c |>\n<| c |>\nI agree with you.\
    \ Sorting would be the best solution. However I wanted to solve the problem using\
    \ only loops and conditionals.\n<|/ c |>\n<| c |>\nI agree with you that sorting\
    \ would be the best solution. However I wanted to solve the problem using only\
    \ loops and conditionals.\n<|/ c |>\n<| c |>\nI agree with you that sorting would\
    \ be the best solution. However I wanted to solve the problem using only loops\
    \ and conditionals.\n<|/ c |>\n<| c |>\nI agree with you that sorting would be\
    \ the best solution. However I wanted to solve the problem using only loops and\
    \ conditionals.\n<|/ c |>\n<| a tags=javascript,arrays,algorithm |>\n<code>",
  "  return lst.filter(function(el){\n    return el%2 === 1;\n  }).reduce(function(acc,\
    \ el){\n    return acc + el;\n  }, 0);\n}\n", "    var sum = 0;\n    for(var i=0;\
    \ i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=arrays,javascript |>\n\
    <| a tags=arrays,javascript |>\n<code>", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i]%2 === 0){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>", "  \
    \  return lst.filter((x,i)=>i%2==1).reduce((a,b)=>a+b);\n}\n", "  var sum = 0;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2 === 0){\n      sum += lst[i];\n\
    \    }\n  }\n  return sum;\n}\n", "    let evenSum = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n\
    \        }\n    }\n    return evenSum;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n \
    \       if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a tags=javascript |>\n<| c |>\nThanks for your\
    \ answer. Your code works perfectly fine. But I wanted to know why my code didn't\
    \ work. Can you please explain me that?\n<|/ c |>\n<| c |>\nYour code didn't work\
    \ because you were trying to access `lst[i]` before you defined it. `lst[i]` was\
    \ undefined when you tried to access it.\n<|/ c |>\n<| c |>\nThanks for your explanation.\
    \ I got it now.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    var sum = 0;\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=arrays,javascript |>\n\
    <| c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27812747)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to find\
    \ the sum of all the odd numbers in an array. He also asked how to find the sum\
    \ of all the odd numbers in an array. He also asked how to find the sum of all\
    \ the odd numbers in an array. He also asked how to find the sum of all the odd\
    \ numbers in an array. He also asked how to find the sum of all the odd numbers\
    \ in an array. He also asked how to find the sum of all the odd numbers in an\
    \ array. He also asked how to find the sum of all the odd numbers in an array.\
    \ He also asked how to find the sum of all the odd numbers in an array. He also\
    \ asked how to find the sum of all the odd numbers in an array. He also asked\
    \ how to find the sum of all the odd numbers in an array. He also asked how to\
    \ find the sum of all the odd numbers in an array. He also asked how to find the\
    \ sum of all the odd numbers in an array. He also asked how to find the sum of\
    \ all the odd numbers in an array. He also asked how to find the sum of all the\
    \ odd numbers in an array. He also asked how to find the sum of all the odd numbers\
    \ in an array. He also asked how to find the sum of all the odd numbers in an\
    \ array. He also asked how to find the sum of all the odd numbers in an array.\
    \ He also asked how to find the sum of all the odd numbers in an array. He also\
    \ asked how to find the sum of all the odd numbers in an array. He also asked\
    \ how to find the sum of all the odd numbers in an array. He also asked how to\
    \ find the sum of all the odd numbers in an array. He also asked how to find the\
    \ sum of all the odd numbers in an array. He also asked how to find the sum of\
    \ all the odd numbers in an array. He also asked how to find the sum of all the\
    \ odd numbers in an array. He also asked how to find the sum of all the odd numbers\
    \ in an array. He also asked how to find the sum of all the odd numbers in an\
    \ array. He also asked how to ", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript\
    \ |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n \
    \       if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", " \
    \   var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n</code>\n<|/ a tags=arrays,javascript |>\n<| a dscore=0 |>\n<code>", "  return\
    \ lst.filter(function(num){\n    return num % 2 === 1;\n  }).reduce(function(sum,\
    \ num){\n    return sum + num;\n  }, 0);\n}\n", "    var sum = 0;\n    for(var\
    \ i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            sum+=lst[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=arrays,javascript |>\n\
    <| c |>\nThanks so much for the help!\n<|/ c |>\n<| c |>\nNo problem! Glad I could\
    \ help!\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    return lst.filter(function(x){\n\
    \        return x % 2 === 1;\n    }).reduce(function(acc, x){\n        return\
    \ acc + x;\n    }, 0);\n}\n</code>\n<|/ a tags=arrays,javascript |>\n<| c |>\n\
    This answer doesn't explain what it does, or why it works.\n<|/ c |>\n<| c |>\n\
    I added some explanation.\n<|/ c |>\n<| c |>\nThis answer doesn't explain what\
    \ it does, or why it works.\n<|/ c |>\n<| c |>\nI added some explanation.\n<|/\
    \ c |>\n<| a |>\n<code>", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n\
    }\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=javascript,arrays |>\n<| c |>\nThis doesn't answer the question asked.\n\
    <|/ c |>\n<| c |>\nI believe it does. He asked how to find the sum of all odd\
    \ numbers that are in even positions. He also asked how to do this without using\
    \ loops. He also asked how to do this without using any libraries. He also asked\
    \ how to do this without using any loops. He also asked how to do this without\
    \ using any libraries. He also asked how to do this without using any libraries.\
    \ He also asked how to do this without using any libraries. He also asked how\
    \ to do this without using any libraries. He also asked how to do this without\
    \ using any libraries. He also asked how to do this without using any libraries.\
    \ He also asked how to do this without using any libraries. He also asked how\
    \ to do this without using any libraries. He also asked how to do this without\
    \ using any libraries. He also asked how to do this without using any libraries.\
    \ He also asked how to do this without using any libraries. He also asked how\
    \ to do this without using any libraries. He also asked how to do this without\
    \ using any libraries. He also asked how to do this without using any libraries.\
    \ He also asked how to do this without using any libraries. He also asked how\
    \ to do this without using any libraries. He also asked how to do this without\
    \ using any libraries. He also asked how to do this without using any libraries.\
    \ He also asked how to do this without using any libraries. He also asked how\
    \ to do this without using any libraries. He also asked how to do this without\
    \ using any libraries. He also asked how to do this without using any libraries.\
    \ He also asked how to do this without using any libraries. He also asked how\
    \ to do this without using any libraries. He also asked how to do this without\
    \ using any libraries. He also asked how to do this without using any libraries.\
    \ He also asked how to do this without using any libraries. He also asked how\
    \ to do this without using any libraries. He also asked how to do this without\
    \ using any libraries. He also asked how to do this without using any libraries.\
    \ He also asked how to do this without using any libraries. He also asked how\
    \ to do this without using any librarie", "    var sum = 0;\n    for(var i=0;\
    \ i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript\
    \ |>\n<code>", "  return lst.filter(function(el){\n    return el % 2 === 1;\n\
    \  }).reduce(function(acc, el){\n    return acc + el;\n  }, 0);\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't work. Try it with `solution([3, 3, 3, 3, 3])`.\n\
    <|/ c |>\n<| c |>\nYes, it does. I tested it before posting it. I also tested\
    \ it on [this site](https://repl.it/repls/AwesomeStraightforwardScratchpad).\n\
    <|/ c |>\n<| c |>\nYes, it does. I tested it before posting it. I also tested\
    \ it on [this site](https://repl.it/repls/AwesomeStraightforwardScratchpad).\n\
    <|/ c |>\n<| c |>\nYes, it does. I tested it before posting it. I also tested\
    \ it on [this site](https://repl.it/repls/AwesomeStraightforwardScratchpad).\n\
    <|/ c |>\n<| c |>\nYes, it does. I tested it before posting it. I also tested\
    \ it on [this site](https://repl.it/repls/AwesomeStraightforwardScratchpad).\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,arrays |>\n<code>",
  "    var sum = 0;\n    for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2 ===\
    \ 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays |>\n<code>", "  \
    \  let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0){\n            evenSum += lst[i];\n        }\n    }\n    return evenSum;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "  return lst.filter(function(el){\n\
    \    return el%2 === 1;\n  }).reduce(function(acc, el){\n    return acc + el;\n\
    \  }, 0);\n}\n", "    return lst.filter(function(x){\n        return x % 2 ===\
    \ 1;\n    }).reduce(function(acc, x){\n        return acc + x;\n    }, 0);\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] %\
    \ 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    </code>\n<|/ a tags=javascript,arrays,algorithm |>\n<| c |>\nThis doesn't work.\
    \ Try `solution([3, 3, 3, 3, 3])`.\n<|/ c |>\n<| c |>\nYes, it does. Try it yourself.\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try `solution([3, 3, 3, 3, 3])`.\n<|/ c |>\n\
    <| c |>\nIt works. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work. Try `solution([3,\
    \ 3, 3, 3, 3])`.\n<|/ c |>\n<| a tags=javascript,arrays,algorithm |>\n<code>",
  "    var sum = 0;\n    for(var i = 0; i< lst.length; i++){\n        if(lst[i] %\
    \ 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question asked.\n\
    <|/ c |>\n<| c |>\nIt does answer the question asked, as stated in the title.\
    \ He asked for a way to find the sum of all the odd elements that are in even\
    \ positions. He also stated that he was looking for a way to do this without using\
    \ loops. He also stated that he was looking for a way to do this without using\
    \ any built-in functions. He also stated that he was looking for a way to do this\
    \ without using any built-in functions. He also stated that he was looking for\
    \ a way to do this without using any built-in functions. He also stated that he\
    \ was looking for a way to do this without using any built-in functions. He also\
    \ stated that he was looking for a way to do this without using any built-in functions.\n\
    <|/ c |>\n<| c |>\nThis doesn't answer the question asked.\n<|/ c |>\n<| c |>\n\
    It does answer the question asked, as stated in the title. He asked for a way\
    \ to find the sum of all the odd elements that are in even positions. He also\
    \ stated that he was looking for a way to do this without using loops. He also\
    \ stated that he was looking for a way to do this without using any built-in functions.\
    \ He also stated that he was looking for a way to do this without using any built-in\
    \ functions. He also stated that he was looking for a way to do this without using\
    \ any built-in functions. He also stated that he was looking for a way to do this\
    \ without using any built-in functions.\n<|/ c |>\n<| c |>\nThis doesn't answer\
    \ the question asked.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  return lst.filter(function(x){\n\
    \    return x % 2 === 1;\n  }).reduce(function(acc, x){\n    return acc + x;\n\
    \  }, 0);\n}\n", "  var sum = 0;\n  for(var i = 0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n</code>\n<|/ a\
    \ |>\n<| c |>\nThis doesn't answer the question. OP wants to know if there is\
    \ a way to do this without using an `if` statement\n<|/ c |>\n<| c |>\nI believe\
    \ this answers the question. OP wants to know if there is a way to do this without\
    \ using an `if` statement\n<|/ c |>\n<| c |>\nI believe this answers the question.\
    \ OP wants to know if there is a way to do this without using an `if` statement\n\
    <|/ c |>\n<| c |>\nThis answer doesn't answer the question. OP wants to know if\
    \ there is a way to do this without using an `if` statement\n<|/ c |>\n<| c |>\n\
    This answer doesn't answer the question. OP wants to know if there is a way to\
    \ do this without using an `if` statement\n<|/ c |>\n<| a tags=javascript,if-statement,arrays\
    \ |>\n<code>", "  return lst.filter(function(el){\n    return el%2 === 1;\n  }).reduce(function(acc,\
    \ el){\n    return acc + el;\n  }, 0);\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i]%2==0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| c |>\nThanks for your answer. Can you please\
    \ explain how this works?\n<|/ c |>\n<| c |>\nThe `for` loop iterates over the\
    \ `lst` array and checks if the current element is an odd number. If it is, then\
    \ it adds it to the `sum` variable. `lst[i]%2==0` checks if the current element\
    \ is even. If it is, then it adds it to the `sum` variable. `lst[i]%2==1` checks\
    \ if the current element is odd. `lst[i]%2==1` checks if the current element is\
    \ odd. `lst[i]%2==0` checks if the current element is even. If it is, then it\
    \ adds it to the `sum` variable. `lst[i]%2==1` checks if the current element is\
    \ odd. `lst[i]%2==1` checks if the current element is odd. `lst[i]%2==0` checks\
    \ if the current element is even. If it is, then it adds it to the `sum` variable.\
    \ `lst[i]%2==1` checks if the current element is odd. `lst[i]%2==1` checks if\
    \ the current element is odd. `lst[i]%2==0` checks if the current element is even.\
    \ If it is, then it adds it to the `sum` variable. `lst[i]%2==1` checks if the\
    \ current element is odd. `lst[i]%2==1` checks if the current element is odd.\
    \ `lst[i]%2==0` checks if the current element is even. If it is, then it adds\
    \ it to the `sum` variable. `lst[i]%2==1` checks if the current element is odd.\
    \ `lst[i]%2==1` checks if the current element is odd. `lst[i]%2==0` checks if\
    \ the current element is even. If it is, then it adds it to the `sum` variable.\
    \ `lst[i]%2==1` checks if the current element is odd. `lst[i]%2==1` checks if\
    \ the current element is odd. `lst[i]%2==0` checks if the current element is even.\
    \ If it is, then it adds it to the `sum` variable. `lst[i]%2==1` checks if the\
    \ current element is odd. `lst[i]%2==1` checks if the current element is odd.\
    \ `lst[i]%2==0` checks if the current element is even. If it is, then it adds\
    \ it to the `", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a dscore=0 |>\n\
    <code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum+=lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=javascript,arrays |>\n<| c |>\nThis doesn't work if the array is empty.\
    \ Try `solution([])`.\n<|/ c |>\n<| c |>\nYes, I forgot about that. Thanks for\
    \ pointing it out. I've updated my answer.\n<|/ c |>\n<| a |>\n<code>", "  var\
    \ sum = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n      sum+=lst[i];\n\
    \    }\n  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "    var sum = 0;\n    for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2 ===\
    \ 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript |>\n<| a tags=javascript |>\n<code>", "    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 1){\n   \
    \         sum += lst[i];\n        }\n    }\n    return sum;\n}\n", "  let sum\
    \ = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n  \
    \    sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript\
    \ |>\n<| c |>\nThe question specifically asks for an answer without using loops.\n\
    <|/ c |>\n<| c |>\nI agree, this is an interesting solution. I'm still trying\
    \ to figure out how to do it without loops.\n<|/ c |>\n<| c |>\nI added a solution\
    \ without loops.\n<|/ c |>\n<| c |>\nThank you so much for this! I really appreciate\
    \ it!\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  return lst.filter(function(x){\n\
    \    return x % 2 === 1;\n  }).reduce(function(acc, x){\n    return acc + x;\n\
    \  }, 0);\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n     \
    \   if(lst[i]%2==0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=arrays,javascript |>\n<| a dscore=0 |>\n<code>",
  "  let evenSum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] % 2 ===\
    \ 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n", "    return\
    \ lst.filter(function(el){\n        return el%2==1;\n    }).reduce(function(acc,\
    \ el){\n        return acc + el;\n    }, 0);\n}\n</code>\n<|/ a tags=javascript,arrays,algorithm\
    \ |>\n<| c |>\nThis solution doesn't work if the array is empty. `reduce` returns\
    \ `undefined` when the array is empty. `reduce` also doesn't return `0` when the\
    \ array is empty.\n<|/ c |>\n<| c |>\nI added a solution that doesn't require\
    \ `reduce`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nvar sumOddEven = function(arr)\
    \ {\n  var sum = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 1) {\n      sum += arr[i];\n    }\n  }\n  return sum;\n};\n</code>\n\
    <|/ a tags=javascript,arrays,algorithm |>\n<| c |>\nThis solution doesn't work\
    \ if the array is empty. `reduce` returns `undefined` when the array is empty.\
    \ `reduce` also doesn't return `0` when the array is empty.\n<|/ c |>\n<| a tags=javascript,arrays,algorithm\
    \ |>\n<code>\nvar sumOddEven = function(arr) {\n  var sum = 0;\n  for (var i =\
    \ 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 1) {\n      sum += arr[i];\n\
    \    }\n  }\n  return sum;\n};\n</code>\n<|/ a dscore=2 |>\n<| a tags=javascript,arrays,algorithm\
    \ |>\n<code>\nvar sumOddEven = function(arr) {\n  var sum = 0;\n  for (var i =\
    \ 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 1) {\n      sum += arr[i];\n\
    \    }\n  }\n  return sum;\n};\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n\
    <code>\nvar sumOddEven = function(arr) {\n  var sum = 0;\n  for (var i = 0; i\
    \ < arr.length; i++) {\n    if (arr[i] % 2 === 1) {\n      sum += arr[i];\n  \
    \  }\n  }\n  return sum;\n};\n</code>\n<|/ a tags=javascript,arrays,algorithm\
    \ |>\n<| a tags=javascript,arrays,algorithm |>\n<code>\nvar sumOddEven = function(arr)\
    \ {\n  var sum = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 1) {\n      sum += arr[i];\n    }\n  }\n  return sum;\n};\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=javascript,arrays,algorithm |>\n<code>\nvar sumOddEven\
    \ = function(arr) {\n  var sum = 0;\n  for (var i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] ", "  return lst.filter(function(x){\n    return x % 2 === 1;\n\
    \  }).reduce(function(acc, x){\n    return acc + x;\n  }, 0);\n}\n", "  return\
    \ lst.filter(function(el, i){\n    return i % 2 === 1;\n  }).reduce(function(acc,\
    \ el){\n    return acc + el;\n  }, 0);\n}\n", "    let sum = 0;\n    for(let i\
    \ = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            sum +=\
    \ lst[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=0 |>\n<code>", "    return lst.filter(function(elem, index, arr){\n\
    \        return index%2==0;\n    }).reduce(function(acc, elem){\n        return\
    \ acc+elem;\n    }, 0);\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| c |>\n\
    This doesn't work if you have a negative number in the array\n<|/ c |>\n<| c |>\n\
    It does work. `index%2==0` returns true if the index is even.\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work if you have a negative number in the array\n<|/ c |>\n<|\
    \ c |>\nIt does work. `index%2==0` returns true if the index is even.\n<|/ c |>\n\
    <| c |>\nIt doesn't work if you have a negative number in the array\n<|/ c |>\n\
    <| a tags=javascript,arrays |>\n<code>\nvar arr = [5, 8, 7, 1];\n\nvar sum = 0;\n\
    arr.forEach(function(item, index) {\n  if (index % 2 === 0) {\n    sum += item;\n\
    \  }\n});\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

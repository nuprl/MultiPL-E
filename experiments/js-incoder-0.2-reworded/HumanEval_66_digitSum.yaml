name: HumanEval_66_digitSum
language: js
prompt: "//Task\n// Write a function that takes a string as input and returns the\
  \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
  \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
  // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
  \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
  helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
  aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
  You arE Very Smart\"),327);\n}\n\ntest();"
completions: ["  let sum = 0;\n  for (let i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i)\
    \ - 64;\n  }\n  return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < s.length;\
    \ i++){\n    sum += s.charCodeAt(i) - 64;\n  }\n  return sum;\n}\n", "  let sum\
    \ = 0;\n  for (let i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - 64;\n\
    \  }\n  return sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < s.length; i++){\n\
    \    sum += s.charCodeAt(i) - 64;\n  }\n  return sum;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - 64;\n  }\n\
    \  return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < s.length; i++){\n\
    \    sum += s.charCodeAt(i) - 64;\n  }\n  return sum;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - 64;\n  }\n\
    \  return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < s.length; i++){\n\
    \    sum += s.charCodeAt(i) - 64;\n  }\n  return sum;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - 64;\n  }\n\
    \  return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < s.length; i++){\n\
    \    sum += s.charCodeAt(i) - 64;\n  }\n  return sum;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - 64;\n  }\n\
    \  return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < s.length; i++){\n\
    \    sum += s.charCodeAt(i) - 64;\n  }\n  return sum;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - 64;\n  }\n\
    \  return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < s.length; i++){\n\
    \    sum += s.charCodeAt(i) - 64;\n  }\n  return sum;\n}\n", "    let sum = 0;\n\
    \    for (let i = 0; i < s.length; i++){\n        sum += s.charCodeAt(i) - 64;\n\
    \    }\n    return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < s.length;\
    \ i++){\n    sum += s.charCodeAt(i) - 64;\n  }\n  return sum;\n}\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < s.length; i++){\n        sum += s.charCodeAt(i)\
    \ - 64;\n    }\n    return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i <\
    \ s.length; i++){\n    sum += s.charCodeAt(i) - 64;\n  }\n  return sum;\n}\n",
  "    var sum = 0;\n    for(var i=0;i<s.length;i++){\n        sum += s.charCodeAt(i)\
    \ - 64;\n    }\n    return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i <\
    \ s.length; i++){\n    sum += s.charCodeAt(i) - 64;\n  }\n  return sum;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

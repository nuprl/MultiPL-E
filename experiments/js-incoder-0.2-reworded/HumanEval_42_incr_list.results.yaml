language: js
name: HumanEval_42_incr_list
results:
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i=l.length-1; i>=0; i--){\n        ret.push(l[i]+1);\n    }\n    return ret;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpqjsko1vv.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqjsko1vv.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp5kaiomz5.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5kaiomz5.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r.push(l[i]+1);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwgiiw3ot.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgiiw3ot.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpyqntbt_5.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyqntbt_5.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmplrqm7kia.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmplrqm7kia.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp4h8zoonw.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4h8zoonw.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp38xt21r5.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp38xt21r5.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i<l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwzc10q26.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwzc10q26.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmph0d90cl6.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmph0d90cl6.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i] = l[i]+1;\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for (var i\
    \ = 0, len = l.length; i < len; i++){\n    r[i] = l[i+1] || 0;\n  }\n  return\
    \ r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  1,\n\
    \  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpfo0r0c60.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfo0r0c60.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 1, 0\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9se0e2kw.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9se0e2kw.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var r = [];\n    for(var\
    \ i = 0; i < l.length; i++){\n        r[i] = l[i+1] || 0;\n    }\n    return r;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  1,\n\
    \  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpqyqshttm.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqyqshttm.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 1, 0\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i = 0; i < l.length; i++){\n    ret[i] = l[i+1] || 0;\n  }\n  return ret;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  1,\n\
    \  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpd6gzqum5.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd6gzqum5.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 1, 0\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    res.push(l[i++]);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp_vgegt26.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_vgegt26.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r[i+1] = l[i]+1;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  4,\n  3,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n \
    \ 2\n]\n    at test (/tmp/tmp_qkp0662.js:20:10)\n    at Object.<anonymous> (/tmp/tmp_qkp0662.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 4, 3, 2 ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  var len = l.length;\n  for(i; i < len; i++){\n    ret[i] = l[i] + 1;\n\
    \  }\n  return ret;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i=0;i<l.length;i++){\n        ret.push(l[i]+1);\n    }\n    return ret;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i] = l[i]+1;\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i] = l[i]+1;\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i = 0; i < l.length; i++){\n    ret[i] = l[i] + 1;\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  var i =\
    \ 0;\n  var len = l.length;\n  while (i < len) {\n    res.push(l[i++]);\n  }\n\
    \  return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp65p_qg_n.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp65p_qg_n.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i\
    \ = 0, len = l.length; i < len; i++){\n    r.push(l[i] + 1);\n  }\n  return r;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i = 0; i < l.length; i++){\n    ret[i] = l[i+1];\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  1,\n\
    \  undefined\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at\
    \ test (/tmp/tmpfccpiyj_.js:20:10)\n    at Object.<anonymous> (/tmp/tmpfccpiyj_.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 1, undefined\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i=l.length-1; i>=0; i--){\n        ret.push(l[i]+1);\n    }\n    return ret;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpqjsko1vv.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqjsko1vv.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var res = [];\n    for(var\
    \ i=l.length-1; i>=0; i--){\n        res.push(l[i]+1);\n    }\n    return res;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnbb0_y29.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnbb0_y29.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i = 0; i < l.length; i++){\n    ret.push(l[i] + 1);\n  }\n  return ret;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i] = l[i]+1;\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i+1] = ret[i]+1;\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  NaN,\n  NaN,\n  NaN\n]\n\nshould loosely deep-equal\n\n[\n  4,\n \
    \ 3,\n  2\n]\n    at test (/tmp/tmpvinblp5e.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvinblp5e.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, NaN, NaN, NaN ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r.push(l[i]+1);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwgiiw3ot.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgiiw3ot.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    res.push(l[i++]);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp_vgegt26.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_vgegt26.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i=0;i<l.length;i++){\n        ret.push(l[i]+1);\n    }\n    return ret;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i] = l[i]+1;\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i<l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwzc10q26.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwzc10q26.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i] = l[i]+1;\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  var i = 0;\n\
    \  while(i < l.length){\n    r.push(l[i++]);\n  }\n  return r;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpmf33dspm.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmf33dspm.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  var len = l.length;\n  while(i < len){\n    ret.push(l[i++]);\n  }\n \
    \ return ret;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpys3k28fy.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpys3k28fy.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var new_l = [];\n  for(var\
    \ i=0; i<l.length; i++){\n    new_l.push(l[i]+1);\n  }\n  return new_l;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i+1] = l[i]+1;\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  4,\n  3,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n \
    \ 2\n]\n    at test (/tmp/tmpitnrfhey.js:20:10)\n    at Object.<anonymous> (/tmp/tmpitnrfhey.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 4, 3, 2 ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i = 0; i < l.length; i++){\n        ret.push(l[i] + 1);\n    }\n    return ret;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var res = [];\n    for(var\
    \ i=l.length-1; i>=0; i--){\n        res.push(l[i]+1);\n    }\n    return res;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmphy9epnu_.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmphy9epnu_.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i=l.length-1; i>=0; i--){\n        ret.push(l[i]+1);\n    }\n    return ret;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpqjsko1vv.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqjsko1vv.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    var\
    \ i = 0;\n    while(i<l.length){\n        ret.push(l[i++]);\n    }\n    return\
    \ ret;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpj_m3csam.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj_m3csam.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var a = [];\n  for(var i=0;\
    \ i<l.length; i++){\n    a.push(l[i]+1);\n  }\n  return a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i=0;i<l.length;i++){\n        ret.push(l[i]+1);\n    }\n    return ret;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i=l.length-1; i>=0; i--){\n        ret.push(l[i]+1);\n    }\n    return ret;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpqjsko1vv.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqjsko1vv.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r[i] = l[i+1]+1;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  NaN\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpglzgvrjc.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpglzgvrjc.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, NaN\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r.push(l[i]+1);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwgiiw3ot.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgiiw3ot.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r.push(l[i]+1);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwgiiw3ot.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgiiw3ot.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i\
    \ = 0; i < l.length; i++){\n    r.push(l[i] + 1);\n  }\n  return r;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r[i+1] = l[i]+1;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  4,\n  3,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n \
    \ 2\n]\n    at test (/tmp/tmp_qkp0662.js:20:10)\n    at Object.<anonymous> (/tmp/tmp_qkp0662.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 4, 3, 2 ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i] = l[i]+1;\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var a = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    a.push(l[i]+1);\n  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpd4ubpldd.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd4ubpldd.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i = 0; i < l.length; i++){\n    ret[i] = l[i] + 1;\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i = 0; i < l.length; i++){\n        ret.push(l[i] + 1);\n    }\n    return ret;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i = 0; i < l.length; i++){\n        ret.push(l[i] + 1);\n    }\n    return ret;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r[i+1] = l[i]+1;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  4,\n  3,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n \
    \ 2\n]\n    at test (/tmp/tmp_qkp0662.js:20:10)\n    at Object.<anonymous> (/tmp/tmp_qkp0662.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 4, 3, 2 ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i+1] = l[i]+1;\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  4,\n  3,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n \
    \ 2\n]\n    at test (/tmp/tmpitnrfhey.js:20:10)\n    at Object.<anonymous> (/tmp/tmpitnrfhey.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 4, 3, 2 ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r[i] = l[i+1]+1;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  NaN\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpglzgvrjc.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpglzgvrjc.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, NaN\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i] = l[i]+1;\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i] = l[i]+1;\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var a = [];\n  for(var i=0;\
    \ i<l.length; i++){\n    a.push(l[i]+1);\n  }\n  return a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r.push(l[i]+1);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwgiiw3ot.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgiiw3ot.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  var i = 0;\n\
    \  while(i < l.length){\n    r.push(l[i++]);\n  }\n  return r;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpmf33dspm.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmf33dspm.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i=0;i<l.length;i++){\n        ret.push(l[i]+1);\n    }\n    return ret;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  var i =\
    \ 0;\n  var len = l.length;\n  while(i < len){\n    res.push(l[i++]);\n  }\n \
    \ return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwjuk5sx3.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwjuk5sx3.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var new_l = [];\n  for(var\
    \ i=0; i<l.length; i++){\n    new_l[i] = l[i]+1;\n  }\n  return new_l;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    res.push(l[i++]);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp_vgegt26.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_vgegt26.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r.push(l[i]+1);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwgiiw3ot.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgiiw3ot.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r[i+1] = l[i]+1;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  4,\n  3,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n \
    \ 2\n]\n    at test (/tmp/tmp_qkp0662.js:20:10)\n    at Object.<anonymous> (/tmp/tmp_qkp0662.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 4, 3, 2 ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r[i] = l[i+1]+1;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  NaN\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpglzgvrjc.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpglzgvrjc.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, NaN\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  var i =\
    \ 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpnrdj_k8n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrdj_k8n.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 1\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var new_l = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    new_l[i] = l[i]+1;\n  }\n  return new_l;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r.push(l[i]+1);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwgiiw3ot.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgiiw3ot.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i+1] = l[i]+1;\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  4,\n  3,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n \
    \ 2\n]\n    at test (/tmp/tmpitnrfhey.js:20:10)\n    at Object.<anonymous> (/tmp/tmpitnrfhey.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 4, 3, 2 ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r.push(l[i]+1);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwgiiw3ot.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgiiw3ot.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i+1] = ret[i]+1;\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  NaN,\n  NaN,\n  NaN\n]\n\nshould loosely deep-equal\n\n[\n  4,\n \
    \ 3,\n  2\n]\n    at test (/tmp/tmpvinblp5e.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvinblp5e.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, NaN, NaN, NaN ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i = 0; i < l.length; i++){\n    ret[i+1] = l[i+1];\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  2,\n  1,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  4,\n\
    \  3,\n  2\n]\n    at test (/tmp/tmpezhk6cwz.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpezhk6cwz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 2, 1, undefined ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r.push(l[i]+1);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwgiiw3ot.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgiiw3ot.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var new_l = [];\n  for(var\
    \ i=0; i<l.length; i++){\n    new_l[i] = l[i]+1;\n  }\n  return new_l;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i+1] = l[i]+1;\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  4,\n  3,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n \
    \ 2\n]\n    at test (/tmp/tmpitnrfhey.js:20:10)\n    at Object.<anonymous> (/tmp/tmpitnrfhey.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 4, 3, 2 ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i=l.length-1; i>=0; i--){\n        ret.push(l[i]+1);\n    }\n    return ret;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpqjsko1vv.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqjsko1vv.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r.push(l[i]+1);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwgiiw3ot.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgiiw3ot.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i = 0; i < l.length; i++){\n        ret.push(l[i] + 1);\n    }\n    return ret;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var new_l = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    new_l[i] = l[i]+1;\n  }\n  return new_l;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r.push(l[i]+1);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpwgiiw3ot.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgiiw3ot.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var r = [];\n    for(var\
    \ i = 0; i < l.length; i++){\n        r.push(l[i] + 1);\n    }\n    return r;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r[i] = l[i+1]+1;\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  NaN\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpglzgvrjc.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpglzgvrjc.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, NaN\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    ret[i] = l[i]+1;\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmp9veojc6n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9veojc6n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpa82h_fpy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa82h_fpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var r = [];\n  for (var i=0;\
    \ i<l.length; i++){\n    r[i+1] = l[i]+1;\n  }\n  return r;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  4,\n  3,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n \
    \ 2\n]\n    at test (/tmp/tmp9xfioqyd.js:20:10)\n    at Object.<anonymous> (/tmp/tmp9xfioqyd.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 4, 3, 2 ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747943
- exit_code: 0
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n  var res = [];\n  for(var\
    \ i=0;i<l.length;i++){\n    res.push(l[i]+1);\n  }\n  return res;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747943
- exit_code: 1
  program: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2,\
    \ 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4,\
    \ 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list(l){\n    var ret = [];\n    for(var\
    \ i=l.length-1; i>=0; i--){\n        ret.push(l[i]+1);\n    }\n    return ret;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2\n]\n    at test (/tmp/tmpqjsko1vv.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqjsko1vv.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 4, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''

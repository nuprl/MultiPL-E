name: HumanEval_157_right_angle_triangle
language: js
results:
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a-b;\n\t\
    var ac = a-c;\n\tvar bc = b-c;\n\treturn (ab*ac > bc*ab);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp_v527n00.js:23:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp_v527n00.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n\treturn (((b - a)\
    \ * (c - b)) > 0)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmbs6q04v.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmbs6q04v.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    return Math.abs(acb - abc) < 0.000001;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu9vh67ro.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpu9vh67ro.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bca\
    \ = b + c;\n    var bcb = b - c;\n    var bcc = bc - ab;\n    var abca = ab +\
    \ ac;\n    var abcbab = ab + bc + ab;\n    var abcbc = ab + bc + bc;\n    var\
    \ abccc = ab + c + bc;\n    var abccb = ab + c + bc;\n    var abcbca = ab + bc\
    \ + ca;\n    var abcbcb = ab + bc + cb;\n    var abcbcc = ab + c + cb;\n    var\
    \ abccca = ab + c + ca;\n    var abcccb = ab + c + cb;\n    var abcccba = ab +\
    \ c + ca + b;\n    var abcccbc = ab + c + cb + c;\n    var abcccbaa = ab + c +\
    \ ca + b + a;\n    var abcccbca = ab + c + cb + ca + a;\n    var abcccbcb = ab\
    \ + c + cb + cb + b;\n    var abcccbcca = ab + c + cb + ca + a + c;\n    var abcccbcba\
    \ = ab + c + cb + ca + b + a;\n    var abcccbcbaa = ab + c + cb + ca + b + a +\
    \ a;\n    var abcccbcbaab = ab + c + cb + ca + b + a + ab;\n    var abcccbcbaabc\
    \ = ab + c + cb + ca + b + a + ab + c;\n    var abcccbcbaabca = ab + c + cb +\
    \ ca + b + a + ab + ca + a;\n    var abcccbcbaabcbc = ab + c + cb + ca + b + a\
    \ + ab + ca + b + c;\n    var abcccbcbaabcbca = ab + c + cb + ca + b + a + ab\
    \ + ca + b + ca + a;\n    var abcccbcbaabcbcb = ab + c + cb + ca + b + a + ab\
    \ + ca + b + c + b;\n    var abcccbcbaabcbcca = ab + c + cb + ca + b + a + ab\
    \ + ca + b + c + c + a;\n    var abcccbcbaabcbccb = ab + c + cb + ca + b + a +\
    \ ab + ca + b + c + c + b;\n    var abcccbcbaabcbccca = ab + c + cb + c\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpd5_yfrgk.js:63\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\treturn (ab > ac && ab > bc);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3q1shffu.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp3q1shffu.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\treturn (ab > 0 && ac > 0 && bc>0) || (ab\
    \ < 0 && ac < 0 && bc<0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgv2yy2p8.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgv2yy2p8.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n    return (((b -\
    \ a) * (c - b)) >= 0 && ((b - a) * (a + b)) >= 0 && ((c - a) * (a + c)) >= 0);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpom72rqrf.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpom72rqrf.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n\treturn (Math.abs(Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2)) - Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) - Math.pow(c, 2))) <= 1);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmprkgzfpdf.js:19:10)\n    at\
    \ Object.<anonymous> (/tmp/tmprkgzfpdf.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n  var ab = abs(a-b),\n\
    \      ac = abs(a-c),\n      bc = abs(b-c);\n  return ab == ac && ab == bc;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0z0odn3f.js:11\n  var ab = abs(a-b),\n           ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmp0z0odn3f.js:11:12)\n\
    \    at test (/tmp/tmp0z0odn3f.js:22:20)\n    at Object.<anonymous> (/tmp/tmp0z0odn3f.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle = Math.acos((a1*a1\
    \ + b1*b1 + c1*c1)/(Math.sqrt(a1*a1 + b1*b1 + c1*c1)*Math.sqrt(b1*b1 + c1*c1)));\n\
    \    return angle < Math.PI/2;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6tbc80w0.js:23:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6tbc80w0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\tvar acb = ac * bc;\n\treturn (ab > acb)\
    \ && (ac > bc);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp15bkq1es.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp15bkq1es.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    \n    return ((ab >= 0) && (ac\
    \ >= 0) && (bc >= 0)) || ((ab <= 0) && (ac <= 0) && (bc <= 0));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpl_qaft5g.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpl_qaft5g.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    return abc === bcd;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgyiqen1e.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgyiqen1e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\treturn (ab >= 0 && ac >= 0 && bc >= 0)\
    \ || (ab <= 0 && ac <= 0 && bc <= 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpypbo1dho.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpypbo1dho.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n  var ab = abs(a-b),\n\
    \      ac = abs(a-c),\n      bc = abs(b-c);\n  return ((ab >= ac) && (ab >= bc));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6w8werly.js:11\n  var ab = abs(a-b),\n           ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmp6w8werly.js:11:12)\n\
    \    at test (/tmp/tmp6w8werly.js:22:20)\n    at Object.<anonymous> (/tmp/tmp6w8werly.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n    var ab = a-b;\n\
    \    var ac = c-a;\n    var bc = b-c;\n    var det = ab*ac - bc*ab;\n    if (det\
    \ < 0){\n        return false;\n    }\n    var sq = ab*ab + ac*ac;\n    var det\
    \ = ab*ab + bc*bc;\n    return det === sq;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6r_xrszb.js:28:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6r_xrszb.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\treturn (ab > 0 && ac > 0 && bc>0) || (ab\
    \ < 0 && ac < 0 && bc<0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpct2qfk8h.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpct2qfk8h.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bca\
    \ = b + ca;\n    var cab = ac + bc;\n    var acb = ac + bc;\n    var abca = ab\
    \ + ca;\n    return ((abc > bca) && (abc > cab) && (abc > acb));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpw30wsj1y.js:15\n    var bca = b + ca;\n                  ^\n\n\
    ReferenceError: ca is not defined\n    at right_angle_triangle (/tmp/tmpw30wsj1y.js:15:19)\n\
    \    at test (/tmp/tmpw30wsj1y.js:27:20)\n    at Object.<anonymous> (/tmp/tmpw30wsj1y.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    var abcd = abc + bcd;\n    return ((abcd >= 0) && (bcd >= 0)\
    \ && (ab >= 0));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkj2d0_g6.js:25:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpkj2d0_g6.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var det = ab * ac - bc * ab;\n\
    \    return det > 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4hydd0tc.js:23:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp4hydd0tc.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

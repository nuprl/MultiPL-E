name: HumanEval_116_sort_array
language: js
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\n// >>> sort_array([1, 5, 2, 3, 4])\n// [1, 2, 3, 4, 5]\n// >>> sort_array([-2,\
  \ -3, -4, -5, -6])\n// [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4])\n\
  // [0, 1, 2, 3, 4]\nfunction sort_array(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5]);\n\
  \  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1,\
  \ 0, 2, 3, 4]),[0, 1, 2, 4, 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n\
    \    for(i = 0; i < len; i++){\n        sorted[i] = 0;\n    }\n    for(i = 0;\
    \ i < len; i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[i]\
    \ > arr[j]){\n                k = arr[i];\n                arr[i] = arr[j];\n\
    \                arr[j] = k;\n            }\n        }\n    }\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var swapped;\n    var sorted;\n    var i;\n\
    \    var j;\n    var temp;\n    var swap;\n    var swapped;\n    var temp;\n \
    \   var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n  \
    \  var temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n   \
    \ var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n    var\
    \ temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n\
    \    var temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n \
    \   var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n  \
    \  var temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n   \
    \ var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n    var\
    \ temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n\
    \    var temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n \
    \   var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n  \
    \  var temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n   \
    \ var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n    var\
    \ temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n\
    \    var temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n \
    \   var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n  \
    \  var temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n   \
    \ var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n    var\
    \ temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n\
    \    var temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n \
    \   var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap;\n  \
    \  var temp;\n    var swap;\n    var temp;\n    var swap;\n    var temp;\n   \
    \ var swap;\n    var temp;\n    var swap;\n    var temp;\n    var swap", "  var\
    \ len = arr.length;\n  if(len < 2){\n    return arr;\n  }\n  var ones = count_ones(arr);\n\
    \  var sorted_arr = [];\n  var i = 0;\n  var j = 0;\n  while(i < len){\n    if(ones[i]\
    \ > 0){\n      sorted_arr.push(arr[j]);\n      i++;\n      j++;\n    }else{\n\
    \      j++;\n    }\n  }\n  while(j < len){\n    sorted_arr.push(arr[j]);\n   \
    \ j++;\n  }\n  return sorted_arr;\n}\n", "    var len = arr.length;\n    var max\
    \ = 0;\n    var min = 0;\n    var mid = 0;\n    var temp = 0;\n    var swap =\
    \ 0;\n    var i = 0;\n    for(i = 0; i < len; i++){\n        max = Math.max(max,\
    \ arr[i]);\n        min = Math.min(min, arr[i]);\n        mid = Math.floor((max\
    \ + min) / 2);\n        if(arr[i] > mid){\n            temp = arr[i];\n      \
    \      arr[i] = arr[mid];\n            arr[mid] = temp;\n            swap++;\n\
    \        }\n    }\n    for(i = 0; i < len; i++){\n        max = Math.max(max,\
    \ arr[i]);\n        min = Math.min(min, arr[i]);\n        mid = Math.floor((max\
    \ + min) / 2);\n        if(arr[i] == arr[mid]){\n            temp = arr[i];\n\
    \            arr[i] = arr[mid];\n            arr[mid] = temp;\n            swap++;\n\
    \        }\n    }\n    for(i = 0; i < len; i++){\n        max = Math.max(max,\
    \ arr[i]);\n        min = Math.min(min, arr[i]);\n        mid = Math.floor((max\
    \ + min) / 2);\n        if(arr[i] > arr[mid]){\n            temp = arr[i];\n \
    \           arr[i] = arr[mid];\n            arr[mid] = temp;\n            swap++;\n\
    \        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n    if(len\
    \ < 1) return arr;\n    var max = 0;\n    var min = 0;\n    var mid = 0;\n   \
    \ var tmp;\n    var swap;\n    var i;\n    for(i = 0; i < len; i++){\n       \
    \ tmp = arr[i];\n        max = tmp > max ? tmp : max;\n        min = tmp < min\
    \ ? tmp : min;\n        mid = tmp > min ? i : i+1;\n        swap = arr[mid];\n\
    \        arr[mid] = arr[max];\n        arr[max] = swap;\n    }\n    for(i = 0;\
    \ i < len; i++){\n        tmp = arr[i];\n        arr[max] = tmp > max ? tmp :\
    \ max;\n        arr[min] = tmp < min ? tmp : min;\n    }\n    return arr;\n}\n",
  "    var len = arr.length;\n    var max = 0;\n    var min = 0;\n    var mid = 0;\n\
    \    var swap;\n    var i;\n\n    for(i = 0; i < len; i++){\n        max = Math.max(max,\
    \ arr[i]);\n        min = Math.min(min, arr[i]);\n    }\n\n    for(i = 0; i <\
    \ len; i++){\n        mid = max - ((max - min) / 2);\n        if(arr[mid] > arr[i]){\n\
    \            swap = arr[mid];\n            arr[mid] = arr[i];\n            arr[i]\
    \ = swap;\n        }\n    }\n\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var swapped;\n    var sorted;\n    var i;\n    var j;\n    \n    sorted =\
    \ [];\n    \n    for(i = 0; i < len; i++){\n        swapped = false;\n       \
    \ for(j = 0; j < len; j++){\n            if(arr[j] > arr[j + 1]){\n          \
    \      swap(arr, j, j + 1);\n                swapped = true;\n            }\n\
    \        }\n        if(!swapped){\n            sorted.push(arr[i]);\n        }\n\
    \    }\n    \n    return sorted;\n}\n", "    var len = arr.length;\n    for(var\
    \ i=0; i<len; i++){\n        var num = arr[i];\n        for(var j=0; j<len; j++){\n\
    \            if(num == arr[j]){\n                arr.splice(j,1);\n          \
    \      len--;\n            }\n        }\n    }\n    arr.sort(function(a,b){\n\
    \        var aNum = parseInt(a, 2);\n        var bNum = parseInt(b, 2);\n    \
    \    if(aNum == bNum){\n            return 0;\n        }\n        if(aNum > bNum){\n\
    \            return 1;\n        }\n        return -1;\n    });\n    return arr;\n\
    }\n", "  var len = arr.length;\n  if(len < 2){\n    return arr;\n  }\n  \n  var\
    \ ones = count_ones(arr);\n  var len = ones.length;\n  if(len === 0){\n    return\
    \ arr;\n  }\n  \n  var maxOnes = Math.pow(2,len-1);\n  \n  var maxLen = Math.floor(maxOnes/ones);\n\
    \  \n  var result = [];\n  \n  for(var i=0;i<len;i++){\n    var num = arr[i];\n\
    \    var index = num;\n    \n    while(index > 0){\n      index = index & (index-1);\n\
    \      result.push(num);\n    }\n  }\n  \n  for(var i=0;i<maxLen;i++){\n    var\
    \ index = i;\n    \n    while(index > 0){\n      index = index & (index-1);\n\
    \      result.push(result[index]);\n    }\n  }\n  \n  return result;\n}\n", " \
    \   arr.sort(function(a, b){\n        var c = a.toString(2);\n        var d =\
    \ b.toString(2);\n        var e = (d.length - c.length) / 2;\n        var f =\
    \ parseInt(d.substr(0, e), 2);\n        var g = parseInt(c.substr(0, e), 2);\n\
    \        var h = (f + g) / 2;\n        var i = parseInt(d.substr(e), 2);\n   \
    \     var j = parseInt(c.substr(e), 2);\n        var k = parseInt(a.toString(2),\
    \ 2);\n        var l = (k + j) / 2;\n        var m = parseInt(b.toString(2), 2);\n\
    \        var n = (m + l) / 2;\n        var o = (k + n) / 2;\n        var p = parseInt(a.toString(2),\
    \ 2);\n        var q = (p + o) / 2;\n        var r = (q + l) / 2;\n        var\
    \ s = (k + r) / 2;\n        var t = parseInt(b.toString(2), 2);\n        var u\
    \ = (s + t) / 2;\n        var v = (u + m) / 2;\n        var w = (v + n) / 2;\n\
    \        var x = (w + o) / 2;\n        var y = (x + l) / 2;\n        var z = (y\
    \ + r) / 2;\n        var A = parseInt(a.toString(2), 2);\n        var B = parseInt(b.toString(2),\
    \ 2);\n        var C = (A + B) / 2;\n        var D = (C + D) / 2;\n        var\
    \ E = (A + D) / 2;\n        var F = (E + F) / 2;\n        var G = (A + F) / 2;\n\
    \        var H = (G + H) / 2;\n        var I = (H + I) / 2;\n        var J = (A\
    \ + I) / 2;\n        var K = (J + K) / 2;\n        var L = (K + L) / 2;\n    \
    \    var M = (L + M) / 2;\n        var N = (M + N) / 2;\n        var O = (N +\
    \ O) / 2;\n        var P = (O + P) / 2;\n        var Q = (P + Q) / 2;\n      \
    \  var R = (Q + R) / 2;\n        var S = (R + S) / 2;\n        var T = (S + T)\
    \ / 2;\n        var U = (T + U) / 2;\n        var V = (U + V) / 2;\n        var\
    \ W = (V + W) / 2;\n        var X = (W + X) / 2;\n        var Y = (X + Y) / 2;\n\
    \        var Z = (Y + Z) / 2;\n        var a = parseInt(a.toString(2), 2);\n \
    \       var b = parseInt(b.toString(2), 2);\n        var c = parseInt(c.toString(2),\
    \ 2);\n        var d = parseInt(d.toString(2), 2);\n        var e = parseInt(e.toString(2),\
    \ 2);\n        var f = parseInt(f.toString(2), 2);\n        var g = parseInt(g.toString(2),\
    \ 2);\n        var h = parseInt(h.toString(2), 2);\n        var i = parseInt(i.toString(2),\
    \ 2);", "    var len = arr.length;\n    if(len < 2){\n        return arr;\n  \
    \  }\n    var ones = count_ones(arr);\n    var len = ones.length;\n    var max\
    \ = 0;\n    var min = 0;\n    for(var i = 0; i < len; i++){\n        var cur =\
    \ arr[i];\n        if(cur > max){\n            max = cur;\n        }\n       \
    \ if(cur < min){\n            min = cur;\n        }\n    }\n    var diff = max\
    \ - min;\n    var result = [];\n    for(var i = 0; i < len; i++){\n        var\
    \ cur = arr[i];\n        var index = cur - min;\n        var diff = cur - min;\n\
    \        if(diff > 0){\n            result.push(index);\n        }\n    }\n  \
    \  result.sort(function(a, b){\n        return a - b;\n    });\n    for(var i\
    \ = 0; i < len; i++){\n        var cur = arr[i];\n        var index = cur - min;\n\
    \        var diff = cur - min;\n        if(diff > 0){\n            result.push(index);\n\
    \        }\n    }\n    return result;\n}\n", "    var len = arr.length;\n    if(len\
    \ < 2){\n        return arr;\n    }\n    var ones = count_ones(arr);\n    var\
    \ len = ones.length;\n    var max = 0;\n    for(var i=0; i<len; i++){\n      \
    \  if(ones[i] > max){\n            max = ones[i];\n        }\n    }\n    for(var\
    \ i=0; i<len; i++){\n        arr[i] = arr[i]/max;\n    }\n    arr.sort(function(a,\
    \ b){\n        return a-b;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n     \
    \   for(j = i+1; j < len; j++){\n            k = arr[i]*arr[j];\n            if(k\
    \ !== 0){\n                sorted.push(k);\n            }\n        }\n    }\n\
    \    sorted.sort(function(a, b){\n        return a - b;\n    });\n    return sorted;\n\
    }\n", "    var len = arr.length;\n    for(var i=0; i<len; i++){\n        for(var\
    \ j=0; j<len; j++){\n            if(arr[i]>arr[j]){\n                var temp\
    \ = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n\
    \            }\n        }\n    }\n    return arr;\n}\n", "  if(arr.length == 0)\
    \ return arr;\n  var len = arr.length;\n  var sorted = new Array(len);\n  var\
    \ cnt = 0;\n  for(var i=0; i<len; i++){\n    cnt = 0;\n    for(var j=0; j<len;\
    \ j++){\n      if((arr[j] & 1) == 1){\n        cnt++;\n      }\n    }\n    sorted[i]\
    \ = cnt;\n  }\n  cnt = arr.length;\n  for(var i=0; i<len; i++){\n    cnt = 0;\n\
    \    for(var j=0; j<len; j++){\n      if((arr[j] & 1) == 1){\n        cnt++;\n\
    \      }\n    }\n    sorted[i] = cnt;\n  }\n  for(var i=0; i<len; i++){\n    sorted[i]\
    \ = arr.length - sorted[i];\n  }\n  return sorted;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var c = a.toString(2).split('').reverse().join('');\n        var\
    \ d = b.toString(2).split('').reverse().join('');\n        var ones = c.split('').reduce(function(acc,\
    \ cur){\n            return acc + parseInt(cur);\n        }, 0);\n        var\
    \ tens = d.split('').reduce(function(acc, cur){\n            return acc + parseInt(cur);\n\
    \        }, 0);\n        return ones - tens;\n    });\n    return arr;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThanks for your answer. Your solution works perfectly for me.\
    \ I am just wondering why you used `reduce` instead of `forEach`?\n<|/ c |>\n\
    <| c |>\n`reduce` will return the accumulator value after each iteration. `forEach`\
    \ will return the accumulator value only after the whole array is iterated. `reduce`\
    \ will also return `undefined` if the array is empty.\n<|/ c |>\n<| c |>\nThanks\
    \ for your explanation. I understand now.\n<|/ c |>\n<| a tags=arrays,sorting,javascript\
    \ |>\n<code>\nvar arr = [1, 5, 2, 3, 4];\nvar sorted = arr.sort(function(a, b)\
    \ {\n    return a.toString(2).split('').reduce(function(acc, cur) {\n        return\
    \ acc + parseInt(cur);\n    }, 0) - b.toString(2).split('').reduce(function(acc,\
    \ cur) {\n        return acc + parseInt(cur);\n    }, 0);\n});", "    var len\
    \ = arr.length;\n    for(var i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n\
    \            if(arr[j] < arr[j+1]){\n                var temp = arr[j];\n    \
    \            arr[j] = arr[j+1];\n                arr[j+1] = temp;\n          \
    \  }\n        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n  \
    \  var sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = arr[i];\n    }\n    for(i = len - 1; i >= 0; i--){\n    \
    \    for(j = i - 1; j >= 0; j--){\n            k = j + 1;\n            while(k\
    \ <= len && sorted[k - 1] > sorted[k]){\n                sorted[k] = sorted[k\
    \ - 1];\n                k++;\n            }\n            sorted[k] = arr[j];\n\
    \        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n    var\
    \ ret = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j =\
    \ i + 1; j < len; j++){\n            k = j;\n            while(arr[k] && arr[k]\
    \ == arr[j]){\n                k++;\n            }\n            if(arr[k]){\n\
    \                ret.push(arr[i]);\n                ret.push(arr[j]);\n      \
    \          ret.push(arr[k]);\n            }\n        }\n    }\n    return ret;\n\
    }\n", "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n        var\
    \ b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var b_ones = b_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var a_ones_count = a_ones.length;\n        var b_ones_count\
    \ = b_ones.length;\n        if(a_ones_count < b_ones_count){\n            return\
    \ -1;\n        }else if(a_ones_count > b_ones_count){\n            return 1;\n\
    \        }else{\n            return a_ones_count - b_ones_count;\n        }\n\
    \    });\n    return arr;\n}", "    var len = arr.length;\n    var maxOnes = 0;\n\
    \    var minOnes = Number.MAX_VALUE;\n    var maxDecimal = Number.NEGATIVE_INFINITY;\n\
    \    var minDecimal = Number.POSITIVE_INFINITY;\n    for(var i = 0; i < len; i++){\n\
    \        var ones = arr[i];\n        if(ones > maxOnes){\n            maxOnes\
    \ = ones;\n        }\n        if(ones < minOnes){\n            minOnes = ones;\n\
    \        }\n        var decimal = ones - maxOnes;\n        if(decimal > maxDecimal){\n\
    \            maxDecimal = decimal;\n        }\n        if(decimal < minDecimal){\n\
    \            minDecimal = decimal;\n        }\n    }\n    for(var i = 0; i < len;\
    \ i++){\n        var ones = arr[i];\n        var decimal = ones - maxOnes;\n \
    \       arr[i] = decimal + minDecimal;\n    }\n    return arr;\n}\n", "  if(arr.length\
    \ == 0){\n    return arr;\n  }\n  var len = arr.length;\n  var maxOnes = 0;\n\
    \  var maxDec = 0;\n  for(var i=0; i<len; i++){\n    var ones = arr[i].toString(2).length;\n\
    \    var dec = arr[i].toString(10).length;\n    if(ones > maxOnes){\n      maxOnes\
    \ = ones;\n    }\n    if(dec > maxDec){\n      maxDec = dec;\n    }\n  }\n  var\
    \ result = [];\n  for(var i=0; i<len; i++){\n    var ones = arr[i].toString(2).length;\n\
    \    var dec = arr[i].toString(10).length;\n    var index = ones - maxOnes - dec;\n\
    \    if(index < 0){\n      index = index + maxOnes;\n    }\n    result.push(arr[i]);\n\
    \    result.push(index);\n  }\n  result.sort(function(a, b){\n    return a - b;\n\
    \  });\n  return result;\n}\n", "    arr.sort(function(a, b){\n        var a_bin\
    \ = bin(a),\n            b_bin = bin(b);\n        if(a_bin > b_bin){\n       \
    \     return 1;\n        }\n        if(a_bin < b_bin){\n            return -1;\n\
    \        }\n        return 0;\n    });\n    return arr;\n}\n", "    var len =\
    \ arr.length;\n    var sorted = new Array(len);\n    var i;\n    for(i = 0; i\
    \ < len; i++){\n        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n\
    \        for(var j = i + 1; j < len; j++){\n            if(arr[i] == 1){\n   \
    \             sorted[j - 1] = sorted[j];\n                sorted[j] = 1;\n   \
    \         }\n        }\n    }\n    return sorted;\n}", "    var len = arr.length;\n\
    \    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n     \
    \   j = i;\n        while(j > 0 && arr[j - 1] > arr[j]){\n            arr[j] =\
    \ arr[j - 1];\n            j--;\n        }\n        arr[j] = i;\n    }\n    for(i\
    \ = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j - 1] < arr[j]){\n\
    \            arr[j] = arr[j - 1];\n            j--;\n        }\n        arr[j]\
    \ = i;\n    }\n    for(i = 0; i < len; i++){\n        j = i;\n        while(j\
    \ > 0 && arr[j - 1] == arr[j]){\n            j--;\n        }\n        arr[j] =\
    \ i;\n    }\n    for(i = 0; i < len; i++){\n        j = i;\n        while(j >\
    \ 0 && arr[j - 1] != arr[j]){\n            j--;\n        }\n        arr[j] = i;\n\
    \    }\n    return sorted;\n}\n", "    var len = arr.length;\n    var swapped;\n\
    \    var sorted;\n    var i;\n    var j;\n    \n    for(i = 0; i < len; i++){\n\
    \        swapped = false;\n        for(j = 0; j < len; j++){\n            if(arr[j]\
    \ > arr[j + 1]){\n                swap(arr, j, j + 1);\n                swapped\
    \ = true;\n            }\n        }\n        if(!swapped){\n            sorted\
    \ = arr.slice(0);\n            sorted.sort();\n            arr = sorted;\n   \
    \         break;\n        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = arr[i];\n    }\n    for(i = len - 1; i >= 0; i--){\n    \
    \    for(j = i - 1; j >= 0; j--){\n            k = j + 1;\n            while(k\
    \ <= len && arr[k] === 0){\n                k++;\n            }\n            if(k\
    \ > j){\n                sorted[j] = sorted[k - 1];\n                sorted[k]\
    \ = arr[j];\n                j++;\n                k--;\n            }\n     \
    \   }\n    }\n    return sorted;\n}", "    var len = arr.length;\n    var ret\
    \ = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n       \
    \ ret[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j = i +\
    \ 1; j < len; j++){\n            k = j + 1;\n            while(k <= len && arr[k]\
    \ === arr[j]){\n                k++;\n            }\n            if(k > j){\n\
    \                ret[j] = ret[k - 1];\n            }\n        }\n    }\n    return\
    \ ret;\n}\n", "    var len = arr.length;\n    var ret = new Array(len);\n    var\
    \ cnt = 0;\n    for(var i = 0; i < len; i++){\n        var cur = arr[i];\n   \
    \     var cur_cnt = 1;\n        for(var j = i + 1; j < len; j++){\n          \
    \  if(arr[j] == cur){\n                cur_cnt++;\n            }\n        }\n\
    \        ret[cnt++] = cur;\n        if(cur_cnt > 1){\n            var tmp_cnt\
    \ = cur_cnt;\n            cur_cnt = 1;\n            for(var j = i + 1; j < len;\
    \ j++){\n                if(arr[j] == cur){\n                    cur_cnt++;\n\
    \                }\n            }\n            if(cur_cnt > tmp_cnt){\n      \
    \          ret[cnt++] = cur;\n            }\n        }\n    }\n    return ret;\n\
    }\n", "    var len = arr.length;\n    var ret = new Array(len);\n    var i, j,\
    \ k;\n    for(i = 0; i < len; i++){\n        ret[i] = arr[i];\n    }\n    for(i\
    \ = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n            k =\
    \ ret[j];\n            if(arr[i] > k){\n                ret[j] = arr[i];\n   \
    \             ret[i] = k;\n            }\n        }\n    }\n    return ret;\n}",
  "    arr.sort(function(a, b){\n        var c = count_ones(a) - count_ones(b);\n\
    \        if(c !== 0){\n            return c;\n        }\n        return a - b;\n\
    \    });\n    return arr;\n}\n", "    var len = arr.length;\n    var ret = new\
    \ Array(len);\n    var flag = 0;\n    for(var i = 0; i < len; i++){\n        flag\
    \ = 0;\n        for(var j = 0; j < len; j++){\n            if((arr[j] & flag)\
    \ == flag){\n                ret[i] = arr[j];\n                flag = 1;\n   \
    \             break;\n            }\n        }\n        if(flag == 0){\n     \
    \       ret[i] = arr[i];\n        }\n    }\n    return ret;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n\
    \        var a_ones_comp = a_ones - b_ones;\n        var b_ones_comp = b_ones\
    \ - a_ones;\n        if(a_ones_comp != 0){\n            return a_ones_comp;\n\
    \        }\n        if(b_ones_comp != 0){\n            return b_ones_comp;\n \
    \       }\n        return a - b;\n    });\n    return arr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n\
    \        var a_ones_comp = a_ones - b_ones;\n        var b_ones_comp = b_ones\
    \ - a_ones;\n        if(a_ones_comp > b_ones_comp){\n            return 1;\n \
    \       }else if(a_ones_comp < b_ones_comp){\n            return -1;\n       \
    \ }else{\n            return 0;\n        }\n    });\n    return arr;\n}\n", " \
    \   var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i =\
    \ 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j-1] > arr[j]){\n\
    \            k = j-1;\n            while(arr[k] > arr[k+1]){\n               \
    \ k++;\n            }\n            if(k != j){\n                arr[j] = arr[k];\n\
    \                j = k;\n            }\n        }\n        arr[j] = arr[i];\n\
    \    }\n    for(i = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n  \
    \  return sorted;\n}\n", "    var len = arr.length;\n    var sorted = [];\n  \
    \  var i, j, tmp;\n    for(i = 0; i < len; i++){\n        tmp = arr[i];\n    \
    \    for(j = i - 1; j >= 0; j--){\n            if(tmp & 1){\n                tmp\
    \ = arr[j];\n                arr[j] = tmp;\n                arr[i] = tmp;\n  \
    \              break;\n            }\n        }\n        sorted.push(tmp);\n \
    \   }\n    return sorted;\n}\n", "    var len = arr.length;\n    var temp = 0;\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var tempArr = [];\n    var\
    \ tempArr2 = [];\n    while(i < len){\n        j = i;\n        while(j < len){\n\
    \            if(arr[j] % 2 == 1){\n                tempArr2.push(arr[j]);\n  \
    \              j++;\n            }else{\n                temp++;\n           \
    \     j++;\n            }\n        }\n        while(temp > 0){\n            tempArr2.push(temp);\n\
    \            temp--;\n        }\n        temp = 0;\n        while(j < len){\n\
    \            if(arr[j] % 2 == 1){\n                tempArr2.push(arr[j]);\n  \
    \              j++;\n            }else{\n                temp++;\n           \
    \     j++;\n            }\n        }\n        while(temp > 0){\n            tempArr2.push(temp);\n\
    \            temp--;\n        }\n        tempArr2.push(arr[i]);\n        tempArr2.push(arr[i\
    \ + 1]);\n        i++;\n        len = tempArr2.length;\n    }\n    while(tempArr2.length\
    \ > 0){\n        tempArr.push(tempArr2.pop());\n    }\n    return tempArr;\n}\n",
  "    arr.sort(function(a, b){\n        return a-b;\n    });\n}\n", "    var len\
    \ = arr.length;\n    var max = 0;\n    var min = 0;\n    var mid = 0;\n    var\
    \ swap;\n    var tmp;\n    var tmp2;\n    for(var i=0; i<len; i++){\n        max\
    \ = Math.max(max, arr[i]);\n        min = Math.min(min, arr[i]);\n    }\n    while(min\
    \ < max){\n        mid = Math.floor((min+max)/2);\n        swap = arr[mid];\n\
    \        arr[mid] = arr[min];\n        arr[min] = swap;\n        min = mid+1;\n\
    \        max = mid-1;\n        for(var i=0; i<len; i++){\n            tmp = arr[i];\n\
    \            tmp2 = arr[i+1];\n            if(tmp == 0){\n                arr[i]\
    \ = tmp2;\n                arr[i+1] = 0;\n            }else if(tmp == 1){\n  \
    \              arr[i] = 0;\n                arr[i+1] = tmp2;\n            }\n\
    \        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n    for(var\
    \ i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n            if(arr[j]\
    \ < arr[i]){\n                var temp = arr[i];\n                arr[i] = arr[j];\n\
    \                arr[j] = temp;\n            }\n        }\n    }\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var sorted_arr = [];\n    var i, j, k;\n\
    \    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n          \
    \  if((i === j) || (arr[j] > arr[j + 1])){\n                k = j;\n         \
    \       while(k !== i){\n                    sorted_arr.push(arr[k]);\n      \
    \              k = k - 1;\n                }\n                sorted_arr.push(arr[i]);\n\
    \                break;\n            }\n        }\n    }\n    return sorted_arr;\n\
    }\n", "    var len = arr.length;\n    var sorted = new Array(len);\n    var i,\
    \ j, k;\n    for(i = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n \
    \   for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n       \
    \     if(arr[i] == arr[j]){\n                k = j;\n                while(arr[k]\
    \ == arr[j]){\n                    k++;\n                }\n                arr[k]\
    \ = arr[i];\n                arr[i] = k;\n            }\n        }\n    }\n  \
    \  return sorted;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>", " \
    \ arr.sort(function(a, b){\n    var a_bin = a.toString(2);\n    var b_bin = b.toString(2);\n\
    \    var a_ones = a_bin.split('1').length - 1;\n    var b_ones = b_bin.split('1').length\
    \ - 1;\n    if(a_ones < b_ones){\n      return -1;\n    }\n    if(a_ones > b_ones){\n\
    \      return 1;\n    }\n    var a_num = parseInt(a_bin, 2);\n    var b_num =\
    \ parseInt(b_bin, 2);\n    if(a_num < b_num){\n      return -1;\n    }\n    if(a_num\
    \ > b_num){\n      return 1;\n    }\n    return 0;\n  });\n  return arr;\n}\n",
  "    var len = arr.length;\n    var swapped;\n    var sorted;\n    var i;\n    var\
    \ j;\n    var temp;\n    var swap;\n    var swapped;\n    var swapCount;\n   \
    \ var oneCount;\n    var twoCount;\n    var threeCount;\n    var fourCount;\n\
    \    var fiveCount;\n    var sixCount;\n    var sevenCount;\n    var eightCount;\n\
    \    var nineCount;\n    var tenCount;\n    var elevenCount;\n    var twelveCount;\n\
    \    var thirteenCount;\n    var fourteenCount;\n    var fifteenCount;\n    var\
    \ sixteenCount;\n    var seventeenCount;\n    var eighteenCount;\n    var nineteenCount;\n\
    \    var twentyCount;\n    var twentyOneCount;\n    var thirtyCount;\n    var\
    \ thirtyOneCount;\n    var fortyCount;\n    var fortyOneCount;\n    var fiftyCount;\n\
    \    var fiftyOneCount;\n    var sixtyCount;\n    var sixtyOneCount;\n    var\
    \ seventyCount;\n    var seventyOneCount;\n    var eightyCount;\n    var eightyOneCount;\n\
    \    var ninetyCount;\n    var ninetyOneCount;\n    var hundredCount;\n    var\
    \ hundredOneCount;\n    var thousandCount;\n    var thousandOneCount;\n    var\
    \ millionCount;\n    var millionOneCount;\n    var billionCount;\n    var billionOneCount;\n\
    \    var trillionCount;\n    var trillionOneCount;\n    var quadrillionCount;\n\
    \    var quadrillionOneCount;\n    var quintillionCount;\n    var quintillionOneCount;\n\
    \    var sextillionCount;\n    var sextillionOneCount;\n    var septillionCount;\n\
    \    var septillionOneCount;\n    var octillionCount;\n    var octillionOneCount;\n\
    \    var nonillionCount;\n    var nonillionOneCount;\n    var decillionCount;\n\
    \    var decillionOneCount;\n    var undecillionCount;\n    var undecillionOneCount;\n\
    \    var duodecillionCount;\n    var duodecillionOneCount;\n    var tredecillionCount;\n\
    \    var tredecillionOneCount;\n    var quattuordecillionCount;", "    var len\
    \ = arr.length;\n    for(var i=0;i<len;i++){\n        var num = arr[i];\n    \
    \    if(num<0){\n            var temp = num;\n            num = -num;\n      \
    \      arr[i] = temp;\n        }\n    }\n    arr.sort(function(a,b){\n       \
    \ var aNum = parseInt(a,2);\n        var bNum = parseInt(b,2);\n        if(aNum==bNum){\n\
    \            return 0;\n        }\n        if(aNum>bNum){\n            return\
    \ 1;\n        }\n        return -1;\n    });\n    return arr;\n}\n", "    var\
    \ len = arr.length;\n    if(len < 2){\n        return arr;\n    }\n    var ones\
    \ = count_ones(arr);\n    var len = ones.length;\n    var max = 0;\n    var max_idx\
    \ = 0;\n    for(var i=0; i<len; i++){\n        if(ones[i] > max){\n          \
    \  max = ones[i];\n            max_idx = i;\n        }\n    }\n    arr.sort(function(a,\
    \ b){\n        var a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n\
    \        var a_ones_idx = a_ones.indexOf(max);\n        var b_ones_idx = b_ones.indexOf(max);\n\
    \        if(a_ones_idx > b_ones_idx){\n            return 1;\n        }\n    \
    \    if(a_ones_idx < b_ones_idx){\n            return -1;\n        }\n       \
    \ return 0;\n    });\n    return arr;\n}\n", "\tlet len = arr.length;\n\tlet sortArr\
    \ = new Array(len);\n\tlet oneCount = 0;\n\tlet decimalCount = 0;\n\tlet temp;\n\
    \tfor(let i = 0; i < len; i++){\n\t\toneCount = 0;\n\t\tdecimalCount = 0;\n\t\t\
    temp = arr[i];\n\t\twhile(temp > 0){\n\t\t\toneCount += temp & 1;\n\t\t\ttemp\
    \ = temp >> 1;\n\t\t}\n\t\tdecimalCount += oneCount;\n\t\tsortArr[i] = decimalCount;\n\
    \t}\n\tfor(let i = 0; i < len; i++){\n\t\tsortArr[i] = sortArr[i] * -1;\n\t}\n\
    \tfor(let i = 0; i < len; i++){\n\t\tsortArr[i] = sortArr[i] + arr[i];\n\t}\n\t\
    return sortArr.sort();\n}\n", "    arr.sort(function(a, b){\n        var a_bin\
    \ = bin(a);\n        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var b_ones = b_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var a_ones_count = a_ones.length;\n        var b_ones_count\
    \ = b_ones.length;\n        var a_ones_sum = 0;\n        var b_ones_sum = 0;\n\
    \        for(var i=0; i<a_ones_count; i++){\n            a_ones_sum += a_ones[i];\n\
    \        }\n        for(var i=0; i<b_ones_count; i++){\n            b_ones_sum\
    \ += b_ones[i];\n        }\n        if(a_ones_count > b_ones_count){\n       \
    \     return a_ones_sum - b_ones_sum;\n        }\n        else{\n            return\
    \ b_ones_sum - a_ones_sum;\n        }\n    });\n    return arr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.split('').filter(function(x){return x=='1';});\n        var b_ones =\
    \ b_bin.split('').filter(function(x){return x=='1';});\n        var a_ones_len\
    \ = a_ones.length;\n        var b_ones_len = b_ones.length;\n        var a_ones_sum\
    \ = a_ones.reduce(function(a, b){return a+b;});\n        var b_ones_sum = b_ones.reduce(function(a,\
    \ b){return a+b;});\n        var a_ones_avg = a_ones_sum/a_ones_len;\n       \
    \ var b_ones_avg = b_ones_sum/b_ones_len;\n        var a_ones_decimal = a_ones_sum/Math.pow(2,\
    \ a_ones_len);\n        var b_ones_decimal = b_ones_sum/Math.pow(2, b_ones_len);\n\
    \        if(a_ones_len == b_ones_len){\n            return a_ones_decimal - b_ones_decimal;\n\
    \        }\n        return a_ones_avg - b_ones_avg;\n    });\n    return arr;\n\
    }\n", "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n        var\
    \ b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x=='1';});\n        var b_ones = b_bin.split('').filter(function(x){return x=='1';});\n\
    \        var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_count = a_ones_len/2;\n        var b_ones_count = b_ones_len/2;\n\
    \        var a_ones_decimal = a_ones_len%2;\n        var b_ones_decimal = b_ones_len%2;\n\
    \        if(a_ones_count < b_ones_count){\n            return -1;\n        }else\
    \ if(a_ones_count > b_ones_count){\n            return 1;\n        }else{\n  \
    \          if(a_ones_decimal < b_ones_decimal){\n                return -1;\n\
    \            }else if(a_ones_decimal > b_ones_decimal){\n                return\
    \ 1;\n            }else{\n                return 0;\n            }\n        }\n\
    \    });\n    return arr;\n}\n", "    var len = arr.length;\n    if(len < 2){\n\
    \        return arr;\n    }\n    var ones = arr.reduce(function(p, c, i){\n  \
    \      return p + (c & 1);\n    }, 0);\n    var tens = arr.reduce(function(p,\
    \ c, i){\n        return p + (c & 2);\n    }, 0);\n    var hundreds = arr.reduce(function(p,\
    \ c, i){\n        return p + (c & 4);\n    }, 0);\n    var thousands = arr.reduce(function(p,\
    \ c, i){\n        return p + (c & 8);\n    }, 0);\n    var tenths = arr.reduce(function(p,\
    \ c, i){\n        return p + (c & 16);\n    }, 0);\n    var oneths = arr.reduce(function(p,\
    \ c, i){\n        return p + (c & 32);\n    }, 0);\n    var tenths_ones = arr.reduce(function(p,\
    \ c, i){\n        return p + (c & 64);\n    }, 0);\n    var hundredths = arr.reduce(function(p,\
    \ c, i){\n        return p + (c & 128);\n    }, 0);\n    var thousandths = arr.reduce(function(p,\
    \ c, i){\n        return p + (c & 256);\n    }, 0);\n    var hundredths_ones =\
    \ arr.reduce(function(p, c, i){\n        return p + (c & 512);\n    }, 0);\n \
    \   var thousandths_ones = arr.reduce(function(p, c, i){\n        return p + (c\
    \ & 1024);\n    }, 0);\n    var hundredths_tens = arr.reduce(function(p, c, i){\n\
    \        return p + (c & 2048);\n    }, 0);\n    var thousandths_tens = arr.reduce(function(p,\
    \ c, i){\n        return p + (c & 4096);\n    }, 0);\n    var hundredths_hundreds\
    \ = arr.reduce(function(p, c, i){\n        return p + (c & 8192);\n    }, 0);\n\
    \    var thousandths_hundreds = arr.reduce(function(p, c, i){\n        return\
    \ p + (c & 16384);\n    }, 0);\n    var hundredths_thousands = arr.reduce(function(p,\
    \ c, i){\n        return p + (c & 32768);\n    }, 0);\n    var thousandths_thousands\
    \ = arr.reduce(function(p, c, i){\n        return p + (c & 65536);\n    }, 0);\n\
    \    var hundredths_thousands_ones = arr.reduce(function(p, c, i){\n        return\
    \ p + (c & 131072);\n    }, 0);\n    var thousandths_thousands_ones = arr.reduce(function(p,\
    \ c, i){\n        return p + (c & 262144);\n", "    var len = arr.length;\n  \
    \  var swapped;\n    var sorted;\n    var i;\n    var j;\n    var temp;\n    \n\
    \    sorted = [];\n    \n    for(i = 0; i < len; i++){\n        swapped = false;\n\
    \        for(j = 0; j < len; j++){\n            if(arr[j] > arr[j + 1]){\n   \
    \             temp = arr[j];\n                arr[j] = arr[j + 1];\n         \
    \       arr[j + 1] = temp;\n                swapped = true;\n            }\n \
    \       }\n        if(!swapped){\n            sorted.push(arr[i]);\n        }\n\
    \    }\n    \n    return sorted;\n}\n", "    var len = arr.length;\n    for(var\
    \ i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n            if(arr[j]\
    \ == 0){\n                arr.splice(j,1);\n                len--;\n         \
    \       j--;\n            }\n        }\n    }\n    for(var i=0; i<len; i++){\n\
    \        for(var j=0; j<len; j++){\n            if(arr[j] == 1){\n           \
    \     arr.splice(j,1);\n                len--;\n                j--;\n       \
    \     }\n        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var ret = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        ret[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            k = ret[j];\n            if(arr[i] > k){\n\
    \                ret[j] = arr[i];\n                ret[i] = k;\n            }\n\
    \        }\n    }\n    return ret;\n}\n", "    var len = arr.length;\n    var\
    \ sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j =\
    \ i + 1; j < len; j++){\n            if(arr[i] == arr[j]){\n                sorted[i]++;\n\
    \                sorted[j]--;\n            }\n        }\n    }\n    for(i = 0;\
    \ i < len; i++){\n        for(k = i + 1; k < len; k++){\n            if(arr[i]\
    \ > arr[k]){\n                sorted[i]--;\n                sorted[k]++;\n   \
    \         }\n        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n\
    \    var ret = [];\n    var tmp = [];\n    var i;\n    for(i = 0; i < len; i++){\n\
    \        if(arr[i] > 0){\n            tmp.push(arr[i]);\n        }\n    }\n  \
    \  for(i = 0; i < len; i++){\n        if(arr[i] > 0){\n            ret.push(tmp[tmp.indexOf(arr[i])]);\n\
    \        }\n    }\n    return ret;\n}\n", "\tarr.sort(function(a, b){\n\t\tif(a>b){\n\
    \t\t\treturn 1;\n\t\t}else if(a<b){\n\t\t\treturn -1;\n\t\t}else{\n\t\t\treturn\
    \ 0;\n\t\t}\n\t});\n\treturn arr;\n}\n", "    var len = arr.length;\n    var temp\
    \ = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var tempArr = [];\n\
    \    while(i < len){\n        while(j < len){\n            if(arr[j] == 1){\n\
    \                tempArr[k] = arr[j];\n                j++;\n                k++;\n\
    \            }else{\n                break;\n            }\n        }\n      \
    \  while(j < len){\n            if(arr[j] == 0){\n                tempArr[k] =\
    \ arr[j];\n                j++;\n                k++;\n            }else{\n  \
    \              break;\n            }\n        }\n        while(j < len){\n   \
    \         if(arr[j] == 1){\n                tempArr[k] = arr[j];\n           \
    \     j++;\n                k++;\n            }else{\n                break;\n\
    \            }\n        }\n        while(j < len){\n            if(arr[j] == 0){\n\
    \                tempArr[k] = arr[j];\n                j++;\n                k++;\n\
    \            }else{\n                break;\n            }\n        }\n      \
    \  while(j < len){\n            if(arr[j] == 1){\n                tempArr[k] =\
    \ arr[j];\n                j++;\n                k++;\n            }else{\n  \
    \              break;\n            }\n        }\n        while(j < len){\n   \
    \         if(arr[j] == 0){\n                tempArr[k] = arr[j];\n           \
    \     j++;\n                k++;\n            }else{\n                break;\n\
    \            }\n        }\n        while(j < len){\n            if(arr[j] == 1){\n\
    \                tempArr[k] = arr[j];\n                j++;\n                k++;\n\
    \            }else{\n                break;\n            }\n        }\n      \
    \  while(j < len){\n            if(arr[j] == 0){\n                tempArr[k] =\
    \ arr[j];\n                j++;\n                k++;\n            }else{\n  \
    \              break;\n            }\n        }\n        while(j < len){\n   \
    \         if(arr[j] == 1){\n                tempArr[k] = arr[j];\n           \
    \     j++;\n                k++;\n            }else{\n                break;\n\
    \            }\n        }\n        while(j < len){\n            if(arr[j] == 0){\n\
    \                tempArr[k] = arr[j];\n                j++;\n                k++;\n\
    \            }else{\n                break;\n            }\n        }\n      \
    \  while(j < len){\n            if(arr[j] == 1){\n                tempArr[k] =\
    \ arr[j];\n                j++;\n                k++;\n            }else{\n  \
    \              break;\n            }\n        }\n        while(j < len){\n   \
    \         if(arr[j] == 0){\n                tempArr[k] = arr[j];\n           \
    \     j++;\n                k++;\n            }else{\n                break;\n\
    \            }\n        }\n        while(j < len){\n            if(arr[j] == 1){\n\
    \                tempArr[k] = arr[j];\n                j++;\n", "    var len =\
    \ arr.length;\n    var temp = new Array(len);\n    var i;\n    for(i = 0; i <\
    \ len; i++){\n        temp[i] = 0;\n    }\n    for(i = 0; i < len; i++){\n   \
    \     temp[arr[i]] += 1;\n    }\n    for(i = 0; i < len; i++){\n        if(temp[i]\
    \ > 1){\n            var t = arr[i];\n            arr[i] = arr[temp[i]];\n   \
    \         arr[temp[i]] = t;\n        }\n    }\n    return arr;\n}\n", "    var\
    \ len = arr.length;\n    var ret = new Array(len);\n    var cnt = 0;\n    for(var\
    \ i = 0; i < len; i++){\n        var cur = arr[i];\n        var cur_cnt = 1;\n\
    \        for(var j = i + 1; j < len; j++){\n            if(arr[j] == cur){\n \
    \               cur_cnt++;\n            }\n        }\n        ret[cnt++] = cur;\n\
    \        if(cur_cnt > 1){\n            ret[cnt++] = cur_cnt.toString(10);\n  \
    \      }\n    }\n    return ret;\n}\n", "    var len = arr.length;\n    var sorted\
    \ = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        j = i;\n   \
    \     while(j > 0 && arr[j - 1] > arr[j]){\n            k = j;\n            while(k\
    \ >= 0 && arr[k - 1] > arr[k]){\n                arr[k] = arr[k - 1];\n      \
    \          k--;\n            }\n            arr[k] = arr[j];\n            j--;\n\
    \        }\n        arr[j] = arr[i];\n    }\n    return arr;\n}\n", "    var len\
    \ = arr.length;\n    var temp = 0;\n    var i = 0;\n    while(i < len){\n    \
    \    while(arr[i] === 0){\n            i++;\n        }\n        temp = arr[i];\n\
    \        arr[i] = arr[i-1];\n        arr[i-1] = temp;\n        i++;\n    }\n \
    \   return arr;\n}\n", "    var len = arr.length;\n    var temp = 0;\n    var\
    \ i = 0;\n    var j = 0;\n    var k = 0;\n    var tempArr = [];\n    while(i <\
    \ len){\n        j = i;\n        while(j > 0 && arr[j - 1] > arr[j]){\n      \
    \      temp = arr[j - 1];\n            arr[j - 1] = arr[j];\n            arr[j]\
    \ = temp;\n            j--;\n        }\n        i++;\n    }\n    while(j < len){\n\
    \        temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n\
    \        j++;\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len;\
    \ j++){\n            if(arr[j] > arr[j + 1]){\n                temp = arr[j];\n\
    \                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n  \
    \          }\n        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var ret = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            k = arr[i] * arr[j];\n            if(k\
    \ > 0){\n                ret.push(arr[i]);\n                ret.push(arr[j]);\n\
    \                ret.push(k);\n            }\n        }\n    }\n    return ret;\n\
    }\n", "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n        var\
    \ b_bin = bin(b);\n        var a_len = a_bin.length;\n        var b_len = b_bin.length;\n\
    \        var a_ones = a_bin.substr(a_len-1);\n        var b_ones = b_bin.substr(b_len-1);\n\
    \        var a_ones_num = parseInt(a_ones, 2);\n        var b_ones_num = parseInt(b_ones,\
    \ 2);\n        var a_num = a_ones_num + b_ones_num;\n        var b_num = b_ones_num\
    \ - a_ones_num;\n        if(a_num === b_num){\n            return a - b;\n   \
    \     }\n        return a_num - b_num;\n    });\n    return arr;\n}\n</code>\n\
    <|/ a tags=javascript,sorting |>\n<| a tags=javascript,sorting |>\n<code>", " \
    \   arr.sort(function(a, b){\n        var a_ones = parseInt(a.toString(2), 2);\n\
    \        var b_ones = parseInt(b.toString(2), 2);\n        return a_ones - b_ones;\n\
    \    });\n    return arr;\n}\n", "    var len = arr.length;\n    var sorted =\
    \ [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        sorted.push(arr[i]);\n\
    \    }\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n\
    \            k = j;\n            while(k >= 0 && arr[k - 1] > arr[k]){\n     \
    \           arr[k] = arr[k - 1];\n                k--;\n            }\n      \
    \      arr[k] = arr[j];\n        }\n    }\n    return sorted;\n}\n", "    var\
    \ len = arr.length;\n    var ret = new Array(len);\n    var i, j, k;\n    for(i\
    \ = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j-1] > arr[j]){\n\
    \            k = j;\n            while(k >0 && arr[k-1] > arr[k]){\n         \
    \       arr[k] = arr[k-1];\n                k--;\n            }\n            arr[k]\
    \ = arr[j];\n            j--;\n        }\n        ret[i] = arr[j];\n    }\n  \
    \  return ret;\n}\n", "    var len = arr.length;\n    var sorted = [];\n    var\
    \ tmp;\n    var i = 0;\n    while(i < len){\n        tmp = arr[i];\n        while(i\
    \ < len && tmp === arr[i]){\n            i++;\n        }\n        sorted.push(tmp);\n\
    \    }\n    return sorted;\n}\n", "    var len = arr.length;\n    var sortArr\
    \ = new Array(len);\n    var flag = new Array(len);\n    var temp = new Array(len);\n\
    \    var i;\n    for(i = 0; i < len; i++){\n        sortArr[i] = arr[i];\n   \
    \     flag[i] = 0;\n    }\n    for(i = 0; i < len; i++){\n        while(flag[i]\
    \ === 0){\n            flag[i] = 1;\n            for(i = i-1; i >= 0; i--){\n\
    \                if(flag[i] === 1){\n                    temp[i] = sortArr[i];\n\
    \                    sortArr[i] = sortArr[i+1];\n                    sortArr[i+1]\
    \ = temp[i];\n                    flag[i] = 0;\n                }\n          \
    \  }\n        }\n    }\n    return sortArr;\n}\n", "    var len = arr.length;\n\
    \    var max = 0;\n    var min = 0;\n    var mid = 0;\n    var temp = 0;\n   \
    \ var swap = 0;\n    for(var i = 0; i < len; i++){\n        max = Math.max(max,\
    \ arr[i]);\n        min = Math.min(min, arr[i]);\n        mid = Math.floor((max\
    \ + min) / 2);\n        temp = arr[mid];\n        arr[mid] = arr[i];\n       \
    \ arr[i] = temp;\n    }\n    for(var i = 0; i < len; i++){\n        arr[len] =\
    \ arr[len].toString();\n    }\n    len = arr.length;\n    for(var i = 0; i < len;\
    \ i++){\n        arr[len] = parseInt(arr[len], 2);\n    }\n    len = arr.length;\n\
    \    for(var i = 0; i < len; i++){\n        arr[len] = arr[len].toString();\n\
    \    }\n    len = arr.length;\n    for(var i = 0; i < len; i++){\n        arr[len]\
    \ = parseInt(arr[len], 10);\n    }\n    len = arr.length;\n    for(var i = 0;\
    \ i < len; i++){\n        arr[len] = arr[len].toString();\n    }\n    len = arr.length;\n\
    \    for(var i = 0; i < len; i++){\n        arr[len] = arr[len].toString();\n\
    \    }\n    len = arr.length;\n    for(var i = 0; i < len; i++){\n        arr[len]\
    \ = arr[len].toString();\n    }\n    len = arr.length;\n    for(var i = 0; i <\
    \ len; i++){\n        arr[len] = arr[len].toString();\n    }\n    len = arr.length;\n\
    \    for(var i = 0; i < len; i++){\n        arr[len] = arr[len].toString();\n\
    \    }\n    len = arr.length;\n    for(var i = 0; i < len; i++){\n        arr[len]\
    \ = arr[len].toString();\n    }\n    len = arr.length;\n    for(var i = 0; i <\
    \ len; i++){\n        arr[len] = arr[len].toString();\n    }\n    len = arr.length;\n\
    \    for(var i = 0; i < len; i++){\n        arr[len] = arr[len].toString();\n\
    \    }\n    len = arr.length;\n    for(var i = 0; i < len; i++){\n        arr[len]\
    \ = arr[len].toString();\n    }\n    len = arr.length;\n    for(var i = 0; i <\
    \ len; i++){\n        arr[len] = arr[len].toString();\n    }\n    len = arr.length;\n\
    \    for(var i = 0; i < len; i++){\n        arr[len] = arr[len].toString();\n\
    \    }\n    len = arr.length;\n    for(var i = 0; i < len; i++){\n        arr[len]\
    \ = arr[len].toString();\n    }\n    len = arr.length;\n    for(var i = 0; i <\
    \ len; i++){\n        arr[len] = arr[len].toString();\n    }\n    len = arr.length;\n\
    \    for(var i = 0; i < len; i++){\n        arr[len] = arr[len].toString();\n\
    \    }\n    len = arr.length;\n    for(var i = 0; i < len; i++){\n        arr[len]\
    \ = arr[len].toString();\n    }", "    var len = arr.length;\n    if(len < 2){\n\
    \        return arr;\n    }\n    var ones = count_ones(arr);\n    var len = ones.length;\n\
    \    var sorted_arr = [];\n    for(var i=0; i<len; i++){\n        sorted_arr.push(arr[i]);\n\
    \    }\n    for(var i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n   \
    \         if(arr[j] == ones[i]){\n                sorted_arr.push(arr[j]);\n \
    \               arr.splice(j, 1);\n                len--;\n            }\n   \
    \     }\n    }\n    return sorted_arr;\n}\n", "\tlet result = [];\n\tlet ones\
    \ = 0;\n\tlet decimal = 0;\n\tfor(let i = 0; i < arr.length; i++){\n\t\tones +=\
    \ arr[i];\n\t\tdecimal += arr[i] * Math.pow(2,i);\n\t}\n\tfor(let i = 0; i < arr.length;\
    \ i++){\n\t\tresult.push(arr[i]);\n\t\tif(ones > decimal){\n\t\t\tresult.push(arr[i]\
    \ * Math.pow(2,i));\n\t\t\tones = decimal;\n\t\t}\n\t\tdecimal = 0;\n\t}\n\treturn\
    \ result;\n}\n", "    var len = arr.length;\n    if(len < 2){\n        return\
    \ arr;\n    }\n    var ones = arr.reduce(function(p, c, i){\n        return p\
    \ + (c & 1);\n    }, 0);\n    var tens = arr.reduce(function(p, c, i){\n     \
    \   return p + (c >> 1);\n    }, 0);\n    var tensLen = tens / 10;\n    var tensRem\
    \ = tens % 10;\n    var onesLen = ones / 10;\n    var onesRem = ones % 10;\n \
    \   var arr2 = [];\n    for(var i = 0; i <= len; i++){\n        var onesCount\
    \ = 0;\n        var tensCount = 0;\n        for(var j = 0; j < len; j++){\n  \
    \          if(i == j){\n                arr2.push(arr[j]);\n                continue;\n\
    \            }\n            var c = arr[j];\n            if((c & 1) == 1){\n \
    \               onesCount++;\n            }else{\n                tensCount++;\n\
    \            }\n        }\n        if(onesCount > onesLen){\n            arr2.push(arr[i]);\n\
    \        }else if(tensCount > tensLen){\n            arr2.push(arr[i]);\n    \
    \    }else if(onesCount < onesLen && tensCount < tensLen){\n            arr2.push(arr[i]);\n\
    \        }\n    }\n    return arr2;\n}\n", "    var len = arr.length;\n    var\
    \ sorted = new Array(len);\n    var i;\n    for(i = 0; i < len; i++){\n      \
    \  var count = 0;\n        for(var j = 0; j < len; j++){\n            if(arr[j]\
    \ == i){\n                count++;\n            }\n        }\n        sorted[i]\
    \ = count;\n    }\n    for(i = 0; i < len; i++){\n        sorted[i] = i;\n   \
    \ }\n    sorted = sorted.sort(function(a, b){\n        return sorted[b] - sorted[a];\n\
    \    });\n    for(i = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n\
    \    return sorted;\n}\n", "    var len = arr.length;\n    var max = 0;\n    var\
    \ min = 0;\n    var tmp;\n    var i = 0;\n    var j = 0;\n    while(i < len){\n\
    \        tmp = arr[i];\n        while(j < len){\n            if(tmp > arr[j]){\n\
    \                max = tmp;\n                j = j + 1;\n            }else{\n\
    \                if(tmp < arr[j]){\n                    min = tmp;\n         \
    \           j = j + 1;\n                }else{\n                    if(tmp ==\
    \ arr[j]){\n                        j = j + 1;\n                    }\n      \
    \          }\n            }\n        }\n        arr[i] = min;\n        i = i +\
    \ 1;\n    }\n    return arr;\n}\n</code>\n<|/ a tags=javascript,sorting |>\n<|\
    \ a dscore=0 |>\n<code>", "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n\
    \        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var b_ones = b_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var a_ones_len = a_ones.length;\n        var b_ones_len\
    \ = b_ones.length;\n        var a_ones_sum = a_ones.reduce((a, b) => a + b, 0);\n\
    \        var b_ones_sum = b_ones.reduce((a, b) => a + b, 0);\n        var a_ones_decimal\
    \ = a_ones_sum / a_ones_len;\n        var b_ones_decimal = b_ones_sum / b_ones_len;\n\
    \        return a_ones_decimal - b_ones_decimal;\n    });\n    return arr;\n}\n",
  "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i =\
    \ 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n            k = arr[i]\
    \ * arr[j];\n            if(k <= 0){\n                k = k + arr[j];\n      \
    \          arr[j] = arr[i];\n                arr[i] = k;\n            }\n    \
    \    }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n    var sorted\
    \ = new Array(len);\n    for(var i = 0; i < len; i++){\n        sorted[i] = i;\n\
    \    }\n    sorted.sort(function(a, b){\n        var a_bin = bin(a);\n       \
    \ var b_bin = bin(b);\n        var a_ones = a_bin.substr(a_bin.length - 1);\n\
    \        var b_ones = b_bin.substr(b_bin.length - 1);\n        var a_ones_num\
    \ = parseInt(a_ones, 2);\n        var b_ones_num = parseInt(b_ones, 2);\n    \
    \    if(a_ones_num === b_ones_num){\n            return a - b;\n        }\n  \
    \      return a_ones_num - b_ones_num;\n    });\n    for(var i = 0; i < len; i++){\n\
    \        sorted[i] = arr[i];\n    }\n    return sorted;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_bin = bin(a),\n            b_bin = bin(b);\n        if(a_bin\
    \ == b_bin){\n            return a - b;\n        }\n        return a_bin > b_bin\
    \ ? 1 : -1;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n    var\
    \ ret = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j =\
    \ i + 1; j < len; j++){\n            k = arr[i]*arr[j];\n            if(k !==\
    \ 0){\n                ret.push(k);\n            }\n        }\n    }\n    return\
    \ ret;\n}\n", "  var len = arr.length;\n  var sorted = new Array(len);\n  for(var\
    \ i=0; i<len; i++){\n    sorted[i] = i;\n  }\n  sorted.sort(function(a, b){\n\
    \    var a_bin = bin(a);\n    var b_bin = bin(b);\n    var a_ones = a_bin.substr(a_bin.length-4);\n\
    \    var b_ones = b_bin.substr(b_bin.length-4);\n    var a_dec = parseInt(a_ones,\
    \ 2);\n    var b_dec = parseInt(b_ones, 2);\n    return a_dec - b_dec;\n  });\n\
    \  for(var i=0; i<len; i++){\n    sorted[i] = arr[i];\n  }\n  return sorted;\n\
    }\n", "    var len = arr.length;\n    var max = 0;\n    var min = 0;\n    var\
    \ mid = 0;\n    var temp = 0;\n    var swap = 0;\n    for(var i = 0; i < len;\
    \ i++){\n        temp = arr[i];\n        max = temp > max ? temp : max;\n    \
    \    min = temp < min ? temp : min;\n        mid = max - (max - min) / 2;\n  \
    \      swap = arr[mid] > temp ? 1 : 0;\n        arr[mid] = temp;\n        arr[swap]\
    \ = arr[swap] > temp ? swap : arr[swap];\n    }\n    return arr;\n}\n", "    var\
    \ len = arr.length;\n    var sorted = new Array(len);\n    var i, j, k;\n    for(i\
    \ = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = i + 1; j < len; j++){\n            if(sorted[j]\
    \ < sorted[i]){\n                k = sorted[i];\n                sorted[i] = sorted[j];\n\
    \                sorted[j] = k;\n            }\n        }\n    }\n    return sorted;\n\
    }\n", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n   \
    \     var b_ones = count_ones(b);\n        var a_ones_num = a_ones * Math.pow(2,\
    \ a.length - 1);\n        var b_ones_num = b_ones * Math.pow(2, b.length - 1);\n\
    \        var a_ones_decimal = a_ones_num / Math.pow(2, a.length);\n        var\
    \ b_ones_decimal = b_ones_num / Math.pow(2, b.length);\n        var a_ones_decimal\
    \ = Math.floor(a_ones_decimal);\n        var b_ones_decimal = Math.floor(b_ones_decimal);\n\
    \        if (a_ones_decimal > b_ones_decimal){\n            return 1;\n      \
    \  }\n        if (a_ones_decimal < b_ones_decimal){\n            return -1;\n\
    \        }\n        if (a_ones_decimal == b_ones_decimal){\n            return\
    \ 0;\n        }\n        return 0;\n    });\n    return arr;\n}\n", "    var len\
    \ = arr.length;\n    var temp = [];\n    var temp2 = [];\n    var temp3 = [];\n\
    \    var temp4 = [];\n    var temp5 = [];\n    var temp6 = [];\n    var temp7\
    \ = [];\n    var temp8 = [];\n    var temp9 = [];\n    var temp10 = [];\n    var\
    \ temp11 = [];\n    var temp12 = [];\n    var temp13 = [];\n    var temp14 = [];\n\
    \    var temp15 = [];\n    var temp16 = [];\n    var temp17 = [];\n    var temp18\
    \ = [];\n    var temp19 = [];\n    var temp20 = [];\n    var temp21 = [];\n  \
    \  var temp22 = [];\n    var temp23 = [];\n    var temp24 = [];\n    var temp25\
    \ = [];\n    var temp26 = [];\n    var temp27 = [];\n    var temp28 = [];\n  \
    \  var temp29 = [];\n    var temp30 = [];\n    var temp31 = [];\n    var temp32\
    \ = [];\n    var temp33 = [];\n    var temp34 = [];\n    var temp35 = [];\n  \
    \  var temp36 = [];\n    var temp37 = [];\n    var temp38 = [];\n    var temp39\
    \ = [];\n    var temp40 = [];\n    var temp41 = [];\n    var temp42 = [];\n  \
    \  var temp43 = [];\n    var temp44 = [];\n    var temp45 = [];\n    var temp46\
    \ = [];\n    var temp47 = [];\n    var temp48 = [];\n    var temp49 = [];\n  \
    \  var temp50 = [];\n    var temp51 = [];\n    var temp52 = [];\n    var temp53\
    \ = [];\n    var temp54 = [];\n    var temp55 = [];\n    var temp56 = [];\n  \
    \  var temp57 = [];\n    var temp58 = [];\n    var temp59 = [];\n    var temp60\
    \ = [];\n    var temp61 = [];\n    var temp62 = [];\n    var temp63 = [];\n  \
    \  var temp64 = [];\n    var temp65 = [];\n    var temp66 = [];\n    var temp67\
    \ = [];\n    var temp68 = [];\n    var temp69 = [];\n    var temp70 = [];\n  \
    \  var temp71 = [];\n    var temp72 = [];\n    var temp73 = [];\n    var temp74\
    \ = [];\n    var temp75 = [];\n    var temp76 = [];\n    var temp77 = [];\n  \
    \  var temp78 = [];\n    var temp79 = [];\n    var temp80 = [];\n    var temp81\
    \ = [];\n    var temp82 = [];\n    var temp83 = [];\n    var temp84 = [];\n  \
    \  var temp85 = [];\n    var temp86 = [];\n    var temp87 = [];\n    var temp88\
    \ = [];\n    var temp89 = [];\n    var temp90 = [];\n    var temp91 = [];\n  \
    \  var temp92 = [];\n    var temp93 = [];\n    var temp94 = [];\n    var temp95\
    \ = [];\n    var temp96 = [];\n    var temp97", "  var len = arr.length;\n  if(len\
    \ < 2){\n    return arr;\n  }\n  var ones = count_ones(arr);\n  var dec = Math.pow(10,\
    \ Math.ceil(Math.log(ones) / Math.LN10));\n  var arr2 = arr.map(function(x){\n\
    \    return Math.round(x * dec) / dec;\n  });\n  arr2.sort(function(a, b){\n \
    \   return a - b;\n  });\n  return arr2.map(function(x){\n    return arr[x];\n\
    \  });\n}\n", "    var len = arr.length;\n    if(len < 2){\n        return arr;\n\
    \    }\n    var ones = [0];\n    var zeros = [0];\n    for(var i = 1; i < len;\
    \ i++){\n        if(arr[i] == 1){\n            ones.push(0);\n            zeros.push(0);\n\
    \        }else{\n            ones.push(1);\n            zeros.push(0);\n     \
    \   }\n    }\n    for(var i = 1; i < len; i++){\n        for(var j = 0; j < ones.length;\
    \ j++){\n            if(arr[i] > ones[j]*Math.pow(2,len-j)){\n               \
    \ ones[j] = 0;\n            }\n        }\n        for(var j = 0; j < zeros.length;\
    \ j++){\n            if(arr[i] < zeros[j]*Math.pow(2,len-j)){\n              \
    \  zeros[j] = 0;\n            }\n        }\n    }\n    return arr.concat(ones.concat(zeros));\n\
    }\n", "    var len = arr.length;\n    var sorted_arr = [];\n    var ones_arr =\
    \ [];\n    var zeros_arr = [];\n    var i;\n    for(i = 0; i < len; i++){\n  \
    \      if(arr[i] == 1){\n            ones_arr.push(i);\n        }else if(arr[i]\
    \ == 0){\n            zeros_arr.push(i);\n        }else{\n            sorted_arr.push(arr[i]);\n\
    \        }\n    }\n    for(i = 0; i < ones_arr.length; i++){\n        sorted_arr.push(ones_arr[i]);\n\
    \    }\n    for(i = 0; i < zeros_arr.length; i++){\n        sorted_arr.push(zeros_arr[i]);\n\
    \    }\n    return sorted_arr;\n}\n", "    var len = arr.length;\n    var sorted\
    \ = [];\n    var tmp = [];\n    var i;\n    var j;\n    for(i = 0; i < len; i++){\n\
    \        tmp.push(0);\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0;\
    \ j < len; j++){\n            if(arr[j] == arr[i]){\n                tmp[j] +=\
    \ 1;\n            }\n        }\n        for(j = 0; j < len; j++){\n          \
    \  if(tmp[j] > 0){\n                sorted.push(arr[j]);\n                tmp[j]\
    \ = 0;\n            }\n        }\n    }\n    return sorted;\n}", "    arr.sort(function(a,\
    \ b){\n        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.split('').filter(function(x){return x=='1';});\n        var b_ones =\
    \ b_bin.split('').filter(function(x){return x=='1';});\n        var a_ones_len\
    \ = a_ones.length;\n        var b_ones_len = b_ones.length;\n        var a_ones_sum\
    \ = a_ones.reduce(function(a, b){return a+b;});\n        var b_ones_sum = b_ones.reduce(function(a,\
    \ b){return a+b;});\n        var a_ones_sum_dec = a_ones_sum/Math.pow(2, a_ones_len);\n\
    \        var b_ones_sum_dec = b_ones_sum/Math.pow(2, b_ones_len);\n        var\
    \ a_ones_sum_dec_str = a_ones_sum_dec.toFixed(2);\n        var b_ones_sum_dec_str\
    \ = b_ones_sum_dec.toFixed(2);\n        if(a_ones_len == b_ones_len){\n      \
    \      return a_ones_sum_dec_str > b_ones_sum_dec_str ? 1 : -1;\n        }\n \
    \       return a_ones_len > b_ones_len ? (a_ones_sum_dec_str > b_ones_sum_dec_str\
    \ ? 1 : -1) : (a_ones_sum_dec_str < b_ones_sum_dec_str ? 1 : -1);\n    });\n \
    \   return arr;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,sorting,arrays\
    \ |>\n<code>", "    var len = arr.length;\n    var ret = new Array(len);\n   \
    \ var flag = 0;\n    for(var i=0; i<len; i++){\n        flag = flag * 10 + arr[i];\n\
    \        if(flag > 0){\n            ret[i] = flag;\n            flag = 0;\n  \
    \      }\n    }\n    ret.sort(function(a,b){\n        return a-b;\n    });\n \
    \   return ret;\n}\n", "    var len = arr.length;\n    var sorted = [];\n    var\
    \ i, j, k;\n    for(i = 0; i < len; i++){\n        j = i;\n        while(j > 0\
    \ && arr[j-1] > arr[j]){\n            k = j;\n            while(k >= 0 && arr[k-1]\
    \ > arr[k]){\n                arr[k] = arr[k-1];\n                k--;\n     \
    \       }\n            arr[k] = arr[j];\n            j--;\n        }\n       \
    \ arr[j] = arr[i];\n    }\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var max = 0;\n    var min = 0;\n    var mid = 0;\n    var tmp;\n    var tmp2;\n\
    \    var tmp3;\n    for(var i = 0; i < len; i++){\n        tmp = arr[i];\n   \
    \     max = tmp > max ? tmp : max;\n        min = tmp < min ? tmp : min;\n   \
    \     mid = tmp > min ? i : i+1;\n    }\n    tmp = arr[mid];\n    max = tmp >\
    \ max ? tmp : max;\n    min = tmp < min ? tmp : min;\n    mid = tmp > min ? mid\
    \ : mid+1;\n    tmp = arr[mid];\n    max = tmp > max ? tmp : max;\n    min = tmp\
    \ < min ? tmp : min;\n    mid = tmp > min ? mid : mid+1;\n    tmp = arr[mid];\n\
    \    max = tmp > max ? tmp : max;\n    min = tmp < min ? tmp : min;\n    mid =\
    \ tmp > min ? mid : mid+1;\n    tmp = arr[mid];\n    max = tmp > max ? tmp : max;\n\
    \    min = tmp < min ? tmp : min;\n    mid = tmp > min ? mid : mid+1;\n    tmp\
    \ = arr[mid];\n    max = tmp > max ? tmp : max;\n    min = tmp < min ? tmp : min;\n\
    \    mid = tmp > min ? mid : mid+1;\n    tmp = arr[mid];\n    max = tmp > max\
    \ ? tmp : max;\n    min = tmp < min ? tmp : min;\n    mid = tmp > min ? mid :\
    \ mid+1;\n    tmp = arr[mid];\n    max = tmp > max ? tmp : max;\n    min = tmp\
    \ < min ? tmp : min;\n    mid = tmp > min ? mid : mid+1;\n    tmp = arr[mid];\n\
    \    max = tmp > max ? tmp : max;\n    min = tmp < min ? tmp : min;\n    mid =\
    \ tmp > min ? mid : mid+1;\n    tmp = arr[mid];\n    max = tmp > max ? tmp : max;\n\
    \    min = tmp < min ? tmp : min;\n    mid = tmp > min ? mid : mid+1;\n    tmp\
    \ = arr[mid];\n    max = tmp > max ? tmp : max;\n    min = tmp < min ? tmp : min;\n\
    \    mid = tmp > min ? mid : mid+1;\n    tmp = arr[mid];\n    max = tmp > max\
    \ ? tmp : max;\n    min = tmp < min ? tmp : ", "    var len = arr.length;\n  \
    \  var ret = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        ret[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            if((ret[i] > ret[j]) ){\n             \
    \   k = ret[i];\n                ret[i] = ret[j];\n                ret[j] = k;\n\
    \            }\n        }\n    }\n    return ret;\n}\n", "    var len = arr.length;\n\
    \    var ret = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            k = j;\n            while(k >= 0 && arr[k]\
    \ <= arr[j]){\n                arr[k--] = arr[k];\n            }\n           \
    \ arr[k] = arr[j];\n            k = j;\n            while(k >= 0 && arr[k] >=\
    \ arr[j]){\n                arr[k--] = arr[k];\n            }\n            arr[k]\
    \ = arr[j];\n        }\n    }\n    return ret;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_ones = count_ones(a),\n            b_ones = count_ones(b),\n\
    \            a_ones_comp = a_ones - b_ones,\n            b_ones_comp = b_ones\
    \ - a_ones,\n            a_ones_comp = a_ones_comp * a_ones_comp,\n          \
    \  b_ones_comp = b_ones_comp * b_ones_comp;\n        if(a_ones_comp > b_ones_comp){\n\
    \            return 1;\n        }\n        if(a_ones_comp < b_ones_comp){\n  \
    \          return -1;\n        }\n        return 0;\n    });\n    return arr;\n\
    }\n", "    var len = arr.length;\n    if(len < 2){\n        return arr;\n    }\n\
    \    var ones = [0];\n    var zeros = [0];\n    for(var i = 1; i < len; i++){\n\
    \        var a = arr[i];\n        var b = arr[i - 1];\n        var c = arr[i];\n\
    \        var d = arr[i + 1];\n        if(a === 1){\n            ones.push(b);\n\
    \            zeros.push(c);\n        }\n        else if(a === 0){\n          \
    \  zeros.push(b);\n            ones.push(c);\n        }\n        else{\n     \
    \       ones.push(b);\n            zeros.push(c);\n        }\n    }\n    for(var\
    \ i = 1; i < len; i++){\n        arr[i] = ones[i];\n    }\n    for(var i = 1;\
    \ i < len; i++){\n        arr[i] = zeros[i];\n    }\n    return arr;\n}\n", " \
    \   var len = arr.length;\n    if(len < 1) return arr;\n    var max = 0;\n   \
    \ var min = 0;\n    for(var i = 0; i < len; i++){\n        var cur = arr[i];\n\
    \        if(cur > max){\n            max = cur;\n        }\n        if(cur < min){\n\
    \            min = cur;\n        }\n    }\n    if(min === max){\n        min =\
    \ min - 1;\n    }\n    for(var i = 0; i < len; i++){\n        var cur = arr[i];\n\
    \        var cur_bin = bin(cur);\n        var cur_len = cur_bin.length;\n    \
    \    var cur_ones = cur_bin.substr(cur_len - 1);\n        var cur_num = parseInt(cur_ones,\
    \ 2);\n        var cur_max = Math.max(cur_num, max);\n        var cur_min = Math.min(cur_num,\
    \ min);\n        arr[i] = cur_min;\n    }\n    return arr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var c = a.toString(2);\n        var d = b.toString(2);\n      \
    \  var e = (c.length - d.length);\n        if(e > 0){\n            for(var i =\
    \ e; i >= 0; i--){\n                var f = parseInt(c.charAt(i));\n         \
    \       var g = parseInt(d.charAt(i));\n                if(f>g){\n           \
    \         return 1;\n                }\n                else if(f<g){\n      \
    \              return -1;\n                }\n            }\n        }\n     \
    \   return 0;\n    });\n    return arr;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    var len = arr.length;\n    if(len < 2){\n        return arr;\n\
    \    }\n    var ones = arr.reduce(function(prev, cur){\n        return prev +\
    \ cur;\n    }, 0);\n    var zeros = len - ones;\n    var ones_arr = [];\n    var\
    \ zeros_arr = [];\n    for(var i = 0; i <= zeros; i++){\n        zeros_arr.push(0);\n\
    \    }\n    for(var i = 0; i <= ones; i++){\n        ones_arr.push(1);\n    }\n\
    \    ones_arr.sort(function(a, b){\n        return a - b;\n    });\n    zeros_arr.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    for(var i = 0; i <= zeros; i++){\n\
    \        arr[i] = zeros_arr[i];\n    }\n    for(var i = 0; i <= ones; i++){\n\
    \        arr[i + zeros] = ones_arr[i];\n    }\n    return arr;\n}\n", "    var\
    \ len = arr.length;\n    if(len < 2){\n        return arr;\n    }\n    var ones\
    \ = count_ones(arr);\n    var len = ones.length;\n    var maxOnes = Math.pow(2,len)\
    \ - 1;\n    var maxOnesLen = Math.pow(2,maxOnes) - 1;\n    var maxOnesLenLen =\
    \ Math.pow(2,maxOnesLen) - 1;\n    var minOnes = Math.pow(2,len) - 1;\n    var\
    \ minOnesLen = Math.pow(2,minOnes) - 1;\n    var minOnesLenLen = Math.pow(2,minOnesLen)\
    \ - 1;\n    var maxOnesLenLen = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen\
    \ = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen)\
    \ - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen\
    \ = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen)\
    \ - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen\
    \ = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen)\
    \ - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen\
    \ = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen)\
    \ - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen\
    \ = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen)\
    \ - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen\
    \ = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen)\
    \ - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen\
    \ = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen)\
    \ - 1;\n    var maxOnesLenLenLen = Math.pow(2,maxOnesLenLen) - 1;\n    var maxOnesLenLenLen",
  "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n        var b_bin =\
    \ bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return x ==\
    \ '1';});\n        var b_ones = b_bin.split('').filter(function(x){return x ==\
    \ '1';});\n        var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_sum = a_ones.reduce(function(a, b){return a + b;});\n    \
    \    var b_ones_sum = b_ones.reduce(function(a, b){return a + b;});\n        var\
    \ a_ones_avg = a_ones_sum / a_ones_len;\n        var b_ones_avg = b_ones_sum /\
    \ b_ones_len;\n        var a_ones_decimal = a_ones_sum / a_ones_len;\n       \
    \ var b_ones_decimal = b_ones_sum / b_ones_len;\n        var a_ones_decimal =\
    \ a_ones_sum / a_ones_len;\n        var b_ones_decimal = b_ones_sum / b_ones_len;\n\
    \        var a_ones_decimal = a_ones_sum / a_ones_len;\n        var b_ones_decimal\
    \ = b_ones_sum / b_ones_len;\n        var a_ones_decimal = a_ones_sum / a_ones_len;\n\
    \        var b_ones_decimal = b_ones_sum / b_ones_len;\n        if(a_ones_len\
    \ == b_ones_len){\n            return a_ones_decimal - b_ones_decimal;\n     \
    \   }\n        if(a_ones_len > b_ones_len){\n            return a_ones_avg - b_ones_avg;\n\
    \        }\n        return a_ones_avg - b_ones_avg;\n    });\n    return arr;\n\
    }", "    var len = arr.length;\n    for(var i=0; i<len; i++){\n        var count\
    \ = 0;\n        for(var j=0; j<len; j++){\n            if(arr[j] == i){\n    \
    \            count++;\n            }\n        }\n        if(count == 1){\n   \
    \         arr.splice(j, 1);\n        }\n    }\n    arr.sort(function(a, b){\n\
    \        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_len =\
    \ a_bin.length;\n        var b_len = b_bin.length;\n        var a_ones = \"\"\
    ;\n        var b_ones = \"\";\n        for(var i=0; i<a_len; i++){\n         \
    \   a_ones += a_bin[i];\n        }\n        for(var i=0; i<b_len; i++){\n    \
    \        b_ones += b_bin[i];\n        }\n        var a_ones_len = a_ones.length;\n\
    \        var b_ones_len = b_ones.length;\n        var a_ones_count = a_ones_len\
    \ - b_ones_len;\n        var b_ones_count = b_ones_len - a_ones_len;\n       \
    \ var a_ones_decimal = a_ones_count / Math.pow(2, a_ones_len);\n        var b_ones_decimal\
    \ = b_ones_count / Math.pow(2, b_ones_len);\n        if(a_ones_decimal > b_ones_decimal){\n\
    \            return 1;\n        }\n        if(a_ones_decimal < b_ones_decimal){\n\
    \            return -1;\n        }\n        return 0;\n    });\n    return arr;\n\
    }\n", "\tlet len = arr.length;\n\tlet sortedArr = new Array(len);\n\tfor(let i\
    \ = 0; i < len; i++){\n\t\tlet count = 0;\n\t\tfor(let j = 0; j < len; j++){\n\
    \t\t\tif(arr[j] == 1){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tsortedArr[i] = count;\n\
    \t}\n\tfor(let i = 0; i < len; i++){\n\t\tlet count = 0;\n\t\tfor(let j = 0; j\
    \ < len; j++){\n\t\t\tif(arr[j] == sortedArr[j]){\n\t\t\t\tcount++;\n\t\t\t}\n\
    \t\t}\n\t\tsortedArr[i] = count;\n\t}\n\treturn sortedArr.sort((a, b) => a - b);\n\
    }\n", "    arr.sort(function(a, b){\n        var a_bin = a.toString(2),\n    \
    \        b_bin = b.toString(2);\n        if(a_bin.length < b_bin.length){\n  \
    \          return -1;\n        }\n        if(a_bin.length > b_bin.length){\n \
    \           return 1;\n        }\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x === '1';}),\n            b_ones = b_bin.split('').filter(function(x){return\
    \ x === '1';});\n        if(a_ones.length < b_ones.length){\n            return\
    \ -1;\n        }\n        if(a_ones.length > b_ones.length){\n            return\
    \ 1;\n        }\n        return a_ones.length - b_ones.length;\n    });\n    return\
    \ arr;\n}\n", "    var len = arr.length;\n    var ret = [];\n    var i, j, k;\n\
    \    for(i = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j -\
    \ 1] > arr[j]){\n            k = j;\n            while(k >= 0 && arr[k - 1] >\
    \ arr[k]){\n                arr[k] = arr[k - 1];\n                k--;\n     \
    \       }\n            arr[k] = arr[j];\n            j--;\n        }\n       \
    \ ret[i] = arr[j];\n    }\n    return ret;\n}\n", "    var len = arr.length;\n\
    \    for(var i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n          \
    \  if(arr[i]>arr[j]){\n                var temp = arr[i];\n                arr[i]\
    \ = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n\
    \    return arr;\n}", "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n\
    \        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var b_ones = b_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var a_ones_len = a_ones.length;\n        var b_ones_len\
    \ = b_ones.length;\n        var a_ones_count = a_ones_len + a_ones_len/2;\n  \
    \      var b_ones_count = b_ones_len + b_ones_len/2;\n        var a_ones_decimal\
    \ = a_ones_len/2;\n        var b_ones_decimal = b_ones_len/2;\n        if(a_ones_count\
    \ < b_ones_count){\n            return -1;\n        }else if(a_ones_count > b_ones_count){\n\
    \            return 1;\n        }else{\n            return a_ones_decimal - b_ones_decimal;\n\
    \        }\n    });\n    return arr;\n}", "\tlet len = arr.length;\n\tlet max\
    \ = 0;\n\tfor(let i = 0; i < len; i++){\n\t\tlet ones = arr[i].toString(2).split('').reduce((prev,\
    \ curr, index) => {\n\t\t\treturn prev + curr;\n\t\t}, '');\n\t\tmax = Math.max(max,\
    \ ones.length);\n\t}\n\tlet result = [];\n\tfor(let i = 0; i < len; i++){\n\t\t\
    let ones = arr[i].toString(2).split('').reduce((prev, curr, index) => {\n\t\t\t\
    return prev + curr;\n\t\t}, '');\n\t\tlet decimal = ones.length - max;\n\t\tresult.push(decimal\
    \ > 0 ? parseInt(ones, 2) : parseInt(ones, 10));\n\t}\n\treturn result;\n}\n",
  "  var len = arr.length;\n  var sorted = [];\n  \n  for (var i = 0; i < len; i++){\n\
    \    sorted.push(arr[i]);\n  }\n  \n  sorted.sort(function(a, b){\n    var aNum\
    \ = count_ones(a);\n    var bNum = count_ones(b);\n    \n    if (aNum === bNum){\n\
    \      return sort_number(a);\n    }\n    \n    return aNum - bNum;\n  });\n \
    \ \n  return sorted;\n}\n", "    var len = arr.length;\n    if(len < 1) return\
    \ arr;\n    var ones = count_ones(arr);\n    var len = ones.length;\n    var max\
    \ = 0;\n    for(var i=0; i<len; i++){\n        max = Math.max(max, ones[i]);\n\
    \    }\n    for(var i=0; i<len; i++){\n        arr[i] = arr[i] - max;\n    }\n\
    \    arr.sort(function(a, b){\n        return a - b;\n    });\n    return arr;\n\
    }\n", "  var len = arr.length;\n  if(len < 2){\n    return arr;\n  }\n  if(len\
    \ % 2 === 0){\n    return arr.sort();\n  }\n  var mid = Math.floor(len / 2);\n\
    \  var left = arr.slice(0, mid);\n  var right = arr.slice(mid);\n  return merge(sort_array(left),\
    \ sort_array(right));\n}\n", "\tarr.sort(function(a, b){\n\t\tvar aNum = parseInt(a,\
    \ 10);\n\t\tvar bNum = parseInt(b, 10);\n\t\treturn aNum - bNum;\n\t});\n\treturn\
    \ arr;\n}\n", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n\
    \        var b_ones = count_ones(b);\n        if(a_ones < b_ones){\n         \
    \   return -1;\n        }\n        if(a_ones > b_ones){\n            return 1;\n\
    \        }\n        return 0;\n    });\n    return arr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var aNum = parseInt(a, 10);\n        var bNum = parseInt(b, 10);\n\
    \        if(aNum === bNum){\n            return 0;\n        }\n        if(aNum\
    \ > bNum){\n            return 1;\n        }\n        return -1;\n    });\n  \
    \  return arr;\n}\n", "    var len = arr.length;\n    var maxOnes = 0;\n    var\
    \ maxDigit = 0;\n    var tmp = 0;\n    var tmpArr = [];\n    for(var i = 0; i\
    \ < len; i++){\n        tmp = arr[i];\n        if(tmp > 0){\n            tmpArr.push(tmp);\n\
    \            maxOnes = Math.max(maxOnes, tmp);\n        }else{\n            tmpArr.push(0);\n\
    \            maxOnes = Math.max(maxOnes, 0);\n        }\n    }\n    for(var i\
    \ = 0; i < len; i++){\n        tmp = arr[i];\n        if(tmp > 0){\n         \
    \   tmpArr.push(tmp);\n            maxDigit = Math.max(maxDigit, tmp);\n     \
    \   }else{\n            tmpArr.push(0);\n            maxDigit = Math.max(maxDigit,\
    \ 0);\n        }\n    }\n    for(var i = 0; i < len; i++){\n        tmp = arr[i];\n\
    \        if(tmp > 0){\n            tmpArr.push(tmp);\n            maxOnes = Math.max(maxOnes,\
    \ tmp);\n        }else{\n            tmpArr.push(0);\n            maxOnes = Math.max(maxOnes,\
    \ 0);\n        }\n    }\n    for(var i = 0; i < len; i++){\n        tmp = arr[i];\n\
    \        if(tmp > 0){\n            tmpArr.push(tmp);\n            maxDigit = Math.max(maxDigit,\
    \ tmp);\n        }else{\n            tmpArr.push(0);\n            maxDigit = Math.max(maxDigit,\
    \ 0);\n        }\n    }\n    for(var i = 0; i < len; i++){\n        tmp = arr[i];\n\
    \        if(tmp > 0){\n            tmpArr.push(tmp);\n            maxOnes = Math.max(maxOnes,\
    \ tmp);\n        }else{\n            tmpArr.push(0);\n            maxOnes = Math.max(maxOnes,\
    \ 0);\n        }\n    }\n    for(var i = 0; i < len; i++){\n        tmp = arr[i];\n\
    \        if(tmp > 0){\n            tmpArr.push(tmp);\n            maxDigit = Math.max(maxDigit,\
    \ tmp);\n        }else{\n            tmpArr.push(0);\n            maxDigit = Math.max(maxDigit,\
    \ 0);\n        }\n    }\n    for(var i = 0; i < len; i++){\n        tmp = arr[i];\n\
    \        if(tmp > 0){\n            tmpArr.push(tmp);\n            maxOnes = Math.max(maxOnes,\
    \ tmp);\n        }else{\n            tmpArr.push(0);\n            maxOnes = Math.max(maxOnes,\
    \ 0);\n        }\n    }\n    for(var i = 0; i < len; i++){\n        tmp = arr[i];\n\
    \        if(tmp > 0){\n            tmpArr.push(tmp);\n            maxDigit = Math.max(maxDigit,\
    \ tmp);\n        }else{\n            tmpArr.push(0);\n            maxDigit = Math.max(maxDigit,\
    \ 0);\n        }\n    }\n    for(var i = 0; i < len; i++){\n        ", "    arr.sort(function(a,\
    \ b){\n        var x = a.toString(2);\n        var y = b.toString(2);\n      \
    \  var z = x.length - y.length;\n        if(z > 0){\n            return 1;\n \
    \       }\n        if(z < 0){\n            return -1;\n        }\n        return\
    \ x.localeCompare(y);\n    });\n    return arr;\n}\n", "  var len = arr.length;\n\
    \  if(len < 2){\n    return arr;\n  }\n  var ones = count_ones(arr);\n  var len\
    \ = arr.length;\n  var i = 0;\n  var j = 0;\n  var tmp;\n  while(i < len){\n \
    \   tmp = arr[i];\n    j = i;\n    while(j > 0 && arr[j-1] > tmp){\n      arr[j]\
    \ = arr[j-1];\n      j--;\n    }\n    arr[j] = tmp;\n    i++;\n  }\n  while(j\
    \ < len){\n    arr[j] = arr[j+1];\n    j++;\n  }\n  while(i < len){\n    tmp =\
    \ arr[i];\n    j = i;\n    while(j > 0 && arr[j-1] < tmp){\n      arr[j] = arr[j-1];\n\
    \      j--;\n    }\n    arr[j] = tmp;\n    i++;\n  }\n  return arr;\n}\n", " \
    \   arr.sort(function(a, b){\n        var c = count_ones(a) - count_ones(b);\n\
    \        if(c === 0){\n            return 0;\n        }\n        else if(c > 0){\n\
    \            return 1;\n        }\n        else{\n            return -1;\n   \
    \     }\n    });\n    return arr;\n}\n", "    var len = arr.length;\n    var sorted\
    \ = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j = i +\
    \ 1; j < len; j++){\n            k = arr[i]*arr[j];\n            if(k <= 0){\n\
    \                k = k + arr[j]*arr[i];\n            }\n            if(k >= 0){\n\
    \                sorted.push(arr[i]);\n                sorted.push(arr[j]);\n\
    \                sorted.push(k);\n            }\n        }\n    }\n    return\
    \ sorted;\n}\n", "\tarr.sort(function(a, b){\n\t\tif(a>b){\n\t\t\treturn 1;\n\t\
    \t}else if(a<b){\n\t\t\treturn -1;\n\t\t}else{\n\t\t\treturn 0;\n\t\t}\n\t});\n\
    \treturn arr;\n}\n", "\tarr.sort(function(a, b){\n\t\tif(a==b) return 0;\n\t\t\
    if(a>b) return 1;\n\t\treturn -1;\n\t});\n\treturn arr;\n}\n", "    var len =\
    \ arr.length;\n    for(var i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n\
    \            if(arr[j] > arr[j+1]){\n                var temp = arr[j];\n    \
    \            arr[j] = arr[j+1];\n                arr[j+1] = temp;\n          \
    \  }\n        }\n    }\n    return arr;\n}\n", "    arr.sort(function(a, b){\n\
    \        var a_bin = bin(a),\n            b_bin = bin(b);\n        if(a_bin.length\
    \ < b_bin.length){\n            return -1;\n        }\n        if(a_bin.length\
    \ > b_bin.length){\n            return 1;\n        }\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x === '1';}),\n            b_ones = b_bin.split('').filter(function(x){return\
    \ x === '1';}),\n            a_ones_len = a_ones.length,\n            b_ones_len\
    \ = b_ones.length;\n        if(a_ones_len > b_ones_len){\n            return -1;\n\
    \        }\n        if(a_ones_len < b_ones_len){\n            return 1;\n    \
    \    }\n        var a_ones_str = a_ones.join(''),\n            b_ones_str = b_ones.join(''),\n\
    \            a_ones_int = parseInt(a_ones_str, 2),\n            b_ones_int = parseInt(b_ones_str,\
    \ 2);\n        if(a_ones_int > b_ones_int){\n            return -1;\n        }\n\
    \        if(a_ones_int < b_ones_int){\n            return 1;\n        }\n    \
    \    return 0;\n    });\n    return arr;\n}\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ dscore=0 |>\n<code>", "    var len = arr.length;\n    if(len < 2){\n       \
    \ return arr;\n    }\n    var ones = count_ones(arr);\n    var len = ones.length;\n\
    \    var max = 0;\n    for(var i=0; i<len; i++){\n        if(ones[i] > max){\n\
    \            max = ones[i];\n        }\n    }\n    var result = [];\n    for(var\
    \ i=0; i<len; i++){\n        result.push(arr[i]);\n    }\n    result.sort(function(a,\
    \ b){\n        var a1 = count_ones(a);\n        var b1 = count_ones(b);\n    \
    \    if(a1 > b1){\n            return 1;\n        }\n        if(a1 < b1){\n  \
    \          return -1;\n        }\n        return 0;\n    });\n    return result;\n\
    }\n", "    var len = arr.length;\n    if(len < 2){\n        return arr;\n    }\n\
    \    var ones = arr.filter(function(item){\n        return item === 1;\n    });\n\
    \    var zeros = arr.filter(function(item){\n        return item === 0;\n    });\n\
    \    var sorted = [];\n    for(var i = 0; i<len; i++){\n        sorted.push(ones.length\
    \ - zeros.length - i);\n    }\n    sorted.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    return arr.map(function(i){\n        return sorted[i];\n\
    \    });\n}\n", "    var len = arr.length;\n    var max = 0;\n    var min = 0;\n\
    \    var mid = 0;\n    var temp = 0;\n    var swap = 0;\n    for(var i=0; i<len;\
    \ i++){\n        temp = arr[i];\n        max = temp > max ? temp : max;\n    \
    \    min = temp < min ? temp : min;\n        mid = max - (max - min) / 2;\n  \
    \      swap = arr[i];\n        arr[i] = arr[mid];\n        arr[mid] = swap;\n\
    \    }\n    return arr;\n}\n", "    arr.sort(function(a, b){\n        var c =\
    \ (a-b);\n        if(c === 0){\n            return 0;\n        }\n        if(c\
    \ > 0){\n            return 1;\n        }\n        return -1;\n    });\n    return\
    \ arr;\n}\n", "  if(arr.length < 2){\n    return arr;\n  }\n  var len = arr.length;\n\
    \  var maxOnes = 0;\n  var minOnes = Number.MAX_VALUE;\n  for(var i = 1; i < len;\
    \ i++){\n    var ones = arr[i].toString(2).split('1');\n    for(var j = 0; j <\
    \ ones.length; j++){\n      if(ones[j] == '1'){\n        if(minOnes > 0){\n  \
    \        minOnes = Math.min(minOnes, ones.length);\n        }\n      }else{\n\
    \        if(maxOnes < ones.length){\n          maxOnes = Math.max(maxOnes, ones.length);\n\
    \        }\n      }\n    }\n  }\n  if(minOnes > maxOnes){\n    var temp = minOnes;\n\
    \    minOnes = maxOnes;\n    maxOnes = temp;\n  }\n  if(maxOnes == 0){\n    return\
    \ arr;\n  }\n  var result = [];\n  for(var i = 1; i < len; i++){\n    var ones\
    \ = arr[i].toString(2).split('1');\n    for(var j = 0; j < ones.length; j++){\n\
    \      if(ones[j] == '1'){\n        result.push(arr[i]);\n      }\n    }\n  }\n\
    \  result.sort(function(a, b){\n    var aOnes = a.toString(2).split('1');\n  \
    \  var bOnes = b.toString(2).split('1');\n    var aLen = aOnes.length;\n    var\
    \ bLen = bOnes.length;\n    for(var k = 0; k < aLen; k++){\n      if(aOnes[k]\
    \ == '1'){\n        if(bLen - k > 0){\n          return bOnes[k] - aOnes[k];\n\
    \        }\n      }\n    }\n    for(var k = 0; k < bLen; k++){\n      if(bOnes[k]\
    \ == '1'){\n        if(aLen - k > 0){\n          return aOnes[k] - bOnes[k];\n\
    \        }\n      }\n    }\n    return aLen - bLen;\n  });\n  for(var i = 1; i\
    \ < len; i++){\n    var ones = arr[i].toString(2).split('1');\n    for(var j =\
    \ 0; j < ones.length; j++){\n      if(ones[j] == '1'){\n        result.push(arr[i]);\n\
    \      }\n    }\n  }\n  return result;\n}\n", "    var len = arr.length;\n   \
    \ var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        j\
    \ = i;\n        while(j > 0 && arr[j - 1] > arr[j]){\n            k = j;\n   \
    \         while(k >= 0 && arr[k - 1] > arr[k]){\n                arr[k] = arr[k\
    \ - 1];\n                k--;\n            }\n            arr[k] = arr[j];\n \
    \           j--;\n        }\n        arr[j] = arr[i];\n    }\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var ret = new Array(len);\n    var i;\n\
    \    for(i = 0; i < len; i++){\n        var count = 0;\n        var pos = 0;\n\
    \        while(pos < len){\n            if(arr[pos] % 2){\n                count++;\n\
    \            }\n            pos++;\n        }\n        ret[i] = count;\n    }\n\
    \    for(i = 0; i < len; i++){\n        var count = 0;\n        var pos = 0;\n\
    \        while(pos < len){\n            if(arr[pos] % 2){\n                count++;\n\
    \            }\n            pos++;\n        }\n        ret[i] = count;\n    }\n\
    \    return ret;\n}\n", "    var len = arr.length;\n    var sorted = [];\n   \
    \ var i, j, k;\n    for(i = 0; i < len; i++){\n        j = i;\n        while(j\
    \ > 0 && arr[j - 1] > arr[j]){\n            arr[j] = arr[j - 1];\n           \
    \ j--;\n        }\n        arr[j] = i;\n    }\n    for(i = 0; i < len; i++){\n\
    \        j = i;\n        while(j > 0 && arr[j - 1] < arr[j]){\n            arr[j]\
    \ = arr[j - 1];\n            j--;\n        }\n        arr[j] = i;\n    }\n   \
    \ for(i = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j - 1]\
    \ == arr[j]){\n            j--;\n        }\n        arr[j] = i;\n    }\n    for(i\
    \ = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j - 1] != arr[j]){\n\
    \            j--;\n        }\n        arr[j] = i;\n    }\n    return arr;\n}",
  "    var len = arr.length;\n    var ret = [];\n    var i, j, k;\n    for(i = 0;\
    \ i < len; i++){\n        for(j = i+1; j < len; j++){\n            k = arr[i]*arr[j];\n\
    \            if(k > 0){\n                ret.push(arr[i]);\n                ret.push(arr[j]);\n\
    \                ret.push(k);\n            }\n        }\n    }\n    return ret;\n\
    }\n", "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n   \
    \ for(i = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j - 1]\
    \ > arr[j]){\n            k = j;\n            while(k >0 && arr[k - 1] > arr[k]){\n\
    \                arr[k] = arr[k - 1];\n                k--;\n            }\n \
    \           arr[k] = arr[j - 1];\n            j--;\n        }\n        sorted[i]\
    \ = arr[j];\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n   \
    \ var ret = new Array(len);\n    var i;\n    for(i = 0; i < len; i++){\n     \
    \   var count = 0;\n        for(var j = 0; j < len; j++){\n            if((arr[j]\
    \ & (1 << i)) !== 0){\n                count++;\n            }\n        }\n  \
    \      ret[i] = count;\n    }\n    ret.sort(function(a, b){\n        return a\
    \ - b;\n    });\n    return ret;\n}\n", "    var len = arr.length;\n    var sorted\
    \ = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j = i+1;\
    \ j < len; j++){\n            if(arr[i] == arr[j]){\n                k = j;\n\
    \                while(arr[k] == arr[j]){\n                    k++;\n        \
    \        }\n                arr[k] = arr[i];\n                arr[i] = k;\n  \
    \          }\n        }\n    }\n    return arr;\n}", "    var len = arr.length;\n\
    \    if(len < 2){\n        return arr;\n    }\n    var ones = count_ones(arr);\n\
    \    var decimals = Math.pow(2,len-1);\n    var sorted = [];\n    for(var i=0;\
    \ i<len; i++){\n        var num = arr[i];\n        var num_ones = ones[i];\n \
    \       var decimal = decimals[i];\n        if(num_ones === 0){\n            sorted.push(num);\n\
    \            continue;\n        }\n        var num_decimal = decimal * Math.pow(2,num_ones);\n\
    \        var num_decimal_str = num_decimal.toString(2);\n        var num_decimal_str_len\
    \ = num_decimal_str.length;\n        var num_decimal_str_len_str = num_decimal_str_len.toString();\n\
    \        if(num_decimal_str_len_str === \"0\"){\n            sorted.push(num);\n\
    \            continue;\n        }\n        var num_decimal_str_len_str_ones =\
    \ num_decimal_str_len_str + num_decimal_str_len;\n        var num_decimal_str_len_str_ones_str\
    \ = num_decimal_str_len_str_ones.toString();\n        if(num_decimal_str_len_str_ones_str\
    \ === \"0\"){\n            sorted.push(num);\n            continue;\n        }\n\
    \        var num_decimal_str_len_str_ones_str_ones = num_decimal_str_len_str_ones_str\
    \ + num_decimal_str_len_str;\n        var num_decimal_str_len_str_ones_str_ones_str\
    \ = num_decimal_str_len_str_ones_str_ones.toString();\n        if(num_decimal_str_len_str_ones_str_ones_str\
    \ === \"0\"){\n            sorted.push(num);\n            continue;\n        }\n\
    \        var num_decimal_str_len_str_ones_str_ones_str_ones = num_decimal_str_len_str_ones_str_ones_str\
    \ + num_decimal_str_len_str_ones_str;\n        var num_decimal_str_len_str_ones_str_ones_str_ones_str\
    \ = num_decimal_str_len_str_ones_str_ones_str_ones + num_decimal_str_len_str_ones_str_ones_str;\n\
    \        var num_decimal_str_len_str_ones_str_ones_str_ones_str_ones = num_decimal_str_len_str_ones_str_ones_str_ones_str\
    \ + num_decimal_str_len_str_ones_str_ones_str_ones_str;\n        var num_decimal_str_len_str_ones_str_ones_str_ones_str_ones_str\
    \ = num_decimal_str_len_str_ones_str_ones_str_ones_str_ones + num_decimal_str_len_str_ones_str_ones_str_ones_str_ones_str;\n\
    \        var num_decimal_str_len_str_ones_str_ones_str_ones_str_ones_str_ones\
    \ = num_decimal_str_len_str_ones_str_ones_str_ones_str_ones_str_ones + num_decimal_str_len_str_ones_str_",
  "  var len = arr.length;\n  if(len < 1) return arr;\n  var result = [];\n  for(var\
    \ i=0; i<len; i++){\n    var count = 0;\n    for(var j=0; j<len; j++){\n     \
    \ if(arr[j] == arr[i]){\n        count++;\n      }\n    }\n    result.push(count);\n\
    \  }\n  result.sort(function(a, b){\n    return a - b;\n  });\n  return result;\n\
    }\n", "    var len = arr.length;\n    if(len < 2){\n        return arr;\n    }\n\
    \    var ones = count_ones(arr);\n    var len = ones.length;\n    var sorted_arr\
    \ = [];\n    for(var i=0; i<len; i++){\n        sorted_arr.push(arr[ones[i]]);\n\
    \    }\n    return sorted_arr;\n}\n", "    var len = arr.length;\n    for(var\
    \ i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n            if(arr[j]\
    \ == arr[i]){\n                arr.splice(j,1);\n                len--;\n    \
    \        }\n        }\n    }\n    arr.sort(function(a,b){\n        var aNum =\
    \ parseInt(a, 2);\n        var bNum = parseInt(b, 2);\n        if(aNum == bNum){\n\
    \            return 0;\n        }\n        if(aNum > bNum){\n            return\
    \ 1;\n        }\n        return -1;\n    });\n    return arr;\n}\n", "    var\
    \ len = arr.length;\n    var sorted = new Array(len);\n    for(var i=0; i<len;\
    \ i++){\n        sorted[i] = i;\n    }\n    sorted.sort(function(a, b){\n    \
    \    var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x=='1';});\n        var b_ones = b_bin.split('').filter(function(x){return x=='1';});\n\
    \        var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_count = a_ones_len-b_ones_len;\n        var b_ones_count =\
    \ b_ones_len-a_ones_len;\n        var a_ones_decimal = a_ones_len*Math.pow(2,a_ones_len-1);\n\
    \        var b_ones_decimal = b_ones_len*Math.pow(2,b_ones_len-1);\n        var\
    \ a_ones_decimal = a_ones_decimal/Math.pow(2,a_ones_len);\n        var b_ones_decimal\
    \ = b_ones_decimal/Math.pow(2,b_ones_len);\n        var a_ones_decimal = Math.floor(a_ones_decimal);\n\
    \        var b_ones_decimal = Math.floor(b_ones_decimal);\n        if(a_ones_count\
    \ > b_ones_count){\n            return -1;\n        }\n        if(a_ones_count\
    \ < b_ones_count){\n            return 1;\n        }\n        if(a_ones_decimal>b_ones_decimal){\n\
    \            return -1;\n        }\n        if(a_ones_decimal<b_ones_decimal){\n\
    \            return 1;\n        }\n        return 0;\n    });\n    for(var i=0;\
    \ i<len; i++){\n        sorted[i] = arr[i];\n    }\n    return sorted;\n}", " \
    \   arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n        var\
    \ b_ones = count_ones(b);\n        var a_ones_comp = a_ones - b_ones;\n      \
    \  var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp == 0){\n       \
    \     return 0;\n        }\n        if(b_ones_comp == 0){\n            return\
    \ 1;\n        }\n        return a_ones_comp > b_ones_comp ? 1 : -1;\n    });\n\
    \    return arr;\n}\n", "    var len = arr.length;\n    if(len < 2){\n       \
    \ return arr;\n    }\n    var ones = count_ones(arr);\n    var len = ones.length;\n\
    \    var sorted = new Array(len);\n    for(var i=0; i<len; i++){\n        sorted[i]\
    \ = arr[i];\n    }\n    sorted.sort(function(a, b){\n        var aVal = count_ones(a)[0];\n\
    \        var bVal = count_ones(b)[0];\n        if(aVal === bVal){\n          \
    \  return a>b ? 1 : a<b ? -1 : 0;\n        }\n        return aVal-bVal;\n    });\n\
    \    for(var i=0; i<len; i++){\n        sorted[i] = arr[i];\n    }\n    return\
    \ sorted;\n}\n", "    var len = arr.length;\n    var sorted_arr = [];\n    var\
    \ max_ones = 0;\n    var min_ones = Number.MAX_VALUE;\n    for(var i=0; i<len;\
    \ i++){\n        var num = arr[i];\n        if(num < 0){\n            num = -num;\n\
    \        }\n        if(num == 0){\n            continue;\n        }\n        if(num\
    \ > max_ones){\n            max_ones = num;\n        }\n        if(num < min_ones){\n\
    \            min_ones = num;\n        }\n    }\n    for(var i=0; i<len; i++){\n\
    \        var num = arr[i];\n        if(num < 0){\n            num = -num;\n  \
    \      }\n        if(num == 0){\n            continue;\n        }\n        var\
    \ diff = num - max_ones;\n        var decimal_val = Math.pow(10, diff);\n    \
    \    sorted_arr.push(num);\n        sorted_arr.push(decimal_val);\n    }\n   \
    \ sorted_arr.sort(function(a, b){\n        return a - b;\n    });\n    for(var\
    \ i=0; i<len; i++){\n        arr[i] = sorted_arr[i];\n    }\n    return arr;\n\
    }\n", "  var len = arr.length;\n  if(len < 2){\n    return arr;\n  }\n  var ones\
    \ = count_ones(arr);\n  var dec = Math.pow(10, Math.ceil(Math.log(len)/Math.LN10));\n\
    \  var arr2 = arr.map(function(x){\n    return Math.round(x*dec)/dec;\n  });\n\
    \  arr2.sort(function(a, b){\n    return a-b;\n  });\n  return arr2.map(function(x){\n\
    \    return arr[x];\n  });\n}\n", "    var len = arr.length;\n    if(len < 2)\
    \ return arr;\n    var ones = count_ones(arr);\n    var len = arr.length;\n  \
    \  var ret = [];\n    for(var i = 0; i < len; i++){\n        var num = arr[i];\n\
    \        if(num === 0) continue;\n        var pos = 0;\n        while(num){\n\
    \            var bit = num & 1;\n            num = num >> 1;\n            if(bit\
    \ === 0) ret.push(arr[pos++]);\n        }\n    }\n    for(var i = 0; i < len;\
    \ i++){\n        var num = arr[i];\n        if(num === 0) continue;\n        var\
    \ pos = 0;\n        while(num){\n            var bit = num & 1;\n            num\
    \ = num >> 1;\n            if(bit === 0) ret.push(arr[pos++]);\n        }\n  \
    \  }\n    return ret;\n}\n", "    var len = arr.length;\n    for(var i=0; i<len;\
    \ i++){\n        for(var j=0; j<len; j++){\n            if(arr[j] > arr[j+1]){\n\
    \                var temp = arr[j];\n                arr[j] = arr[j+1];\n    \
    \            arr[j+1] = temp;\n            }\n        }\n    }\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var ret = new Array(len);\n    var i;\n\
    \    var j;\n    var tmp;\n    var cnt;\n    var cnt2;\n    var cnt3;\n    var\
    \ cnt4;\n    var cnt5;\n    var cnt6;\n    var cnt7;\n    var cnt8;\n    var cnt9;\n\
    \    var cnt10;\n    var cnt11;\n    var cnt12;\n    var cnt13;\n    var cnt14;\n\
    \    var cnt15;\n    var cnt16;\n    var cnt17;\n    var cnt18;\n    var cnt19;\n\
    \    var cnt20;\n    var cnt21;\n    var cnt22;\n    var cnt23;\n    var cnt24;\n\
    \    var cnt25;\n    var cnt26;\n    var cnt27;\n    var cnt28;\n    var cnt29;\n\
    \    var cnt30;\n    var cnt31;\n    var cnt32;\n    var cnt33;\n    var cnt34;\n\
    \    var cnt35;\n    var cnt36;\n    var cnt37;\n    var cnt38;\n    var cnt39;\n\
    \    var cnt40;\n    var cnt41;\n    var cnt42;\n    var cnt43;\n    var cnt44;\n\
    \    var cnt45;\n    var cnt46;\n    var cnt47;\n    var cnt48;\n    var cnt49;\n\
    \    var cnt50;\n    var cnt51;\n    var cnt52;\n    var cnt53;\n    var cnt54;\n\
    \    var cnt55;\n    var cnt56;\n    var cnt57;\n    var cnt58;\n    var cnt59;\n\
    \    var cnt60;\n    var cnt61;\n    var cnt62;\n    var cnt63;\n    var cnt64;\n\
    \    var cnt65;\n    var cnt66;\n    var cnt67;\n    var cnt68;\n    var cnt69;\n\
    \    var cnt70;\n    var cnt71;\n    var cnt72;\n    var cnt73;\n    var cnt74;\n\
    \    var cnt75;\n    var cnt76;\n    var cnt77;\n    var cnt78;\n    var cnt79;\n\
    \    var cnt80;\n    var cnt81;\n    var cnt82;\n    var cnt83;\n    var cnt84;\n\
    \    var cnt85;\n    var cnt86;\n    var cnt87;\n    var cnt88;\n    var cnt89;\n\
    \    var cnt90;\n    var cnt91;\n    var cnt92;\n    var cnt93;\n    var cnt94;\n\
    \    var cnt95;\n    var cnt96;\n    var cnt97;\n    var cnt98;\n    var cnt99;\n\
    \    var cnt100;\n    var cnt101;\n    var cnt102;\n    var ", "    var len =\
    \ arr.length;\n    var ret = new Array(len);\n    var cnt = 0;\n    for(var i=0;\
    \ i<len; i++){\n        var num = arr[i];\n        if(num == 0){\n           \
    \ ret[cnt++] = num;\n        }else{\n            var bin = num.toString(2);\n\
    \            var len = bin.length;\n            var cnt2 = 0;\n            for(var\
    \ j=0; j<len; j++){\n                if(bin[j] == \"1\"){\n                  \
    \  ret[cnt2++] = num;\n                    break;\n                }\n       \
    \     }\n            if(cnt2 < cnt){\n                for(var j=cnt; j<cnt2; j++){\n\
    \                    ret[j] = ret[j+1];\n                }\n            }\n  \
    \      }\n    }\n    return ret;\n}\n", "    var len = arr.length;\n    for(var\
    \ i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n            if(arr[i]>arr[j]){\n\
    \                var temp = arr[i];\n                arr[i] = arr[j];\n      \
    \          arr[j] = temp;\n            }\n        }\n    }\n    return arr;\n\
    }\n", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n   \
    \     var b_ones = count_ones(b);\n        var a_ones_comp = a_ones - b_ones;\n\
    \        var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp === 0){\n\
    \            return b_ones_comp;\n        }\n        if(b_ones_comp === 0){\n\
    \            return a_ones_comp;\n        }\n        return a_ones_comp - b_ones_comp;\n\
    \    });\n    return arr;\n}\n", "    arr.sort(function(a, b){\n        var a_bin\
    \ = bin(a);\n        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var b_ones = b_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var a_ones_len = a_ones.length;\n        var b_ones_len\
    \ = b_ones.length;\n        var a_ones_sum = a_ones.reduce(function(prev, curr){return\
    \ prev+curr;});\n        var b_ones_sum = b_ones.reduce(function(prev, curr){return\
    \ prev+curr;});\n        var a_ones_decimal = a_ones_sum/a_ones_len;\n       \
    \ var b_ones_decimal = b_ones_sum/b_ones_len;\n        var a_ones_decimal = a_ones_decimal.toFixed(2);\n\
    \        var b_ones_decimal = b_ones_decimal.toFixed(2);\n        if(a_ones_len\
    \ < b_ones_len){\n            return -1;\n        }\n        if(a_ones_len > b_ones_len){\n\
    \            return 1;\n        }\n        if(a_ones_decimal < b_ones_decimal){\n\
    \            return -1;\n        }\n        if(a_ones_decimal > b_ones_decimal){\n\
    \            return 1;\n        }\n        return 0;\n    });\n    return arr;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>", "  if(arr.length < 2){\n\
    \    return arr;\n  }\n  var len = arr.length;\n  var swapped;\n  var tmp;\n \
    \ var i;\n  var j;\n  var k;\n  var l;\n  var count = 0;\n  for(i = 0; i < len;\
    \ i++){\n    count = 0;\n    for(j = i; j < len; j++){\n      if(arr[j] == 1){\n\
    \        count++;\n      }\n    }\n    if(count > 1){\n      for(j = i; j < len;\
    \ j++){\n        arr[j] = arr[j+1];\n      }\n      for(j = len-1; j > i; j--){\n\
    \        arr[j] = arr[j-1];\n      }\n      i++;\n    }\n  }\n  for(i = len-1;\
    \ i > 0; i--){\n    count = 0;\n    for(j = i; j < len; j++){\n      if(arr[j]\
    \ == 1){\n        count++;\n      }\n    }\n    if(count > 1){\n      for(j =\
    \ i; j < len; j++){\n        arr[j] = arr[j-1];\n      }\n      for(j = len-1;\
    \ j > i; j--){\n        arr[j] = arr[j+1];\n      }\n      i--;\n    }\n  }\n\
    \  for(i = 0; i < len; i++){\n    count = 0;\n    for(j = i; j < len; j++){\n\
    \      if(arr[j] == 1){\n        count++;\n      }\n    }\n    if(count > 1){\n\
    \      for(j = i; j < len; j++){\n        arr[j] = arr[j+1];\n      }\n      for(j\
    \ = len-1; j > i; j--){\n        arr[j] = arr[j-1];\n      }\n      i++;\n   \
    \ }\n  }\n  for(i = 0; i < len; i++){\n    count = 0;\n    for(j = i; j < len;\
    \ j++){\n      if(arr[j] == 1){\n        count++;\n      }\n    }\n    if(count\
    \ > 1){\n      for(j = i; j < len; j++){\n        arr[j] = arr[j-1];\n      }\n\
    \      for(j = len-1; j > i; j--){\n        arr[j] = arr[j+1];\n      }\n    \
    \  i--;\n    }\n  }\n  return arr;\n}\n", "    var len = arr.length;\n    var\
    \ sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            if(sorted[j] < sorted[i]){\n          \
    \      k = sorted[i];\n                sorted[i] = sorted[j];\n              \
    \  sorted[j] = k;\n            }\n        }\n    }\n    return sorted;\n}\n",
  "    var len = arr.length;\n    var ret = new Array(len);\n    var cnt = 0;\n  \
    \  for(var i = 0; i < len; i++){\n        var cur = arr[i];\n        var pos =\
    \ 0;\n        while(cur !== 0){\n            var curCnt = cnt;\n            while(cur\
    \ & 1){\n                cur >>= 1;\n                pos++;\n            }\n \
    \           cnt += curCnt;\n            while(curCnt & 1){\n                curCnt\
    \ >>= 1;\n                pos++;\n            }\n            cnt -= curCnt;\n\
    \            ret.push(cur);\n        }\n    }\n    return ret;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var aNum = parseInt(a, 10);\n        var bNum = parseInt(b, 10);\n\
    \        if(aNum === bNum){\n            return 0;\n        }\n        if(aNum\
    \ < bNum){\n            return -1;\n        }\n        return 1;\n    });\n  \
    \  return arr;\n}\n</code>\n<|/ a tags=javascript,sorting |>\n<| a |>\n<code>",
  "    var len = arr.length;\n    var ret = [];\n    var i, j, k;\n    for(i = 0;\
    \ i < len; i++){\n        for(j = i + 1; j < len; j++){\n            k = j;\n\
    \            while(k >= 0 && arr[k] === arr[j] ){\n                k--;\n    \
    \        }\n            if(k >= 0){\n                ret.push(arr[k]);\n     \
    \           arr[k] = arr[j];\n                arr[j] = k;\n            }\n   \
    \     }\n    }\n    return ret;\n}\n", "    var len = arr.length;\n    for(var\
    \ i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n            if(arr[j]\
    \ > arr[j+1]){\n                var temp = arr[j];\n                arr[j] = arr[j+1];\n\
    \                arr[j+1] = temp;\n            }\n        }\n    }\n    return\
    \ arr;\n}\n", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n\
    \        var b_ones = count_ones(b);\n        if(a_ones < b_ones){\n         \
    \   return -1;\n        }\n        if(a_ones > b_ones){\n            return 1;\n\
    \        }\n        return a - b;\n    });\n    return arr;\n}\n", "    var len\
    \ = arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len;\
    \ i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[i] == arr[j]){\n\
    \                k = j;\n                while(arr[k] == arr[j]){\n          \
    \          k++;\n                }\n                arr[k] = arr[i];\n       \
    \         arr[i] = k;\n                sorted.push(arr[i]);\n                sorted.push(arr[k]);\n\
    \                i = k;\n            }\n        }\n    }\n    return sorted;\n\
    }\n", "\tarr.sort(function(a, b){\n\t\tif(a==b) return 0;\n\t\tif(a<b) return\
    \ -1;\n\t\treturn 1;\n\t});\n\treturn arr;\n}\n", "  var len = arr.length;\n \
    \ if(len < 2){\n    return arr;\n  }\n  var ones = count_ones(arr);\n  var sorted_arr\
    \ = new Array(len);\n  for(var i=0; i<len; i++){\n    sorted_arr[i] = arr[i];\n\
    \  }\n  sorted_arr.sort(function(a, b){\n    var a_ones = count_ones(a);\n   \
    \ var b_ones = count_ones(b);\n    if(a_ones < b_ones){\n      return -1;\n  \
    \  }\n    if(a_ones > b_ones){\n      return 1;\n    }\n    return a - b;\n  });\n\
    \  for(var i=0; i<len; i++){\n    sorted_arr[i] = arr[i];\n  }\n  return sorted_arr;\n\
    }\n", "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n        var\
    \ b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x=='1';});\n        var b_ones = b_bin.split('').filter(function(x){return x=='1';});\n\
    \        var a_ones_count = a_ones.length;\n        var b_ones_count = b_ones.length;\n\
    \        var a_ones_sum = 0;\n        var b_ones_sum = 0;\n        a_ones.forEach(function(x){a_ones_sum\
    \ += x;});\n        b_ones.forEach(function(x){b_ones_sum += x;});\n        var\
    \ a_ones_average = a_ones_sum / a_ones_count;\n        var b_ones_average = b_ones_sum\
    \ / b_ones_count;\n        var a_ones_decimal = a_ones_average * 10;\n       \
    \ var b_ones_decimal = b_ones_average * 10;\n        if(a_ones_count > b_ones_count){\n\
    \            return a_ones_decimal-b_ones_decimal;\n        }\n        return\
    \ b_ones_decimal-a_ones_decimal;\n    });\n    return arr;\n}\n</code>\n<|/ a\
    \ tags=javascript,sorting,arrays |>\n<| a tags=javascript,sorting,arrays |>\n\
    <code>", "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n\
    \    for(i = 0; i < len; i++){\n        sorted[i] = 0;\n    }\n    for(i = 0;\
    \ i < len; i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[i]\
    \ == arr[j]){\n                sorted[i]++;\n                sorted[j]--;\n  \
    \          }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j =\
    \ i + 1; j < len; j++){\n            if(sorted[i] > sorted[j]){\n            \
    \    k = sorted[i];\n                sorted[i] = sorted[j];\n                sorted[j]\
    \ = k;\n            }\n        }\n    }\n    return sorted;\n}", "    arr.sort(function(a,\
    \ b){\n        var aNum = parseInt(a.toString(), 2);\n        var bNum = parseInt(b.toString(),\
    \ 2);\n        if(aNum === bNum){\n            return 0;\n        }\n        if(aNum\
    \ < bNum){\n            return -1;\n        }\n        if(aNum > bNum){\n    \
    \        return 1;\n        }\n    });\n    return arr;\n}\n", "    var len =\
    \ arr.length;\n    var swapped;\n    var sorted;\n    \n    while(len > 0){\n\
    \        swapped = false;\n        sorted = [];\n        \n        for(var i=0;\
    \ i<len; i++){\n            if(arr[i] > 0){\n                sorted.push(arr[i]);\n\
    \                swapped = true;\n            }\n        }\n        \n       \
    \ if(!swapped){\n            break;\n        }\n        \n        len = arr.length;\n\
    \        arr = sorted;\n    }\n    \n    return arr;\n}\n", "    var len = arr.length;\n\
    \    if(len < 2){\n        return arr;\n    }\n    var ones = count_ones(arr);\n\
    \    var len = arr.length;\n    var ret = new Array(len);\n    for(var i = 0;\
    \ i < len; i++){\n        var num = arr[i];\n        var pos = 0;\n        while(num){\n\
    \            if((num & 1) == 1){\n                ret[pos++] = num;\n        \
    \        num = 0;\n            }else{\n                num = (num>>1) | 0;\n \
    \           }\n        }\n        ret.sort(function(a, b){\n            return\
    \ a - b;\n        });\n        for(var j = 0; j < pos; j++){\n            ret[j]\
    \ = ret[j] - ones;\n        }\n    }\n    return ret;\n}\n", "    var len = arr.length;\n\
    \    var sorted = new Array(len);\n    for(var i=0; i<len; i++){\n        sorted[i]\
    \ = i;\n    }\n    sorted.sort(function(a, b){\n        var a_bin = bin(a);\n\
    \        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x=='1';});\n        var b_ones = b_bin.split('').filter(function(x){return x=='1';});\n\
    \        var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_count = a_ones_len + a_ones_len/2;\n        var b_ones_count\
    \ = b_ones_len + b_ones_len/2;\n        var a_ones_decimal = a_ones_len/2;\n \
    \       var b_ones_decimal = b_ones_len/2;\n        var a_ones_decimal = a_ones_len/2;\n\
    \        var b_ones_decimal = b_ones_len/2;\n        if(a_ones_count < b_ones_count){\n\
    \            return -1;\n        }else if(a_ones_count > b_ones_count){\n    \
    \        return 1;\n        }else{\n            if(a_ones_decimal<b_ones_decimal){\n\
    \                return -1;\n            }else if(a_ones_decimal>b_ones_decimal){\n\
    \                return 1;\n            }else{\n                return 0;\n  \
    \          }\n        }\n    });\n    return sorted;\n}\n</code>\n<|/ a tags=sorting,javascript,arrays\
    \ |>\n<| a tags=sorting,javascript,arrays |>\n<code>", "    var len = arr.length;\n\
    \    var sorted_arr = [];\n    var temp = 0;\n    for(var i = 0; i < len; i++){\n\
    \        temp = arr[i];\n        for(var j = i; j > 0; j--){\n            if(arr[j-1]\
    \ > temp){\n                temp = arr[j-1];\n            }\n        }\n     \
    \   sorted_arr.push(temp);\n    }\n    return sorted_arr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_len\
    \ = a_bin.length;\n        var b_len = b_bin.length;\n        var a_ones = a_bin.substr(a_len-1,1);\n\
    \        var b_ones = b_bin.substr(b_len-1,1);\n        var a_ones_num = parseInt(a_ones);\n\
    \        var b_ones_num = parseInt(b_ones);\n        if(a_ones_num > b_ones_num){\n\
    \            return 1;\n        }\n        if(a_ones_num < b_ones_num){\n    \
    \        return -1;\n        }\n        return 0;\n    });\n    return arr;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=javascript,sorting |>\n<code>", "   \
    \ var len = arr.length;\n    for(var i=0; i<len; i++){\n        for(var j=0; j<len;\
    \ j++){\n            if(arr[j] > arr[j+1]){\n                var temp = arr[j];\n\
    \                arr[j] = arr[j+1];\n                arr[j+1] = temp;\n      \
    \      }\n        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var sorted_arr = [];\n    var i;\n    for(i = 0; i < len; i++){\n       \
    \ sorted_arr.push(arr[i]);\n    }\n    for(i = 0; i < len; i++){\n        for(var\
    \ j = 0; j < len; j++){\n            if(arr[j] > arr[j + 1]){\n              \
    \  var temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j\
    \ + 1] = temp;\n            }\n        }\n    }\n    return sorted_arr;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ Try `sort_array([-10, -9, -8, -7, -6])`\n<|/ c |>\n<| c |>\nYes, I know. That's\
    \ why I wrote \"For similar number of ones, sort based on decimal value.\" I didn't\
    \ want to give the full solution, but only a hint how to solve the problem.\n\
    <|/ c |>\n<| c |>\nI see. Thanks for your answer. I'll try to implement it myself\
    \ and see how it goes.\n<|/ c |>\n<| c |>\nI added a solution that sorts negative\
    \ numbers as well.\n<|/ c |>\n<| c |>\nThank you so much! I really appreciate\
    \ it!\n<|/ c |>\n<| a tags=javascript,arrays |>\n<code>", "    var len = arr.length;\n\
    \    var ret = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        ret[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            if(arr[i] == 1){\n                for(k\
    \ = j; k < len; k++){\n                    ret[k] = arr[k];\n                }\n\
    \                for(k = j; k < len; k++){\n                    arr[k] = ret[k];\n\
    \                }\n                for(k = j; k < len; k++){\n              \
    \      arr[k] = 1;\n                }\n            }\n        }\n    }\n    return\
    \ arr;\n}\n", "    var len = arr.length;\n    var sorted = new Array(len);\n \
    \   for(var i=0; i<len; i++){\n        sorted[i] = arr[i];\n    }\n    sorted.sort(function(a,\
    \ b){\n        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.substr(a_bin.length-a.length);\n        var b_ones = b_bin.substr(b_bin.length-b.length);\n\
    \        var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_num = parseInt(a_ones, 2);\n        var b_ones_num = parseInt(b_ones,\
    \ 2);\n        var a_ones_dec = parseInt(a_ones_len, 10) - a_ones_num;\n     \
    \   var b_ones_dec = parseInt(b_ones_len, 10) - b_ones_num;\n        var a_ones_dec\
    \ = a_ones_dec < 0 ? 0 : a_ones_dec;\n        var b_ones_dec = b_ones_dec < 0\
    \ ? 0 : b_ones_dec;\n        var a_ones_dec = a_ones_dec > 0 ? a_ones_dec : 0;\n\
    \        var b_ones_dec = b_ones_dec > 0 ? b_ones_dec : 0;\n        var a_ones_dec\
    \ = a_ones_dec < b_ones_dec ? a_ones_dec : b_ones_dec;\n        var b_ones_dec\
    \ = b_ones_dec < a_ones_dec ? b_ones_dec : a_ones_dec;\n        var a_ones_dec\
    \ = a_ones_dec < b_ones_dec ? a_ones_dec : b_ones_dec;\n        var b_ones_dec\
    \ = b_ones_dec < a_ones_dec ? b_ones_dec : a_ones_dec;\n        var a_ones_dec\
    \ = a_ones_dec < b_ones_dec ? a_ones_dec : b_ones_dec;\n        var b_ones_dec\
    \ = b_ones_dec < a_ones_dec ? b_ones_dec : a_ones_dec;\n        var a_ones_dec\
    \ = a_ones_dec < b_ones_dec ? a_ones_dec : b_ones_dec;\n        var b_ones_dec\
    \ = b_ones_dec < a_ones_dec ? b_ones_dec : a_ones_dec;\n        var a_ones_dec\
    \ = a_ones_dec < b_ones_dec ? a_ones_dec : b_ones_dec;\n        var b_ones_de",
  "    var len = arr.length;\n    var temp = 0;\n    var i = 0;\n    while(i < len){\n\
    \        while(arr[i] < 0){\n            i++;\n        }\n        temp = arr[i];\n\
    \        arr[i] = arr[i-1];\n        arr[i-1] = temp;\n        i++;\n    }\n \
    \   return arr;\n}\n", "  var len = arr.length;\n  if(len === 0) return arr;\n\
    \  var max = 0;\n  var min = Infinity;\n  for(var i=0; i<len; i++){\n    var curr\
    \ = arr[i];\n    if(curr > max){\n      max = curr;\n    }\n    if(curr < min){\n\
    \      min = curr;\n    }\n  }\n  var mid = Math.floor((max - min) / 2);\n  var\
    \ left = arr.slice(0, mid);\n  var right = arr.slice(mid);\n  return sort_array(left).concat(sort_array(right));\n\
    }\n", "    var len = arr.length;\n    var temp = 0;\n    var result = [];\n  \
    \  var i = 0;\n    var j = 0;\n    for(i = 0; i < len; i++){\n        for(j =\
    \ 0; j < len; j++){\n            if(arr[j] == arr[i]){\n                temp++;\n\
    \            }\n        }\n        result.push(temp);\n        temp = 0;\n   \
    \ }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n      \
    \      if(arr[j] == arr[i]){\n                temp++;\n            }\n       \
    \ }\n        result.push(temp);\n        temp = 0;\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = 0; j < len; j++){\n            if(arr[j] == arr[i]){\n\
    \                temp++;\n            }\n        }\n        result.push(temp);\n\
    \        temp = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j\
    \ < len; j++){\n            if(arr[j] == arr[i]){\n                temp++;\n \
    \           }\n        }\n        result.push(temp);\n        temp = 0;\n    }\n\
    \    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n          \
    \  if(arr[j] == arr[i]){\n                temp++;\n            }\n        }\n\
    \        result.push(temp);\n        temp = 0;\n    }\n    for(i = 0; i < len;\
    \ i++){\n        for(j = 0; j < len; j++){\n            if(arr[j] == arr[i]){\n\
    \                temp++;\n            }\n        }\n        result.push(temp);\n\
    \        temp = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j\
    \ < len; j++){\n            if(arr[j] == arr[i]){\n                temp++;\n \
    \           }\n        }\n        result.push(temp);\n        temp = 0;\n    }\n\
    \    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n          \
    \  if(arr[j] == arr[i]){\n                temp++;\n            }\n        }\n\
    \        result.push(temp);\n        temp = 0;\n    }\n    for(i = 0; i < len;\
    \ i++){\n        for(j = 0; j < len; j++){\n            if(arr[j] == arr[i]){\n\
    \                temp++;\n            }\n        }\n        result.push(temp);\n\
    \        temp = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j\
    \ < len; j++){\n            if(arr[j] == arr[i]){\n                temp++;\n \
    \           }\n        }\n        result.push(temp);\n        temp = 0;\n    }\n\
    \    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n          \
    \  if(arr[j] == arr[i]){\n                temp++;\n            }\n        }\n\
    \        result.push(temp);\n        temp = 0;\n    }\n    for(i = 0; i < len;\
    \ i++){\n        for(j = 0; j < len; j++){\n            if(arr[j] == arr[i]){\n\
    \                temp++;\n            }\n        }\n        result.push(temp);\n\
    \        temp = 0;\n    }\n", "    arr.sort(function(a, b){\n        var a_bin\
    \ = bin(a);\n        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x === '1';});\n        var b_ones = b_bin.split('').filter(function(x){return\
    \ x === '1';});\n        var a_ones_count = a_ones.length;\n        var b_ones_count\
    \ = b_ones.length;\n        if(a_ones_count > b_ones_count){\n            return\
    \ 1;\n        }else if(a_ones_count < b_ones_count){\n            return -1;\n\
    \        }else{\n            return a_bin - b_bin;\n        }\n    });\n    return\
    \ arr;\n}\n", "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n   \
    \     var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var b_ones = b_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var a_ones_count = a_ones.length;\n        var b_ones_count\
    \ = b_ones.length;\n        var a_ones_sum = 0;\n        var b_ones_sum = 0;\n\
    \        for(var i=0; i<a_ones_count; i++){\n            a_ones_sum += a_ones[i];\n\
    \        }\n        for(var i=0; i<b_ones_count; i++){\n            b_ones_sum\
    \ += b_ones[i];\n        }\n        return a_ones_sum - b_ones_sum;\n    });\n\
    \    return arr;\n}\n", "    arr.sort(function(a, b){\n        var aNum = parseInt(a.toString(),\
    \ 2);\n        var bNum = parseInt(b.toString(), 2);\n        if(aNum === bNum){\n\
    \            return 0;\n        }\n        if(aNum > bNum){\n            return\
    \ 1;\n        }\n        return -1;\n    });\n    return arr;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "\tarr.sort(function(a, b){\n\t\t\
    var a_bin = bin(a);\n\t\tvar b_bin = bin(b);\n\t\tvar a_ones = a_bin.split('').filter(function(x){return\
    \ x==='1';});\n\t\tvar b_ones = b_bin.split('').filter(function(x){return x==='1';});\n\
    \t\tvar a_ones_count = a_ones.length;\n\t\tvar b_ones_count = b_ones.length;\n\
    \t\tvar a_ones_sum = 0;\n\t\tvar b_ones_sum = 0;\n\t\tfor(var i=0; i<a_ones_count;\
    \ i++){\n\t\t\ta_ones_sum += a_ones[i];\n\t\t}\n\t\tfor(var i=0; i<b_ones_count;\
    \ i++){\n\t\t\tb_ones_sum += b_ones[i];\n\t\t}\n\t\tvar a_ones_decimal = a_ones_sum/a_ones_count;\n\
    \t\tvar b_ones_decimal = b_ones_sum/b_ones_count;\n\t\treturn a_ones_decimal<b_ones_decimal?-1:a_ones_decimal>b_ones_decimal?1:0;\n\
    \t});\n\treturn arr;\n}\n", "    return arr.sort(function(a, b){\n        var\
    \ a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n        var a_ones_comp\
    \ = a_ones - b_ones;\n        var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp\
    \ === 0){\n            return 0;\n        }\n        if(b_ones_comp === 0){\n\
    \            return 1;\n        }\n        return a_ones_comp * b_ones_comp;\n\
    \    });\n}\n", "    var len = arr.length;\n    var ret = [];\n    var i, j, k;\n\
    \    for(i = 0; i < len; i++){\n        for(j = i+1; j < len; j++){\n        \
    \    for(k = 0; k < len; k++){\n                if(arr[k] > arr[j] && arr[k] >\
    \ arr[i]){\n                    ret[k] = arr[k];\n                }else if(arr[k]\
    \ < arr[j] && arr[k] < arr[i]){\n                    ret[k] = arr[j];\n      \
    \          }else if(arr[k] == arr[j]){\n                    ret[k] = arr[i];\n\
    \                }\n            }\n        }\n    }\n    return ret;\n}\n", " \
    \   var len = arr.length;\n    var sorted = new Array(len);\n    var i, j, k;\n\
    \    for(i = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n    for(i\
    \ = 0; i < len; i++){\n        for(j = i+1; j < len; j++){\n            if(arr[j]\
    \ < arr[i]){\n                k = j;\n                while(arr[k] == arr[i]){\n\
    \                    k++;\n                }\n                arr[k] = arr[i];\n\
    \                arr[i] = k;\n            }\n        }\n    }\n    return sorted;\n\
    }\n", "\tarr.sort(function(a, b){\n\t\tif(a>b){\n\t\t\treturn 1;\n\t\t}\n\t\t\
    if(a<b){\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t});\n\treturn arr;\n}\n",
  "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i =\
    \ 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j - 1] > arr[j]){\n\
    \            k = j;\n            while(k >= 0 && arr[k - 1] > arr[k]){\n     \
    \           arr[k] = arr[k - 1];\n                k--;\n            }\n      \
    \      arr[k] = arr[j];\n            j--;\n        }\n        arr[j] = arr[i];\n\
    \    }\n    return arr;\n}\n", "    var len = arr.length;\n    var sorted = [];\n\
    \    var i, j, k;\n    for(i = 0; i < len; i++){\n        j = i;\n        while(j\
    \ > 0 && arr[j - 1] > arr[j]){\n            k = j;\n            while(k >= 0 &&\
    \ arr[k - 1] > arr[k]){\n                arr[k] = arr[k - 1];\n              \
    \  k--;\n            }\n            arr[k] = arr[j];\n            j--;\n     \
    \   }\n        arr[j] = arr[i];\n    }\n    return arr;\n}\n", "  if(arr.length\
    \ < 2){\n    return arr;\n  }\n  var len = arr.length;\n  var swapped;\n  do {\n\
    \    swapped = false;\n    for(var i = 1; i < len; i++){\n      if(arr[i-1] >\
    \ arr[i]){\n        var temp = arr[i];\n        arr[i] = arr[i-1];\n        arr[i-1]\
    \ = temp;\n        swapped = true;\n      }\n    }\n  } while(swapped);\n  \n\
    \  for(var i = 1; i < len; i++){\n    var count = 0;\n    for(var j = i; j > 0;\
    \ j--){\n      if(arr[j] % 2 === 1){\n        count++;\n      }\n    }\n    for(var\
    \ j = i; j > 0; j--){\n      if(arr[j] % 2 === 0){\n        arr[j] = arr[j] -\
    \ count;\n      }\n    }\n  }\n  return arr;\n}\n", "  var len = arr.length;\n\
    \  if(len < 2){\n    return arr;\n  }\n  var ones = count_ones(arr);\n  var len\
    \ = ones.length;\n  if(len === 0){\n    return arr;\n  }\n  var max_ones = Math.pow(2,\
    \ len) - 1;\n  if(max_ones < 0){\n    throw new Error('Too many ones in array');\n\
    \  }\n  var max_val = Math.pow(2, len - 1) - 1;\n  if(max_val < 0){\n    throw\
    \ new Error('Too many zeros in array');\n  }\n  if(ones[0] > max_ones){\n    throw\
    \ new Error('Too many ones in array');\n  }\n  if(ones[len - 1] > max_val){\n\
    \    throw new Error('Too many zeros in array');\n  }\n  if(ones[0] === max_ones\
    \ && ones[len - 1] === max_val){\n    return arr;\n  }\n  var result = [];\n \
    \ for(var i = 0; i !== len; i++){\n    var val = arr[i];\n    var index = ones[i];\n\
    \    result.push(val);\n    result.push(index);\n  }\n  return result;\n}\n",
  "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i =\
    \ 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j - 1] > arr[j]){\n\
    \            k = j;\n            while(k >0 && arr[k - 1] > arr[k]){\n       \
    \         arr[k] = arr[k - 1];\n                k--;\n            }\n        \
    \    arr[k] = arr[j - 1];\n            j--;\n        }\n        arr[j] = arr[i];\n\
    \    }\n    return arr;\n}\n", "    var len = arr.length;\n    var sorted = [];\n\
    \    var i, j, tmp;\n    for(i = 0; i < len; i++){\n        tmp = arr[i];\n  \
    \      for(j = 0; j < len; j++){\n            if(arr[j] == tmp){\n           \
    \     sorted.push(tmp);\n                break;\n            }\n        }\n  \
    \  }\n    for(i = 0; i < len; i++){\n        tmp = arr[i];\n        for(j = 0;\
    \ j < len; j++){\n            if(arr[j] == tmp){\n                sorted.push(tmp);\n\
    \                break;\n            }\n        }\n    }\n    return sorted;\n\
    }\n", "    var len = arr.length;\n    var sorted = new Array(len);\n    for(var\
    \ i=0; i<len; i++){\n        sorted[i] = i;\n    }\n    sorted.sort(function(a,\
    \ b){\n        var aNum = arr[a];\n        var bNum = arr[b];\n        if(aNum\
    \ === bNum){\n            return 0;\n        }\n        if(aNum > bNum){\n   \
    \         return 1;\n        }\n        return -1;\n    });\n    for(var i=0;\
    \ i<len; i++){\n        sorted[i] = arr[i];\n    }\n    return sorted;\n}\n",
  "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n        var b_bin =\
    \ bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return x==='1';});\n\
    \        var b_ones = b_bin.split('').filter(function(x){return x==='1';});\n\
    \        var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_count = a_ones_len / 2;\n        var b_ones_count = b_ones_len\
    \ / 2;\n        var a_ones_decimal = a_ones_len % 2;\n        var b_ones_decimal\
    \ = b_ones_len % 2;\n        var a_ones_decimal = a_ones_decimal ? a_ones_decimal\
    \ : 1;\n        var b_ones_decimal = b_ones_decimal ? b_ones_decimal : 1;\n  \
    \      var a_ones_decimal = a_ones_decimal ? a_ones_decimal : 1;\n        var\
    \ b_ones_decimal = b_ones_decimal ? b_ones_decimal : 1;\n        var a_ones_decimal\
    \ = a_ones_decimal ? a_ones_decimal : 1;\n        var b_ones_decimal = b_ones_decimal\
    \ ? b_ones_decimal : 1;\n        var a_ones_decimal = a_ones_decimal ? a_ones_decimal\
    \ : 1;\n        var b_ones_decimal = b_ones_decimal ? b_ones_decimal : 1;\n  \
    \      var a_ones_decimal = a_ones_decimal ? a_ones_decimal : 1;\n        var\
    \ b_ones_decimal = b_ones_decimal ? b_ones_decimal : 1;\n        var a_ones_decimal\
    \ = a_ones_decimal ? a_ones_decimal : 1;\n        var b_ones_decimal = b_ones_decimal\
    \ ? b_ones_decimal : 1;\n        var a_ones_decimal = a_ones_decimal ? a_ones_decimal\
    \ : 1;\n        var b_ones_decimal = b_ones_decimal ? b_ones_decimal : 1;\n  \
    \      var a_ones_decimal = a_ones_decimal ? a_ones_decimal : 1;\n        var\
    \ b_ones_decimal = b_ones_decimal ? b_ones_decimal : 1;\n        var a_ones_decimal\
    \ = a_ones_decimal ? a_ones_decimal : 1;\n        var b_ones_decimal = b_ones_decimal\
    \ ? b_ones_decimal : 1;\n        var a_ones_decimal = a_ones_decimal ? a_ones_decimal\
    \ : 1;\n        var b_ones_decimal = b_ones_decimal ? b_ones_decimal : 1;\n  \
    \      var a_ones_decimal = a_ones_decimal ? a_ones_decimal : 1;\n        var ",
  "    arr.sort(function(a, b){\n        var a_ones = count_ones(a),\n           \
    \ b_ones = count_ones(b),\n            a_ones_comp = a_ones - b_ones,\n      \
    \      b_ones_comp = b_ones - a_ones,\n            a_comp = count_ones(a) - count_ones(b),\n\
    \            b_comp = count_ones(b) - count_ones(a),\n            a_comp_dec =\
    \ a_comp * 10 + a_ones_comp,\n            b_comp_dec = b_comp * 10 + b_ones_comp;\n\
    \        return a_comp_dec - b_comp_dec;\n    });\n    return arr;\n}\n", "  \
    \  var len = arr.length;\n    for(var i=0; i<len; i++){\n        var num = arr[i];\n\
    \        var bin = num.toString(2);\n        bin = bin.substr(bin.length-4);\n\
    \        bin = parseInt(bin, 2);\n        arr[i] = bin;\n    }\n    arr.sort(function(a,\
    \ b){\n        return a-b;\n    });\n    return arr;\n}\n</code>\n<|/ a tags=javascript,sorting\
    \ |>\n<| c |>\nThis doesn't seem to work. `sort_array([1, 5, 2, 3, 4])` returns\
    \ `[1, 2, 3, 4, 5]`.\n<|/ c |>\n<| c |>\nIt does work. Check it out here: https://jsfiddle.net/k5L7j3wq/\n\
    <|/ c |>\n<| c |>\nIt doesn't work for me. `sort_array([1, 5, 2, 3, 4])` returns\
    \ `[1, 2, 3, 4, 5]`.\n<|/ c |>\n<| c |>\nIt does work. Check it out here: https://jsfiddle.net/k5L7j3wq/\n\
    <|/ c |>\n<| c |>\nIt doesn't work for me. `sort_array([1, 5, 2, 3, 4])` returns\
    \ `[1, 2, 3, 4, 5]`.\n<|/ c |>\n<| a dscore=4 |>\n<code>", "  var len = arr.length;\n\
    \  if(len < 2){\n    return arr;\n  }\n  var ones = arr.filter(function(i){\n\
    \    return i === 1;\n  });\n  var zeros = arr.filter(function(i){\n    return\
    \ i === 0;\n  });\n  var ones_len = ones.length;\n  var zeros_len = zeros.length;\n\
    \  var max_len = Math.max(ones_len, zeros_len);\n  var min_len = Math.min(ones_len,\
    \ zeros_len);\n  var ones_count = 0, zeros_count = 0;\n  var result = [];\n  for(var\
    \ i = min_len; i <= max_len; i++){\n    if(ones_count < ones_len && zeros_count\
    \ < zeros_len){\n      if(ones[i] === 1){\n        ones_count++;\n      }else{\n\
    \        zeros_count++;\n      }\n    }else{\n      if(ones_count < ones_len){\n\
    \        result.push(ones[i]);\n        ones_count++;\n      }else{\n        result.push(zeros[zeros_count\
    \ - ones_count]);\n        zeros_count--;\n      }\n    }\n  }\n  return result;\n\
    }\n", "    var len = arr.length;\n    for(var i=0; i<len; i++){\n        var num\
    \ = arr[i];\n        for(var j=0; j<len; j++){\n            if(num == arr[j]){\n\
    \                arr.splice(j,1);\n                len--;\n            }\n   \
    \     }\n    }\n    arr.sort(function(a,b){\n        if(a>b) return 1;\n     \
    \   if(a<b) return -1;\n        return 0;\n    });\n    return arr;\n}\n", " \
    \   var len = arr.length;\n    if(len < 2){\n        return arr;\n    }\n    var\
    \ ones = count_ones(arr);\n    var len = arr.length;\n    var ret = [];\n    var\
    \ i, j, k;\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n\
    \            if(arr[j] == i){\n                ret.push(arr[j]);\n           \
    \ }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len;\
    \ j++){\n            if(arr[j] == i){\n                ret.push(arr[j]);\n   \
    \         }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j =\
    \ 0; j < len; j++){\n            if(arr[j] == i){\n                ret.push(arr[j]);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j] == i){\n                ret.push(arr[j]);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j] == i){\n                ret.push(arr[j]);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j] == i){\n                ret.push(arr[j]);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j] == i){\n                ret.push(arr[j]);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j] == i){\n                ret.push(arr[j]);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j] == i){\n                ret.push(arr[j]);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j] == i){\n                ret.push(arr[j]);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j] == i){\n                ret.push(arr[j]);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j] == i){\n                ret.push(arr[j]);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j] == i){\n                ret.push(arr[j]);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j", "  var len = arr.length;\n  if(len\
    \ < 1) return arr;\n  if(len == 1) return [arr[0]];\n  var result = [];\n  var\
    \ ones = count_ones(arr);\n  var maxOnes = ones[0];\n  var minOnes = ones[1];\n\
    \  var maxDecimal = maxOnes - minOnes;\n  var minDecimal = minOnes - maxOnes;\n\
    \  var maxDecimalBits = maxDecimal * Math.log(2);\n  var minDecimalBits = minDecimal\
    \ * Math.log(2);\n  var maxDecimalExponent = Math.floor(Math.log(maxDecimalBits)\
    \ / Math.LN10);\n  var minDecimalExponent = Math.floor(Math.log(minDecimalBits)\
    \ / Math.LN10);\n  var maxDecimalFraction = Math.pow(10, maxDecimalExponent);\n\
    \  var minDecimalFraction = Math.pow(10, minDecimalExponent);\n  var maxDecimal\
    \ = Math.ceil(maxDecimalFraction * Math.pow(10, maxDecimalBits));\n  var minDecimal\
    \ = Math.ceil(minDecimalFraction * Math.pow(10, minDecimalBits));\n  var maxDecimalNum\
    \ = Math.floor(maxDecimal);\n  var minDecimalNum = Math.floor(minDecimal);\n \
    \ var maxDecimalBitsNum = maxDecimalBits.toString();\n  var minDecimalBitsNum\
    \ = minDecimalBits.toString();\n  var maxDecimalExponentNum = maxDecimalExponent.toString();\n\
    \  var minDecimalExponentNum = minDecimalExponent.toString();\n  var maxDecimalFractionNum\
    \ = maxDecimalFraction.toString();\n  var minDecimalFractionNum = minDecimalFraction.toString();\n\
    \  var maxDecimalNumStr = Math.pow(10, maxDecimalNum).toString();\n  var minDecimalNumStr\
    \ = Math.pow(10, minDecimalNum).toString();\n  var maxDecimalBitsStr = (maxDecimalBitsNum.length\
    \ < maxDecimalNumStr.length ? maxDecimalBitsNum : maxDecimalNumStr);\n  var minDecimalBitsStr\
    \ = (minDecimalBitsNum.length < minDecimalNumStr.length ? minDecimalBitsNum :\
    \ minDecimalNumStr);\n  var maxDecimalExponentStr = (maxDecimalExponentNum.length\
    \ < maxDecimalNumStr.length ? maxDecimalExponentNum : maxDecimalNumStr);\n  var\
    \ minDecimalExponentStr = (minDecimalExponentNum.length < minDecimalNumStr.length\
    \ ? minDecimalExponentNum : minDecimalNumStr);\n  var maxDecimalFractionStr =\
    \ (maxDecimalFractionNum.length < maxDecimalNumStr.length ? maxDecimalFractionNum\
    \ : maxDecimalNumStr);\n  var minDecimalFractionStr = (minDecimalFractionNum.length\
    \ < minDecimalNumStr.length ? minDecimalFractionNum : minDecimalNumStr);\n  var\
    \ maxDecimalStr = (max"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

language: js
name: HumanEval_85_add
results:
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = [], odd = [];\n    for(var i=0; i<lst.length; i++){\n\
    \        if(i % 2 === 0){\n            even.push(lst[i]);\n        } else {\n\
    \            odd.push(lst[i]);\n        }\n    }\n    return even.concat(odd);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpafgrih4o.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpafgrih4o.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for (var i = 0; i < lst.length; i++){\n    if (i\
    \ % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp5k7m1nob.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5k7m1nob.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy6ac092g.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy6ac092g.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var evenSum = 0;\n    for(var i = 0; i< lst.length; i++){\n \
    \       if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n   \
    \ }\n    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp89tkzilz.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp89tkzilz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(i\
    \ % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdl7dqdvj.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdl7dqdvj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    let odd = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            even = even + lst[i];\n  \
    \      }else{\n            odd = odd + lst[i];\n        }\n    }\n    return even;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmplbrap6uo.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplbrap6uo.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = []\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            even.push(lst[i])\n        }\n    }\n    return even\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n\
    \  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp8ijtrrgi.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8ijtrrgi.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmwff2bzy.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmwff2bzy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            even += lst[i];\n        }else{\n\
    \            odd += lst[i];\n        }\n    }\n    return even + odd;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n\
    \  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp2ittaiig.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ittaiig.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpebqdwzzp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpebqdwzzp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var evenSum = 0;\n    for(var i = 0; i<lst.length; i++){\n  \
    \      if(lst[i]%2 === 0){\n            evenSum += lst[i];\n        }\n    }\n\
    \    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmphari2tfw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphari2tfw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = 0;\n  for (let i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] % 2 === 0){\n      even += lst[i];\n    }\n  }\n  return even;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmppbwep3xk.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppbwep3xk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = []\n    for(var i = 0; i< lst.length; i++){\n    \
    \    if(lst[i] % 2 === 0){\n            even.push(lst[i])\n        }\n    }\n\
    \    return even\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpytevj562.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpytevj562.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp2n3x10pu.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2n3x10pu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ != 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp0ywauc4j.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0ywauc4j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var evenSum = 0;\n    for(var i=0; i<lst.length; i++){\n    \
    \    if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n    }\n\
    \    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpygr7ug52.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpygr7ug52.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    let odd = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            even += lst[i];\n        }else{\n\
    \            odd += lst[i];\n        }\n    }\n    return even + odd;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n\
    \  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpuwfi30aw.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuwfi30aw.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmph0su818q.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmph0su818q.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    let odd = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            even += lst[i];\n        }else{\n\
    \            odd += lst[i];\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmnclzsyj.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmnclzsyj.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n  \
    \  }\n    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpwp5wiatp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwp5wiatp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n  \
    \  }\n    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpwp5wiatp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwp5wiatp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var evenSum = 0;\n  for(var i = 0; i< lst.length; i++){\n    if(lst[i]%2\
    \ === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n\
    \  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpusxwn523.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpusxwn523.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n  \
    \  }\n    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpwp5wiatp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwp5wiatp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(i % 2 === 0){\n            evenSum += lst[i];\n        }\n    }\n\
    \    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmprwbvghvq.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprwbvghvq.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = []\n  let odd = []\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(i % 2 === 0){\n      even.push(lst[i])\n    }else{\n      odd.push(lst[i])\n\
    \    }\n  }\n  return even.concat(odd)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmplux38byw.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmplux38byw.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]\
    \ % 2 === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpi1_v9lqp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi1_v9lqp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]\
    \ % 2 === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpi1_v9lqp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi1_v9lqp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i = 0; i < lst.length; i++){\n    if(i\
    \ % 2 == 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpctakwbfj.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpctakwbfj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var even = 0;\n  var odd = 0;\n  for(var i=0; i<lst.length; i++){\n\
    \    if(lst[i]%2 === 0){\n      even+=lst[i];\n    }else{\n      odd+=lst[i];\n\
    \    }\n  }\n  return even+odd;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpp40pa7pl.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp40pa7pl.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n  \
    \  }\n    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpwp5wiatp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwp5wiatp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] % 2 === 0){\n            even += lst[i];\n        }\n    }\n \
    \   return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmpa21ucw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmpa21ucw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = 0;\n  let odd = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] % 2 === 0){\n      even += lst[i];\n    }else{\n      odd\
    \ += lst[i];\n    }\n  }\n  return even + odd;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpim9o6271.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpim9o6271.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ != 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp0ywauc4j.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0ywauc4j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]\
    \ % 2 != 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpz7alv2h4.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz7alv2h4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2==0){\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp9i6olb1j.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9i6olb1j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    let odd = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            even += lst[i];\n        }else{\n\
    \            odd += lst[i];\n        }\n    }\n    return even+odd;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n\
    \  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmphrvkv2eh.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphrvkv2eh.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(i % 2 === 0){\n            evenSum += lst[i];\n        }\n    }\n\
    \    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmprwbvghvq.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprwbvghvq.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  if(lst.length < 2){\n    return lst.length\n  }\n  \n  for(var\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] % 2 === 1){\n      lst[i] += lst[i-1]\n\
    \    }\n  }\n  return lst[0]\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpn6akrp72.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn6akrp72.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for (let i = 0; i < lst.length; i++){\n   \
    \ if (i % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdqpvnrqe.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdqpvnrqe.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = 0;\n  for (let i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] % 2 === 0){\n      even += lst[i];\n    }\n  }\n  return even;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmppbwep3xk.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppbwep3xk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = []\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(i % 2 === 0){\n            even.push(lst[i])\n        }\n    }\n    return\
    \ even.reduce((a, b) => a + b)\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpt17j6r35.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt17j6r35.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var evenSum = 0;\n    for(var i = 0; i< lst.length; i++){\n \
    \       if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n   \
    \ }\n    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp89tkzilz.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp89tkzilz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for (var i = 0; i < lst.length; i++){\n    if (i\
    \ % 2 == 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpt8bjzo02.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt8bjzo02.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var evenSum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp5x34lgdf.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5x34lgdf.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = 0;\n    var odd = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]%2==0){\n            even+=lst[i];\n        }else{\n       \
    \     odd+=lst[i];\n        }\n    }\n    return even+odd;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpcupjbq52.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcupjbq52.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenIndexes = []\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(i % 2 === 0){\n            evenIndexes.push(i)\n        }\n    }\n\
    \    let sum = 0\n    for(let i = 0; i < evenIndexes.length; i++){\n        sum\
    \ += lst[evenIndexes[i]]\n    }\n    return sum\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpw3hs3ay6.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw3hs3ay6.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = 0;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] % 2 === 0){\n            even += lst[i];\n        }\n    }\n \
    \   return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpudqt1dj5.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpudqt1dj5.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenIndexes = [];\n    let oddIndexes = [];\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n            evenIndexes.push(i);\n\
    \        }else{\n            oddIndexes.push(i);\n        }\n    }\n    let sum\
    \ = 0;\n    for(let i = 0; i < evenIndexes.length; i++){\n        sum += lst[evenIndexes[i]];\n\
    \    }\n    for(let i = 0; i < oddIndexes.length; i++){\n        sum += lst[oddIndexes[i]];\n\
    \    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp3i682xfd.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3i682xfd.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 1){\n\
    \            lst[i] += lst[lst.length-1];\n            lst.pop();\n        }\n\
    \    }\n    return lst;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpzudu322e.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzudu322e.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = 0;\n    for(var i = 0; i<lst.length; i++){\n     \
    \   if(lst[i] % 2 === 0){\n            even+=lst[i];\n        }\n    }\n    return\
    \ even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpthwzme2l.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpthwzme2l.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var evenSum = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n  \
    \  }\n    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp44dhlopc.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp44dhlopc.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] % 2 === 0){\n            even += lst[i];\n        }\n    }\n \
    \   return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmpa21ucw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmpa21ucw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = []\n  let odd = []\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(i % 2 === 0){\n      even.push(lst[i])\n    }else{\n      odd.push(lst[i])\n\
    \    }\n  }\n  return even.concat(odd)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmplux38byw.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmplux38byw.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = 0;\n  let odd = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] % 2 === 0){\n      even += lst[i];\n    }else{\n      odd\
    \ += lst[i];\n    }\n  }\n  return even+odd;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmprq6sd3xb.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprq6sd3xb.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for (let i = 0; i < lst.length; i++){\n   \
    \ if (i % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdqpvnrqe.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdqpvnrqe.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = 0;\n    for(var i=0; i<lst.length; i++){\n       \
    \ if(lst[i]%2 === 0){\n            even += lst[i];\n        }\n    }\n    return\
    \ even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpfc4engoj.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfc4engoj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n    \
    \    if(lst[i] % 2 === 1){\n            sum += lst[i];\n        }\n    }\n   \
    \ return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmswjgvef.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmswjgvef.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for (var i = 0; i < lst.length; i++){\n    if (i\
    \ % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp5k7m1nob.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5k7m1nob.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmphpox9e3w.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphpox9e3w.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(i\
    \ % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdl7dqdvj.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdl7dqdvj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = []\n  for (let i = 0; i < lst.length; i++){\n    if\
    \ (i % 2 === 0){\n      even.push(lst[i])\n    }\n  }\n  return even.reduce((a,\
    \ b) => a + b)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp38azxnr9.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp38azxnr9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = 0;\n    for(var i = 0; i< lst.length; i++){\n    \
    \    if(lst[i] % 2 === 0){\n            even += lst[i];\n        }\n    }\n  \
    \  return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp5q6r5y0j.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5q6r5y0j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i] % 2 ===\
    \ 0){\n            lst[i] += lst[i-1];\n            lst[i-1] = 0;\n        }\n\
    \    }\n    return lst[lst.length-1];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpq86gixi7.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq86gixi7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp2n3x10pu.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2n3x10pu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(i\
    \ % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdl7dqdvj.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdl7dqdvj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = 0;\n  let odd = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(i % 2 === 0){\n      even += lst[i];\n    }else{\n      odd +=\
    \ lst[i];\n    }\n  }\n  return even;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp5ayyurd9.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5ayyurd9.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = 0;\n  let odd = 0;\n  for (let i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] % 2 === 0){\n      even = even + lst[i];\n    }\n    else{\n\
    \      odd = odd + lst[i];\n    }\n  }\n  return even;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpqg_tfw_8.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqg_tfw_8.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmwff2bzy.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmwff2bzy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = []\n  for(let i = 0; i < lst.length; i++){\n    if(i\
    \ % 2 === 0){\n      even.push(lst[i])\n    }\n  }\n  return even.reduce((a, b)\
    \ => a + b)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpps3aavfy.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpps3aavfy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpjx16sehp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjx16sehp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i = 0; i<lst.length; i++){\n      \
    \  if(lst[i] % 2 === 1){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmptq1bi3z7.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptq1bi3z7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] % 2 === 0){\n            even += lst[i];\n        }\n    }\n \
    \   return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmpa21ucw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmpa21ucw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = []\n  for(let i = 0; i < lst.length; i++){\n    if(i\
    \ % 2 === 0){\n      even.push(lst[i])\n    }\n  }\n  return even.reduce((a, b)\
    \ => a + b)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpps3aavfy.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpps3aavfy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpa6tulxzw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa6tulxzw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(i\
    \ % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdl7dqdvj.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdl7dqdvj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ != 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpawrbcdmf.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpawrbcdmf.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  for(var i = 0; i<lst.length; i++){\n    if(lst[i]%2 != 0){\n  \
    \    lst[i] += lst[lst[i]-1];\n      lst[lst[i]-1] = 0;\n    }\n  }\n  return\
    \ lst[0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdyzej111.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdyzej111.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = []\n  for(let i = 0; i < lst.length; i++){\n    if(i\
    \ % 2 === 0){\n      even.push(lst[i])\n    }\n  }\n  return even.reduce((a, b)\
    \ => a + b)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpps3aavfy.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpps3aavfy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ % 2 === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpzhqjrm4f.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzhqjrm4f.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(i % 2 === 0){\n            evenSum += lst[i];\n        }\n    }\n\
    \    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmprwbvghvq.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprwbvghvq.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmphpox9e3w.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphpox9e3w.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n  \
    \  }\n    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpwp5wiatp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwp5wiatp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmphpox9e3w.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphpox9e3w.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            even = even + lst[i];\n  \
    \      }else{\n            odd = odd + lst[i];\n        }\n    }\n    return even;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpsc4wi_7u.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsc4wi_7u.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      even += lst[i];\n    }\n  }\n  return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmped9hti88.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmped9hti88.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n    \
    \    if(lst[i] % 2 === 1){\n            sum += lst[i];\n        }\n    }\n   \
    \ return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmswjgvef.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmswjgvef.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n  \
    \  }\n    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpwp5wiatp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwp5wiatp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for (let i = 0; i < lst.length; i++){\n   \
    \ if (i % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdqpvnrqe.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdqpvnrqe.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ != 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpawrbcdmf.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpawrbcdmf.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  if(lst.length == 0){\n    return 0;\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  var evenSum = 0;\n  var oddSum = 0;\n  for(var i=0;\
    \ i<lst.length; i++){\n    if(i % 2 == 0){\n      evenSum += lst[i];\n    }else{\n\
    \      oddSum += lst[i];\n    }\n  }\n  return evenSum + oddSum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpyezt2yiy.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyezt2yiy.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  for(var i = 0; i<lst.length; i++){\n    if(lst[i]%2 != 0){\n  \
    \    return lst[i] + add(lst.slice(i+1))\n    }\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmp03zosd66.js:17:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp03zosd66.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    let odd = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            even += lst[i];\n        }else{\n\
    \            odd += lst[i];\n        }\n    }\n    return even + odd;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n\
    \  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpuwfi30aw.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuwfi30aw.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpa6tulxzw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa6tulxzw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmphpox9e3w.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphpox9e3w.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var even = 0;\n  for(var i = 0; i< lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      even += lst[i];\n    }\n  }\n  return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp2vz3r2a_.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2vz3r2a_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ != 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp0ywauc4j.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0ywauc4j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] % 2 === 0){\n            even += lst[i];\n        }\n    }\n \
    \   return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmpa21ucw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmpa21ucw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  if(lst.length < 2)\n    return lst;\n  var even = lst.length %\
    \ 2 === 0;\n  var evenIndex = lst.length / 2;\n  var oddIndex = evenIndex + 1;\n\
    \  var evenSum = 0;\n  var oddSum = 0;\n  for(var i=0; i<evenIndex; i++){\n  \
    \  evenSum += lst[i];\n  }\n  for(var i=0; i<oddIndex; i++){\n    oddSum += lst[i];\n\
    \  }\n  return evenSum + oddSum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n96\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpsufz487w.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsufz487w.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 96,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n    \
    \    if(lst[i] % 2 === 1){\n            sum += lst[i];\n        }\n    }\n   \
    \ return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmswjgvef.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmswjgvef.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    let odd = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            even += lst[i];\n        }else{\n\
    \            odd += lst[i];\n        }\n    }\n    return even + odd;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n\
    \  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp64nujkpu.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp64nujkpu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = 0;\n  for (let i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] % 2 === 0){\n      even += lst[i];\n    }\n  }\n  return even;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmppbwep3xk.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppbwep3xk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var evenSum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n\
    \  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpeefv7v8l.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeefv7v8l.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var result = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      result += lst[i];\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpbua1igy5.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbua1igy5.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = 0;\n    for(var i = 0; i< lst.length; i++){\n    \
    \    if(lst[i] % 2 === 0){\n            even += lst[i];\n        }\n    }\n  \
    \  return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp5q6r5y0j.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5q6r5y0j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] % 2 === 0){\n            even += lst[i];\n        }\n    }\n \
    \   return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmpa21ucw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmpa21ucw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] % 2 === 0){\n            even += lst[i];\n        }\n    }\n \
    \   return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmpa21ucw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmpa21ucw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = 0;\n    for(var i = 0; i<lst.length; i++){\n     \
    \   if(lst[i] % 2 === 0){\n            even += lst[i];\n        }\n    }\n   \
    \ return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpuejy634s.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuejy634s.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for (let i = 0; i < lst.length; i++){\n   \
    \ if (i % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdqpvnrqe.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdqpvnrqe.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2==0){\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp9i6olb1j.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9i6olb1j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = []\n    for(var i = 0; i< lst.length; i++){\n    \
    \    if(lst[i] % 2 === 0){\n            even.push(lst[i])\n        }\n    }\n\
    \    return even.length\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpqg_hbb3s.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqg_hbb3s.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = 0;\n  for (let i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] % 2 === 0){\n      even += lst[i];\n    }\n  }\n  return even;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmppbwep3xk.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppbwep3xk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = []\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] % 2 === 0){\n            even.push(lst[i])\n        }\n    }\n\
    \    return even.reduce((a, b) => a + b)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmptf5p3lte.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptf5p3lte.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    let odd = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            even+=lst[i];\n        }else{\n\
    \            odd+=lst[i];\n        }\n    }\n    return even+odd;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp2mv0nv4r.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2mv0nv4r.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = []\n  for (let i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] % 2 === 0){\n      even.push(lst[i])\n    }\n  }\n  return even.reduce((a,\
    \ b) => a + b, 0)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp3qishx_c.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3qishx_c.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp2n3x10pu.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2n3x10pu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = []\n  for(let i = 0; i < lst.length; i++){\n    if(i\
    \ % 2 === 0){\n      even.push(lst[i])\n    }\n  }\n  return even.reduce((a, b)\
    \ => a + b)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpps3aavfy.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpps3aavfy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] % 2 === 0){\n            even += lst[i];\n        }\n    }\n \
    \   return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmpa21ucw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmpa21ucw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]\
    \ % 2 === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpi1_v9lqp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi1_v9lqp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for (var i = 0; i < lst.length; i++){\n    if (i\
    \ % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp5k7m1nob.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5k7m1nob.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpa6tulxzw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa6tulxzw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpk4qf4g1p.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk4qf4g1p.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i = 0; i< lst.length; i++){\n     \
    \   if(lst[i]%2 === 1){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp0zbi3qim.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0zbi3qim.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var evenSum = 0;\n  for(var i = 0; i< lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpicd5tpjz.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpicd5tpjz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ % 2 === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpzhqjrm4f.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzhqjrm4f.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    for(let i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n  \
    \          lst[i]+=lst[lst.length-1];\n            lst.pop();\n        }\n   \
    \ }\n    return lst[0];\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp010qy3k0.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp010qy3k0.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpk4qf4g1p.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk4qf4g1p.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i = 0; i< lst.length; i++){\n     \
    \   if(lst[i]%2 === 1){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp0zbi3qim.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0zbi3qim.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp6gen_sis.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6gen_sis.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for (let i = 0; i < lst.length; i++){\n   \
    \ if (i % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdqpvnrqe.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdqpvnrqe.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = 0;\n  for (let i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] % 2 === 0){\n      even += lst[i];\n    }\n  }\n  return even;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmppbwep3xk.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppbwep3xk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpjx16sehp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjx16sehp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpjx16sehp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjx16sehp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = []\n    for(var i=0; i<lst.length; i++){\n       \
    \ if(lst[i] % 2 === 0){\n            even.push(lst[i])\n        }\n    }\n   \
    \ return even\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpdu30umjw.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdu30umjw.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(i % 2 === 0){\n            evenSum += lst[i];\n        }\n    }\n\
    \    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmprwbvghvq.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprwbvghvq.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenSum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n  \
    \  }\n    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpwp5wiatp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwp5wiatp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = 0;\n  let odd = 0;\n  for (let i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] % 2 === 0){\n      even += lst[i];\n    } else {\n   \
    \   odd += lst[i];\n    }\n  }\n  return even + odd;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpckt1gco6.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpckt1gco6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp2n3x10pu.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2n3x10pu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]\
    \ % 2 === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpi1_v9lqp.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi1_v9lqp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 ===\
    \ 1){\n            lst[i] += lst[lst.length - 1];\n            lst.pop();\n  \
    \      }\n    }\n    return lst;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp10r4zn8q.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp10r4zn8q.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n\
    \            lst[i] += lst[lst.length-1];\n            lst.pop();\n        }\n\
    \    }\n    return lst[0];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp6hzrre_7.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6hzrre_7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] % 2 === 0){\n            even = even + lst[i];\n        }\n  \
    \  }\n    return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpp6o1u7b3.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp6o1u7b3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var even = []\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 0){\n      even.push(lst[i])\n    }\n  }\n  return even.reduce(function(acc,\
    \ val){\n    return acc + val\n  }, 0)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpveqrf1_d.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpveqrf1_d.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2==0){\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp9i6olb1j.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9i6olb1j.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var even = [];\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n\
    \      even.push(lst[i]);\n    }\n  }\n  return even;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp9ewiyajx.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9ewiyajx.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = []\n  let odd = []\n  for (let i = 0; i < lst.length;\
    \ i++){\n    if (i % 2 === 0){\n      even.push(lst[i])\n    } else {\n      odd.push(lst[i])\n\
    \    }\n  }\n  return even.concat(odd)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp2xcjsvo7.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2xcjsvo7.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(i\
    \ % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdl7dqdvj.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdl7dqdvj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    let odd = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            even = even + lst[i];\n  \
    \      }else{\n            odd = odd + lst[i];\n        }\n    }\n    return even;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmplbrap6uo.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplbrap6uo.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp2n3x10pu.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2n3x10pu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            even+=lst[i];\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpltiff822.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpltiff822.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmphpox9e3w.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphpox9e3w.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for (let i = 0; i < lst.length; i++){\n   \
    \ if (i % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdqpvnrqe.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdqpvnrqe.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  if(lst.length < 2){\n    return lst;\n  }\n  var even = lst[lst.length-1];\n\
    \  var odd = lst[lst.length-2];\n  var sum = 0;\n  for(var i = 0; i< lst.length;\
    \ i++){\n    if(i % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum\
    \ + even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpyu4gs4jq.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyu4gs4jq.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmwff2bzy.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmwff2bzy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var evenSum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp5x34lgdf.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5x34lgdf.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = []\n  for(let i = 0; i < lst.length; i++){\n    if(i\
    \ % 2 === 0){\n      even.push(lst[i])\n    }\n  }\n  return even.reduce((a, b)\
    \ => a + b)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpps3aavfy.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpps3aavfy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ != 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpawrbcdmf.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpawrbcdmf.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for (let i = 0; i < lst.length; i++){\n   \
    \ if (i % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpdqpvnrqe.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdqpvnrqe.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpy35oemex.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy35oemex.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = 0;\n    let odd = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            even += lst[i];\n        }else{\n\
    \            odd += lst[i];\n        }\n    }\n    return even+odd;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n\
    \  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmphrvkv2eh.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphrvkv2eh.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ % 2 != 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpb2nbm6ux.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb2nbm6ux.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n\
    \            sum+=lst[i];\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpiuu93xik.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpiuu93xik.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n\
    \            lst[i] += lst[lst.length-1];\n            lst.pop();\n        }\n\
    \    }\n    return lst;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  92\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpjhwz5fv1.js:20:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpjhwz5fv1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 92 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var even = 0;\n    var odd = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i]%2 === 0){\n            even+=lst[i];\n        }else{\n\
    \            odd+=lst[i];\n        }\n    }\n    return even+odd;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n\
    \  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpj82vrwmu.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj82vrwmu.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let even = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      even += lst[i];\n    }\n  }\n  return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmped9hti88.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmped9hti88.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  let evenSum = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0){\n      evenSum += lst[i];\n    }\n  }\n  return evenSum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpa6tulxzw.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa6tulxzw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var evenSum = 0;\n    for(var i = 0; i< lst.length; i++){\n \
    \       if(lst[i] % 2 === 0){\n            evenSum += lst[i];\n        }\n   \
    \ }\n    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmp89tkzilz.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp89tkzilz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n    \
    \    if(lst[i] % 2 === 1){\n            sum += lst[i];\n        }\n    }\n   \
    \ return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpmswjgvef.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmswjgvef.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let evenSum = 0;\n    for (let i = 0; i < lst.length; i++){\n\
    \        if (i % 2 === 0){\n            evenSum += lst[i];\n        }\n    }\n\
    \    return evenSum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmptvpghmiu.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptvpghmiu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749246
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2\
    \ === 1){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmpur2_we8m.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur2_we8m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245
- exit_code: 1
  program: "//Given a non-empty array of integers lst. add the even elements that\
    \ are at odd indices..\n// Examples:\n// >>> add([4, 2, 6, 7])\n// 2\nfunction\
    \ add(lst){\n    let even = []\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] % 2 === 0){\n            even.push(lst[i])\n        }\n    }\n\
    \    return even.reduce((a, b) => a + b)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n92\n\nshould loosely\
    \ deep-equal\n\n88\n    at test (/tmp/tmptf5p3lte.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptf5p3lte.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 92,\n  expected:\
    \ 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749245

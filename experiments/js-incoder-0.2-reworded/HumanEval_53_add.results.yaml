language: js
name: HumanEval_53_add
results:
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n\treturn x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747430
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n\treturn x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747430
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n\treturn x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747430
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n\treturn x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747430
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n\treturn x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747430
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n\treturn x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747430
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n\treturn x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747430
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n\treturn x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747430
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n\treturn x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747430
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n\treturn x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747430
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n\
    // 12\nfunction add(x, y){\n  return x + y;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0,\
    \ 1),1);\n  assert.deepEqual(candidate(1, 0),1);\n  assert.deepEqual(candidate(2,\
    \ 3),5);\n  assert.deepEqual(candidate(5, 7),12);\n  assert.deepEqual(candidate(7,\
    \ 5),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''

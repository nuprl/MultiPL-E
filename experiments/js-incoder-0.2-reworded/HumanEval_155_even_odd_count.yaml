name: HumanEval_155_even_odd_count
language: js
prompt: "//Given an integer. return an array that has the number of even and odd digits\
  \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n// >>> even_odd_count(123)\n\
  // [1, 2]\nfunction even_odd_count(num){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
  \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
  \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
  \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
  \ 0]);\n}\n\ntest();"
completions: ["  let even = [];\n  let odd = [];\n  for(let i = num; i > 0; i--){\n\
    \    if(i % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n \
    \   }\n  }\n  return [even, odd];\n}\n", "  let even = []\n  let odd = []\n  while(num\
    \ > 0){\n    even.push(num % 2)\n    num = Math.floor(num / 2)\n  }\n  while(num\
    \ > 0){\n    odd.push(num % 2)\n    num = Math.floor(num / 2)\n  }\n  return [even,\
    \ odd]\n}\n", "  var even = [], odd = [];\n  for(var i = 0; i <= num; i++){\n\
    \    if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num %\
    \ 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "    let even = [];\n    let odd = [];\n    for(let\
    \ i = 0; i < num.toString().length; i++){\n        if(num.toString()[i]%2 ===\
    \ 0){\n            even.push(num.toString()[i]);\n        }else{\n           \
    \ odd.push(num.toString()[i]);\n        }\n    }\n    return [even, odd];\n}\n",
  "  let even = []\n  let odd = []\n  while(num > 0){\n    if(num % 2 === 0){\n  \
    \    even.push(num)\n    }else{\n      odd.push(num)\n    }\n    num = Math.floor(num\
    \ / 2)\n  }\n  return [even, odd]\n}\n", "  let even = [];\n  let odd = [];\n\
    \  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  var\
    \ even = [];\n  var odd = [];\n  var count = 0;\n  while(num > 0){\n    if(num\
    \ % 2 === 0){\n      even.push(num);\n      count++;\n    }else{\n      odd.push(num);\n\
    \      count++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [count,\
    \ count];\n}\n", "  var even = [];\n  var odd = [];\n  for(var i = 0; i<num; i++){\n\
    \    if(num%2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n \
    \   }\n  }\n  return [even,odd];\n}\n", "  var even = [];\n  var odd = [];\n \
    \ for(var i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  for(let i = num; i > 0; i--){\n    if(i % 2 ===\
    \ 0){\n      even.push(i);\n    } else {\n      odd.push(i);\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "  var even = [], odd = [];\n  for(var i = 0; i<num; i++){\n\
    \    if(num % 2 === 0){\n      even.push(num);\n    }else{\n      odd.push(num);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  let count = 0;\n  while (num > 0){\n    count++;\n    num = num % 10;\n   \
    \ if (num % 2 === 0){\n      even.push(num);\n    }\n    else{\n      odd.push(num);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "    let even = [];\n    let odd = [];\n\
    \    for(let i = 0; i <= num; i++){\n        if(num % 2 === 0){\n            even.push(i);\n\
    \        }else{\n            odd.push(i);\n        }\n    }\n    return [even,\
    \ odd];\n}\n", "  let even = [];\n  let odd = [];\n  let count = 0;\n  while (num\
    \ > 0){\n    if (num % 2 === 0){\n      even.push(num);\n      count++;\n    }\n\
    \    else {\n      odd.push(num);\n      count++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [count, even, odd];\n}\n", "  let even = [];\n  let odd\
    \ = [];\n  while(num > 0){\n    let remainder = num % 10;\n    if(remainder ===\
    \ 0){\n      even.push(remainder);\n    }else{\n      odd.push(remainder);\n \
    \   }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", "  \
    \  let even = 0;\n    let odd = 0;\n    while(num > 0){\n        num = num % 10;\n\
    \        if(num % 2 === 0){\n            even++;\n        }else{\n           \
    \ odd++;\n        }\n    }\n    return [even, odd];\n}\n", "  let even = [], odd\
    \ = []\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i)\n\
    \    }else{\n      odd.push(i)\n    }\n  }\n  return [even, odd]\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  let count = 0;\n  while (num > 0){\n    if (num\
    \ % 2 === 0){\n      even.push(num);\n      count++;\n    } else {\n      odd.push(num);\n\
    \      count++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [even,\
    \ odd];\n}\n", "  let even = []\n  let odd = []\n  for(let i = 0; i <= num; i++){\n\
    \    if(num % 2 === 0){\n      even.push(i)\n    }else{\n      odd.push(i)\n \
    \   }\n  }\n  return [even, odd]\n}\n", "  let even = [];\n  let odd = [];\n \
    \ for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num %\
    \ 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "    let even = [];\n    let odd = [];\n    for(let\
    \ i = 0; i <= num; i++){\n        let remainder = num % 10;\n        if(remainder\
    \ === 0){\n            even.push(remainder);\n        }else{\n            odd.push(remainder);\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return [even, odd];\n\
    }\n", "  let even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n \
    \   if((num % 2) === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [], odd = [];\n  for(let\
    \ i = 0; i < num; i++){\n    if(num % 2 === 0){\n      even.push(num);\n    }else{\n\
    \      odd.push(num);\n    }\n  }\n  return [even, odd];\n}\n", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while(num > 0){\n    if(num % 2 === 0){\n     \
    \ evenCount++;\n    }else{\n      oddCount++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n", "  let even = [];\n  let\
    \ odd = [];\n  while(num > 0){\n    if(num % 2 === 0){\n      even.push(num);\n\
    \    }else{\n      odd.push(num);\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  while(num\
    \ > 0){\n    if(num % 2 === 0){\n      even.push(num);\n    }else{\n      odd.push(num);\n\
    \    }\n    num = Math.floor(num / 2);\n  }\n  return [even, odd];\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num %\
    \ 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i\
    \ = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    } else\
    \ {\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even\
    \ = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num % 2 ===\
    \ 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  let count = 0;\n \
    \ while(num > 0){\n    count++;\n    num = num / 10;\n  }\n  for(let i = 1; i\
    \ <= count; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n \
    \     odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [],\
    \ odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num %\
    \ 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i\
    \ = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n\
    \  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if((num % 10) === 0){\n\
    \      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  var even = [],\n      odd = [];\n  for(var i = 0; i <= num;\
    \ i++){\n    if((num % 10) === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  for(let i = 0; i <= num; i++){\n    if((num % 2) === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let\
    \ even = []\n  let odd = []\n  for(let i = 0; i <= num; i++){\n    let mod = num\
    \ % 10\n    if(mod === 0){\n      even.push(i)\n    }else{\n      odd.push(i)\n\
    \    }\n  }\n  return [even, odd]\n}\n", "  let even = [];\n  let odd = [];\n\
    \  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    } else {\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", " \
    \ var even = [], odd = [];\n  while(num > 0){\n    var mod = num % 10;\n    if(mod\
    \ === 0) even.push(mod);\n    else odd.push(mod);\n    num = Math.floor(num /\
    \ 10);\n  }\n  return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while(num > 0){\n    if(num % 2 === 0){\n      evenCount++;\n    }\n\
    \    else{\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n \
    \ return [evenCount, oddCount];\n}\n", "  var even = [];\n  var odd = [];\n  for(var\
    \ i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  var even = [];\n\
    \  var odd = [];\n  for(var i = 0; i <= num; i++){\n    if(num % 2 === 0){\n \
    \     even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i = 0; i <= num;\
    \ i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  let count = 0;\n  while(num > 0){\n    if(num % 2 === 0){\n      even.push(num);\n\
    \      count++;\n    }else{\n      odd.push(num);\n      count++;\n    }\n   \
    \ num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", "    let even\
    \ = [];\n    let odd = [];\n    for(let i = 0; i <= num; i++){\n        if((num\
    \ % 2 === 0) && (num % 10 === 0)){\n            even.push(i);\n        }\n   \
    \     else if((num % 2 !== 0) && (num % 10 !== 0)){\n            odd.push(i);\n\
    \        }\n    }\n    return [even, odd];\n}\n", "  var arr = [];\n  while(num\
    \ > 0){\n    arr.push(num%2);\n    num = Math.floor(num/2);\n  }\n  return arr;\n\
    }\n", "  let even = []\n  let odd = []\n  for(let i = 0; i <= num; i++){\n   \
    \ if(num % 2 === 0){\n      even.push(i)\n    }else{\n      odd.push(i)\n    }\n\
    \  }\n  return [even, odd]\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n\
    \  while(num > 0){\n    if(num % 2 === 0){\n      evenCount++;\n    }else{\n \
    \     oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount,\
    \ oddCount];\n}\n", "  var even = [];\n  var odd = [];\n  for(var i = 0; i <=\
    \ num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  for(let i = 0; i < num; i++){\n    if(num % 2 === 0){\n      even.push(num);\n\
    \    }else{\n      odd.push(num);\n    }\n  }\n  return [even, odd];\n}\n", " \
    \ let even = [];\n  let odd = [];\n  for(let i = num; i > 0; i--){\n    if(i %\
    \ 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "  var even = [];\n  var odd = [];\n  for(var i\
    \ = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = []\n\
    \  let odd = []\n  let count = 0\n  while(num > 0){\n    if(num % 2 === 0){\n\
    \      even.push(num)\n      count++\n    }else{\n      odd.push(num)\n      count++\n\
    \    }\n    num = Math.floor(num / 10)\n  }\n  return [even, odd]\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if((num %\
    \ 2 === 0) && (num % 10 === 0)){\n      even.push(i);\n    }\n    else if((num\
    \ % 2 !== 0) && (num % 10 !== 0)){\n      odd.push(i);\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let even = [], odd = [];\n  for(let i = 0; i <= num; i++){\n\
    \    let digit = num % 10;\n    if(digit % 2 === 0){\n      even.push(digit);\n\
    \    }else{\n      odd.push(digit);\n    }\n  }\n  return [even, odd];\n}\n",
  "  let even = []\n  let odd = []\n  for(let i = 0; i <= num; i++){\n    if(num %\
    \ 2 === 0){\n      even.push(i)\n    }else{\n      odd.push(i)\n    }\n  }\n \
    \ return [even, odd]\n}\n", "  var arr = [];\n  while(num > 0){\n    arr.push(num\
    \ % 10);\n    num = Math.floor(num / 10);\n  }\n  if(arr.length === 0){\n    arr.push(0);\n\
    \  }\n  return arr;\n}\n", "  let even = []\n  let odd = []\n  while(num > 0){\n\
    \    if(num % 2 === 0){\n      even.push(num % 10)\n    }else{\n      odd.push(num\
    \ % 10)\n    }\n    num = Math.floor(num / 10)\n  }\n  return [even, odd]\n}\n",
  "  let even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num\
    \ % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i\
    \ = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n\
    \  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n \
    \     even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let even = []\n  let odd = []\n  while(num > 0){\n    if(num\
    \ % 2 === 0){\n      even.push(num)\n    }else{\n      odd.push(num)\n    }\n\
    \    num = Math.floor(num / 2)\n  }\n  return [even, odd]\n}\n", "  let even =\
    \ [];\n  let odd = [];\n  while(num > 0){\n    let remainder = num % 10;\n   \
    \ if(remainder === 0){\n      even.push(remainder);\n      num = Math.floor(num\
    \ / 10);\n    }else{\n      odd.push(remainder);\n      num = Math.floor(num /\
    \ 10);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd\
    \ = [];\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  var\
    \ even = [];\n  var odd = [];\n  for(var i = num; i > 0; i--){\n    if(i % 2 ===\
    \ 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "  var even = [];\n  var odd = [];\n  for(var i = 0; i <=\
    \ num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "    let even = [];\n    let odd = [];\n\
    \    for(let i = 0; i < num.length; i++){\n        if(num[i] % 2 === 0){\n   \
    \         even.push(num[i]);\n        }else{\n            odd.push(num[i]);\n\
    \        }\n    }\n    return [even, odd];\n}\n", "  let even = [], odd = []\n\
    \  while(num > 0){\n    if(num % 2 === 0){\n      even.push(num)\n    }else{\n\
    \      odd.push(num)\n    }\n    num = Math.floor(num / 2)\n  }\n  return [even,\
    \ odd]\n}\n", "  let even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n\
    \    if(num % 2 === 0){\n      even.push(i);\n    } else {\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = []\n  let odd = []\n \
    \ let count = 0\n  while (num > 0){\n    count++\n    num = num / 10\n  }\n  while\
    \ (count > 0){\n    if (num % 2 === 0){\n      even.push(num)\n      count--\n\
    \    }\n    else{\n      odd.push(num)\n      count--\n    }\n    num = num /\
    \ 10\n  }\n  return [even, odd]\n}\n", "  var arr = [];\n  while(num > 0){\n \
    \   arr.push(num%2 === 0 ? 'even' : 'odd');\n    num = Math.floor(num/10);\n \
    \ }\n  return arr;\n}\n", "  var even = [], odd = [];\n  for(var i = 0; i <= num;\
    \ i++){\n    if(num % 2 === 0){\n      even.push(i);\n    } else {\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [], odd = []\n  for(let\
    \ i = 0; i <= num; i++){\n    if((num % 2) === 0){\n      even.push(i)\n    }else{\n\
    \      odd.push(i)\n    }\n  }\n  return [even, odd]\n}\n", "  let even = [];\n\
    \  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if((num % 2 === 0) &&\
    \ (num % 10 === 0)){\n      even.push(i);\n    }\n    else if((num % 2 !== 0)\
    \ && (num % 10 !== 0)){\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n\
    }\n", "  let even = [];\n  let odd = [];\n  while(num > 0){\n    let remainder\
    \ = num % 10;\n    if(remainder === 0){\n      even.push(remainder);\n    }else{\n\
    \      odd.push(remainder);\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [even, odd];\n}\n", "    let even = [];\n    let odd = [];\n    for(let i =\
    \ 0; i <= num; i++){\n        if(num % 2 === 0){\n            even.push(i);\n\
    \        }else{\n            odd.push(i);\n        }\n    }\n    return [even,\
    \ odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while(num > 0){\n\
    \    if(num % 2 === 0){\n      evenCount++;\n    }\n    else{\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  var even = [];\n  var odd = [];\n  for(var i = 0; i <= num; i++){\n \
    \   if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  for(let i = 0; i < num; i++){\n    if(num % 2 === 0){\n      even.push(num);\n\
    \    }else{\n      odd.push(num);\n    }\n  }\n  return [even, odd];\n}\n", " \
    \ let even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num\
    \ % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i\
    \ = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n\
    \  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n \
    \     even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i = 0; i <= num;\
    \ i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  var even = [];\n  var odd = [];\n\
    \  for(var i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  while(num > 0){\n    let remainder = num % 10;\n\
    \    if(remainder % 2 == 0){\n      even.push(remainder);\n    }else{\n      odd.push(remainder);\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", " \
    \ let even = []\n  let odd = []\n  for(let i = 0; i <= num; i++){\n    if(num\
    \ % 2 === 0){\n      even.push(i)\n    }else{\n      odd.push(i)\n    }\n  }\n\
    \  return [even, odd]\n}\n", "  let even = [];\n  let odd = [];\n  while(num >\
    \ 0){\n    let remainder = num % 10;\n    if(remainder % 2 === 0){\n      even.push(remainder);\n\
    \    }else{\n      odd.push(remainder);\n    }\n    num = Math.floor(num / 10);\n\
    \  }\n  return [even, odd];\n}\n", "    let even = [];\n    let odd = [];\n  \
    \  for(let i = 0; i < num; i++){\n        if(num % 2 === 0){\n            even.push(num);\n\
    \        }else{\n            odd.push(num);\n        }\n    }\n    return [even,\
    \ odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i = 0; i <= num;\
    \ i++){\n    if((num % 10) === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  \
    \  let even = [];\n    let odd = [];\n    for(let i = 0; i <= num; i++){\n   \
    \     let digit = num % 10;\n        if(digit % 2 == 0){\n            even.push(digit);\n\
    \        }else{\n            odd.push(digit);\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return [even, odd];\n}\n", "  let even = [];\n  let odd =\
    \ [];\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  \
    \  let even = [];\n    let odd = [];\n    for(let i = 0; i < num.toString().length;\
    \ i++){\n        if(num.toString().charAt(i) % 2 === 0){\n            even.push(num.toString().charAt(i));\n\
    \        }else{\n            odd.push(num.toString().charAt(i));\n        }\n\
    \    }\n    return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let\
    \ i = 0; i < num; i++){\n    if(num % 2 === 0){\n      even.push(num);\n    }else{\n\
    \      odd.push(num);\n    }\n  }\n  return [even, odd];\n}\n", "  let even =\
    \ []\n  let odd = []\n  for(let i = 0; i <= num; i++){\n    if(i%2 === 0){\n \
    \     even.push(i)\n    }else{\n      odd.push(i)\n    }\n  }\n  return [even,\
    \ odd]\n}\n", "  let even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n\
    \    if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  while(num > 0){\n    let remainder = num % 10;\n    if(remainder === 0){\n\
    \      even.push(remainder);\n    }else{\n      odd.push(remainder);\n    }\n\
    \    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", "  let even\
    \ = [];\n  let odd = [];\n  for(let i = num; i > 0; i /= 10){\n    if(i%2 ===\
    \ 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  let count = 0;\n \
    \ while(num > 0){\n    count++;\n    if(num % 2 === 0){\n      even.push(num);\n\
    \    }else{\n      odd.push(num);\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  while(num\
    \ > 0){\n    if(num % 2 === 0){\n      even.push(num);\n    }else{\n      odd.push(num);\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", " \
    \ var even = [], odd = [];\n  for(var i = 0; i <= num; i++){\n    if(num % 2 ===\
    \ 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  while(num > 0){\n\
    \    let remainder = num % 10;\n    if(remainder % 2 === 0){\n      even.push(remainder);\n\
    \    }else{\n      odd.push(remainder);\n    }\n    num = Math.floor(num / 10);\n\
    \  }\n  return [even, odd];\n}\n", "  var arr = [];\n  while(num > 0){\n    arr.push(num%2\
    \ ? 1 : 2);\n    num = Math.floor(num/10);\n  }\n  return arr;\n}\n", "  let even\
    \ = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if((num % 2) ===\
    \ 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "  var even = [];\n  var odd = [];\n  var count = 0;\n \
    \ while(num > 0){\n    count++;\n    if(num % 2 === 0){\n      even.push(num);\n\
    \    }else{\n      odd.push(num);\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [even, odd];\n}\n", "    let even = [];\n    let odd = [];\n    for(let\
    \ i = 0; i <= num; i++){\n        if(num % 2 === 0){\n            even.push(i);\n\
    \        }else{\n            odd.push(i);\n        }\n    }\n    return [even,\
    \ odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i = 0; i <= num;\
    \ i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "    let even = [];\n    let odd = [];\n\
    \    for(let i = 0; i <= num; i++){\n        if(num % 2 === 0){\n            even.push(i);\n\
    \        }else{\n            odd.push(i);\n        }\n    }\n    return [even,\
    \ odd];\n}\n", "  var even = [];\n  var odd = [];\n  for(var i = 0; i<num; i++){\n\
    \    if(num % 2 === 0){\n      even.push(num);\n    }else{\n      odd.push(num);\n\
    \    }\n  }\n  return [even,odd];\n}\n", "  let even = []\n  let odd = []\n  for(let\
    \ i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i)\n    }else{\n\
    \      odd.push(i)\n    }\n  }\n  return [even, odd]\n}\n", "  let even = [];\n\
    \  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if((num % 2) === 0){\n\
    \      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i = 0; i <= num;\
    \ i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  for(let i = 0; i <= num; i++){\n    let digit = num % 10;\n    if(digit % 2\
    \ === 0){\n      even.push(digit);\n    }else{\n      odd.push(digit);\n    }\n\
    \  }\n  return [even, odd];\n}\n", "  let even = []\n  let odd = []\n  for(let\
    \ i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i)\n    }else{\n\
    \      odd.push(i)\n    }\n  }\n  return [even, odd]\n}\n", "  var even = [],\
    \ odd = [];\n  for(var i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  var\
    \ even = [];\n  var odd = [];\n  while(num > 0){\n    var remainder = num % 2;\n\
    \    num = Math.floor(num / 2);\n    if(remainder === 0){\n      even.push(remainder);\n\
    \    }else{\n      odd.push(remainder);\n    }\n  }\n  return [even, odd];\n}\n",
  "  let even = [], odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num % 2 ===\
    \ 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "  var even = [],\n      odd = [];\n  \n  for(var i = 0;\
    \ i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n \
    \     odd.push(i);\n    }\n  }\n  \n  return [even, odd];\n}\n", "    let even\
    \ = [];\n    let odd = [];\n    for(let i = 0; i <= num; i++){\n        if(num\
    \ % 2 === 0){\n            even.push(i);\n        }\n        else{\n         \
    \   odd.push(i);\n        }\n    }\n    return [even, odd];\n}\n", "  let even\
    \ = [];\n  let odd = [];\n  while(num > 0){\n    let mod = num % 10;\n    if(mod\
    \ % 2 === 0){\n      even.push(mod);\n    }else{\n      odd.push(mod);\n    }\n\
    \    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", "  let even\
    \ = [], odd = []\n  while(num > 0){\n    if(num % 2 === 0){\n      even.push(num)\n\
    \    }else{\n      odd.push(num)\n    }\n    num = Math.floor(num / 2)\n  }\n\
    \  return [even, odd]\n}\n", "  let even = [];\n  let odd = [];\n  for(let i =\
    \ 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = []\n\
    \  let odd = []\n  while(num > 0){\n    even.push(num%10)\n    num = Math.floor(num/10)\n\
    \  }\n  while(num > 0){\n    odd.push(num%10)\n    num = Math.floor(num/10)\n\
    \  }\n  return [even, odd]\n}\n", "    let even = [];\n    let odd = [];\n   \
    \ for(let i = 0; i <= num; i++){\n        if((num % 10) % 2 === 0){\n        \
    \    even.push(i);\n        }else{\n            odd.push(i);\n        }\n    }\n\
    \    return [even, odd];\n}\n", "  var arr = [];\n  var count = 0;\n  while(num\
    \ > 0){\n    arr.push(num%10);\n    num = Math.floor(num/10);\n    count++;\n\
    \  }\n  if(count % 2 === 0){\n    arr.push(1);\n  }\n  return arr;\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num %\
    \ 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i\
    \ = 0; i <= num; i++){\n    if((num % 2 === 0) && (num % 10 !== 0)){\n      even.push(num\
    \ % 10);\n    }\n    if((num % 2 !== 0) && (num % 10 !== 0)){\n      odd.push(num\
    \ % 10);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd\
    \ = [];\n  for(let i = num; i >= 0; i--){\n    if(i % 2 === 0){\n      even.push(i);\n\
    \    } else {\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", " \
    \ let even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num\
    \ % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i\
    \ = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n\
    \  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if((num % 10) === 0){\n\
    \      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  while(num > 0){\n\
    \    if(num % 2 === 0){\n      evenCount++;\n    }else{\n      oddCount++;\n \
    \   }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  var even = [];\n  var odd = [];\n  for(var i = 0; i <= num; i++){\n \
    \   if((num % 2) === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [], odd = [];\n  while(num\
    \ > 0){\n    let temp = num % 10;\n    if(temp % 2 === 0){\n      even.push(temp);\n\
    \    }else{\n      odd.push(temp);\n    }\n    num = Math.floor(num / 10);\n \
    \ }\n  return [even, odd];\n}\n", "  var even = [], odd = [];\n  for(var i = 0;\
    \ i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    } else {\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n\
    \  let odd = [];\n  for(let i = 0; i < num.length; i++){\n    if(num[i] % 2 ==\
    \ 0){\n      even.push(num[i]);\n    }else{\n      odd.push(num[i]);\n    }\n\
    \  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let\
    \ i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n\
    \  let odd = [];\n  for(let i = 0; i < num.length; i++){\n    if(num[i] % 2 ==\
    \ 0){\n      even.push(num[i]);\n    }else{\n      odd.push(num[i]);\n    }\n\
    \  }\n  return [even, odd];\n}\n", "  var even = [];\n  var odd = [];\n  for(var\
    \ i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  var arr = [];\n\
    \  while(num > 0){\n    arr.push(num % 10);\n    num = Math.floor(num / 10);\n\
    \  }\n  return arr;\n}\n", "  let even = []\n  let odd = []\n  while(num > 0){\n\
    \    let remainder = num % 10\n    if(remainder % 2 === 0){\n      even.push(remainder)\n\
    \    }else{\n      odd.push(remainder)\n    }\n    num = Math.floor(num / 10)\n\
    \  }\n  return [even, odd]\n}\n", "  let even = [];\n  let odd = [];\n  let count\
    \ = 0;\n  while(num > 0){\n    count++;\n    if(num % 2 === 0){\n      even.push(num);\n\
    \    }else{\n      odd.push(num);\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [even, odd];\n}\n", "  let even = []\n  let odd = []\n  for(let i =\
    \ 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i)\n    }else{\n\
    \      odd.push(i)\n    }\n  }\n  return [even, odd]\n}\n", "  var even = [];\n\
    \  var odd = [];\n  var count = 0;\n  while(num > 0){\n    count++;\n    num =\
    \ num/10;\n  }\n  while(count > 0){\n    if(num%2 === 0){\n      even.push(num);\n\
    \      count--;\n    }else{\n      odd.push(num);\n      count--;\n    }\n   \
    \ num = num/10;\n  }\n  return [even, odd];\n}\n", "  var arr = [];\n  while(num\
    \ > 0){\n    arr.push(num % 10);\n    num = Math.floor(num / 10);\n  }\n  if(arr.length\
    \ == 0){\n    arr.push(0);\n  }\n  return arr;\n}\n", "  let even = []\n  let\
    \ odd = []\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i)\n\
    \    }else{\n      odd.push(i)\n    }\n  }\n  return [even, odd]\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num %\
    \ 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  for(let\
    \ i = 0; i < num.length; i++){\n    if(num[i] % 2 === 0){\n      evenCount++;\n\
    \    }else{\n      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let even = [];\n  let odd = [];\n  let count = 0;\n  while (num > 0){\n\
    \    if (num % 2 === 0){\n      even.push(num);\n      count++;\n    }\n    else\
    \ {\n      odd.push(num);\n      count++;\n    }\n    num = Math.floor(num / 10);\n\
    \  }\n  return [even, odd];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n\
    \  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      evenCount++;\n\
    \    }\n    else{\n      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n\
    }\n", "  let even = []\n  let odd = []\n  for(let i = 0; i <= num; i++){\n   \
    \ if(num % 2 === 0){\n      even.push(i)\n    }else{\n      odd.push(i)\n    }\n\
    \  }\n  return [even, odd]\n}\n", "  var even = [], odd = [];\n  for(var i = 0;\
    \ i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n \
    \     odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  var arr = [];\n\
    \  while(num > 0){\n    arr.push(num % 10);\n    num = Math.floor(num / 10);\n\
    \  }\n  if(arr.length == 0){\n    arr.push(0);\n  }\n  return arr;\n}\n", "  var\
    \ even = [], odd = [];\n  for(var i = num; i > 0; i /= 10){\n    if(i % 2 ===\
    \ 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i = 0; i <=\
    \ num; i++){\n    if((num % 10) === 0){\n      even.push(i);\n    }else{\n   \
    \   odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n\
    \  let odd = [];\n  while(num > 0){\n    let remainder = num % 10;\n    if(remainder\
    \ % 2 === 0){\n      even.push(remainder);\n    }else{\n      odd.push(remainder);\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", " \
    \ let even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num\
    \ % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "    let even = [];\n    let odd = [];\n    for(let\
    \ i = 0; i <= num; i++){\n        if(num % 2 === 0){\n            even.push(i);\n\
    \        }else{\n            odd.push(i);\n        }\n    }\n    return [even,\
    \ odd];\n}\n", "  let even = []\n  let odd = []\n  for(let i = 0; i <= num; i++){\n\
    \    if(num % 2 === 0){\n      even.push(i)\n    }else{\n      odd.push(i)\n \
    \   }\n  }\n  return [even, odd]\n}\n", "  var even = [];\n  var odd = [];\n \
    \ var count = 0;\n  while(num > 0){\n    count++;\n    if(num % 2 === 0){\n  \
    \    even.push(count);\n    }else{\n      odd.push(count);\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even,odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  let count = 0;\n  while(num > 0){\n    count++;\n    num = num/10;\n  }\n \
    \ for(let i = count; i >= 0; i--){\n    if(num % 2 === 0){\n      even.push(num);\n\
    \    }else{\n      odd.push(num);\n    }\n  }\n  return [even, odd];\n}\n", " \
    \ let even = [];\n  let odd = [];\n  for(let i = num; i > 0; i--){\n    if(i %\
    \ 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  let count\
    \ = 0;\n  while (num > 0){\n    if (num % 2 === 0){\n      even.push(num);\n \
    \     count++;\n    }\n    else{\n      odd.push(num);\n      count++;\n    }\n\
    \    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", "  let even\
    \ = [];\n  let odd = [];\n  for(let i = 0; i < num.length; i++){\n    if(num[i]\
    \ % 2 === 0){\n      even.push(num[i]);\n    }else{\n      odd.push(num[i]);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = []\n  let odd = []\n \
    \ for(let i=0;i<num;i++){\n    if(num%2==0){\n      even.push(num%10)\n    }else{\n\
    \      odd.push(num%10)\n    }\n  }\n  return [even,odd]\n}\n", "  let even =\
    \ [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n\
    \      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let even = [];\n  let odd = [];\n  let count = 0;\n  while (num\
    \ > 0){\n    count++;\n    num = num / 10;\n  }\n  even = Array.from(Array(count).keys());\n\
    \  odd = Array.from(Array(count).keys()).reverse();\n  return [even, odd];\n}\n",
  "  let even = []\n  let odd = []\n  let count = 0\n  while (num > 0){\n    if (num\
    \ % 2 === 0){\n      even.push(num)\n      count++\n    }\n    else {\n      odd.push(num)\n\
    \      count++\n    }\n    num = Math.floor(num / 10)\n  }\n  return [even, odd]\n\
    }\n", "  let even = []\n  let odd = []\n  for(let i = num; i > 0; i--){\n    if(i\
    \ % 2 === 0){\n      even.push(i)\n    }else{\n      odd.push(i)\n    }\n  }\n\
    \  return [even, odd]\n}\n", "  var even = [], odd = [];\n  for(var i = 0; i <=\
    \ num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  var arr = [];\n  while(num > 0){\n\
    \    var remainder = num % 2;\n    num = Math.floor(num / 2);\n    arr.push(remainder);\n\
    \  }\n  return arr;\n}\n", "  var even = [], odd = [];\n  for(var i = 0; i <=\
    \ num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  var arr = [];\n  while(num > 0){\n\
    \    arr.push(num%2 ? 1 : 0);\n    num = Math.floor(num/10);\n  }\n  return arr;\n\
    }\n", "  var arr = [];\n  while(num > 0){\n    arr.push(num%10);\n    num = Math.floor(num/10);\n\
    \  }\n  if(arr.length%2 === 0){\n    arr.push(1);\n  }\n  return arr;\n}\n", " \
    \ let even = [];\n  let odd = [];\n  while(num > 0){\n    if(num % 2 === 0){\n\
    \      even.push(num);\n    }else{\n      odd.push(num);\n    }\n    num = Math.floor(num\
    \ / 2);\n  }\n  return [even, odd];\n}\n", "    let even = [];\n    let odd =\
    \ [];\n    for(let i = 0; i <= num; i++){\n        if(num % 2 === 0){\n      \
    \      even.push(i);\n        }else{\n            odd.push(i);\n        }\n  \
    \  }\n    return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let\
    \ i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n\
    \  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n \
    \     even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i = 0; i <= num;\
    \ i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "    let even = [], odd = [];\n    while(num\
    \ > 0){\n        let remainder = num % 10;\n        if(remainder === 0){\n   \
    \         even.push(remainder);\n        }else{\n            odd.push(remainder);\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return [even, odd];\n\
    }\n", "  let even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n \
    \   if((num % 2 === 0) && (num % 10 === 0)){\n      even.push(i);\n    }\n   \
    \ if((num % 2 !== 0) && (num % 10 !== 0)){\n      odd.push(i);\n    }\n  }\n \
    \ return [even, odd];\n}\n", "  var even = [];\n  var odd = [];\n  for(var i =\
    \ 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [],\
    \ odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if((num %\
    \ 10) === 0){\n      even.push(i);\n    }\n    if((num % 10) !== 0){\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  var arr = [];\n  while(num > 0){\n\
    \    arr.push(num%10);\n    num = Math.floor(num/10);\n  }\n  if(arr.length ==\
    \ 0){\n    arr.push(0);\n  }\n  return arr;\n}\n", "  let even = [];\n  let odd\
    \ = [];\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num %\
    \ 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n  for(let i\
    \ = 0; i < num.toString().length; i++){\n    if(num.toString()[i] % 2 === 0){\n\
    \      even.push(num.toString()[i]);\n    }else{\n      odd.push(num.toString()[i]);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  var even = [], odd = [];\n  for(var\
    \ i = 0; i<num; i++){\n    if(num%2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = []\n\
    \  let odd = []\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n  \
    \    even.push(i)\n    }else{\n      odd.push(i)\n    }\n  }\n  return [even,\
    \ odd]\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  for(let i = 0; i <\
    \ num.length; i++){\n    if(num[i] % 2 === 0){\n      evenCount++;\n    }else{\n\
    \      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n}\n", "  var\
    \ arr = [];\n  while(num > 0){\n    arr.push(num%10);\n    num = Math.floor(num/10);\n\
    \  }\n  if(arr[0]%2 === 0 && arr[1]%2 === 0){\n    return [1, 1];\n  }\n  if(arr[0]%2\
    \ === 0 && arr[1]%2 !== 0){\n    return [1, 2];\n  }\n  if(arr[0]%2 !== 0 && arr[1]%2\
    \ === 0){\n    return [2, 1];\n  }\n  if(arr[0]%2 !== 0 && arr[1]%2 !== 0){\n\
    \    return [2, 2];\n  }\n}\n", "  let even = [];\n  let odd = [];\n  for(let\
    \ i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n\
    \  let odd = [];\n  for(let i = num; i >= 0; i--){\n    if(i % 2 === 0){\n   \
    \   even.push(i);\n    } else {\n      odd.push(i);\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let even = []\n  let odd = []\n  for(let i = num; i > 0; i--){\n\
    \    if(i % 2 === 0){\n      even.push(i)\n    }else{\n      odd.push(i)\n   \
    \ }\n  }\n  return [even, odd]\n}\n", "  var even = [];\n  var odd = [];\n  for(var\
    \ i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n    }else{\n\
    \      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  var even = [];\n\
    \  var odd = [];\n  for(var i=0;i<num.length;i++){\n    if(num[i]%2==0){\n   \
    \   even.push(num[i]);\n    }else{\n      odd.push(num[i]);\n    }\n  }\n  return\
    \ [even,odd];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_155_even_odd_count
language: js
prompt: "//Given an integer. return an array that has the number of even and odd digits\
  \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n// >>> even_odd_count(123)\n\
  // [1, 2]\nfunction even_odd_count(num){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
  \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
  \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
  \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
  \ 0]);\n}\n\ntest();"
completions: ["  let even = [];\n  let odd = [];\n  for(let i = num; i > 0; i--){\n\
    \    if(i % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n \
    \   }\n  }\n  return [even, odd];\n}\n", "  let even = []\n  let odd = []\n  while(num\
    \ > 0){\n    even.push(num % 2)\n    num = Math.floor(num / 2)\n  }\n  while(num\
    \ > 0){\n    odd.push(num % 2)\n    num = Math.floor(num / 2)\n  }\n  return [even,\
    \ odd]\n}\n", "  var even = [], odd = [];\n  for(var i = 0; i <= num; i++){\n\
    \    if(num % 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  for(let i = 0; i <= num; i++){\n    if(num %\
    \ 2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n    }\n  }\n\
    \  return [even, odd];\n}\n", "    let even = [];\n    let odd = [];\n    for(let\
    \ i = 0; i < num.toString().length; i++){\n        if(num.toString()[i]%2 ===\
    \ 0){\n            even.push(num.toString()[i]);\n        }else{\n           \
    \ odd.push(num.toString()[i]);\n        }\n    }\n    return [even, odd];\n}\n",
  "  let even = []\n  let odd = []\n  while(num > 0){\n    if(num % 2 === 0){\n  \
    \    even.push(num)\n    }else{\n      odd.push(num)\n    }\n    num = Math.floor(num\
    \ / 2)\n  }\n  return [even, odd]\n}\n", "  let even = [];\n  let odd = [];\n\
    \  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  var\
    \ even = [];\n  var odd = [];\n  var count = 0;\n  while(num > 0){\n    if(num\
    \ % 2 === 0){\n      even.push(num);\n      count++;\n    }else{\n      odd.push(num);\n\
    \      count++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [count,\
    \ count];\n}\n", "  var even = [];\n  var odd = [];\n  for(var i = 0; i<num; i++){\n\
    \    if(num%2 === 0){\n      even.push(i);\n    }else{\n      odd.push(i);\n \
    \   }\n  }\n  return [even,odd];\n}\n", "  var even = [];\n  var odd = [];\n \
    \ for(var i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i);\n\
    \    }else{\n      odd.push(i);\n    }\n  }\n  return [even, odd];\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  for(let i = num; i > 0; i--){\n    if(i % 2 ===\
    \ 0){\n      even.push(i);\n    } else {\n      odd.push(i);\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "  var even = [], odd = [];\n  for(var i = 0; i<num; i++){\n\
    \    if(num % 2 === 0){\n      even.push(num);\n    }else{\n      odd.push(num);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even = [];\n  let odd = [];\n\
    \  let count = 0;\n  while (num > 0){\n    count++;\n    num = num % 10;\n   \
    \ if (num % 2 === 0){\n      even.push(num);\n    }\n    else{\n      odd.push(num);\n\
    \    }\n  }\n  return [even, odd];\n}\n", "    let even = [];\n    let odd = [];\n\
    \    for(let i = 0; i <= num; i++){\n        if(num % 2 === 0){\n            even.push(i);\n\
    \        }else{\n            odd.push(i);\n        }\n    }\n    return [even,\
    \ odd];\n}\n", "  let even = [];\n  let odd = [];\n  let count = 0;\n  while (num\
    \ > 0){\n    if (num % 2 === 0){\n      even.push(num);\n      count++;\n    }\n\
    \    else {\n      odd.push(num);\n      count++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [count, even, odd];\n}\n", "  let even = [];\n  let odd\
    \ = [];\n  while(num > 0){\n    let remainder = num % 10;\n    if(remainder ===\
    \ 0){\n      even.push(remainder);\n    }else{\n      odd.push(remainder);\n \
    \   }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", "  \
    \  let even = 0;\n    let odd = 0;\n    while(num > 0){\n        num = num % 10;\n\
    \        if(num % 2 === 0){\n            even++;\n        }else{\n           \
    \ odd++;\n        }\n    }\n    return [even, odd];\n}\n", "  let even = [], odd\
    \ = []\n  for(let i = 0; i <= num; i++){\n    if(num % 2 === 0){\n      even.push(i)\n\
    \    }else{\n      odd.push(i)\n    }\n  }\n  return [even, odd]\n}\n", "  let\
    \ even = [];\n  let odd = [];\n  let count = 0;\n  while (num > 0){\n    if (num\
    \ % 2 === 0){\n      even.push(num);\n      count++;\n    } else {\n      odd.push(num);\n\
    \      count++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [even,\
    \ odd];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

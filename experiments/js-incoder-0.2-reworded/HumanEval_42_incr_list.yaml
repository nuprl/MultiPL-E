name: HumanEval_42_incr_list
language: js
prompt: "//Return array with elements incremented by 1.\n// >>> incr_list([1, 2, 3])\n\
  // [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6, 4, 6, 3, 4,\
  \ 4, 10, 1, 124]\nfunction incr_list(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
  \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
  \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
completions: ["    var ret = [];\n    for(var i=l.length-1; i>=0; i--){\n        ret.push(l[i]+1);\n\
    \    }\n    return ret;\n}\n", "  var ret = [];\n  var i = 0;\n  while(i < l.length){\n\
    \    ret.push(l[i++]);\n  }\n  return ret;\n}\n", "  var r = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    r.push(l[i]+1);\n  }\n  return r;\n}\n", "  var ret = [];\n\
    \  for(var i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n",
  "  var ret = [];\n  for(var i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n \
    \ return ret;\n}\n", "  var ret = [];\n  for(var i=l.length-1; i>=0; i--){\n \
    \   ret.push(l[i]+1);\n  }\n  return ret;\n}\n", "  var ret = [];\n  for(var i=l.length-1;\
    \ i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n", "  var res = [];\n\
    \  for(var i=l.length-1; i>=0; i--){\n    res.push(l[i]+1);\n  }\n  return res;\n\
    }\n", "  var ret = [];\n  for(var i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n\
    \  }\n  return ret;\n}\n", "  var ret = [];\n  for(var i=l.length-1; i>=0; i--){\n\
    \    ret.push(l[i]+1);\n  }\n  return ret;\n}\n", "  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n",
  "  var ret = [];\n  var i = 0;\n  while(i<l.length){\n    ret.push(l[i++]);\n  }\n\
    \  return ret;\n}\n", "  var ret = [];\n  for(var i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n\
    \  }\n  return ret;\n}\n", "  var ret = [];\n  for(var i=0;i<l.length;i++){\n\
    \    ret.push(l[i]+1);\n  }\n  return ret;\n}\n", "  var ret = [];\n  for(var\
    \ i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return ret;\n}\n",
  "  var ret = [];\n  for(var i=0;i<l.length;i++){\n    ret[i] = l[i]+1;\n  }\n  return\
    \ ret;\n}\n", "  var ret = [];\n  var i = 0;\n  while(i < l.length){\n    ret.push(l[i++]);\n\
    \  }\n  return ret;\n}\n", "  var r = [];\n  for (var i = 0, len = l.length; i\
    \ < len; i++){\n    r[i] = l[i+1] || 0;\n  }\n  return r;\n}\n", "  var ret =\
    \ [];\n  for(var i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n  }\n  return\
    \ ret;\n}\n", "  var ret = [];\n  for(var i=l.length-1; i>=0; i--){\n    ret.push(l[i]+1);\n\
    \  }\n  return ret;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_89_encrypt
language: js
results:
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var rotatedAlphabet = alphabet.split(\"\").map(function(letter){\n    return\
    \ letter.charCodeAt(0) - 2;\n  }).join(\"\");\n  return s.split(\"\").map(function(letter){\n\
    \    return alphabet.indexOf(letter) + rotatedAlphabet.indexOf(letter);\n  }).join(\"\
    \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"lm\");\n  assert.deepEqual(candidate(\"\
    asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"gf\"),\"kj\");\n\
    \  assert.deepEqual(candidate(\"et\"),\"ix\");\n  assert.deepEqual(candidate(\"\
    faewfawefaewg\"),\"jeiajeaijeiak\");\n  assert.deepEqual(candidate(\"hellomyfriend\"\
    ),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n  assert.deepEqual(candidate(\"\
    a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'67'\n\nshould\
    \ loosely deep-equal\n\n'lm'\n    at test (/tmp/tmpjfv0iiog.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpjfv0iiog.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '67',\n  expected:\
    \ 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var rotatedAlphabet = alphabet.split(\"\").map(function(letter){\n    \
    \    return letter.charCodeAt(0) - 2;\n    }).join(\"\");\n    var rotatedString\
    \ = s.split(\"\").map(function(letter){\n        return alphabet.indexOf(letter)\
    \ + 2;\n    }).join(\"\");\n    return rotatedString + rotatedAlphabet;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"lm\");\n  assert.deepEqual(candidate(\"\
    asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"gf\"),\"kj\");\n\
    \  assert.deepEqual(candidate(\"et\"),\"ix\");\n  assert.deepEqual(candidate(\"\
    faewfawefaewg\"),\"jeiajeaijeiak\");\n  assert.deepEqual(candidate(\"hellomyfriend\"\
    ),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n  assert.deepEqual(candidate(\"\
    a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'9109596979899100101102103104105106107108109110111112113114115116117118119120'\n\
    \nshould loosely deep-equal\n\n'lm'\n    at test (/tmp/tmpg20hb478.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg20hb478.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '9109596979899100101102103104105106107108109110111112113114115116117118119120',\n\
    \  expected: 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var rotatedAlphabet = alphabet;\n  for(var i = alphabet.length - 1; i >=\
    \ 0; i--){\n    rotatedAlphabet = rotatedAlphabet.split(\"\").reverse().join(\"\
    \");\n  }\n  var encryptedString = rotatedAlphabet.split(\"\").map(function(letter){\n\
    \    return letter.charCodeAt(0) - alphabet.charCodeAt(alphabet.indexOf(letter))\
    \ + 2\n  }).join(\"\");\n  return encryptedString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = encrypt;\n  assert.deepEqual(candidate(\"\
    hi\"),\"lm\");\n  assert.deepEqual(candidate(\"asdfghjkl\"),\"ewhjklnop\");\n\
    \  assert.deepEqual(candidate(\"gf\"),\"kj\");\n  assert.deepEqual(candidate(\"\
    et\"),\"ix\");\n  assert.deepEqual(candidate(\"faewfawefaewg\"),\"jeiajeaijeiak\"\
    );\n  assert.deepEqual(candidate(\"hellomyfriend\"),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    );\n  assert.deepEqual(candidate(\"a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'22222222222222222222222222'\n\
    \nshould loosely deep-equal\n\n'lm'\n    at test (/tmp/tmpgjak0qle.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgjak0qle.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '22222222222222222222222222',\n\
    \  expected: 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var rotatedAlphabet = alphabet;\n    for(var i = alphabet.length - 1; i\
    \ >= 0; i--){\n        rotatedAlphabet = rotatedAlphabet.split(\"\").reverse().join(\"\
    \");\n    }\n    var rotatedAlphabet = rotatedAlphabet.split(\"\").reverse().join(\"\
    \");\n    var encryptedString = \"\";\n    for(var i = 0; i < s.length; i++){\n\
    \        encryptedString += rotatedAlphabet.split(\"\").reverse().join(\"\");\n\
    \    }\n    return encryptedString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = encrypt;\n  assert.deepEqual(candidate(\"\
    hi\"),\"lm\");\n  assert.deepEqual(candidate(\"asdfghjkl\"),\"ewhjklnop\");\n\
    \  assert.deepEqual(candidate(\"gf\"),\"kj\");\n  assert.deepEqual(candidate(\"\
    et\"),\"ix\");\n  assert.deepEqual(candidate(\"faewfawefaewg\"),\"jeiajeaijeiak\"\
    );\n  assert.deepEqual(candidate(\"hellomyfriend\"),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    );\n  assert.deepEqual(candidate(\"a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz'\n\
    \nshould loosely deep-equal\n\n'lm'\n    at test (/tmp/tmps54gvq34.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmps54gvq34.js:43:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz',\n\
    \  expected: 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var rotated_alphabet = alphabet.split(\"\").map(function(letter){\n    return\
    \ letter.charCodeAt(0) - 2;\n  });\n  var encrypted_string = s.split(\"\").map(function(letter){\n\
    \    return rotated_alphabet[letter.charCodeAt(0) - 2];\n  }).join(\"\");\n  return\
    \ encrypted_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"\
    lm\");\n  assert.deepEqual(candidate(\"asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"\
    gf\"),\"kj\");\n  assert.deepEqual(candidate(\"et\"),\"ix\");\n  assert.deepEqual(candidate(\"\
    faewfawefaewg\"),\"jeiajeaijeiak\");\n  assert.deepEqual(candidate(\"hellomyfriend\"\
    ),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n  assert.deepEqual(candidate(\"\
    a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'lm'\n    at test (/tmp/tmp0kvkelny.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0kvkelny.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var newString = \"\";\n    for(var i = 0; i < s.length; i++){\n       \
    \ var letter = alphabet.indexOf(s.charAt(i));\n        if(letter >= alphabet.length){\n\
    \            letter = letter - alphabet.length;\n        }\n        newString\
    \ += alphabet.charAt(letter);\n    }\n    return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = encrypt;\n\
    \  assert.deepEqual(candidate(\"hi\"),\"lm\");\n  assert.deepEqual(candidate(\"\
    asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"gf\"),\"kj\");\n\
    \  assert.deepEqual(candidate(\"et\"),\"ix\");\n  assert.deepEqual(candidate(\"\
    faewfawefaewg\"),\"jeiajeaijeiak\");\n  assert.deepEqual(candidate(\"hellomyfriend\"\
    ),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n  assert.deepEqual(candidate(\"\
    a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hi'\n\nshould\
    \ loosely deep-equal\n\n'lm'\n    at test (/tmp/tmpywxzofqy.js:32:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpywxzofqy.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hi',\n  expected:\
    \ 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var rotatedAlphabet = alphabet.split(\"\").map(function(letter, index){\n\
    \        return alphabet.charAt(index+2);\n    });\n    return s.split(\"\").map(function(letter,\
    \ index){\n        return rotatedAlphabet[alphabet.indexOf(letter)];\n    }).join(\"\
    \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"lm\");\n  assert.deepEqual(candidate(\"\
    asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"gf\"),\"kj\");\n\
    \  assert.deepEqual(candidate(\"et\"),\"ix\");\n  assert.deepEqual(candidate(\"\
    faewfawefaewg\"),\"jeiajeaijeiak\");\n  assert.deepEqual(candidate(\"hellomyfriend\"\
    ),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n  assert.deepEqual(candidate(\"\
    a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'jk'\n\nshould\
    \ loosely deep-equal\n\n'lm'\n    at test (/tmp/tmp7z0x3emx.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp7z0x3emx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'jk',\n  expected:\
    \ 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var rotatedAlphabet = alphabet.split(\"\").map(function(letter, i){\n \
    \       return alphabet.charAt(alphabet.indexOf(letter) + 2);\n    });\n    return\
    \ s.split(\"\").map(function(letter, i){\n        return rotatedAlphabet[alphabet.indexOf(letter)\
    \ + 2];\n    }).join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = encrypt;\n  assert.deepEqual(candidate(\"\
    hi\"),\"lm\");\n  assert.deepEqual(candidate(\"asdfghjkl\"),\"ewhjklnop\");\n\
    \  assert.deepEqual(candidate(\"gf\"),\"kj\");\n  assert.deepEqual(candidate(\"\
    et\"),\"ix\");\n  assert.deepEqual(candidate(\"faewfawefaewg\"),\"jeiajeaijeiak\"\
    );\n  assert.deepEqual(candidate(\"hellomyfriend\"),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    );\n  assert.deepEqual(candidate(\"a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'jeijeijeik'\n\
    \nshould loosely deep-equal\n\n'jeiajeaijeiak'\n    at test (/tmp/tmpmiyzdadt.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmiyzdadt.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'jeijeijeik',\n\
    \  expected: 'jeiajeaijeiak',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var rotatedAlphabet = alphabet.split(\"\").map(function(letter){\n    \
    \    return letter.charCodeAt(0) - 2;\n    }).join(\"\");\n    return s.split(\"\
    \").map(function(letter){\n        return rotatedAlphabet.indexOf(letter) + 2;\n\
    \    }).join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"\
    lm\");\n  assert.deepEqual(candidate(\"asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"\
    gf\"),\"kj\");\n  assert.deepEqual(candidate(\"et\"),\"ix\");\n  assert.deepEqual(candidate(\"\
    faewfawefaewg\"),\"jeiajeaijeiak\");\n  assert.deepEqual(candidate(\"hellomyfriend\"\
    ),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n  assert.deepEqual(candidate(\"\
    a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'11'\n\nshould\
    \ loosely deep-equal\n\n'lm'\n    at test (/tmp/tmpscm7k2gs.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpscm7k2gs.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '11',\n  expected:\
    \ 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var newString = \"\";\n    for(var i = 0; i < s.length; i++){\n       \
    \ var letter = alphabet.charAt(s.charCodeAt(i) - 97);\n        newString += alphabet.charAt(alphabet.indexOf(letter)\
    \ + 2);\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = encrypt;\n  assert.deepEqual(candidate(\"\
    hi\"),\"lm\");\n  assert.deepEqual(candidate(\"asdfghjkl\"),\"ewhjklnop\");\n\
    \  assert.deepEqual(candidate(\"gf\"),\"kj\");\n  assert.deepEqual(candidate(\"\
    et\"),\"ix\");\n  assert.deepEqual(candidate(\"faewfawefaewg\"),\"jeiajeaijeiak\"\
    );\n  assert.deepEqual(candidate(\"hellomyfriend\"),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    );\n  assert.deepEqual(candidate(\"a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'jk'\n\nshould\
    \ loosely deep-equal\n\n'lm'\n    at test (/tmp/tmpab_afwom.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpab_afwom.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'jk',\n  expected:\
    \ 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var rotatedAlphabet = alphabet.split(\"\").map(function(letter){\n    return\
    \ letter.charCodeAt(0) - 26;\n  }).join(\"\");\n  var rotatedString = s.split(\"\
    \").map(function(letter){\n    return alphabet.indexOf(letter) + 2;\n  }).join(\"\
    \");\n  return rotatedString + rotatedAlphabet;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = encrypt;\n  assert.deepEqual(candidate(\"\
    hi\"),\"lm\");\n  assert.deepEqual(candidate(\"asdfghjkl\"),\"ewhjklnop\");\n\
    \  assert.deepEqual(candidate(\"gf\"),\"kj\");\n  assert.deepEqual(candidate(\"\
    et\"),\"ix\");\n  assert.deepEqual(candidate(\"faewfawefaewg\"),\"jeiajeaijeiak\"\
    );\n  assert.deepEqual(candidate(\"hellomyfriend\"),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    );\n  assert.deepEqual(candidate(\"a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'9107172737475767778798081828384858687888990919293949596'\n\
    \nshould loosely deep-equal\n\n'lm'\n    at test (/tmp/tmpok2d20hg.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpok2d20hg.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '9107172737475767778798081828384858687888990919293949596',\n\
    \  expected: 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var rotatedAlphabet = alphabet.split(\"\").map(function(letter){\n    \
    \    return letter.charCodeAt(0) - 2;\n    }).join(\"\");\n    var rotatedString\
    \ = s.split(\"\").map(function(letter){\n        return alphabet.indexOf(letter)\
    \ + 2;\n    }).join(\"\");\n    return rotatedString + rotatedAlphabet;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"lm\");\n  assert.deepEqual(candidate(\"\
    asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"gf\"),\"kj\");\n\
    \  assert.deepEqual(candidate(\"et\"),\"ix\");\n  assert.deepEqual(candidate(\"\
    faewfawefaewg\"),\"jeiajeaijeiak\");\n  assert.deepEqual(candidate(\"hellomyfriend\"\
    ),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n  assert.deepEqual(candidate(\"\
    a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'9109596979899100101102103104105106107108109110111112113114115116117118119120'\n\
    \nshould loosely deep-equal\n\n'lm'\n    at test (/tmp/tmppbpm6bxd.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmppbpm6bxd.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '9109596979899100101102103104105106107108109110111112113114115116117118119120',\n\
    \  expected: 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var rotatedAlphabet = alphabet.split(\"\").map(function(letter){\n    return\
    \ letter.charCodeAt(0) - 2;\n  }).join(\"\");\n  var rotatedString = s.split(\"\
    \").map(function(letter){\n    return rotatedAlphabet.indexOf(letter);\n  }).join(\"\
    \");\n  return rotatedString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = encrypt;\n  assert.deepEqual(candidate(\"\
    hi\"),\"lm\");\n  assert.deepEqual(candidate(\"asdfghjkl\"),\"ewhjklnop\");\n\
    \  assert.deepEqual(candidate(\"gf\"),\"kj\");\n  assert.deepEqual(candidate(\"\
    et\"),\"ix\");\n  assert.deepEqual(candidate(\"faewfawefaewg\"),\"jeiajeaijeiak\"\
    );\n  assert.deepEqual(candidate(\"hellomyfriend\"),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    );\n  assert.deepEqual(candidate(\"a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'-1-1'\n\nshould\
    \ loosely deep-equal\n\n'lm'\n    at test (/tmp/tmpzj9w2f0p.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpzj9w2f0p.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '-1-1',\n\
    \  expected: 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var rotatedAlphabet = alphabet.split(\"\").map(function(letter){\n    \
    \    return letter.charCodeAt(0) - 2;\n    }).join(\"\");\n    var rotatedString\
    \ = s.split(\"\").map(function(letter){\n        return alphabet.indexOf(letter)\
    \ + 2;\n    }).join(\"\");\n    return rotatedString + rotatedAlphabet;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"lm\");\n  assert.deepEqual(candidate(\"\
    asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"gf\"),\"kj\");\n\
    \  assert.deepEqual(candidate(\"et\"),\"ix\");\n  assert.deepEqual(candidate(\"\
    faewfawefaewg\"),\"jeiajeaijeiak\");\n  assert.deepEqual(candidate(\"hellomyfriend\"\
    ),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n  assert.deepEqual(candidate(\"\
    a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'9109596979899100101102103104105106107108109110111112113114115116117118119120'\n\
    \nshould loosely deep-equal\n\n'lm'\n    at test (/tmp/tmpr5_j486f.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr5_j486f.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '9109596979899100101102103104105106107108109110111112113114115116117118119120',\n\
    \  expected: 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var rotatedAlphabet = alphabet.split(\"\").map(function(letter){\n    return\
    \ letter.charCodeAt(0) - 2;\n  }).join(\"\");\n  \n  var encryptedString = s.split(\"\
    \").map(function(letter){\n    return alphabet.indexOf(letter) + rotatedAlphabet.indexOf(letter);\n\
    \  }).join(\"\");\n  \n  return encryptedString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = encrypt;\n  assert.deepEqual(candidate(\"\
    hi\"),\"lm\");\n  assert.deepEqual(candidate(\"asdfghjkl\"),\"ewhjklnop\");\n\
    \  assert.deepEqual(candidate(\"gf\"),\"kj\");\n  assert.deepEqual(candidate(\"\
    et\"),\"ix\");\n  assert.deepEqual(candidate(\"faewfawefaewg\"),\"jeiajeaijeiak\"\
    );\n  assert.deepEqual(candidate(\"hellomyfriend\"),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    );\n  assert.deepEqual(candidate(\"a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'67'\n\nshould\
    \ loosely deep-equal\n\n'lm'\n    at test (/tmp/tmpuzrb8ww9.js:32:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpuzrb8ww9.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '67',\n  expected:\
    \ 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var rotatedAlphabet = alphabet.split(\"\").map(function(letter){\n    return\
    \ letter.charCodeAt(0) - 26;\n  }).join(\"\");\n  \n  var rotatedString = s.split(\"\
    \").map(function(letter){\n    return alphabet.indexOf(letter) + alphabet.indexOf(rotatedAlphabet);\n\
    \  }).join(\"\");\n  \n  return rotatedString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = encrypt;\n  assert.deepEqual(candidate(\"\
    hi\"),\"lm\");\n  assert.deepEqual(candidate(\"asdfghjkl\"),\"ewhjklnop\");\n\
    \  assert.deepEqual(candidate(\"gf\"),\"kj\");\n  assert.deepEqual(candidate(\"\
    et\"),\"ix\");\n  assert.deepEqual(candidate(\"faewfawefaewg\"),\"jeiajeaijeiak\"\
    );\n  assert.deepEqual(candidate(\"hellomyfriend\"),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    );\n  assert.deepEqual(candidate(\"a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'67'\n\nshould\
    \ loosely deep-equal\n\n'lm'\n    at test (/tmp/tmpkdub24jd.js:32:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpkdub24jd.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '67',\n  expected:\
    \ 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var newString = \"\";\n  for(var i = 0; i < s.length; i++){\n    newString\
    \ += alphabet.charAt(alphabet.indexOf(s.charAt(i)) + 2);\n  }\n  return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"lm\");\n  assert.deepEqual(candidate(\"\
    asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"gf\"),\"kj\");\n\
    \  assert.deepEqual(candidate(\"et\"),\"ix\");\n  assert.deepEqual(candidate(\"\
    faewfawefaewg\"),\"jeiajeaijeiak\");\n  assert.deepEqual(candidate(\"hellomyfriend\"\
    ),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n  assert.deepEqual(candidate(\"\
    a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'jk'\n\nshould\
    \ loosely deep-equal\n\n'lm'\n    at test (/tmp/tmpv_ybph61.js:28:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpv_ybph61.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'jk',\n  expected:\
    \ 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var rotatedAlphabet = alphabet.split(\"\").map(function(letter){\n    \
    \    return letter.charCodeAt(0) - 26;\n    }).join(\"\");\n    var rotatedString\
    \ = s.split(\"\").map(function(letter){\n        return alphabet.indexOf(letter)\
    \ + 26;\n    }).join(\"\");\n    return rotatedString + rotatedAlphabet;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"lm\");\n  assert.deepEqual(candidate(\"\
    asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"gf\"),\"kj\");\n\
    \  assert.deepEqual(candidate(\"et\"),\"ix\");\n  assert.deepEqual(candidate(\"\
    faewfawefaewg\"),\"jeiajeaijeiak\");\n  assert.deepEqual(candidate(\"hellomyfriend\"\
    ),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n  assert.deepEqual(candidate(\"\
    a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'33347172737475767778798081828384858687888990919293949596'\n\
    \nshould loosely deep-equal\n\n'lm'\n    at test (/tmp/tmp_xpbsem8.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_xpbsem8.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '33347172737475767778798081828384858687888990919293949596',\n\
    \  expected: 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var alphabetLength = alphabet.length;\n    var alphabetRotated = alphabet.substr(alphabetLength\
    \ - 2, alphabetLength);\n    var alphabetRotatedLength = alphabetRotated.length;\n\
    \    var alphabetRotatedRotated = alphabetRotated.substr(0, alphabetLength - 2);\n\
    \    var alphabetRotatedRotatedLength = alphabetRotatedRotated.length;\n    var\
    \ encryptedString = \"\";\n    for(var i = 0; i < s.length; i++){\n        var\
    \ letter = s.charAt(i);\n        var rotatedLetter = alphabet.charAt(alphabet.indexOf(letter)\
    \ + alphabetRotatedLength);\n        var rotatedRotatedLetter = alphabetRotated.charAt(alphabetRotated.indexOf(rotatedLetter)\
    \ + alphabetRotatedRotatedLength);\n        encryptedString += rotatedRotatedLetter;\n\
    \    }\n    return encryptedString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = encrypt;\n  assert.deepEqual(candidate(\"\
    hi\"),\"lm\");\n  assert.deepEqual(candidate(\"asdfghjkl\"),\"ewhjklnop\");\n\
    \  assert.deepEqual(candidate(\"gf\"),\"kj\");\n  assert.deepEqual(candidate(\"\
    et\"),\"ix\");\n  assert.deepEqual(candidate(\"faewfawefaewg\"),\"jeiajeaijeiak\"\
    );\n  assert.deepEqual(candidate(\"hellomyfriend\"),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    );\n  assert.deepEqual(candidate(\"a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'zz'\n\nshould\
    \ loosely deep-equal\n\n'lm'\n    at test (/tmp/tmp0akg1l9q.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp0akg1l9q.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'zz',\n  expected:\
    \ 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function encrypt that takes a string as an argument and\n//\
    \ returns a string encrypted with the alphabet being rotated. \n// The alphabet\
    \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
    \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
    asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
    et\")\n// \"ix\"\nfunction encrypt(s){\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var rotatedAlphabet = alphabet.split(\"\").map(function(letter){\n    \
    \    return letter.charCodeAt(0) - 2;\n    }).join(\"\");\n    var rotatedString\
    \ = s.split(\"\").map(function(letter){\n        return alphabet.indexOf(letter)\
    \ + 2;\n    }).join(\"\");\n    return rotatedString + rotatedAlphabet;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"lm\");\n  assert.deepEqual(candidate(\"\
    asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"gf\"),\"kj\");\n\
    \  assert.deepEqual(candidate(\"et\"),\"ix\");\n  assert.deepEqual(candidate(\"\
    faewfawefaewg\"),\"jeiajeaijeiak\");\n  assert.deepEqual(candidate(\"hellomyfriend\"\
    ),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n  assert.deepEqual(candidate(\"\
    a\"),\"e\");\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'9109596979899100101102103104105106107108109110111112113114115116117118119120'\n\
    \nshould loosely deep-equal\n\n'lm'\n    at test (/tmp/tmp1vzfft7y.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1vzfft7y.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '9109596979899100101102103104105106107108109110111112113114115116117118119120',\n\
    \  expected: 'lm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

name: HumanEval_104_unique_digits
language: js
prompt: "//Given an array of positive integers x. return a sorted array of all \n\
  // elements that hasn't any even digit.\n// Note: Returned array should be sorted\
  \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
  // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
  \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
  \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
  \ 135]);\n}\n\ntest();"
completions: ["\tvar result = [];\n\tfor(var i in x){\n\t\tif(x[i] % 2 === 0){\n\t\
    \t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n}\n", "\tvar arr\
    \ = [];\n\tfor(var i=0;i<x.length;i++){\n\t\tif(x[i] % 2 == 0){\n\t\t\tarr.push(x[i]);\n\
    \t\t}\n\t}\n\treturn arr.sort();\n}\n", "\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i]%2==0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n", "\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\t\tfor(var j=i+1;j<x.length;j++){\n\
    \t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\t\t\t\tx[j] = null;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "\tvar result = [];\n\tfor(var i=0;\
    \ i<x.length; i++){\n\t\tfor(var j=0; j<result.length; j++){\n\t\t\tif(x[i] %\
    \ result[j] === 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j === result.length){\n\
    \t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result;\n}\n", "\tvar result =\
    \ [];\n\tfor(var i=0;i<x.length;i++){\n\t\tfor(var j=i+1;j<x.length;j++){\n\t\t\
    \tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn result;\n}\n", "    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a-b;\n    });\n    return result;\n\
    }\n", "\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\t\tfor(var j=i+1;j<x.length;j++){\n\
    \t\t\tif(x[i]%x[j] === 0){\n\t\t\t\tresult.push(x[i]);\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "\tvar result = [];\n\
    \tfor(var i=0; i<x.length; i++){\n\t\tfor(var j=0; j<result.length; j++){\n\t\t\
    \tif(x[i] % result[j] === 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j === result.length){\n\
    \t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result;\n}\n", "\tvar result =\
    \ [];\n\tfor(var i = 0; i < x.length; i++){\n\t\tfor(var j = 0; j < x.length;\
    \ j++){\n\t\t\tif(x[i] % x[j] === 0){\n\t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "    var result = [];\n    for(var\
    \ i=0;i<x.length;i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n\
    \        }\n    }\n    result.sort(function(a,b){\n        return a-b;\n    });\n\
    \    return result;\n}\n", "\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i]%2==0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result;\n}\n",
  "    var result = [];\n    var digits = [];\n    for(var i=0;i<x.length;i++){\n\
    \        digits.push(x[i].toString());\n    }\n    for(var i=0;i<digits.length;i++){\n\
    \        var digit = digits[i];\n        if(digit.charAt(0)!='0'){\n         \
    \   result.push(parseInt(digit));\n        }\n    }\n    result.sort();\n    return\
    \ result;\n}\n", "\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\t\tfor(var\
    \ j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "    var result =\
    \ [];\n    for(var i=0; i<x.length; i++){\n        if(x[i] % 2 === 0){\n     \
    \       result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n", "\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\t\tif(x[i] % 2 ===\
    \ 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n}\n", " \
    \   var result = [];\n    for(var i=0;i<x.length;i++){\n        if(x[i]%2 ===\
    \ 0){\n            result.push(x[i]);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n", "\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j]==0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tx.splice(j,1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "\tvar arr\
    \ = [];\n\tfor(var i=0;i<x.length;i++){\n\t\tfor(var j=0;j<arr.length;j++){\n\t\
    \t\tif(x[i]%arr[j] === 0){\n\t\t\t\tarr.splice(j,1);\n\t\t\t\tbreak;\n\t\t\t}\n\
    \t\t}\n\t\tif(i===arr.length){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr;\n\
    }\n", "\tvar result = [];\n\tfor(var i = 0; i < x.length; i++){\n\t\tfor(var j\
    \ = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

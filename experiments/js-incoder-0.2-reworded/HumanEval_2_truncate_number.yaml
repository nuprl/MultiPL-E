name: HumanEval_2_truncate_number
language: js
prompt: "//Given a positive floating point number, it can be decomposed into\n// and\
  \ integer part (largest integer smaller than given number) and decimals\n// (leftover\
  \ part always smaller than 1).\n// Return the decimal part of the number.\n// >>>\
  \ truncate_number(3.5)\n// 0.5\nfunction truncate_number(number){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = truncate_number;\n  assert.deepEqual(candidate(3.5),0.5);\n  assert.deepEqual(candidate(1.25),0.25);\n\
  \  assert.deepEqual(candidate(123.0),0.0);\n}\n\ntest();"
completions: ["    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.floor(number*decimals)/decimals;\n}\n", "  var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n  return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.round(number * decimals) / decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.ceil(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number*Math.pow(10,decimals))\
    \ / Math.pow(10,decimals);\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number * decimals) / decimals;\n}\n", "  var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return\
    \ Math.round(number*decimals)/decimals;\n}\n", "\tlet decimals = Math.trunc(number);\n\
    \treturn number - decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", "\t\
    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\treturn\
    \ Math.round(number*decimals)/decimals;\n}\n", "\tlet decimals = Math.trunc(number).toString().split(\"\
    .\")[1].length;\n\treturn Math.trunc(number * 100) / 100;\n}\n", "    var decimals\
    \ = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return Math.round(number*decimals)/decimals;\n\
    }\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.ceil(Math.log10(number));\n\
    \    return Math.trunc(number/Math.pow(10,decimals));\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.round(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tlet decimals = Math.trunc(number).toString().split('.')[1];\n\
    \tlet integerPart = Math.trunc(number).toString().split('.')[0];\n\treturn integerPart\
    \ + (decimals ? \".\" + decimals : \"\");\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.floor(number*decimals)/decimals;\n}\n", "  var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n  return Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.ceil(Math.log(number) / Math.LN10);\n\
    \treturn Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.floor(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tlet decimals = Math.trunc(number).toString().split(\"\
    .\")[1];\n\tlet integer_part = Math.trunc(number).toString().split(\".\")[0];\n\
    \treturn (decimals ? decimals : 0) + \".\" + integer_part;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.ceil(Math.log(number)/Math.LN10);\n\
    \treturn Math.trunc(number*Math.pow(10,decimals)) / Math.pow(10,decimals);\n}\n",
  "    var decimals = Math.ceil(Math.log10(Math.abs(number))) - 1;\n    return Math.round(number\
    \ * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n", "\tvar decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n\t\twhole = Math.floor(number),\n\
    \t\tfraction = number - whole;\n\t\n\treturn whole + decimals - (fraction * decimals);\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.ceil(Math.log(number) / Math.LN10);\n\
    \treturn Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.ceil(Math.abs(number));\n    var integer_part = Math.floor(Math.abs(number));\n\
    \    return integer_part + (decimals > 0 ? decimals : 0);\n}\n", "\tvar decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "  var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n  return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \ var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number / decimals) * decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", " \
    \   var decimal_part = Math.floor(number);\n    var whole_part = number - decimal_part;\n\
    \    var decimals = Math.pow(10, decimal_part);\n    var leftover_part = number\
    \ % 1;\n    return decimal_part + decimals.toFixed(decimal_part == 0 && leftover_part\
    \ == 0 ? 0 : leftover_part);\n}\n", "    var decimals = Math.ceil(Math.log(number)\
    \ / Math.LN10);\n    return Math.floor(number / Math.pow(10, decimals)) * Math.pow(10,\
    \ decimals);\n}\n", "    var decimal_part = Math.trunc(number);\n    var whole_part\
    \ = number - decimal_part;\n    var decimals = Math.trunc(Math.log(whole_part)\
    \ / Math.LN10);\n    return decimal_part + decimals;\n}\n", "    var decimals\
    \ = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return Math.floor(number*decimals)/decimals;\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.round(number * decimals) / decimals;\n}\n", "    var decimals\
    \ = Math.ceil(Math.log(number)/Math.LN10);\n    return Math.trunc(number * Math.pow(10,\
    \ decimals)) / Math.pow(10, decimals);\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "\tlet decimals = Math.trunc(number);\n\
    \tlet integer_part = number - decimals;\n\treturn integer_part + decimals;\n}\n",
  "\tvar decimals = Math.ceil(Math.log(Math.abs(number)) / Math.LN10);\n\treturn (number\
    \ < 1) ? 1 : Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number * decimals) / decimals;\n}\n", "    var decimals\
    \ = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return Math.round(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.ceil(number).toString().split('.')[1];\n\
    \    return decimals ? parseInt(decimals) : 0;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n\t\tfraction = number - Math.floor(number),\n\t\twhole = Math.floor(number);\n\
    \treturn whole + '.' + decimals + '1';\n}\n", "\tlet decimals = Math.ceil(Math.log10(number));\n\
    \treturn Math.trunc(number/Math.pow(10,decimals));\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals =\
    \ Math.ceil(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number*Math.pow(10,decimals))\
    \ / Math.pow(10,decimals);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "  var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.ceil(Math.log(number)/Math.LN10);\n\
    \    return Math.floor(number*Math.pow(10,decimals))/Math.pow(10,decimals);\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "\tlet decimals = Math.trunc(number).toString().split('.')[1];\n\
    \tlet integerPart = Math.trunc(number).toString().split('.')[0];\n\treturn integerPart\
    \ + (decimals ? `.${decimals}` : '');\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "\tlet decimals =\
    \ Math.trunc(number);\n\tlet integer_part = Math.floor(number);\n\treturn (integer_part\
    \ + decimals) / Math.pow(10, decimals);\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\treturn\
    \ Math.round(number*decimals)/decimals;\n}\n", "\tlet decimal_part = Math.floor(number);\n\
    \tlet integer_part = number - decimal_part;\n\treturn decimal_part;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimal_part = Math.floor(number);\n    var whole_part\
    \ = number - decimal_part;\n    var decimals = Math.pow(10, decimal_part);\n \
    \   var leftover_part = number % 1;\n    return decimal_part + decimals.toFixed(decimal_part\
    \ == 0 && leftover_part == 0 ? 0 : leftover_part);\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.ceil(Math.log(number)/Math.LN10);\n\
    \treturn Math.round(number*Math.pow(10,decimals))/Math.pow(10,decimals);\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimal_part = Math.floor(number);\n    var whole_part = number - decimal_part;\n\
    \    var decimals = Math.trunc(Math.abs(whole_part));\n    return decimal_part\
    \ + decimals;\n}\n", "\tlet decimals = Math.trunc(number);\n\tlet integer_part\
    \ = Math.floor(number);\n\treturn (integer_part + decimals) / Math.pow(10, decimals);\n\
    }\n", "    var decimals = Math.ceil(Math.abs(number));\n    var integer_part =\
    \ Math.floor(Math.abs(number));\n    return number < 0 ? -integer_part : integer_part;\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "  var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n  return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "    var decimal_part = Math.floor(number);\n    var whole_part\
    \ = number - decimal_part;\n    var decimals = Math.pow(10, decimal_part);\n \
    \   var leftover_part = number % 1;\n    if(leftover_part > 0.5){\n        leftover_part\
    \ -= 1;\n    }\n    return decimal_part + decimals + leftover_part;\n}\n", "\t\
    var decimals = Math.ceil(Math.abs(number));\n\treturn number - decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tlet decimals = Math.trunc(number);\n\tlet integer_part\
    \ = Math.floor(number);\n\treturn (integer_part + decimals) / Math.pow(10, decimals);\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "\tlet decimals = Math.trunc(number);\n\
    \tlet integer = Math.floor(number);\n\tlet fraction = number - integer;\n\treturn\
    \ integer + (fraction * Math.pow(10, decimals));\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10)),\n        whole = Math.floor(number),\n\
    \        fraction = number - whole;\n    return whole + decimals - (fraction <\
    \ 0 ? 0 : fraction);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    return whole + decimals - (fraction < 0 ? 1 : 0);\n}\n", "\tvar\
    \ decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.ceil(number).toString().split(\".\")[1].length,\n        integer = Math.floor(number).toString().split(\"\
    .\")[0],\n        leftover = number - integer;\n    return integer + (decimals\
    \ > 0 ? \".\" + decimals : \"\");\n}\n", "    var decimal_part = Math.floor(number);\n\
    \    var whole_part = number - decimal_part;\n    return decimal_part + Math.trunc(whole_part);\n\
    }\n", "  var decimals = Math.ceil(Math.log10(number));\n  return Math.trunc(number/Math.pow(10,decimals));\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.round(number * decimals) / decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return Math.round(number*decimals)/decimals;\n\
    }\n", "    var decimals = Math.ceil(Math.log10(number));\n    return Math.round(number/Math.pow(10,decimals));\n\
    }\n", "    var decimal_part = Math.floor(number);\n    var whole_part = number\
    \ - decimal_part;\n    var decimals = Math.trunc(Math.abs(decimal_part));\n  \
    \  return whole_part * Math.pow(10, decimals);\n}\n", "\tvar decimals = Math.ceil(Math.log(number)\
    \ / Math.LN10);\n\treturn Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10,\
    \ decimals);\n}\n", "\tnumber = number.toFixed(20);\n\tnumber = number.split('.');\n\
    \tnumber = number[0].split('');\n\tnumber[0] = number[0].replace(/(\\d)(?=(\\\
    d{3})+(?!\\d))/g, '$1,');\n\treturn number.join('');\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number * decimals) / decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    return whole + decimals - (fraction < 0 ? 0 : fraction);\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.round(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number * decimals) / decimals;\n}\n",
  "\tvar decimals = Math.ceil(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number*Math.pow(10,decimals))\
    \ / Math.pow(10,decimals);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tlet decimals = Math.trunc(number).toString().split('.')[1];\n\
    \treturn number - decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return Math.round(number*decimals)/decimals;\n\
    }\n", "\tvar decimals = Math.ceil(Math.log(number) / Math.LN10);\n\treturn Math.trunc(number\
    \ * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n", "\tlet decimals =\
    \ Math.floor(Math.log10(number));\n\treturn Math.trunc(number/Math.pow(10, decimals));\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.ceil(number).toString().split('.')[1];\n\treturn (decimals ? decimals +\
    \ '0' : '') + Math.trunc(number);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    return whole + decimals - (fraction < 0 ? 1 : 0);\n}\n", "\tvar\
    \ decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\treturn Math.round(number\
    \ * decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\treturn\
    \ Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimal_part = Math.floor(number);\n    var whole_part\
    \ = number - decimal_part;\n    var decimals = Math.trunc(Math.log(whole_part)\
    \ / Math.LN10);\n    return decimal_part + decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.round(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.ceil(Math.log(Math.abs(number)) / Math.LN10);\n\treturn (number\
    \ < 1) ? 1 : Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\
    }\n", "\tlet decimal_part = Math.floor(number);\n\tlet integer_part = number -\
    \ decimal_part;\n\treturn decimal_part;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.ceil(Math.log(number)/Math.LN10);\n\
    \    return Math.round(number*Math.pow(10,decimals)) / Math.pow(10,decimals);\n\
    }\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.round(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.round(number * decimals) / decimals;\n}\n",
  "  var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimal_part = Math.floor(number);\n    var whole_part = number - decimal_part;\n\
    \    return decimal_part + Math.trunc(whole_part);\n}\n", "    var decimals =\
    \ Math.ceil(Math.log10(number));\n    return Math.trunc(number/Math.pow(10,decimals));\n\
    }\n", "    var decimal_part = Math.floor(number);\n    var whole_part = number\
    \ - decimal_part;\n    var decimals = Math.pow(10, decimal_part);\n    var leftover_part\
    \ = number % 1;\n    return decimal_part + decimals.toFixed(decimal_part == 0\
    \ && leftover_part == 0 ? 0 : leftover_part);\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", " \
    \   var decimal_part = Math.floor(number);\n    var whole_part = number - decimal_part;\n\
    \    var decimals = Math.ceil(Math.abs(whole_part));\n    return decimal_part\
    \ + decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n\t\twhole\
    \ = Math.floor(number),\n\t\tfraction = number - whole;\n\t\n\treturn whole +\
    \ decimals / fraction;\n}\n", "    var decimal_part = Math.floor(number);\n  \
    \  var whole_part = number - decimal_part;\n    var decimals = Math.pow(10, decimal_part);\n\
    \    var leftover_part = whole_part % decimals;\n    var leftover = leftover_part\
    \ ? leftover_part : decimals;\n    return decimal_part + leftover;\n}\n", "  \
    \  var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n  \
    \      whole = Math.floor(number),\n        fraction = number - whole;\n    return\
    \ whole + decimals - (fraction * decimals);\n}\n", "\tvar decimals = Math.ceil(Math.log10(Math.abs(number)))\
    \ - 1;\n\treturn Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n\
    \        whole = Math.floor(number),\n        fraction = number - whole;\n   \
    \ return whole + decimals - (fraction < 0 ? 1 : 0);\n}\n", "  var decimal_part\
    \ = Math.floor(number);\n  var whole_part = number - decimal_part;\n  if(whole_part\
    \ < 1){\n    return 0.0;\n  }\n  return decimal_part;\n}\n", "    var decimal_part\
    \ = Math.floor(number);\n    var whole_part = number - decimal_part;\n    var\
    \ decimals = Math.pow(10, decimal_part);\n    var leftover_part = number % 1;\n\
    \    return decimal_part + decimals.toFixed(decimal_part == 0 && leftover_part\
    \ == 0 ? 0 : leftover_part);\n}\n", "    var decimals = Math.ceil(Math.abs(number));\n\
    \    return Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "  var decimal_part = Math.floor(number);\n \
    \ var whole_part = number - decimal_part;\n  if(whole_part < 1){\n    return 0.0;\n\
    \  }\n  if(whole_part > 10){\n    return whole_part / 10.0;\n  }\n  return whole_part;\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "  var decimals =\
    \ Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n  return Math.floor(number*decimals)/decimals;\n\
    }\n", "    var decimal_part = Math.floor(number);\n    var whole_part = number\
    \ - decimal_part;\n    var decimals = Math.pow(10, decimal_part);\n    var leftover_part\
    \ = Math.round(whole_part*decimals);\n    return leftover_part < 1 ? decimal_part\
    \ + 1 : decimal_part;\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.floor(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimal_part = Math.floor(number);\n\
    \    var whole_part = number - decimal_part;\n    var decimals = Math.ceil(Math.abs(whole_part));\n\
    \    return decimal_part + decimals;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

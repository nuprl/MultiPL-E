name: HumanEval_120_maximum
language: js
prompt: "//Given an array arr of integers and a positive integer k, return a sorted\
  \ array \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// >>>\
  \ maximum([-3, -4, 5], 3)\n// [-4, -3, 5]\n// Example 2:\n// >>> maximum([4, -4,\
  \ 4], 2)\n// [4, 4]\n// Example 3:\n// >>> maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n\
  // [2]\n// Note:\n// 1. The length of the array will be in the range of [1, 1000].\n\
  // 2. The elements in the array will be in the range of [-1000, 1000].\n// 3. 0\
  \ <= k <= len(arr)\nfunction maximum(arr, k){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = maximum;\n  assert.deepEqual(candidate([-3, -4, 5], 3),[-4, -3, 5]);\n  assert.deepEqual(candidate([4,\
  \ -4, 4], 2),[4, 4]);\n  assert.deepEqual(candidate([-3, 2, 1, 2, -1, -2, 1], 1),[2]);\n\
  \  assert.deepEqual(candidate([123, -123, 20, 0, 1, 2, -3], 3),[2, 20, 123]);\n\
  \  assert.deepEqual(candidate([-123, 20, 0, 1, 2, -3], 4),[0, 1, 2, 20]);\n  assert.deepEqual(candidate([5,\
  \ 15, 0, 3, -13, -8, 0], 7),[-13, -8, 0, 0, 3, 5, 15]);\n  assert.deepEqual(candidate([-1,\
  \ 0, 2, 5, 3, -10], 2),[3, 5]);\n  assert.deepEqual(candidate([1, 0, 5, -7], 1),[5]);\n\
  \  assert.deepEqual(candidate([4, -4], 2),[-4, 4]);\n  assert.deepEqual(candidate([-10,\
  \ 10], 2),[-10, 10]);\n  assert.deepEqual(candidate([1, 2, 3, -23, 243, -400, 0],\
  \ 0),[]);\n}\n\ntest();"
completions: ["    \n    let maxArr = [];\n    let maxLength = 0;\n    \n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(maxLength < k){\n            maxArr.push(arr[i]);\n\
    \            maxLength = maxArr.length;\n        }\n        else if(maxLength\
    \ == k){\n            if(arr[i] > maxArr[k]){\n                maxArr.splice(k,\
    \ 0, arr[i]);\n                maxLength = maxArr.length;\n            }\n   \
    \     }\n        else if(maxLength > k){\n            if(arr[i] > maxArr[k]){\n\
    \                maxArr.splice(k, 0, arr[i]);\n                maxLength = maxArr.length;\n\
    \            }\n        }\n    }\n    \n    return maxArr;\n}\n", "    \n    let\
    \ maxArr = [];\n    \n    for(let i = 0; i < k; i++){\n        maxArr.push(arr[i]);\n\
    \    }\n    \n    for(let i = k; i < arr.length; i++){\n        if(arr[i] > maxArr[maxArr.length-1]){\n\
    \            maxArr[maxArr.length-1] = arr[i];\n        }\n    }\n    \n    return\
    \ maxArr;\n}\n", "    \n    // Your code here\n    \n}\n", "    var result = [];\n\
    \    for(var i = 0; i < k; i++){\n        var max = 0;\n        for(var j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] > max){\n                max =\
    \ arr[j];\n            }\n        }\n        result.push(max);\n    }\n    return\
    \ result;\n}\n", "    \n    // Write your code here.\n    \n    \n}\n", "    \n\
    \    // write your code here\n    \n}\n", "    let result = [];\n    for(let i\
    \ = 0; i < k; i++){\n        let max = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \      }\n        }\n        result.push(max);\n    }\n    return result;\n}\n",
  "    let result = [];\n    for(let i = 0; i < k; i++){\n        let max = 0;\n \
    \       for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n\
    \                max = arr[j];\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    \n    let result = [];\n    \n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(result.length < k){\n            result.push(arr[i]);\n\
    \        }\n        else if(arr[i] > result[result.length - k]){\n           \
    \ result.push(arr[i]);\n        }\n    }\n    \n    return result;\n}\n", "  \
    \  let result = [];\n    for(let i = 0; i < k; i++){\n        let max = 0;\n \
    \       for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n\
    \                max = arr[j];\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    \n    // Write your code here\n    \n}\n",
  "    let max = [];\n    for(let i = 0; i < k; i++){\n        let maxIndex = arr.indexOf(Math.max(...arr));\n\
    \        max.push(arr[maxIndex]);\n        arr.splice(maxIndex, 1);\n    }\n \
    \   return max;\n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n\
    \        let max = 0;\n        for(let j = 0; j < arr.length; j++){\n        \
    \    if(arr[j] > max){\n                max = arr[j];\n            }\n       \
    \ }\n        result.push(max);\n    }\n    return result;\n}\n", "    \n    //\
    \ Your code here\n    \n}\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n\
    \        max.push(arr[i]);\n    }\n    for(let i = k; i < arr.length; i++){\n\
    \        let maxIndex = i;\n        for(let j = i; j < arr.length; j++){\n   \
    \         if(arr[j] > arr[maxIndex]){\n                maxIndex = j;\n       \
    \     }\n        }\n        max.push(arr[maxIndex]);\n        arr.splice(maxIndex,1);\n\
    \    }\n    return max;\n}\n", "    \n    // Write your code here\n    \n    let\
    \ maxArr = [];\n    \n    for(let i = 0; i < arr.length; i++){\n        if(maxArr.length\
    \ < k){\n            maxArr.push(arr[i]);\n        }\n        else if(arr[i] >\
    \ maxArr[k-1]){\n            maxArr[k-1] = arr[i];\n        }\n    }\n    \n \
    \   return maxArr;\n}\n", "    \n    // Write your code here\n    \n}\n", "  \
    \  \n    // Your code here\n    \n}\n", "    \n    // Write your code here\n \
    \   \n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n        let\
    \ max = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > max){\n                max = arr[j];\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

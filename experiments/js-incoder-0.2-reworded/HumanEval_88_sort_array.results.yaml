language: js
name: HumanEval_88_sort_array
results:
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpjvqyph_m.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpjvqyph_m.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  if(array.length < 2){\n    return array;\n\
    \  }\n  if(array.length % 2 === 0){\n    return array.sort((a,b) => a - b);\n\
    \  }\n  return array.sort((a,b) => b - a);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  14,\n\
    \  21,\n  23\n]\n\nshould loosely deep-equal\n\n[\n  23,\n  21,\n  14,\n  11\n\
    ]\n    at test (/tmp/tmp4sy8qqot.js:36:10)\n    at Object.<anonymous> (/tmp/tmp4sy8qqot.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, 14,\
    \ 21, 23 ],\n  expected: [ 23, 21, 14, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpp4bigjdy.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp4bigjdy.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet result = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tresult.push(array[i]);\n\
    \t}\n\tlet even = sum % 2 === 0;\n\tlet odd = sum % 2 !== 0;\n\tif(even){\n\t\t\
    result.sort((a,b) => a-b);\n\t}else if(odd){\n\t\tresult.sort((a,b) => b-a);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpxwibvg5e.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxwibvg5e.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp441m4771.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp441m4771.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a, b) => a - b);\n    }else{\n        array.sort((a, b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpiiga7zul.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpiiga7zul.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpk5zw0onq.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpk5zw0onq.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpc0lwq0t0.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc0lwq0t0.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpz0fvnhbo.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz0fvnhbo.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpck4c81w8.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpck4c81w8.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b)=>a-b);\n    }else{\n        array.sort((a,b)=>b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpu38bwjop.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpu38bwjop.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  let result = [];\n  for(let\
    \ i = 0; i < array.length; i++){\n    sum += array[i];\n  }\n  if(sum % 2 ===\
    \ 0){\n    result.sort((a,b) => a - b);\n  } else {\n    result.sort((a,b) =>\
    \ b - a);\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  5\n]\n    at test (/tmp/tmpxkygb6xv.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxkygb6xv.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  var sum = 0;\n  for(var i=0;i<array.length;i++){\n\
    \    sum += array[i];\n  }\n  if(sum%2 === 1){\n    array.sort(function(a,b){\n\
    \      return a-b;\n    });\n  }else{\n    array.sort(function(a,b){\n      return\
    \ b-a;\n    });\n  }\n  return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp8ielkwsr.js:40:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp8ielkwsr.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4lk5yzjw.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4lk5yzjw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp_id__8oo.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_id__8oo.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i=0;i<array.length;i++){\n\
    \        sum += array[i];\n    }\n    if(sum%2==1){\n        array.sort(function(a,b){\n\
    \            return a-b;\n        });\n    }else{\n        array.sort(function(a,b){\n\
    \            return b-a;\n        });\n    }\n    return array;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmps4zvpxcv.js:40:10)\n   \
    \ at Object.<anonymous> (/tmp/tmps4zvpxcv.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i=0; i<array.length;\
    \ i++){\n        sum += array[i];\n    }\n    if(sum%2 === 1){\n        array.sort();\n\
    \    } else {\n        array.sort(function(a, b){return b-a;});\n    }\n    return\
    \ array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpfizz0iih.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpfizz0iih.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpphxctd2w.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpphxctd2w.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpnv4mxfcl.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnv4mxfcl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  var sum = 0;\n  for(var i=0;i<array.length;i++){\n\
    \    sum += array[i];\n  }\n  if(sum%2 === 0){\n    array.sort((a,b)=>a-b);\n\
    \  }else{\n    array.sort((a,b)=>b-a);\n  }\n  return array;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmppsm9rpie.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppsm9rpie.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4lk5yzjw.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4lk5yzjw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a, b) => a - b);\n    }else{\n        array.sort((a, b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgqc9k7i_.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgqc9k7i_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    let cojsArray = [];\n\
    \    for(let i = 0; i < array.length; i++){\n        sum += array[i];\n    }\n\
    \    if(sum % 2 === 1){\n        for(let i = 0; i < array.length; i++){\n    \
    \        cojsArray.push(array[i]);\n        }\n        cojsArray.sort((a,b) =>\
    \ a - b);\n    }else{\n        for(let i = 0; i < array.length; i++){\n      \
    \      cojsArray.push(array[i]);\n        }\n        cojsArray.sort((a,b) => b\
    \ - a);\n    }\n    return cojsArray;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp5ytcsk03.js:43:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp5ytcsk03.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  if(array.length == 0){\n    return array;\n\
    \  }\n  var sum = 0;\n  for(var i=0;i<array.length;i++){\n    sum += array[i];\n\
    \  }\n  if(sum%2 != 0){\n    array.sort(function(a,b){\n      return a-b;\n  \
    \  });\n  }else{\n    array.sort(function(a,b){\n      return b-a;\n    });\n\
    \  }\n  return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp2i2yzu31.js:43:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp2i2yzu31.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    let result = [];\n\
    \    for(let i = 0; i < array.length; i++){\n        sum += array[i];\n      \
    \  result.push(array[i]);\n    }\n    if(sum % 2 === 0){\n        result.sort((a,b)\
    \ => a - b);\n    }else{\n        result.sort((a,b) => b - a);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp3yivt1ri.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3yivt1ri.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tcojs.push(array[i]);\n\
    \t}\n\tlet odd = sum % 2 === 1;\n\tlet even = sum % 2 === 0;\n\tif(odd){\n\t\t\
    cojs.sort((a, b) => a - b);\n\t}else{\n\t\tcojs.sort((a, b) => b - a);\n\t}\n\t\
    return cojs;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpq7z7k7vw.js:40:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpq7z7k7vw.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a, b) => a - b);\n    }else{\n        array.sort((a, b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpiiga7zul.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpiiga7zul.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  if(array.length <= 1){\n    return array;\n\
    \  }\n  var sum = 0;\n  for(var i = 1; i < array.length; i++){\n    sum += array[i];\n\
    \  }\n  var odd = sum % 2 === 1;\n  var even = sum % 2 === 0;\n  if(odd){\n  \
    \  array.sort(function(a, b){\n      return a - b;\n    });\n  }else{\n    array.sort(function(a,\
    \ b){\n      return b - a;\n    });\n  }\n  return array;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp602jki67.js:45:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp602jki67.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a, b) => a - b);\n    }else{\n        array.sort((a, b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpiiga7zul.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpiiga7zul.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  var sum = 0;\n  for(var i=0;i<array.length;i++){\n\
    \    sum += array[i];\n  }\n  if(sum%2 === 0){\n    array.sort();\n  }else{\n\
    \    array.sort(function(a,b){\n      return b-a;\n    });\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp06fpxc04.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp06fpxc04.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if (sum % 2 === 1){\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp_k_laj85.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp_k_laj85.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpnv4mxfcl.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnv4mxfcl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i=0;i<array.length;i++){\n\
    \        sum += array[i];\n    }\n    if(sum%2 === 1){\n        array.sort(function(a,b){\n\
    \            return a-b;\n        });\n    }else{\n        array.sort(function(a,b){\n\
    \            return b-a;\n        });\n    }\n    return array;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4u861jha.js:40:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4u861jha.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpci0vqks3.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpci0vqks3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tcojs.push(i);\n\t\
    }\n\tif(sum % 2 === 1){\n\t\tcojs.sort((a,b) => array[a] - array[b]);\n\t}else{\n\
    \t\tcojs.sort((a,b) => array[b] - array[a]);\n\t}\n\treturn cojs.map(i => array[i]);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp18sij6yn.js:38:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp18sij6yn.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 1){\n    array.sort((a,b)\
    \ => a-b);\n  }else{\n    array.sort((a,b) => b-a);\n  }\n  return array;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp0jpi0uef.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp0jpi0uef.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  var sum = 0;\n  var cojs = [];\n  for\
    \ (var i = 0; i < array.length; i++){\n    sum += array[i];\n  }\n  if(sum % 2\
    \ === 1){\n    cojs = array.sort();\n  } else {\n    cojs = array.sort(function(a,\
    \ b){\n      return b - a;\n    });\n  }\n  return cojs;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpzr6h7a7_.js:39:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpzr6h7a7_.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpci0vqks3.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpci0vqks3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i=0;i<array.length;i++){\n\
    \        sum += array[i];\n    }\n    if(sum%2 === 0){\n        array.sort((a,b)=>a-b);\n\
    \    }else{\n        array.sort((a,b)=>b-a);\n    }\n    return array;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmptm0uuauz.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptm0uuauz.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tcojs.push(i);\n\t\
    }\n\tcojs.sort((a,b) => {\n\t\tif(sum%2 === 0){\n\t\t\treturn array[b] - array[a];\n\
    \t\t}else{\n\t\t\treturn array[a] - array[b];\n\t\t}\n\t});\n\treturn cojs;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[\n  5\n]\n    at test (/tmp/tmpo8lpovdw.js:38:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo8lpovdw.js:46:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [ 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet result = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tresult.push(array[i]);\n\
    \t}\n\tif(sum % 2 === 1){\n\t\tresult.sort((a,b) => a - b);\n\t}else{\n\t\tresult.sort((a,b)\
    \ => b - a);\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpi1kiij98.js:38:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpi1kiij98.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpci0vqks3.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpci0vqks3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if (sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  } else {\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgdxpu5lr.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgdxpu5lr.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    var cojs = [];\n \
    \   for(var i = 0; i < array.length; i++){\n        sum += array[i];\n    }\n\
    \    if(sum % 2 === 1){\n        cojs = array.sort();\n    }else{\n        cojs\
    \ = array.sort(function(a, b){\n            return b - a;\n        });\n    }\n\
    \    return cojs;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp0rmnsqzj.js:39:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp0rmnsqzj.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tif(sum % 2 === 1){\n\
    \t\t\tcojs.unshift(array[i]);\n\t\t}else{\n\t\t\tcojs.push(array[i]);\n\t\t}\n\
    \t}\n\treturn cojs;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  0,\n\
    \  3,\n  2,\n  4,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpegr0w769.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpegr0w769.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 0, 3,\
    \ 2, 4, 1 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tfor(let i = 0; i < array.length;\
    \ i++){\n\t\tsum += array[i];\n\t}\n\tlet evenSum = sum % 2 === 0;\n\tlet odd\
    \ = sum > 0;\n\tif(evenSum){\n\t\tarray.sort((a,b) => a-b);\n\t}else{\n\t\tarray.sort((a,b)\
    \ => b-a);\n\t}\n\treturn array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpiea3z2_f.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpiea3z2_f.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    var cojs = [];\n \
    \   for(var i=0;i<array.length;i++){\n        sum += array[i];\n        cojs.push(array[i]);\n\
    \    }\n    if(sum%2 === 1){\n        cojs.sort();\n    }else{\n        cojs.reverse();\n\
    \    }\n    return cojs;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpasd6dpsh.js:38:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpasd6dpsh.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a, b) => a - b);\n    }else{\n        array.sort((a, b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgqc9k7i_.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgqc9k7i_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if (sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  } else {\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgdxpu5lr.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgdxpu5lr.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 1){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp1yw5y82j.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp1yw5y82j.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a, b)\
    \ => a - b);\n  }else{\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgf21ajpy.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgf21ajpy.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4lk5yzjw.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4lk5yzjw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpck4c81w8.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpck4c81w8.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i=0;i<array.length;i++){\n\
    \        sum += array[i];\n    }\n    if(sum%2 === 1){\n        array.sort(function(a,b){\n\
    \            return a-b;\n        });\n    }else{\n        array.sort(function(a,b){\n\
    \            return b-a;\n        });\n    }\n    return array;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4u861jha.js:40:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4u861jha.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a, b) => a - b);\n    }else{\n        array.sort((a, b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgqc9k7i_.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgqc9k7i_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i=0;i<array.length;i++){\n\
    \        sum += array[i];\n    }\n    if(sum%2 === 1){\n        array.sort(function(a,b){\n\
    \            return a-b;\n        });\n    }else{\n        array.sort(function(a,b){\n\
    \            return b-a;\n        });\n    }\n    return array;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4u861jha.js:40:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4u861jha.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tfor(let i = 0; i < array.length;\
    \ i++){\n\t\tsum += array[i];\n\t}\n\tlet odd = sum % 2 === 1;\n\tlet result =\
    \ [];\n\tfor(let i = 0; i < array.length; i++){\n\t\tlet index = i;\n\t\tif(odd\
    \ === true){\n\t\t\tindex = array.length - 1 - i;\n\t\t}\n\t\tresult.push(array[index]);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  1,\n\
    \  0,\n  3,\n  4,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpod8dfruv.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpod8dfruv.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 1, 0,\
    \ 3, 4, 2 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  var sum = 0;\n  for(var i=0; i<array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum%2 === 1){\n    array.sort(function(a,b){\n\
    \      return a-b;\n    });\n  }else{\n    array.sort(function(a,b){\n      return\
    \ b-a;\n    });\n  }\n  return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpxesfd08q.js:40:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpxesfd08q.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tcojs.push(array[i]);\n\
    \t}\n\tcojs.sort((a,b) => a - b);\n\tlet odd = sum % 2 === 1;\n\tlet even = sum\
    \ % 2 === 0;\n\tif(odd){\n\t\tcojs.sort((a,b) => b - a);\n\t}\n\treturn cojs;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpc_bdvz5m.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc_bdvz5m.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a, b) => a - b);\n    }else{\n        array.sort((a, b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgqc9k7i_.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgqc9k7i_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i=0; i<array.length;\
    \ i++){\n        sum += array[i];\n    }\n    if(sum%2 === 0){\n        array.sort(function(a,\
    \ b){\n            return a-b;\n        });\n    }else{\n        array.sort(function(a,\
    \ b){\n            return b-a;\n        });\n    }\n    return array;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpvjtled3h.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvjtled3h.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tif(sum % 2 === 0){\n\
    \t\t\tcojs.unshift(array[i]);\n\t\t}else{\n\t\t\tcojs.push(array[i]);\n\t\t}\n\
    \t}\n\treturn cojs;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  2,\n  3,\n  0,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpb666wkrx.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb666wkrx.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 4, 2,\
    \ 3, 0, 5 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  var sum = 0;\n  for (var i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  var odd = sum % 2 === 1;\n  if(odd){\n \
    \   array.sort(function(a, b){\n      return a - b;\n    });\n  }else{\n    array.sort(function(a,\
    \ b){\n      return b - a;\n    });\n  }\n  return array;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp7aw6527f.js:41:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp7aw6527f.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    let result = [];\n\
    \    for(let i = 0; i < array.length; i++){\n        sum += array[i];\n      \
    \  result.push(array[i]);\n    }\n    if(sum % 2 === 0){\n        for(let i =\
    \ 0; i < array.length; i++){\n            for(let j = i; j < array.length; j++){\n\
    \                if(array[j] > array[j+1]){\n                    let temp = array[j];\n\
    \                    array[j] = array[j+1];\n                    array[j+1] =\
    \ temp;\n                }\n            }\n        }\n    }else{\n        for(let\
    \ i = 0; i < array.length; i++){\n            for(let j = i; j < array.length;\
    \ j++){\n                if(array[j] < array[j+1]){\n                    let temp\
    \ = array[j];\n                    array[j] = array[j+1];\n                  \
    \  array[j+1] = temp;\n                }\n            }\n        }\n    }\n  \
    \  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  4,\n\
    \  3,\n  0,\n  1,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp5tqsjbxf.js:53:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5tqsjbxf.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 4, 3,\
    \ 0, 1, 5 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b)=>a-b);\n    }else{\n        array.sort((a,b)=>b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpu38bwjop.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpu38bwjop.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4lk5yzjw.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4lk5yzjw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpci0vqks3.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpci0vqks3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  if(array.length < 2){\n    return array;\n\
    \  }\n  var sum = 0;\n  for(var i = 1; i < array.length; i++){\n    sum += array[i];\n\
    \  }\n  if(sum % 2 === 0){\n    return array.sort(function(a, b){\n      return\
    \ a - b;\n    });\n  }\n  return array.sort(function(a, b){\n    return b - a;\n\
    \  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp5j7zo13g.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5j7zo13g.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b)=>a-b);\n    }else{\n        array.sort((a,b)=>b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpu38bwjop.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpu38bwjop.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tcojs.push(i);\n\t\
    }\n\tcojs.sort((a, b) => {\n\t\tif(a+b === sum){\n\t\t\treturn a > b ? 1 : -1;\n\
    \t\t}\n\t\treturn sum - a + b;\n\t});\n\treturn cojs;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[\n  5\n]\n    at test (/tmp/tmpl646wsko.js:37:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl646wsko.js:45:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [ 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b)=>a-b);\n    }else{\n        array.sort((a,b)=>b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpf5nttcdl.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf5nttcdl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    let result = [];\n\
    \    for(let i = 0; i < array.length; i++){\n        sum += array[i];\n      \
    \  result.push(array[i]);\n    }\n    if(sum % 2 === 0){\n        result.sort((a,b)\
    \ => a - b);\n    }else{\n        result.sort((a,b) => b - a);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp3yivt1ri.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3yivt1ri.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  if(array.length == 0){\n    return array;\n\
    \  }\n  var sum = 0;\n  for(var i=0; i<array.length; i++){\n    sum += array[i];\n\
    \  }\n  if(sum%2 != 0){\n    array.sort(function(a, b){\n      return a-b;\n \
    \   });\n  }else{\n    array.sort(function(a, b){\n      return b-a;\n    });\n\
    \  }\n  return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpg7sjg7mn.js:43:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpg7sjg7mn.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort(function(a, b){\n            return a - b;\n        });\n\
    \    }else{\n        array.sort(function(a, b){\n            return b - a;\n \
    \       });\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpsyqeeo5e.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyqeeo5e.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    let result = [];\n\
    \    for(let i = 0; i < array.length; i++){\n        sum += array[i];\n      \
    \  result.push(array[i]);\n    }\n    if(sum % 2 === 1){\n        for(let i =\
    \ 0; i < array.length; i++){\n            for(let j = i + 1; j < array.length;\
    \ j++){\n                if(array[i] > array[j]){\n                    let temp\
    \ = array[i];\n                    array[i] = array[j];\n                    array[j]\
    \ = temp;\n                }\n            }\n        }\n    }else{\n        for(let\
    \ i = 0; i < array.length; i++){\n            for(let j = i + 1; j < array.length;\
    \ j++){\n                if(array[i] < array[j]){\n                    let temp\
    \ = array[i];\n                    array[i] = array[j];\n                    array[j]\
    \ = temp;\n                }\n            }\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  4,\n\
    \  3,\n  0,\n  1,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmplyxwu4bx.js:53:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplyxwu4bx.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 4, 3,\
    \ 0, 1, 5 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i=0;i<array.length;i++){\n\
    \        sum += array[i];\n    }\n    if(sum%2 === 1){\n        array.sort(function(a,b){return\
    \ a-b});\n    }else{\n        array.sort(function(a,b){return b-a});\n    }\n\
    \    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpgylmdumk.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpgylmdumk.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 1){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp1yw5y82j.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp1yw5y82j.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    let result = [];\n\
    \    for(let i = 0; i < array.length; i++){\n        sum += array[i];\n      \
    \  result.push(array[i]);\n    }\n    if(sum % 2 === 0){\n        for(let i =\
    \ array.length - 1; i > 0; i--){\n            for(let j = 0; j < i; j++){\n  \
    \              if(array[j] > array[j + 1]){\n                    let temp = array[j];\n\
    \                    array[j] = array[j + 1];\n                    array[j + 1]\
    \ = temp;\n                }\n            }\n        }\n    }else{\n        for(let\
    \ i = array.length - 1; i > 0; i--){\n            for(let j = 0; j < i; j++){\n\
    \                if(array[j] < array[j + 1]){\n                    let temp =\
    \ array[j];\n                    array[j] = array[j + 1];\n                  \
    \  array[j + 1] = temp;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  4,\n\
    \  3,\n  0,\n  1,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp45mc_6fg.js:53:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp45mc_6fg.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 4, 3,\
    \ 0, 1, 5 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet result = [];\n\tlet\
    \ len = array.length;\n\tfor(let i = 0; i < len; i++){\n\t\tsum += array[i];\n\
    \t\tresult.push(array[i]);\n\t}\n\tlet odd = sum % 2 === 1;\n\tlet even = sum\
    \ % 2 === 0;\n\tlet temp;\n\tfor(let i = 0; i < len; i++){\n\t\ttemp = result[i];\n\
    \t\tlet j = i;\n\t\twhile(j > 0 && temp < result[j-1]){\n\t\t\tresult[j] = result[j-1];\n\
    \t\t\tj--;\n\t\t}\n\t\tresult[j] = temp;\n\t}\n\treturn odd ? result : result.sort((a,b)\
    \ => b-a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpvqfv2wg3.js:46:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpvqfv2wg3.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet result = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tif(sum % 2 === 0){\n\
    \t\t\tresult.push(array[i]);\n\t\t}else{\n\t\t\tresult.push(array[i]);\n\t\t\t\
    result.push(array.length - 1 - i);\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5\n]\n    at test (/tmp/tmpbzprujrl.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbzprujrl.js:44:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 0 ],\n\
    \  expected: [ 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4lk5yzjw.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4lk5yzjw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  var sum = 0;\n  var len = array.length;\n\
    \  for(var i=0; i<len; i++){\n    sum += array[i];\n  }\n  if(sum%2 === 1){\n\
    \    array.sort(function(a, b){\n      return a-b;\n    });\n  }else{\n    array.sort(function(a,\
    \ b){\n      return b-a;\n    });\n  }\n  return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp7s5y3pdg.js:41:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp7s5y3pdg.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i=0;i<array.length;i++){\n\
    \        sum += array[i];\n    }\n    if(sum%2==1){\n        array.sort(function(a,b){\n\
    \            return a-b;\n        });\n    }else{\n        array.sort(function(a,b){\n\
    \            return b-a;\n        });\n    }\n    return array;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmps4zvpxcv.js:40:10)\n   \
    \ at Object.<anonymous> (/tmp/tmps4zvpxcv.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tcojs.push(i);\n\t\
    }\n\tcojs.sort((a,b) => {\n\t\tif((sum - array[a]) % 2 === 0){\n\t\t\treturn -1;\n\
    \t\t}\n\t\tif((sum - array[b]) % 2 === 0){\n\t\t\treturn 1;\n\t\t}\n\t\treturn\
    \ 0;\n\t});\n\treturn cojs.map(i => array[i]);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  1,\n\
    \  3,\n  2,\n  4,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpe_l70nlw.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe_l70nlw.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 1, 3,\
    \ 2, 4, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tcojs.push(i);\n\t\
    }\n\tcojs.sort((a,b) => {\n\t\tlet aSum = sum - array[a];\n\t\tlet bSum = sum\
    \ - array[b];\n\t\tif(aSum < bSum) return -1;\n\t\tif(aSum > bSum) return 1;\n\
    \t\treturn 0;\n\t});\n\treturn cojs;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[\n  5\n]\n    at test (/tmp/tmpaw0kx1y9.js:38:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaw0kx1y9.js:46:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [ 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet result = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tresult.push(array[i]);\n\
    \t}\n\t\n\tlet isOdd = sum % 2 === 1;\n\tlet isEven = sum % 2 === 0;\n\t\n\tif(isOdd){\n\
    \t\tresult.sort((a, b) => a - b);\n\t}else{\n\t\tresult.sort((a, b) => b - a);\n\
    \t}\n\t\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpt5anqt6x.js:43:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpt5anqt6x.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  if(array.length < 2){\n    return array;\n\
    \  }\n  var sum = 0;\n  for(var i = 1; i < array.length; i++){\n    sum += array[i];\n\
    \  }\n  if(sum % 2 === 0){\n    array.sort(function(a, b){\n      return a - b;\n\
    \    });\n  }else{\n    array.sort(function(a, b){\n      return b - a;\n    });\n\
    \  }\n  return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmphu42251y.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphu42251y.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpck4c81w8.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpck4c81w8.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tif(sum % 2 === 0){\n\
    \t\t\tcojs.unshift(array[i]);\n\t\t}else{\n\t\t\tcojs.push(array[i]);\n\t\t}\n\
    \t}\n\treturn cojs;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  2,\n  3,\n  0,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpb666wkrx.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb666wkrx.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 4, 2,\
    \ 3, 0, 5 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  if(array.length < 2){\n    return array;\n\
    \  }\n  var sum = 0;\n  for(var i=0; i<array.length; i++){\n    sum += array[i];\n\
    \  }\n  if(sum % 2 === 0){\n    return array.sort();\n  }else{\n    return array.sort().reverse();\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmppvn87tvk.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppvn87tvk.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    let result = [];\n\
    \    for(let i = 0; i < array.length; i++){\n        sum += array[i];\n      \
    \  result.push(array[i]);\n    }\n    if(sum % 2 === 0){\n        for(let i =\
    \ array.length - 1; i >= 0; i--){\n            sum += array[i];\n            result.push(array[i]);\n\
    \        }\n    }else{\n        for(let i = 0; i < array.length; i++){\n     \
    \       sum += array[i];\n            result.push(array[i]);\n        }\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5\n]\n    at test (/tmp/tmp7c0qu70v.js:42:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7c0qu70v.js:50:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 5 ],\n\
    \  expected: [ 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tif(sum % 2 === 1){\n\
    \t\t\tcojs.unshift(array[i]);\n\t\t}else{\n\t\t\tcojs.push(array[i]);\n\t\t}\n\
    \t}\n\treturn cojs;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  0,\n\
    \  3,\n  2,\n  4,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpegr0w769.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpegr0w769.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 0, 3,\
    \ 2, 4, 1 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpck4c81w8.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpck4c81w8.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 1){\n    array.sort((a,b)\
    \ => a-b);\n  }else{\n    array.sort((a,b) => b-a);\n  }\n  return array;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp0jpi0uef.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp0jpi0uef.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet result = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tresult.push(array[i]);\n\
    \t}\n\t\n\tif(sum % 2 === 1){\n\t\tresult.sort((a,b) => a - b);\n\t}else{\n\t\t\
    result.sort((a,b) => b - a);\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpgin7ccic.js:39:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpgin7ccic.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpck4c81w8.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpck4c81w8.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if (sum % 2 === 0){\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp0rap5aha.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0rap5aha.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 1) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmprqnvgqg1.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmprqnvgqg1.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a,b)\
    \ => a-b);\n  }else{\n    array.sort((a,b) => b-a);\n  }\n  return array;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpaj4milfl.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpaj4milfl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    let result = [];\n\
    \    for(let i = 0; i < array.length; i++){\n        sum += array[i];\n      \
    \  result.push(array[i]);\n    }\n    if(sum % 2 === 0){\n        result.sort((a,\
    \ b) => a - b);\n    }else{\n        result.sort((a, b) => b - a);\n    }\n  \
    \  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpztcsdz3u.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpztcsdz3u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a, b) => a - b);\n    }else{\n        array.sort((a, b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgqc9k7i_.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgqc9k7i_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpci0vqks3.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpci0vqks3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 1){\n    array.sort((a,b)\
    \ => a-b);\n  }else{\n    array.sort((a,b) => b-a);\n  }\n  return array;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp0jpi0uef.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp0jpi0uef.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b)=>a-b);\n    }else{\n        array.sort((a,b)=>b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpf5nttcdl.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf5nttcdl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  if(array.length <= 1) return array;\n\
    \  let sum = 0;\n  for(let i = 0; i < array.length; i++){\n    sum += array[i];\n\
    \  }\n  if(sum % 2 === 1) return array.sort((a,b) => a - b);\n  return array.sort((a,b)\
    \ => b - a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpmw2fzh1x.js:33:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpmw2fzh1x.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  let cojs = [];\n  for(let\
    \ i = 0; i < array.length; i++){\n    sum += array[i];\n  }\n  if(sum % 2 ===\
    \ 0){\n    cojs = array.sort((a,b) => a-b);\n  }else{\n    cojs = array.sort((a,b)\
    \ => b-a);\n  }\n  return cojs;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmppsl5s6fi.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppsl5s6fi.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  if(array.length < 2){\n    return array;\n\
    \  }\n  var sum = 0;\n  for(var i = 1; i < array.length; i++){\n    sum += array[i];\n\
    \  }\n  if(sum % 2 === 0){\n    array.sort(function(a, b){\n      return a - b;\n\
    \    });\n  }else{\n    array.sort(function(a, b){\n      return b - a;\n    });\n\
    \  }\n  return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmphu42251y.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphu42251y.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    var cojs = [];\n \
    \   for(var i=0;i<array.length;i++){\n        sum += array[i];\n        cojs.push(array[i]);\n\
    \    }\n    if(sum%2==1){\n        cojs.sort();\n    }else{\n        cojs.reverse();\n\
    \    }\n    return cojs;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpywom3xdj.js:38:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpywom3xdj.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    let cojs = [];\n \
    \   for(let i = 0; i < array.length; i++){\n        sum += array[i];\n       \
    \ if(sum % 2 === 1){\n            cojs.unshift(array[i]);\n        }else{\n  \
    \          cojs.push(array[i]);\n        }\n    }\n    return cojs;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  0,\n\
    \  3,\n  2,\n  4,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmphgzl8bb2.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphgzl8bb2.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 0, 3,\
    \ 2, 4, 1 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4lk5yzjw.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4lk5yzjw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4lk5yzjw.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4lk5yzjw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 1){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp1yw5y82j.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp1yw5y82j.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpck4c81w8.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpck4c81w8.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a, b) => a - b);\n    }else{\n        array.sort((a, b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgqc9k7i_.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgqc9k7i_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4lk5yzjw.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4lk5yzjw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  var sum = 0;\n  for(var i=0; i<array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum%2 === 1){\n    array.sort(function(a,b){\n\
    \      return a-b;\n    });\n  }else{\n    array.sort(function(a,b){\n      return\
    \ b-a;\n    });\n  }\n  return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpxesfd08q.js:40:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpxesfd08q.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpci0vqks3.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpci0vqks3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    let result = [];\n\
    \    for(let i = 0; i < array.length; i++){\n        sum += array[i];\n      \
    \  result.push(array[i]);\n    }\n    if(sum % 2 === 1){\n        result.sort((a,b)\
    \ => a-b);\n    }else{\n        result.sort((a,b) => b-a);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp_k75amuq.js:38:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp_k75amuq.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpnv4mxfcl.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnv4mxfcl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b)=>a-b);\n    }else{\n        array.sort((a,b)=>b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpf5nttcdl.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf5nttcdl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tif(sum % 2 === 0){\n\
    \t\t\tcojs.unshift(array[i]);\n\t\t}else{\n\t\t\tcojs.push(array[i]);\n\t\t}\n\
    \t}\n\treturn cojs;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  2,\n  3,\n  0,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpb666wkrx.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb666wkrx.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 4, 2,\
    \ 3, 0, 5 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  var sum = 0;\n  for(var i=0;i<array.length;i++){\n\
    \    sum += array[i];\n  }\n  if(sum%2 === 0){\n    array.sort();\n  }else{\n\
    \    array.sort(function(a,b){\n      return b-a;\n    });\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp06fpxc04.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp06fpxc04.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpci0vqks3.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpci0vqks3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a, b)\
    \ => a - b);\n  }else{\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgf21ajpy.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgf21ajpy.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet result = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tif(sum % 2 === 0){\n\
    \t\t\tresult.push(array[i]);\n\t\t}else{\n\t\t\tresult.push(array[i]);\n\t\t\t\
    result.push(array.length - 1 - i);\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5\n]\n    at test (/tmp/tmpbzprujrl.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbzprujrl.js:44:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 0 ],\n\
    \  expected: [ 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b)=>a-b);\n    }else{\n        array.sort((a,b)=>b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpf5nttcdl.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf5nttcdl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpci0vqks3.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpci0vqks3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    var cojs = [];\n \
    \   for(var i = 0; i < array.length; i++){\n        sum += array[i];\n       \
    \ if(sum % 2 === 0){\n            cojs.push(array[i]);\n        }else{\n     \
    \       cojs.unshift(array[i]);\n        }\n    }\n    return cojs;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  0,\n\
    \  3,\n  2,\n  4,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp1ubv6qo7.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ubv6qo7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 0, 3,\
    \ 2, 4, 1 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a, b) => a - b);\n    }else{\n        array.sort((a, b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgqc9k7i_.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgqc9k7i_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tcojs.push(i);\n\t\
    }\n\tcojs.sort((a,b) => {\n\t\tif(a-sum > b-sum){\n\t\t\treturn 1;\n\t\t}\n\t\t\
    if(a-sum < b-sum){\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t});\n\treturn cojs;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[\n  5\n]\n    at test (/tmp/tmpvfnoet5c.js:40:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvfnoet5c.js:48:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [ 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet result = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tif(sum % 2 === 0){\n\
    \t\t\tresult.push(array[i]);\n\t\t}else{\n\t\t\tresult.push(array[i]);\n\t\t\t\
    result.push(array.length - 1 - i);\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5\n]\n    at test (/tmp/tmpbzprujrl.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbzprujrl.js:44:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 0 ],\n\
    \  expected: [ 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 1) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmprqnvgqg1.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmprqnvgqg1.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4lk5yzjw.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4lk5yzjw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a, b)\
    \ => a - b);\n  }else{\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgf21ajpy.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgf21ajpy.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a, b)\
    \ => a - b);\n  }else{\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgf21ajpy.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgf21ajpy.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tif(sum % 2 === 1){\n\
    \t\t\tcojs.unshift(array[i]);\n\t\t}else{\n\t\t\tcojs.push(array[i]);\n\t\t}\n\
    \t}\n\treturn cojs;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  0,\n\
    \  3,\n  2,\n  4,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpegr0w769.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpegr0w769.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 0, 3,\
    \ 2, 4, 1 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i=0;i<array.length;i++){\n\
    \        sum += array[i];\n    }\n    if(sum%2 === 0){\n        array.sort();\n\
    \    }else{\n        array.sort(function(a,b){return b-a;});\n    }\n    return\
    \ array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp6vuig__o.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6vuig__o.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  if(array.length < 2){\n    return array;\n\
    \  }\n  let sum = 0;\n  for(let i = 0; i < array.length; i++){\n    sum += array[i];\n\
    \  }\n  if(sum % 2 === 1){\n    array.sort((a,b) => a - b);\n  }else{\n    array.sort((a,b)\
    \ => b - a);\n  }\n  return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp5qt6uqzv.js:39:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp5qt6uqzv.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 1){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp1yw5y82j.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp1yw5y82j.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpnv4mxfcl.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnv4mxfcl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tif(sum % 2 === 1){\n\
    \t\t\tcojs.unshift(array[i]);\n\t\t}else{\n\t\t\tcojs.push(array[i]);\n\t\t}\n\
    \t}\n\treturn cojs;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  0,\n\
    \  3,\n  2,\n  4,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpegr0w769.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpegr0w769.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 0, 3,\
    \ 2, 4, 1 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if (sum % 2 === 1){\n    array.sort((a,b)\
    \ => a-b);\n  } else {\n    array.sort((a,b) => b-a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpv8g2ph10.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpv8g2ph10.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 1){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp1yw5y82j.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp1yw5y82j.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpck4c81w8.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpck4c81w8.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpck4c81w8.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpck4c81w8.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a, b) => a - b);\n    }else{\n        array.sort((a, b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpgqc9k7i_.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgqc9k7i_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpnv4mxfcl.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnv4mxfcl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4lk5yzjw.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4lk5yzjw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpci0vqks3.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpci0vqks3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpck4c81w8.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpck4c81w8.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet result = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tif(sum % 2 === 0){\n\
    \t\t\tresult.push(array[i]);\n\t\t}else{\n\t\t\tresult.push(array[i]);\n\t\t\t\
    result.push(array.length - 1 - i);\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5\n]\n    at test (/tmp/tmpbzprujrl.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbzprujrl.js:44:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 0 ],\n\
    \  expected: [ 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tfor(let i = 0; i < array.length;\
    \ i++){\n\t\tsum += array[i];\n\t}\n\tlet evenSum = sum % 2 === 0;\n\tlet descendingOrder\
    \ = evenSum ? true : false;\n\tlet sortedArray = array.sort((a, b) => {\n\t\t\
    let aSum = a + b;\n\t\tlet bSum = b + a;\n\t\tlet aEvenSum = aSum % 2 === 0;\n\
    \t\tlet bEvenSum = bSum % 2 === 0;\n\t\tlet aDescendingOrder = aEvenSum ? true\
    \ : false;\n\t\tlet bDescendingOrder = bEvenSum ? true : false;\n\t\tif(aDescendingOrder\
    \ && bDescendingOrder){\n\t\t\treturn b - a\n\t\t}else if(aDescendingOrder &&\
    \ !bDescendingOrder){\n\t\t\treturn -1 * b - a\n\t\t}else if(!aDescendingOrder\
    \ && bDescendingOrder){\n\t\t\treturn -1 * a\n\t\t}else{\n\t\t\treturn a - b\n\
    \t\t}\n\t});\n\treturn descendingOrder ? sortedArray.concat().reverse() : sortedArray;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  5,\n\
    \  3,\n  1,\n  4,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpyw4t37i7.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyw4t37i7.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 5, 3,\
    \ 1, 4, 2 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet result = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tresult.push(array[i]);\n\
    \t}\n\tif(sum % 2 === 0){\n\t\tresult.sort((a,b) => a - b);\n\t}else{\n\t\tresult.sort((a,b)\
    \ => b - a);\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp5h25fvsw.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5h25fvsw.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpcpprwo__.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcpprwo__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpci0vqks3.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpci0vqks3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i=0;i<array.length;i++){\n\
    \        sum += array[i];\n    }\n    if(sum%2 === 0){\n        array.sort(function(a,b){\n\
    \            return a-b;\n        });\n    }else{\n        array.sort(function(a,b){\n\
    \            return b-a;\n        });\n    }\n    return array;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpln1ev04e.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpln1ev04e.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a - b);\n    }else{\n        array.sort((a,b) =>\
    \ b - a);\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp4lk5yzjw.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4lk5yzjw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if (sum % 2 === 0){\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp0rap5aha.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0rap5aha.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpck4c81w8.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpck4c81w8.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tfor(let i = 0; i < array.length;\
    \ i++){\n\t\tsum += array[i];\n\t}\n\tif(sum % 2 === 0){\n\t\tarray.sort((a,b)\
    \ => a - b);\n\t}else{\n\t\tarray.sort((a,b) => b - a);\n\t}\n\treturn array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp1_57ahzz.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_57ahzz.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort(function(a, b){\n            return a - b;\n        });\n\
    \    }else{\n        array.sort(function(a, b){\n            return b - a;\n \
    \       });\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpsyqeeo5e.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyqeeo5e.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tlet cojs = [];\n\tfor(let\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t\tcojs.push(i);\n\t\
    }\n\tcojs.sort((a,b) => sum - array[a] - array[b]);\n\treturn cojs;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[\n  5\n]\n    at test (/tmp/tmp_6n2sq9u.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_6n2sq9u.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [ 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n\tlet sum = 0;\n\tfor(let i = 0; i < array.length;\
    \ i++){\n\t\tsum += array[i];\n\t}\n\tlet even = sum % 2 === 0;\n\tlet odd = !even;\n\
    \tlet result = [];\n\tfor(let i = 0; i < array.length; i++){\n\t\tlet value =\
    \ array[i];\n\t\tlet index = i;\n\t\tif(odd){\n\t\t\tindex = array.length - i\
    \ - 1;\n\t\t}\n\t\tresult.push(value);\n\t\tarray[index] = value;\n\t}\n\treturn\
    \ even? result.sort() : result.sort(function(a, b){return b-a});\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  3,\n  3,\n  2,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmplx8lkh_4.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplx8lkh_4.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 3,\
    \ 3, 2, 2 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  let sum = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    array.sort((a,b)\
    \ => a - b);\n  }else{\n    array.sort((a,b) => b - a);\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmpck4c81w8.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpck4c81w8.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    for(let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 1){\n\
    \        array.sort((a,b) => a-b);\n    }else{\n        array.sort((a,b) => b-a);\n\
    \    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpci0vqks3.js:36:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpci0vqks3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    let sum = 0;\n    let result = [];\n\
    \    for(let i = 0; i < array.length; i++){\n        sum += array[i];\n      \
    \  result.push(array[i]);\n    }\n    if(sum % 2 === 0){\n        result.sort((a,b)\
    \ => a - b);\n    }else{\n        result.sort((a,b) => b - a);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n    at test (/tmp/tmp3yivt1ri.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3yivt1ri.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 4, 3,\
    \ 2, 1, 0 ],\n  expected: [ 0, 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659749385

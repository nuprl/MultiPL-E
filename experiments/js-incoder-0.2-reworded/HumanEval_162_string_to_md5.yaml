name: HumanEval_162_string_to_md5
language: js
prompt: "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text'\
  \ is an empty string, return undefined.\n// >>> string_to_md5(\"Hello world\")\n\
  // \"3e25960a79dbc69b674cd4ec67a72c62\"\nfunction string_to_md5(text){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\"\
  );\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"\
  A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"\
  password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();"
completions: ["  if(text === \"\"){\n    return undefined;\n  }\n  var hash = crypto.createHash('md5');\n\
    \  hash.update(text);\n  return hash.digest('hex');\n}\n", "    var md5sum = crypto.createHash('md5');\n\
    \    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n", "    var md5sum\
    \ = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n\
    }\n", "\tif(!text){\n\t\treturn undefined;\n\t}\n\tvar hash = crypto.createHash('md5');\n\
    \thash.update(text);\n\treturn hash.digest('hex');\n}\n", "    var md5sum = crypto.createHash('md5');\n\
    \    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n", "    if(text\
    \ === \"\"){\n        return undefined;\n    }\n    return crypto.createHash('md5').update(text).digest('hex');\n\
    }\n", "\tif(!text){\n\t\treturn undefined;\n\t}\n\tvar md5sum = crypto.createHash('md5');\n\
    \tmd5sum.update(text);\n\treturn md5sum.digest('hex');\n}\n", "    var md5sum\
    \ = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n\
    }\n", "    if(text === \"\"){\n        return undefined;\n    }\n    return crypto.createHash('md5').update(text).digest('hex');\n\
    }\n", "  if(text === \"\"){\n    return undefined;\n  }\n  var md5sum = crypto.createHash('md5');\n\
    \  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n", "    if(text ===\
    \ \"\"){\n        return undefined;\n    }\n    var hash = crypto.createHash('md5');\n\
    \    hash.update(text);\n    return hash.digest('hex');\n}\n", "    var md5sum\
    \ = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n\
    }\n", "    var md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n\
    \    return md5sum.digest('hex');\n}\n", "    var md5sum = crypto.createHash('md5');\n\
    \    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n", "    var md5\
    \ = '';\n    var i;\n    for(i = 0; i < text.length; i++){\n        md5 += text.charCodeAt(i).toString(16);\n\
    \    }\n    return md5;\n}\n", "    if(text === \"\"){\n        return undefined;\n\
    \    }\n    var md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n\
    \    return md5sum.digest('hex');\n}\n", "    var md5sum = crypto.createHash('md5');\n\
    \    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n", "  var md5sum\
    \ = crypto.createHash('md5');\n  md5sum.update(text);\n  return md5sum.digest('hex');\n\
    }\n", "    if(text === \"\"){\n        return undefined;\n    }\n    var md5sum\
    \ = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n\
    }\n", "  if(text === \"\"){\n    return undefined;\n  }\n  var md5sum = crypto.createHash('md5');\n\
    \  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

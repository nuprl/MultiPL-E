name: HumanEval_157_right_angle_triangle
language: js
prompt: "//Given the lengths of the three sides of a triangle. Return true if the\
  \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
  // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
  \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
  \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
  \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
  \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
  \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
  \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
completions: ["\tvar ab = a-b;\n\tvar ac = a-c;\n\tvar bc = b-c;\n\treturn (ab*ac\
    \ > bc*ab);\n}\n", "\treturn (((b - a) * (c - b)) > 0)\n}\n", "    var ab = a\
    \ - b;\n    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n   \
    \ var abc = ab * bc;\n    return Math.abs(acb - abc) < 0.000001;\n}\n", "    var\
    \ ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n\
    \    var bca = b + c;\n    var bcb = b - c;\n    var bcc = bc - ab;\n    var abca\
    \ = ab + ac;\n    var abcbab = ab + bc + ab;\n    var abcbc = ab + bc + bc;\n\
    \    var abccc = ab + c + bc;\n    var abccb = ab + c + bc;\n    var abcbca =\
    \ ab + bc + ca;\n    var abcbcb = ab + bc + cb;\n    var abcbcc = ab + c + cb;\n\
    \    var abccca = ab + c + ca;\n    var abcccb = ab + c + cb;\n    var abcccba\
    \ = ab + c + ca + b;\n    var abcccbc = ab + c + cb + c;\n    var abcccbaa = ab\
    \ + c + ca + b + a;\n    var abcccbca = ab + c + cb + ca + a;\n    var abcccbcb\
    \ = ab + c + cb + cb + b;\n    var abcccbcca = ab + c + cb + ca + a + c;\n   \
    \ var abcccbcba = ab + c + cb + ca + b + a;\n    var abcccbcbaa = ab + c + cb\
    \ + ca + b + a + a;\n    var abcccbcbaab = ab + c + cb + ca + b + a + ab;\n  \
    \  var abcccbcbaabc = ab + c + cb + ca + b + a + ab + c;\n    var abcccbcbaabca\
    \ = ab + c + cb + ca + b + a + ab + ca + a;\n    var abcccbcbaabcbc = ab + c +\
    \ cb + ca + b + a + ab + ca + b + c;\n    var abcccbcbaabcbca = ab + c + cb +\
    \ ca + b + a + ab + ca + b + ca + a;\n    var abcccbcbaabcbcb = ab + c + cb +\
    \ ca + b + a + ab + ca + b + c + b;\n    var abcccbcbaabcbcca = ab + c + cb +\
    \ ca + b + a + ab + ca + b + c + c + a;\n    var abcccbcbaabcbccb = ab + c + cb\
    \ + ca + b + a + ab + ca + b + c + c + b;\n    var abcccbcbaabcbccca = ab + c\
    \ + cb + c", "\tvar ab = a - b;\n\tvar ac = c - a;\n\tvar bc = b - c;\n\treturn\
    \ (ab > ac && ab > bc);\n}\n", "\tvar ab = a - b;\n\tvar ac = c - a;\n\tvar bc\
    \ = b - c;\n\treturn (ab > 0 && ac > 0 && bc>0) || (ab < 0 && ac < 0 && bc<0);\n\
    }\n", "    return (((b - a) * (c - b)) >= 0 && ((b - a) * (a + b)) >= 0 && ((c\
    \ - a) * (a + c)) >= 0);\n}\n", "\treturn (Math.abs(Math.sqrt(Math.pow(a, 2) +\
    \ Math.pow(b, 2) + Math.pow(c, 2)) - Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)\
    \ - Math.pow(c, 2))) <= 1);\n}\n", "  var ab = abs(a-b),\n      ac = abs(a-c),\n\
    \      bc = abs(b-c);\n  return ab == ac && ab == bc;\n}\n", "    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle = Math.acos((a1*a1\
    \ + b1*b1 + c1*c1)/(Math.sqrt(a1*a1 + b1*b1 + c1*c1)*Math.sqrt(b1*b1 + c1*c1)));\n\
    \    return angle < Math.PI/2;\n}\n", "\tvar ab = a - b;\n\tvar ac = c - a;\n\t\
    var bc = b - c;\n\tvar acb = ac * bc;\n\treturn (ab > acb) && (ac > bc);\n}\n",
  "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    \n    return\
    \ ((ab >= 0) && (ac >= 0) && (bc >= 0)) || ((ab <= 0) && (ac <= 0) && (bc <= 0));\n\
    }\n", "    var ab = a - b;\n    var ac = c - a;\n    var bc = b - c;\n    var\
    \ abc = ab + ac;\n    var bcd = bc + ab;\n    return abc === bcd;\n}\n", "\tvar\
    \ ab = a - b;\n\tvar ac = c - a;\n\tvar bc = b - c;\n\treturn (ab >= 0 && ac >=\
    \ 0 && bc >= 0) || (ab <= 0 && ac <= 0 && bc <= 0);\n}\n", "  var ab = abs(a-b),\n\
    \      ac = abs(a-c),\n      bc = abs(b-c);\n  return ((ab >= ac) && (ab >= bc));\n\
    }\n", "    var ab = a-b;\n    var ac = c-a;\n    var bc = b-c;\n    var det =\
    \ ab*ac - bc*ab;\n    if (det < 0){\n        return false;\n    }\n    var sq\
    \ = ab*ab + ac*ac;\n    var det = ab*ab + bc*bc;\n    return det === sq;\n}\n",
  "\tvar ab = a - b;\n\tvar ac = c - a;\n\tvar bc = b - c;\n\treturn (ab > 0 && ac\
    \ > 0 && bc>0) || (ab < 0 && ac < 0 && bc<0);\n}\n", "    var ab = a - b;\n  \
    \  var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bca =\
    \ b + ca;\n    var cab = ac + bc;\n    var acb = ac + bc;\n    var abca = ab +\
    \ ca;\n    return ((abc > bca) && (abc > cab) && (abc > acb));\n}\n", "    var\
    \ ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n\
    \    var bcd = bc + ab;\n    var abcd = abc + bcd;\n    return ((abcd >= 0) &&\
    \ (bcd >= 0) && (ab >= 0));\n}\n", "    var ab = a - b;\n    var ac = c - a;\n\
    \    var bc = b - c;\n    var det = ab * ac - bc * ab;\n    return det > 0;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

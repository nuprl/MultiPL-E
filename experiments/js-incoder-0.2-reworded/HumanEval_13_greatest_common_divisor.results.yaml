name: HumanEval_13_greatest_common_divisor
language: js
results:
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(a ===\
    \ b)\n    return a;\n  if(a < b)\n    return greatest_common_divisor(b, a % b);\n\
    \  else\n    return greatest_common_divisor(a, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpmm42jctg.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmm42jctg.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b === -1) return\
    \ -a;\n  if(b === -2) return a;\n  if(b === -3) return -a;\n  if(b === -4) return\
    \ a;\n  if(b === -5) return -a;\n  if(b === -6) return a;\n  if(b === -7) return\
    \ -a;\n  if(b === -8) return a;\n  if(b === -9) return -a;\n  if(b === -10) return\
    \ a;\n  if(b === -11) return -a;\n  if(b === -12) return a;\n  if(b === -13) return\
    \ -a;\n  if(b === -14) return a;\n  if(b === -15) return -a;\n  if(b === -16)\
    \ return a;\n  if(b === -17) return -a;\n  if(b === -18) return a;\n  if(b ===\
    \ -19) return -a;\n  if(b === -20) return a;\n  if(b === -21) return -a;\n  if(b\
    \ === -22) return a;\n  if(b === -23) return -a;\n  if(b === -24) return a;\n\
    \  if(b === -25) return -a;\n  if(b === -26) return a;\n  if(b === -27) return\
    \ -a;\n  if(b === -28) return a;\n  if(b === -29) return -a;\n  if(b === -30)\
    \ return a;\n  if(b === -31) return -a;\n  if(b === -32) return a;\n  if(b ===\
    \ -33) return -a;\n  if(b === -34) return a;\n  if(b === -35) return -a;\n  if(b\
    \ === -36) return a;\n  if(b === -37) return -a;\n  if(b === -38) return a;\n\
    \  if(b === -39) return -a;\n  if(b === -40) return a;\n  if(b === -41) return\
    \ -a;\n  if(b === -42) return a;\n  if(b === -43) return -a;\n  if(b === -44)\
    \ return a;\n  if(b === -45) return -a;\n  if(b === -46) return a;\n  if(b ===\
    \ -47) return -a;\n  if(b === -48) return a;\n  if(b === -49) return -a;\n  if(b\
    \ === -50) return a;\n  if(b === -51) return -a;\n  if(b === -52) return a;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_l46c7b8.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return b;\n  if(b > a)\n    return greatest_common_divisor(b, a % b);\n\
    \  if(a > b)\n    return greatest_common_divisor(a, b % b);\n  return a;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpa1lkzx04.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa1lkzx04.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ b/a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.469802112191199e-227\n\
    \nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpsm4q4mup.js:22:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpsm4q4mup.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.469802112191199e-227,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n21\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6sh92tc6.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6sh92tc6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(b <= a) return a;\n  if(b\
    \ >= a) return b;\n  if(b == 0) return a;\n  if(b == 1) return b;\n  if(b == -1)\
    \ return -b;\n  if(b == -2) return -b;\n  if(b == -3) return -b;\n  if(b == -4)\
    \ return -b;\n  if(b == -5) return -b;\n  if(b == -6) return -b;\n  if(b == -7)\
    \ return -b;\n  if(b == -8) return -b;\n  if(b == 9) return -b;\n  if(b == 10)\
    \ return -b;\n  if(b == 11) return -b;\n  if(b == 12) return -b;\n  if(b == 13)\
    \ return -b;\n  if(b == 14) return -b;\n  if(b == 15) return -b;\n  if(b == 16)\
    \ return -b;\n  if(b == 17) return -b;\n  if(b == 18) return -b;\n  if(b == 19)\
    \ return -b;\n  if(b == 20) return -b;\n  if(b == 21) return -b;\n  if(b == 22)\
    \ return -b;\n  if(b == 23) return -b;\n  if(b == 24) return -b;\n  if(b == 25)\
    \ return -b;\n  if(b == 26) return -b;\n  if(b == 27) return -b;\n  if(b == 28)\
    \ return -b;\n  if(b == 29) return -b;\n  if(b == 30) return -b;\n  if(b == 31)\
    \ return -b;\n  if(b == 32) return -b;\n  if(b == 33) return -b;\n  if(b == 34)\
    \ return -b;\n  if(b == 35) return -b;\n  if(b == 36) return -b;\n  if(b == 37)\
    \ return -b;\n  if(b == 38) return -b;\n  if(b == 39) return -b;\n  if(b == 40)\
    \ return -b;\n  if(b == 41) return -b;\n  if(b == 42) return -b;\n  if(b == 43)\
    \ return -b;\n  if(b == 44) return -b;\n  if(b == 45) return -b;\n  if(b == 46)\
    \ return -b;\n  if(b == 47) return -b;\n  if(b == 48) return -b;\n  if(b == 49)\
    \ return -b;\n  if(b == 50) return -b;\n  if(b == 51) return -b;\n  if(b == 52)\
    \ return -b;\n  if(b == 53) return -b;\n  if\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6d5bm5qk.js:67\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn57y8evm.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:3)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== 0 && a % b\
    \ === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b !== 0 && a\
    \ % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b !== 0 &&\
    \ a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b !== 0\
    \ && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b !==\
    \ 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1fzhp8gk.js:45\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b === -1) return\
    \ -a;\n  if(b === -2) return a;\n  if(b === -3) return -a;\n  if(b === -4) return\
    \ a;\n  if(b === -5) return -a;\n  if(b === -6) return a;\n  if(b === -7) return\
    \ -a;\n  if(b === -8) return a;\n  if(b === -9) return -a;\n  if(b === -10) return\
    \ a;\n  if(b === -11) return -a;\n  if(b === -12) return a;\n  if(b === -13) return\
    \ -a;\n  if(b === -14) return a;\n  if(b === -15) return -a;\n  if(b === -16)\
    \ return a;\n  if(b === -17) return -a;\n  if(b === -18) return a;\n  if(b ===\
    \ -19) return -a;\n  if(b === -20) return a;\n  if(b === -21) return -a;\n  if(b\
    \ === -22) return a;\n  if(b === -23) return -a;\n  if(b === -24) return a;\n\
    \  if(b === -25) return -a;\n  if(b === -26) return a;\n  if(b === -27) return\
    \ -a;\n  if(b === -28) return a;\n  if(b === -29) return -a;\n  if(b === -30)\
    \ return a;\n  if(b === -31) return -a;\n  if(b === -32) return a;\n  if(b ===\
    \ -33) return -a;\n  if(b === -34) return a;\n  if(b === -35) return -a;\n  if(b\
    \ === -36) return a;\n  if(b === -37) return -a;\n  if(b === -38) return a;\n\
    \  if(b === -39) return -a;\n  if(b === -40) return a;\n  if(b === -41) return\
    \ -a;\n  if(b === -42) return a;\n  if(b === -43) return -a;\n  if(b === -44)\
    \ return a;\n  if(b === -45) return -a;\n  if(b === -46) return a;\n  if(b ===\
    \ -47) return -a;\n  if(b === -48) return a;\n  if(b === -49) return -a;\n  if(b\
    \ === -50) return a;\n  if(b === -51) return -a;\n  if(b === -52) return a;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp33o8y23z.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpuyhxitiz.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuyhxitiz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(a === 1)\n    return b;\n  if(a ===\
    \ -1)\n    return -b;\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return\
    \ a;\n  if(b === -1)\n    return -a;\n  if(b === -2)\n    return a;\n  if(b ===\
    \ -3)\n    return -a;\n  if(b === -4)\n    return a;\n  if(b === -5)\n    return\
    \ -a;\n  if(b === -6)\n    return a;\n  if(b === -7)\n    return -a;\n  if(b ===\
    \ -8)\n    return a;\n  if(b === -9)\n    return -a;\n  if(b === -10)\n    return\
    \ a;\n  if(b === -11)\n    return -a;\n  if(b === -12)\n    return a;\n  if(b\
    \ === -13)\n    return -a;\n  if(b === -14)\n    return a;\n  if(b === -15)\n\
    \    return -a;\n  if(b === -16)\n    return a;\n  if(b === -17)\n    return -a;\n\
    \  if(b === -18)\n    return a;\n  if(b === -19)\n    return -a;\n  if(b === -20)\n\
    \    return a;\n  if(b === -21)\n    return -a;\n  if(b === -22)\n    return a;\n\
    \  if(b === -23)\n    return -a;\n  if(b === -24)\n    return a;\n  if(b === -25)\n\
    \    return -a;\n  if(b === -26)\n    return a;\n  if(b === -27)\n    return -a;\n\
    \  if(b === -28)\n    return a;\n  if(b === -29)\n    return -a;\n  if(b === -30)\n\
    \    return a;\n  if(b === -31)\n    return -a;\n  if(b === -32)\n    return a;\n\
    \  if(b === -33)\n    return -a;\n  if(b === -34)\n    return a;\n  if(b === -35)\n\
    \    return -a;\n  if(b === -36)\n    return a;\n  if(b === -37)\n    return -a;\n\
    \  if(b === -38)\n    return a;\n  if(b === -39)\n    return -a;\n  if(b === -40)\n\
    \    return a;\n  if(b === -41)\n    return -a;\n  if(b === -42)\n    return a;\n\
    \  if(b === -43)\n    return -a;\n  if(b\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpei477rar.js:104\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b === -1) return\
    \ -a;\n  if(b === -2) return a;\n  if(b === -3) return -a;\n  if(b === -4) return\
    \ a;\n  if(b === -5) return -a;\n  if(b === -6) return a;\n  if(b === -7) return\
    \ -a;\n  if(b === -8) return a;\n  if(b === -9) return -a;\n  if(b === -10) return\
    \ a;\n  if(b === -11) return -a;\n  if(b === -12) return a;\n  if(b === -13) return\
    \ -a;\n  if(b === -14) return a;\n  if(b === -15) return -a;\n  if(b === -16)\
    \ return a;\n  if(b === -17) return -a;\n  if(b === -18) return a;\n  if(b ===\
    \ -19) return -a;\n  if(b === -20) return a;\n  if(b === -21) return -a;\n  if(b\
    \ === -22) return a;\n  if(b === -23) return -a;\n  if(b === -24) return a;\n\
    \  if(b === -25) return -a;\n  if(b === -26) return a;\n  if(b === -27) return\
    \ -a;\n  if(b === -28) return a;\n  if(b === -29) return -a;\n  if(b === -30)\
    \ return a;\n  if(b === -31) return -a;\n  if(b === -32) return a;\n  if(b ===\
    \ -33) return -a;\n  if(b === -34) return a;\n  if(b === -35) return -a;\n  if(b\
    \ === -36) return a;\n  if(b === -37) return -a;\n  if(b === -38) return a;\n\
    \  if(b === -39) return -a;\n  if(b === -40) return a;\n  if(b === -41) return\
    \ -a;\n  if(b === -42) return a;\n  if(b === -43) return -a;\n  if(b === -44)\
    \ return a;\n  if(b === -45) return -a;\n  if(b === -46) return a;\n  if(b ===\
    \ -47) return -a;\n  if(b === -48) return a;\n  if(b === -49) return -a;\n  if(b\
    \ === -50) return a;\n  if(b === -51) return -a;\n  if(b === -52) return a;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppwbzyelo.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== Math.floor(b))\
    \ return NaN;\n  return greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp62j3rcnh.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp62j3rcnh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

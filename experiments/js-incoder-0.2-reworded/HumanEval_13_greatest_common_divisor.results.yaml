language: js
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(a ===\
    \ b)\n    return a;\n  if(a < b)\n    return greatest_common_divisor(b, a % b);\n\
    \  else\n    return greatest_common_divisor(a, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpmm42jctg.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmm42jctg.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b === -1) return\
    \ -a;\n  if(b === -2) return a;\n  if(b === -3) return -a;\n  if(b === -4) return\
    \ a;\n  if(b === -5) return -a;\n  if(b === -6) return a;\n  if(b === -7) return\
    \ -a;\n  if(b === -8) return a;\n  if(b === -9) return -a;\n  if(b === -10) return\
    \ a;\n  if(b === -11) return -a;\n  if(b === -12) return a;\n  if(b === -13) return\
    \ -a;\n  if(b === -14) return a;\n  if(b === -15) return -a;\n  if(b === -16)\
    \ return a;\n  if(b === -17) return -a;\n  if(b === -18) return a;\n  if(b ===\
    \ -19) return -a;\n  if(b === -20) return a;\n  if(b === -21) return -a;\n  if(b\
    \ === -22) return a;\n  if(b === -23) return -a;\n  if(b === -24) return a;\n\
    \  if(b === -25) return -a;\n  if(b === -26) return a;\n  if(b === -27) return\
    \ -a;\n  if(b === -28) return a;\n  if(b === -29) return -a;\n  if(b === -30)\
    \ return a;\n  if(b === -31) return -a;\n  if(b === -32) return a;\n  if(b ===\
    \ -33) return -a;\n  if(b === -34) return a;\n  if(b === -35) return -a;\n  if(b\
    \ === -36) return a;\n  if(b === -37) return -a;\n  if(b === -38) return a;\n\
    \  if(b === -39) return -a;\n  if(b === -40) return a;\n  if(b === -41) return\
    \ -a;\n  if(b === -42) return a;\n  if(b === -43) return -a;\n  if(b === -44)\
    \ return a;\n  if(b === -45) return -a;\n  if(b === -46) return a;\n  if(b ===\
    \ -47) return -a;\n  if(b === -48) return a;\n  if(b === -49) return -a;\n  if(b\
    \ === -50) return a;\n  if(b === -51) return -a;\n  if(b === -52) return a;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_l46c7b8.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return b;\n  if(b > a)\n    return greatest_common_divisor(b, a % b);\n\
    \  if(a > b)\n    return greatest_common_divisor(a, b % b);\n  return a;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpa1lkzx04.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa1lkzx04.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ b/a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.469802112191199e-227\n\
    \nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpsm4q4mup.js:22:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpsm4q4mup.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.469802112191199e-227,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n21\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6sh92tc6.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6sh92tc6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(b <= a) return a;\n  if(b\
    \ >= a) return b;\n  if(b == 0) return a;\n  if(b == 1) return b;\n  if(b == -1)\
    \ return -b;\n  if(b == -2) return -b;\n  if(b == -3) return -b;\n  if(b == -4)\
    \ return -b;\n  if(b == -5) return -b;\n  if(b == -6) return -b;\n  if(b == -7)\
    \ return -b;\n  if(b == -8) return -b;\n  if(b == 9) return -b;\n  if(b == 10)\
    \ return -b;\n  if(b == 11) return -b;\n  if(b == 12) return -b;\n  if(b == 13)\
    \ return -b;\n  if(b == 14) return -b;\n  if(b == 15) return -b;\n  if(b == 16)\
    \ return -b;\n  if(b == 17) return -b;\n  if(b == 18) return -b;\n  if(b == 19)\
    \ return -b;\n  if(b == 20) return -b;\n  if(b == 21) return -b;\n  if(b == 22)\
    \ return -b;\n  if(b == 23) return -b;\n  if(b == 24) return -b;\n  if(b == 25)\
    \ return -b;\n  if(b == 26) return -b;\n  if(b == 27) return -b;\n  if(b == 28)\
    \ return -b;\n  if(b == 29) return -b;\n  if(b == 30) return -b;\n  if(b == 31)\
    \ return -b;\n  if(b == 32) return -b;\n  if(b == 33) return -b;\n  if(b == 34)\
    \ return -b;\n  if(b == 35) return -b;\n  if(b == 36) return -b;\n  if(b == 37)\
    \ return -b;\n  if(b == 38) return -b;\n  if(b == 39) return -b;\n  if(b == 40)\
    \ return -b;\n  if(b == 41) return -b;\n  if(b == 42) return -b;\n  if(b == 43)\
    \ return -b;\n  if(b == 44) return -b;\n  if(b == 45) return -b;\n  if(b == 46)\
    \ return -b;\n  if(b == 47) return -b;\n  if(b == 48) return -b;\n  if(b == 49)\
    \ return -b;\n  if(b == 50) return -b;\n  if(b == 51) return -b;\n  if(b == 52)\
    \ return -b;\n  if(b == 53) return -b;\n  if\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp6d5bm5qk.js:67\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpn57y8evm.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:3)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== 0 && a % b\
    \ === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b !== 0 && a\
    \ % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b !== 0 &&\
    \ a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b !== 0\
    \ && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b !==\
    \ 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && a % b === 1) return b;\n  if(b\
    \ !== 0 && a % b === 0) return b;\n  if(b !== 0 && \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp1fzhp8gk.js:45\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b === -1) return\
    \ -a;\n  if(b === -2) return a;\n  if(b === -3) return -a;\n  if(b === -4) return\
    \ a;\n  if(b === -5) return -a;\n  if(b === -6) return a;\n  if(b === -7) return\
    \ -a;\n  if(b === -8) return a;\n  if(b === -9) return -a;\n  if(b === -10) return\
    \ a;\n  if(b === -11) return -a;\n  if(b === -12) return a;\n  if(b === -13) return\
    \ -a;\n  if(b === -14) return a;\n  if(b === -15) return -a;\n  if(b === -16)\
    \ return a;\n  if(b === -17) return -a;\n  if(b === -18) return a;\n  if(b ===\
    \ -19) return -a;\n  if(b === -20) return a;\n  if(b === -21) return -a;\n  if(b\
    \ === -22) return a;\n  if(b === -23) return -a;\n  if(b === -24) return a;\n\
    \  if(b === -25) return -a;\n  if(b === -26) return a;\n  if(b === -27) return\
    \ -a;\n  if(b === -28) return a;\n  if(b === -29) return -a;\n  if(b === -30)\
    \ return a;\n  if(b === -31) return -a;\n  if(b === -32) return a;\n  if(b ===\
    \ -33) return -a;\n  if(b === -34) return a;\n  if(b === -35) return -a;\n  if(b\
    \ === -36) return a;\n  if(b === -37) return -a;\n  if(b === -38) return a;\n\
    \  if(b === -39) return -a;\n  if(b === -40) return a;\n  if(b === -41) return\
    \ -a;\n  if(b === -42) return a;\n  if(b === -43) return -a;\n  if(b === -44)\
    \ return a;\n  if(b === -45) return -a;\n  if(b === -46) return a;\n  if(b ===\
    \ -47) return -a;\n  if(b === -48) return a;\n  if(b === -49) return -a;\n  if(b\
    \ === -50) return a;\n  if(b === -51) return -a;\n  if(b === -52) return a;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp33o8y23z.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpuyhxitiz.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuyhxitiz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(a === 1)\n    return b;\n  if(a ===\
    \ -1)\n    return -b;\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return\
    \ a;\n  if(b === -1)\n    return -a;\n  if(b === -2)\n    return a;\n  if(b ===\
    \ -3)\n    return -a;\n  if(b === -4)\n    return a;\n  if(b === -5)\n    return\
    \ -a;\n  if(b === -6)\n    return a;\n  if(b === -7)\n    return -a;\n  if(b ===\
    \ -8)\n    return a;\n  if(b === -9)\n    return -a;\n  if(b === -10)\n    return\
    \ a;\n  if(b === -11)\n    return -a;\n  if(b === -12)\n    return a;\n  if(b\
    \ === -13)\n    return -a;\n  if(b === -14)\n    return a;\n  if(b === -15)\n\
    \    return -a;\n  if(b === -16)\n    return a;\n  if(b === -17)\n    return -a;\n\
    \  if(b === -18)\n    return a;\n  if(b === -19)\n    return -a;\n  if(b === -20)\n\
    \    return a;\n  if(b === -21)\n    return -a;\n  if(b === -22)\n    return a;\n\
    \  if(b === -23)\n    return -a;\n  if(b === -24)\n    return a;\n  if(b === -25)\n\
    \    return -a;\n  if(b === -26)\n    return a;\n  if(b === -27)\n    return -a;\n\
    \  if(b === -28)\n    return a;\n  if(b === -29)\n    return -a;\n  if(b === -30)\n\
    \    return a;\n  if(b === -31)\n    return -a;\n  if(b === -32)\n    return a;\n\
    \  if(b === -33)\n    return -a;\n  if(b === -34)\n    return a;\n  if(b === -35)\n\
    \    return -a;\n  if(b === -36)\n    return a;\n  if(b === -37)\n    return -a;\n\
    \  if(b === -38)\n    return a;\n  if(b === -39)\n    return -a;\n  if(b === -40)\n\
    \    return a;\n  if(b === -41)\n    return -a;\n  if(b === -42)\n    return a;\n\
    \  if(b === -43)\n    return -a;\n  if(b\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpei477rar.js:104\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b === -1) return\
    \ -a;\n  if(b === -2) return a;\n  if(b === -3) return -a;\n  if(b === -4) return\
    \ a;\n  if(b === -5) return -a;\n  if(b === -6) return a;\n  if(b === -7) return\
    \ -a;\n  if(b === -8) return a;\n  if(b === -9) return -a;\n  if(b === -10) return\
    \ a;\n  if(b === -11) return -a;\n  if(b === -12) return a;\n  if(b === -13) return\
    \ -a;\n  if(b === -14) return a;\n  if(b === -15) return -a;\n  if(b === -16)\
    \ return a;\n  if(b === -17) return -a;\n  if(b === -18) return a;\n  if(b ===\
    \ -19) return -a;\n  if(b === -20) return a;\n  if(b === -21) return -a;\n  if(b\
    \ === -22) return a;\n  if(b === -23) return -a;\n  if(b === -24) return a;\n\
    \  if(b === -25) return -a;\n  if(b === -26) return a;\n  if(b === -27) return\
    \ -a;\n  if(b === -28) return a;\n  if(b === -29) return -a;\n  if(b === -30)\
    \ return a;\n  if(b === -31) return -a;\n  if(b === -32) return a;\n  if(b ===\
    \ -33) return -a;\n  if(b === -34) return a;\n  if(b === -35) return -a;\n  if(b\
    \ === -36) return a;\n  if(b === -37) return -a;\n  if(b === -38) return a;\n\
    \  if(b === -39) return -a;\n  if(b === -40) return a;\n  if(b === -41) return\
    \ -a;\n  if(b === -42) return a;\n  if(b === -43) return -a;\n  if(b === -44)\
    \ return a;\n  if(b === -45) return -a;\n  if(b === -46) return a;\n  if(b ===\
    \ -47) return -a;\n  if(b === -48) return a;\n  if(b === -49) return -a;\n  if(b\
    \ === -50) return a;\n  if(b === -51) return -a;\n  if(b === -52) return a;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmppwbzyelo.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== Math.floor(b))\
    \ return NaN;\n  return greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp62j3rcnh.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp62j3rcnh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpuvjb7v0z.js:7\n  return Math.abs(a * b) / greatest_common_divisor(b,\
    \ a % b);\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:3)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_ejs18h0.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ejs18h0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a * a, b / 2);\n  else\n    return greatest_common_divisor(a\
    \ * a, (b - 1) / 2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp9rg5orrv.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9rg5orrv.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(b == 0)\n    return a;\n \
    \ if(b == 1)\n    return a;\n  if(b == -1)\n    return a;\n  if(b == 2)\n    return\
    \ a;\n  if(b == -2)\n    return a;\n  if(b == 3)\n    return a;\n  if(b == -3)\n\
    \    return a;\n  if(b == 4)\n    return a;\n  if(b == -4)\n    return a;\n  if(b\
    \ == 5)\n    return a;\n  if(b == -5)\n    return a;\n  if(b == 6)\n    return\
    \ a;\n  if(b == -6)\n    return a;\n  if(b == 7)\n    return a;\n  if(b == -7)\n\
    \    return a;\n  if(b == 8)\n    return a;\n  if(b == -8)\n    return a;\n  if(b\
    \ == 9)\n    return a;\n  if(b == -9)\n    return a;\n  if(b == 10)\n    return\
    \ a;\n  if(b == -10)\n    return a;\n  if(b == 11)\n    return a;\n  if(b == -11)\n\
    \    return a;\n  if(b == 12)\n    return a;\n  if(b == -12)\n    return a;\n\
    \  if(b == 13)\n    return a;\n  if(b == -13)\n    return a;\n  if(b == 14)\n\
    \    return a;\n  if(b == -14)\n    return a;\n  if(b == 15)\n    return a;\n\
    \  if(b == -15)\n    return a;\n  if(b == 16)\n    return a;\n  if(b == -16)\n\
    \    return a;\n  if(b == 17)\n    return a;\n  if(b == -17)\n    return a;\n\
    \  if(b == 18)\n    return a;\n  if(b == -18)\n    return a;\n  if(b == 19)\n\
    \    return a;\n  if(b == -19)\n    return a;\n  if(b == 20)\n    return a;\n\
    \  if(b == -20)\n    return a;\n  if(b == 21)\n    return a;\n  if(b == -21)\n\
    \    return a;\n  if(b == 22)\n    return a;\n  if(b == -22)\n    return a;\n\
    \  if(b == 23)\n    return a;\n  if(b == -23)\n    return a;\n  if(b == 24)\n\
    \    return a;\n  if(b == -24)\n    return a;\n  if(b == 25)\n    return a;\n\
    \  if(b == -25)\n    return a;\n  if(b == 26)\n    return a;\n  if(b == -26\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp39rj_d5t.js:114\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_ejs18h0.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ejs18h0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(b == 0)\n    return a;\n \
    \ if(b == 1)\n    return a;\n  if(b == -1)\n    return a;\n  if(b == -2)\n   \
    \ return a;\n  if(b == -3)\n    return a;\n  if(b == -4)\n    return a;\n  if(b\
    \ == -5)\n    return a;\n  if(b == -6)\n    return a;\n  if(b == -7)\n    return\
    \ a;\n  if(b == -8)\n    return a;\n  if(b == -9)\n    return a;\n  if(b == -10)\n\
    \    return a;\n  if(b == -11)\n    return a;\n  if(b == -12)\n    return a;\n\
    \  if(b == -13)\n    return a;\n  if(b == -14)\n    return a;\n  if(b == -15)\n\
    \    return a;\n  if(b == -16)\n    return a;\n  if(b == -17)\n    return a;\n\
    \  if(b == -18)\n    return a;\n  if(b == -19)\n    return a;\n  if(b == -20)\n\
    \    return a;\n  if(b == -21)\n    return a;\n  if(b == -22)\n    return a;\n\
    \  if(b == -23)\n    return a;\n  if(b == -24)\n    return a;\n  if(b == -25)\n\
    \    return a;\n  if(b == -26)\n    return a;\n  if(b == -27)\n    return a;\n\
    \  if(b == -28)\n    return a;\n  if(b == -29)\n    return a;\n  if(b == -30)\n\
    \    return a;\n  if(b == -31)\n    return a;\n  if(b == -32)\n    return a;\n\
    \  if(b == -33)\n    return a;\n  if(b == -34)\n    return a;\n  if(b == -35)\n\
    \    return a;\n  if(b == -36)\n    return a;\n  if(b == -37)\n    return a;\n\
    \  if(b == -38)\n    return a;\n  if(b == -39)\n    return a;\n  if(b == -40)\n\
    \    return a;\n  if(b == -41)\n    return a;\n  if(b == -42)\n    return a;\n\
    \  if(b == -43)\n    return a;\n  if(b == -44)\n    return a;\n  if(b == -45)\n\
    \    return a;\n  if(b == -46)\n    return a;\n  if(b == -47)\n    return a;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbewtar1r.js:118\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b % 2\
    \ === 0)\n    return greatest_common_divisor(b / 2, a);\n  if(a % 2 === 0)\n \
    \   return greatest_common_divisor(a/2, b);\n  var c = 1;\n  while(b !== 0){\n\
    \    if(a % 2 === 0){\n      b = b / 2;\n      a = a / 2;\n    }\n    else if(b\
    \ % 2 === 0){\n      a = a / 2;\n      b = b / 2;\n    }\n    else{\n      b =\
    \ b / 2;\n    }\n    c++;\n  }\n  return c;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1079\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmp56ayll7v.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp56ayll7v.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1079,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_ejs18h0.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ejs18h0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpuvjb7v0z.js:7\n  return Math.abs(a * b) / greatest_common_divisor(b,\
    \ a % b);\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:3)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_ejs18h0.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ejs18h0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpuyhxitiz.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuyhxitiz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n21\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6sh92tc6.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6sh92tc6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b/2, a);\n  else\n    return greatest_common_divisor(b-1,\
    \ a%b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpd8_8nup3.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd8_8nup3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / gcd(a, b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpurn1irvr.js:7\n  return Math.abs(a * b) / gcd(a, b);\n        \
    \      ^\n\nReferenceError: gcd is not defined\n    at greatest_common_divisor\
    \ (/tmp/tmpurn1irvr.js:7:15)\n    at test (/tmp/tmpurn1irvr.js:15:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpurn1irvr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return a;\n  if(b > a)\n    return b;\n  var c = a % b;\n  if(c ===\
    \ 0)\n    return b;\n  if(c > 0)\n    return greatest_common_divisor(b, c);\n\
    \  return a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmph_3m3ckz.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmph_3m3ckz.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return b;\n  if(b > a)\n    return greatest_common_divisor(b, a % b);\n\
    \  if(a > b)\n    return greatest_common_divisor(a, a % b);\n  return a;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp0mwfqw0j.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0mwfqw0j.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(Math.abs(a), Math.abs(b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpsned7vyk.js:7\n  return Math.abs(a * b) / greatest_common_divisor(Math.abs(a),\
    \ Math.abs(b));\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpsned7vyk.js:7:3)\n    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpsned7vyk.js:7:28)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b == 2) return a;\n\
    \  if(b % 2 == 0) return greatest_common_divisor(a%b, a/b);\n  else return greatest_common_divisor(a%b,\
    \ a/b+1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpljp76rx1.js:7\n  if(b == 0) return a;\n  ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at greatest_common_divisor (/tmp/tmpljp76rx1.js:7:3)\n\
    \    at greatest_common_divisor (/tmp/tmpljp76rx1.js:11:15)\n    at greatest_common_divisor\
    \ (/tmp/tmpljp76rx1.js:11:15)\n    at greatest_common_divisor (/tmp/tmpljp76rx1.js:11:15)\n\
    \    at greatest_common_divisor (/tmp/tmpljp76rx1.js:11:15)\n    at greatest_common_divisor\
    \ (/tmp/tmpljp76rx1.js:11:15)\n    at greatest_common_divisor (/tmp/tmpljp76rx1.js:11:15)\n\
    \    at greatest_common_divisor (/tmp/tmpljp76rx1.js:11:15)\n    at greatest_common_divisor\
    \ (/tmp/tmpljp76rx1.js:11:15)\n    at greatest_common_divisor (/tmp/tmpljp76rx1.js:11:15)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a % b + b) % b;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpx9b95hs7.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx9b95hs7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a / greatest_common_divisor(b, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpadkk91mt.js:7\n  return a / greatest_common_divisor(b, a % b);\n\
    \  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:3)\n    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:14)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0){\n    return a;\n  }\n  if(a === 0){\n    return b;\n  }\n\
    \  if(b !== 0){\n    return greatest_common_divisor(b, a % b);\n  }\n  if(a !==\
    \ 0){\n    return greatest_common_divisor(a, a % b);\n  }\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b));\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3y_9mxzf.js:7\n  return Math.abs(a/greatest_common_divisor(b,b));\n\
    \  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmp3y_9mxzf.js:7:3)\n    at greatest_common_divisor (/tmp/tmp3y_9mxzf.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmp3y_9mxzf.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmp3y_9mxzf.js:7:21)\n    at greatest_common_divisor (/tmp/tmp3y_9mxzf.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmp3y_9mxzf.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmp3y_9mxzf.js:7:21)\n    at greatest_common_divisor (/tmp/tmp3y_9mxzf.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmp3y_9mxzf.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmp3y_9mxzf.js:7:21)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpomctnxwe.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpomctnxwe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpuvjb7v0z.js:7\n  return Math.abs(a * b) / greatest_common_divisor(b,\
    \ a % b);\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:3)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n21\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6sh92tc6.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6sh92tc6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(a === b)\n    return a;\n  if(a < b)\n\
    \    return greatest_common_divisor(b, a % b);\n  else\n    return greatest_common_divisor(a,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmps59av4j0.js:7\n  if(a === 0)\n  ^\n\nRangeError: Maximum call stack\
    \ size exceeded\n    at greatest_common_divisor (/tmp/tmps59av4j0.js:7:3)\n  \
    \  at greatest_common_divisor (/tmp/tmps59av4j0.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmps59av4j0.js:14:12)\n    at greatest_common_divisor (/tmp/tmps59av4j0.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmps59av4j0.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmps59av4j0.js:14:12)\n    at greatest_common_divisor (/tmp/tmps59av4j0.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmps59av4j0.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmps59av4j0.js:14:12)\n    at greatest_common_divisor (/tmp/tmps59av4j0.js:14:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return b;\n  if(b > a)\n    return greatest_common_divisor(b, a % b);\n\
    \  if(a > b)\n    return greatest_common_divisor(a, a % b);\n  return a;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp0mwfqw0j.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0mwfqw0j.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b === -1) return\
    \ -a;\n  if(b === -2) return a;\n  if(b === -3) return -a;\n  if(b === -4) return\
    \ a;\n  if(b === -5) return -a;\n  if(b === -6) return a;\n  if(b === -7) return\
    \ -a;\n  if(b === -8) return a;\n  if(b === -9) return -a;\n  if(b === -10) return\
    \ a;\n  if(b === -11) return -a;\n  if(b === -12) return a;\n  if(b === -13) return\
    \ -a;\n  if(b === -14) return a;\n  if(b === -15) return -a;\n  if(b === -16)\
    \ return a;\n  if(b === -17) return -a;\n  if(b === -18) return a;\n  if(b ===\
    \ -19) return -a;\n  if(b === -20) return a;\n  if(b === -21) return -a;\n  if(b\
    \ === -22) return a;\n  if(b === -23) return -a;\n  if(b === -24) return a;\n\
    \  if(b === -25) return -a;\n  if(b === -26) return a;\n  if(b === -27) return\
    \ -a;\n  if(b === -28) return a;\n  if(b === -29) return -a;\n  if(b === -30)\
    \ return a;\n  if(b === -31) return -a;\n  if(b === -32) return a;\n  if(b ===\
    \ -33) return -a;\n  if(b === -34) return a;\n  if(b === -35) return -a;\n  if(b\
    \ === -36) return a;\n  if(b === -37) return -a;\n  if(b === -38) return a;\n\
    \  if(b === -39) return -a;\n  if(b === -40) return a;\n  if(b === -41) return\
    \ -a;\n  if(b === -42) return a;\n  if(b === -43) return -a;\n  if(b === -44)\
    \ return a;\n  if(b === -45) return -a;\n  if(b === -46) return a;\n  if(b ===\
    \ -47) return -a;\n  if(b === -48) return a;\n  if(b === -49) return -a;\n  if(b\
    \ === -50) return a;\n  if(b === -51) return -a;\n  if(b === -52) return a;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmppwbzyelo.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpny1f6mg7.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b;\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:3)\n    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:21)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) /\n    (Math.abs(a) * Math.abs(b));\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmprs3018kh.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprs3018kh.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n21\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6sh92tc6.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6sh92tc6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b % 2\
    \ === 0)\n    return greatest_common_divisor(b / 2, a);\n  if(a % 2 === 0)\n \
    \   return greatest_common_divisor(a, b / 2);\n  var c = 1;\n  while(b !== 0){\n\
    \    if(a % 2 === 0){\n      b = b / 2;\n      c = c + 1;\n    }\n    a = a /\
    \ 2;\n    b = b - 1;\n  }\n  return c;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpwskeceuk.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwskeceuk.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpuvjb7v0z.js:7\n  return Math.abs(a * b) / greatest_common_divisor(b,\
    \ a % b);\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:3)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(a === -2) return -b;\n  if(b === 0) return a;\n  if(b === 1) return\
    \ a;\n  if(b === -1) return -a;\n  if(b === -2) return -a;\n  if(b === -3) return\
    \ -a;\n  if(b === -4) return -a;\n  if(b === -5) return -a;\n  if(b === -6) return\
    \ -a;\n  if(b === -7) return -a;\n  if(b === -8) return -a;\n  if(b === -9) return\
    \ -a;\n  if(b === -10) return -a;\n  if(b === -11) return -a;\n  if(b === -12)\
    \ return -a;\n  if(b === -13) return -a;\n  if(b === -14) return -a;\n  if(b ===\
    \ -15) return -a;\n  if(b === -16) return -a;\n  if(b === -17) return -a;\n  if(b\
    \ === -18) return -a;\n  if(b === -19) return -a;\n  if(b === -20) return -a;\n\
    \  if(b === -21) return -a;\n  if(b === -22) return -a;\n  if(b === -23) return\
    \ -a;\n  if(b === -24) return -a;\n  if(b === -25) return -a;\n  if(b === -26)\
    \ return -a;\n  if(b === -27) return -a;\n  if(b === -28) return -a;\n  if(b ===\
    \ -29) return -a;\n  if(b === -30) return -a;\n  if(b === -31) return -a;\n  if(b\
    \ === -32) return -a;\n  if(b === -33) return -a;\n  if(b === -34) return -a;\n\
    \  if(b === -35) return -a;\n  if(b === -36) return -a;\n  if(b === -37) return\
    \ -a;\n  if(b === -38) return -a;\n  if(b === -39) return -a;\n  if(b === -40)\
    \ return -a;\n  if(b === -41) return -a;\n  if(b === -42) return -a;\n  if(b ===\
    \ -43) return -a;\n  if(b === -44) return -a;\n  if(b === -45) return -a;\n  if(b\
    \ === -46) return -a;\n  if(b === -47) return -a;\n  if(b === -48) return -a;\n\
    \  if(b\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpibpq8udi.js:62\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * b) / Math.abs(a) * Math.abs(b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.42857142857142855\n\
    \nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpebqr95ok.js:15:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpebqr95ok.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.42857142857142855,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a * a, b / 2);\n  else\n    return greatest_common_divisor(a\
    \ * b, a / 2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpyb7_udqj.js:7\n  if(b == 0)\n  ^\n\nRangeError: Maximum call stack\
    \ size exceeded\n    at greatest_common_divisor (/tmp/tmpyb7_udqj.js:7:3)\n  \
    \  at greatest_common_divisor (/tmp/tmpyb7_udqj.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpyb7_udqj.js:14:12)\n    at greatest_common_divisor (/tmp/tmpyb7_udqj.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmpyb7_udqj.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpyb7_udqj.js:14:12)\n    at greatest_common_divisor (/tmp/tmpyb7_udqj.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmpyb7_udqj.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpyb7_udqj.js:14:12)\n    at greatest_common_divisor (/tmp/tmpyb7_udqj.js:14:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ b/a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.469802112191199e-227\n\
    \nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpsm4q4mup.js:22:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpsm4q4mup.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.469802112191199e-227,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0 || b === 0){\n    return 0;\n  }\n  if(a < b){\n    return\
    \ greatest_common_divisor(b, a % b);\n  }\n  return greatest_common_divisor(a\
    \ % b, a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsdjd1cm3.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsdjd1cm3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ b/a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.469802112191199e-227\n\
    \nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpsm4q4mup.js:22:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpsm4q4mup.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.469802112191199e-227,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: -1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== Math.floor(b))\
    \ throw new Error('b must be a whole number');\n  if(a === 0) return b;\n  if(a\
    \ === 1) return b;\n  if(a !== Math.floor(a)) throw new Error('a must be a whole\
    \ number');\n  while(a > 0){\n    var t = b;\n    b = a;\n    a = t;\n  }\n  return\
    \ b;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747704
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a > b ? a : b;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpu21j95ad.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu21j95ad.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a / greatest_common_divisor(b, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpadkk91mt.js:7\n  return a / greatest_common_divisor(b, a % b);\n\
    \  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:3)\n    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:14)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / gcd(a, b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpurn1irvr.js:7\n  return Math.abs(a * b) / gcd(a, b);\n        \
    \      ^\n\nReferenceError: gcd is not defined\n    at greatest_common_divisor\
    \ (/tmp/tmpurn1irvr.js:7:15)\n    at test (/tmp/tmpurn1irvr.js:15:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpurn1irvr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(b == 0)\n    return a;\n \
    \ if(b == 1)\n    return a;\n  if(b == -1)\n    return a;\n  if(b == 2)\n    return\
    \ a;\n  if(b == -2)\n    return a;\n  if(b == 3)\n    return a;\n  if(b == -3)\n\
    \    return a;\n  if(b == 4)\n    return a;\n  if(b == -4)\n    return a;\n  if(b\
    \ == 5)\n    return a;\n  if(b == -5)\n    return a;\n  if(b == 6)\n    return\
    \ a;\n  if(b == -6)\n    return a;\n  if(b == 7)\n    return a;\n  if(b == -7)\n\
    \    return a;\n  if(b == 8)\n    return a;\n  if(b == -8)\n    return a;\n  if(b\
    \ == 9)\n    return a;\n  if(b == -9)\n    return a;\n  if(b == 10)\n    return\
    \ a;\n  if(b == -10)\n    return a;\n  if(b == 11)\n    return a;\n  if(b == -11)\n\
    \    return a;\n  if(b == 12)\n    return a;\n  if(b == -12)\n    return a;\n\
    \  if(b == 13)\n    return a;\n  if(b == -13)\n    return a;\n  if(b == 14)\n\
    \    return a;\n  if(b == -14)\n    return a;\n  if(b == 15)\n    return a;\n\
    \  if(b == -15)\n    return a;\n  if(b == 16)\n    return a;\n  if(b == -16)\n\
    \    return a;\n  if(b == 17)\n    return a;\n  if(b == -17)\n    return a;\n\
    \  if(b == 18)\n    return a;\n  if(b == -18)\n    return a;\n  if(b == 19)\n\
    \    return a;\n  if(b == -19)\n    return a;\n  if(b == 20)\n    return a;\n\
    \  if(b == -20)\n    return a;\n  if(b == 21)\n    return a;\n  if(b == -21)\n\
    \    return a;\n  if(b == 22)\n    return a;\n  if(b == -22)\n    return a;\n\
    \  if(b == 23)\n    return a;\n  if(b == -23)\n    return a;\n  if(b == 24)\n\
    \    return a;\n  if(b == -24)\n    return a;\n  if(b == 25)\n    return a;\n\
    \  if(b == -25)\n    return a;\n  if(b == 26)\n    return a;\n  if(b == -26\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp39rj_d5t.js:114\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b instanceof BigNumber){\n\
    \    return a.gcdOf(b);\n  }\n  if(a instanceof BigNumber){\n    return b.gcdOf(a);\n\
    \  }\n  if(b instanceof BigNumber){\n    return a.dividedBy(b);\n  }\n  if(a instanceof\
    \ BigNumber){\n    return b.dividedBy(a);\n  }\n  throw new Error('greatest_common_divisor\
    \ only supports two BigNumbers');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4p5spb9i.js:9\n  if(b instanceof BigNumber){\n                \
    \  ^\n\nReferenceError: BigNumber is not defined\n    at greatest_common_divisor\
    \ (/tmp/tmp4p5spb9i.js:9:19)\n    at test (/tmp/tmp4p5spb9i.js:29:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp4p5spb9i.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b % 2 == 0) return\
    \ greatest_common_divisor(a%b, a/b);\n  if(a % 2 == 0) return greatest_common_divisor(a%b,\
    \ a/b+1);\n  return greatest_common_divisor(a%b+1, a/b);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp53ds3rrl.js:7\n  if(b == 0) return a;\n  ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at greatest_common_divisor (/tmp/tmp53ds3rrl.js:7:3)\n\
    \    at greatest_common_divisor (/tmp/tmp53ds3rrl.js:11:10)\n    at greatest_common_divisor\
    \ (/tmp/tmp53ds3rrl.js:9:25)\n    at greatest_common_divisor (/tmp/tmp53ds3rrl.js:11:10)\n\
    \    at greatest_common_divisor (/tmp/tmp53ds3rrl.js:9:25)\n    at greatest_common_divisor\
    \ (/tmp/tmp53ds3rrl.js:11:10)\n    at greatest_common_divisor (/tmp/tmp53ds3rrl.js:9:25)\n\
    \    at greatest_common_divisor (/tmp/tmp53ds3rrl.js:11:10)\n    at greatest_common_divisor\
    \ (/tmp/tmp53ds3rrl.js:9:25)\n    at greatest_common_divisor (/tmp/tmp53ds3rrl.js:11:10)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b % 2 == 0) return\
    \ greatest_common_divisor(b/2, a);\n  if(a % 2 == 0) return greatest_common_divisor(a,\
    \ b/2);\n  if(a % 3 == 0) return greatest_common_divisor(a/3, b);\n  if(a % 3\
    \ == 1) return greatest_common_divisor(a/3, b/3);\n  if(a % 3 == 2) return greatest_common_divisor(a/3,\
    \ b/3);\n  if(a % 3 == 3) return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmpl9ayp367.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpl9ayp367.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a > b ? a : b;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpu21j95ad.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu21j95ad.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n21\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6sh92tc6.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6sh92tc6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b == -1) return a;\n\
    \  if(b == -2) return a;\n  if(b == -3) return a;\n  if(b == -4) return a;\n \
    \ if(b == -5) return a;\n  if(b == -6) return a;\n  if(b == -7) return a;\n  if(b\
    \ == -8) return a;\n  if(b == 9) return a;\n  if(b == -10) return a;\n  if(b ==\
    \ -11) return a;\n  if(b == -12) return a;\n  if(b == -13) return a;\n  if(b ==\
    \ -14) return a;\n  if(b == -15) return a;\n  if(b == -16) return a;\n  if(b ==\
    \ -17) return a;\n  if(b == -18) return a;\n  if(b == -19) return a;\n  if(b ==\
    \ -20) return a;\n  if(b == -21) return a;\n  if(b == -22) return a;\n  if(b ==\
    \ -23) return a;\n  if(b == -24) return a;\n  if(b == -25) return a;\n  if(b ==\
    \ -26) return a;\n  if(b == -27) return a;\n  if(b == -28) return a;\n  if(b ==\
    \ -29) return a;\n  if(b == -30) return a;\n  if(b == -31) return a;\n  if(b ==\
    \ -32) return a;\n  if(b == -33) return a;\n  if(b == -34) return a;\n  if(b ==\
    \ -35) return a;\n  if(b == -36) return a;\n  if(b == -37) return a;\n  if(b ==\
    \ -38) return a;\n  if(b == -39) return a;\n  if(b == -40) return a;\n  if(b ==\
    \ -41) return a;\n  if(b == -42) return a;\n  if(b == -43) return a;\n  if(b ==\
    \ -44) return a;\n  if(b == -45) return a;\n  if(b == -46) return a;\n  if(b ==\
    \ -47) return a;\n  if(b == -48) return a;\n  if(b == -49) return a;\n  if(b ==\
    \ -50) return a;\n  if(b == -51) return a;\n  if(b == -52) return a;\n  if(b ==\
    \ -53) return a;\n  if(b == -54) return a;\n  if(b == -55) return a;\n  if(b ==\
    \ -56) return a;\n  if(b == -57) return a;\n  if(b == -58\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbriqozez.js:67\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== 0 && a % b\
    \ === 0) return b;\n  if(a % b === 0) return b;\n  var c = 1;\n  while(c < b){\n\
    \    if(a % c === 0) return c;\n    c += 1;\n  }\n  return c;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmptr2twu8o.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptr2twu8o.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0 || b === 0){\n    return a;\n  }\n  if(a < b){\n    return\
    \ greatest_common_divisor(b, a % b);\n  }\n  return greatest_common_divisor(a\
    \ % b, b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_xyin1m7.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_xyin1m7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b / 2, a);\n  else\n    return greatest_common_divisor(b\
    \ / 2, a) % a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmprmcr3rhr.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprmcr3rhr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a > b ? a : b;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpu21j95ad.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu21j95ad.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== 0 && a % b\
    \ === 0) return b;\n  if(a % b === 0) return b;\n  if(b % a === 0) return a;\n\
    \  if(b % a === 0) return a;\n  return greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpkpcgzuoy.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkpcgzuoy.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_ejs18h0.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ejs18h0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpuvjb7v0z.js:7\n  return Math.abs(a * b) / greatest_common_divisor(b,\
    \ a % b);\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:3)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpuvjb7v0z.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpuvjb7v0z.js:7:28)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a / greatest_common_divisor(b, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpadkk91mt.js:7\n  return a / greatest_common_divisor(b, a % b);\n\
    \  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:3)\n    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:14)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b === -1) return\
    \ -a;\n  if(b === -2) return a;\n  if(b === -3) return -a;\n  if(b === -4) return\
    \ a;\n  if(b === -5) return -a;\n  if(b === -6) return a;\n  if(b === -7) return\
    \ -a;\n  if(b === -8) return a;\n  if(b === -9) return -a;\n  if(b === -10) return\
    \ a;\n  if(b === -11) return -a;\n  if(b === -12) return a;\n  if(b === -13) return\
    \ -a;\n  if(b === -14) return a;\n  if(b === -15) return -a;\n  if(b === -16)\
    \ return a;\n  if(b === -17) return -a;\n  if(b === -18) return a;\n  if(b ===\
    \ -19) return -a;\n  if(b === -20) return a;\n  if(b === -21) return -a;\n  if(b\
    \ === -22) return a;\n  if(b === -23) return -a;\n  if(b === -24) return a;\n\
    \  if(b === -25) return -a;\n  if(b === -26) return a;\n  if(b === -27) return\
    \ -a;\n  if(b === -28) return a;\n  if(b === -29) return -a;\n  if(b === -30)\
    \ return a;\n  if(b === -31) return -a;\n  if(b === -32) return a;\n  if(b ===\
    \ -33) return -a;\n  if(b === -34) return a;\n  if(b === -35) return -a;\n  if(b\
    \ === -36) return a;\n  if(b === -37) return -a;\n  if(b === -38) return a;\n\
    \  if(b === -39) return -a;\n  if(b === -40) return a;\n  if(b === -41) return\
    \ -a;\n  if(b === -42) return a;\n  if(b === -43) return -a;\n  if(b === -44)\
    \ return a;\n  if(b === -45) return -a;\n  if(b === -46) return a;\n  if(b ===\
    \ -47) return -a;\n  if(b === -48) return a;\n  if(b === -49) return -a;\n  if(b\
    \ === -50) return a;\n  if(b === -51) return -a;\n  if(b === -52) return a;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmppwbzyelo.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0){\n    return a;\n  }\n  while(b !== 0){\n    a = a % b;\n\
    \    if(a === 0){\n      return b;\n    }\n    b = b % a;\n  }\n  return a;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b/2, a);\n  else\n    return greatest_common_divisor(b-1,\
    \ a%b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpd8_8nup3.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd8_8nup3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_ejs18h0.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ejs18h0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return b;\n  if(b > a)\n    return greatest_common_divisor(b, a % b);\n\
    \  if(a > b)\n    return greatest_common_divisor(a, b % b);\n  return a;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpa1lkzx04.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa1lkzx04.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b === -1) return\
    \ -a;\n  if(b === -2) return -a;\n  if(b === -3) return -a;\n  if(b === -4) return\
    \ -a;\n  if(b === -5) return -a;\n  if(b === -6) return -a;\n  if(b === -7) return\
    \ -a;\n  if(b === -8) return -a;\n  if(b === -9) return -a;\n  if(b === -10) return\
    \ -a;\n  if(b === -11) return -a;\n  if(b === -12) return -a;\n  if(b === -13)\
    \ return -a;\n  if(b === -14) return -a;\n  if(b === -15) return -a;\n  if(b ===\
    \ -16) return -a;\n  if(b === -17) return -a;\n  if(b === -18) return -a;\n  if(b\
    \ === -19) return -a;\n  if(b === -20) return -a;\n  if(b === -21) return -a;\n\
    \  if(b === -22) return -a;\n  if(b === -23) return -a;\n  if(b === -24) return\
    \ -a;\n  if(b === -25) return -a;\n  if(b === -26) return -a;\n  if(b === -27)\
    \ return -a;\n  if(b === -28) return -a;\n  if(b === -29) return -a;\n  if(b ===\
    \ -30) return -a;\n  if(b === -31) return -a;\n  if(b === -32) return -a;\n  if(b\
    \ === -33) return -a;\n  if(b === -34) return -a;\n  if(b === -35) return -a;\n\
    \  if(b === -36) return -a;\n  if(b === -37) return -a;\n  if(b === -38) return\
    \ -a;\n  if(b === -39) return -a;\n  if(b === -40) return -a;\n  if(b === -41)\
    \ return -a;\n  if(b === -42) return -a;\n  if(b === -43) return -a;\n  if(b ===\
    \ -44) return -a;\n  if(b === -45) return -a;\n  if(b === -46) return -a;\n  if(b\
    \ === -47) return -a;\n  if(b === -48) return -a;\n  if(b === -49) return -a;\n\
    \  if\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbslto2j6.js:62\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b == -1) return a;\n\
    \  if(b == -2) return a;\n  if(b == -3) return a;\n  if(b == -4) return a;\n \
    \ if(b == -5) return a;\n  if(b == -6) return a;\n  if(b == -7) return a;\n  if(b\
    \ == -8) return a;\n  if(b == 9) return a;\n  if(b == -9) return a;\n  if(b ==\
    \ -10) return a;\n  if(b == -11) return a;\n  if(b == -12) return a;\n  if(b ==\
    \ -13) return a;\n  if(b == -14) return a;\n  if(b == -15) return a;\n  if(b ==\
    \ -16) return a;\n  if(b == -17) return a;\n  if(b == -18) return a;\n  if(b ==\
    \ -19) return a;\n  if(b == -20) return a;\n  if(b == -21) return a;\n  if(b ==\
    \ -22) return a;\n  if(b == -23) return a;\n  if(b == -24) return a;\n  if(b ==\
    \ -25) return a;\n  if(b == -26) return a;\n  if(b == -27) return a;\n  if(b ==\
    \ -28) return a;\n  if(b == -29) return a;\n  if(b == -30) return a;\n  if(b ==\
    \ -31) return a;\n  if(b == -32) return a;\n  if(b == -33) return a;\n  if(b ==\
    \ -34) return a;\n  if(b == -35) return a;\n  if(b == -36) return a;\n  if(b ==\
    \ -37) return a;\n  if(b == -38) return a;\n  if(b == -39) return a;\n  if(b ==\
    \ -40) return a;\n  if(b == -41) return a;\n  if(b == -42) return a;\n  if(b ==\
    \ -43) return a;\n  if(b == -44) return a;\n  if(b == -45) return a;\n  if(b ==\
    \ -46) return a;\n  if(b == -47) return a;\n  if(b == -48) return a;\n  if(b ==\
    \ -49) return a;\n  if(b == -50) return a;\n  if(b == -51) return a;\n  if(b ==\
    \ -52) return a;\n  if(b == -53) return a;\n  if(b == -54) return a;\n  if(b ==\
    \ -55) return a;\n  if(b == -56) return a;\n  if(b == -57) return \nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpqz9kb571.js:78\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpomctnxwe.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpomctnxwe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b !==\
    \ 0)\n    return greatest_common_divisor(b, a % b);\n  if(a === 0)\n    return\
    \ a;\n  if(a === 1)\n    return a;\n  if(a !== 0)\n    return greatest_common_divisor(a,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3i_jxyr6.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3i_jxyr6.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ b/2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpphxv14hg.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpphxv14hg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0 || b === 0){\n    return 0;\n  }\n  if(a < b){\n    return\
    \ greatest_common_divisor(b, a % b);\n  }\n  return greatest_common_divisor(a\
    \ % b, a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsdjd1cm3.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsdjd1cm3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b == -1) return a;\n\
    \  if(b == -2) return a;\n  if(b == -3) return a;\n  if(b == -4) return a;\n \
    \ if(b == -5) return a;\n  if(b == -6) return a;\n  if(b == -7) return a;\n  if(b\
    \ == -8) return a;\n  if(b == 9) return a;\n  if(b == -10) return a;\n  if(b ==\
    \ -11) return a;\n  if(b == -12) return a;\n  if(b == -13) return a;\n  if(b ==\
    \ -14) return a;\n  if(b == -15) return a;\n  if(b == -16) return a;\n  if(b ==\
    \ -17) return a;\n  if(b == -18) return a;\n  if(b == -19) return a;\n  if(b ==\
    \ -20) return a;\n  if(b == -21) return a;\n  if(b == -22) return a;\n  if(b ==\
    \ -23) return a;\n  if(b == -24) return a;\n  if(b == -25) return a;\n  if(b ==\
    \ -26) return a;\n  if(b == -27) return a;\n  if(b == -28) return a;\n  if(b ==\
    \ -29) return a;\n  if(b == -30) return a;\n  if(b == -31) return a;\n  if(b ==\
    \ -32) return a;\n  if(b == -33) return a;\n  if(b == -34) return a;\n  if(b ==\
    \ -35) return a;\n  if(b == -36) return a;\n  if(b == -37) return a;\n  if(b ==\
    \ -38) return a;\n  if(b == -39) return a;\n  if(b == -40) return a;\n  if(b ==\
    \ -41) return a;\n  if(b == -42) return a;\n  if(b == -43) return a;\n  if(b ==\
    \ -44) return a;\n  if(b == -45) return a;\n  if(b == -46) return a;\n  if(b ==\
    \ -47) return a;\n  if(b == -48) return a;\n  if(b == -49) return a;\n  if(b ==\
    \ -50) return a;\n  if(b == -51) return a;\n  if(b == -52) return a;\n  if(b ==\
    \ -53) return a;\n  if(b == -54) return a;\n  if(b == -55) return a;\n  if(b ==\
    \ -56) return a;\n  if(b == -57) return a;\n  if(b == -58\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbriqozez.js:67\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b == -1) return a;\n\
    \  if(b == -2) return a;\n  if(b == -3) return a;\n  if(b == -4) return a;\n \
    \ if(b == -5) return a;\n  if(b == -6) return a;\n  if(b == -7) return a;\n  if(b\
    \ == -8) return a;\n  if(b == 9) return a;\n  if(b == -10) return a;\n  if(b ==\
    \ -11) return a;\n  if(b == -12) return a;\n  if(b == -13) return a;\n  if(b ==\
    \ -14) return a;\n  if(b == -15) return a;\n  if(b == -16) return a;\n  if(b ==\
    \ -17) return a;\n  if(b == -18) return a;\n  if(b == -19) return a;\n  if(b ==\
    \ -20) return a;\n  if(b == -21) return a;\n  if(b == -22) return a;\n  if(b ==\
    \ -23) return a;\n  if(b == -24) return a;\n  if(b == -25) return a;\n  if(b ==\
    \ -26) return a;\n  if(b == -27) return a;\n  if(b == -28) return a;\n  if(b ==\
    \ -29) return a;\n  if(b == -30) return a;\n  if(b == -31) return a;\n  if(b ==\
    \ -32) return a;\n  if(b == -33) return a;\n  if(b == -34) return a;\n  if(b ==\
    \ -35) return a;\n  if(b == -36) return a;\n  if(b == -37) return a;\n  if(b ==\
    \ -38) return a;\n  if(b == -39) return a;\n  if(b == -40) return a;\n  if(b ==\
    \ -41) return a;\n  if(b == -42) return a;\n  if(b == -43) return a;\n  if(b ==\
    \ -44) return a;\n  if(b == -45) return a;\n  if(b == -46) return a;\n  if(b ==\
    \ -47) return a;\n  if(b == -48) return a;\n  if(b == -49) return a;\n  if(b ==\
    \ -50) return a;\n  if(b == -51) return a;\n  if(b == -52) return a;\n  if(b ==\
    \ -53) return a;\n  if(b == -54) return a;\n  if(b == -55) return a;\n  if(b ==\
    \ -56) return a;\n  if(b == -57) return a;\n  if(b == -58\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbriqozez.js:67\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== 0 && a % b\
    \ === 0) return b;\n  if(a % b === 0) return b;\n  var c = 1;\n  while(c < b){\n\
    \    if(a % c === 0) return c;\n    c += 1;\n  }\n  return c;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmptr2twu8o.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptr2twu8o.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(a === b)\n    return a;\n  if(a < b)\n\
    \    return greatest_common_divisor(b, a % b);\n  else\n    return greatest_common_divisor(a,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmps59av4j0.js:7\n  if(a === 0)\n  ^\n\nRangeError: Maximum call stack\
    \ size exceeded\n    at greatest_common_divisor (/tmp/tmps59av4j0.js:7:3)\n  \
    \  at greatest_common_divisor (/tmp/tmps59av4j0.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmps59av4j0.js:14:12)\n    at greatest_common_divisor (/tmp/tmps59av4j0.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmps59av4j0.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmps59av4j0.js:14:12)\n    at greatest_common_divisor (/tmp/tmps59av4j0.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmps59av4j0.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmps59av4j0.js:14:12)\n    at greatest_common_divisor (/tmp/tmps59av4j0.js:14:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b / 2, a);\n  else\n    return greatest_common_divisor(b\
    \ / 2, a) % a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmprmcr3rhr.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprmcr3rhr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpn57y8evm.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:3)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== 0 && a % b\
    \ === 0) return b;\n  if(a % b === 0) return b;\n  if(b % a === 0) return a;\n\
    \  return greatest_common_divisor(b, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpk7ni5mu1.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk7ni5mu1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b/2, a);\n  else\n    return greatest_common_divisor(b/2,\
    \ a%b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.25\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpoi8vrnp0.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoi8vrnp0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.25,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(Math.abs(a), Math.abs(b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpsned7vyk.js:7\n  return Math.abs(a * b) / greatest_common_divisor(Math.abs(a),\
    \ Math.abs(b));\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpsned7vyk.js:7:3)\n    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpsned7vyk.js:7:28)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpomctnxwe.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpomctnxwe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a / greatest_common_divisor(b, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpadkk91mt.js:7\n  return a / greatest_common_divisor(b, a % b);\n\
    \  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:3)\n    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpadkk91mt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpadkk91mt.js:7:14)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpomctnxwe.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpomctnxwe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return b;\n  if(b > a)\n    return greatest_common_divisor(b, a % b);\n\
    \  if(a > b)\n    return greatest_common_divisor(a, a % b);\n  return a;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp0mwfqw0j.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0mwfqw0j.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b % 2 == 0) return\
    \ greatest_common_divisor(b / 2, a);\n  if(a % 2 == 0) return greatest_common_divisor(a,\
    \ b / 2);\n  if(b % 3 == 0) return greatest_common_divisor(b / 3, a);\n  if(a\
    \ % 3 == 0) return greatest_common_divisor(a, b / 3);\n  if(b % 5 == 0) return\
    \ greatest_common_divisor(b / 5, a);\n  if(a % 5 == 0) return greatest_common_divisor(a,\
    \ b / 5);\n  if(b % 7 == 0) return greatest_common_divisor(b / 7, a);\n  if(a\
    \ % 7 == 0) return greatest_common_divisor(a, b / 7);\n  if(b % 11 == 0) return\
    \ greatest_common_divisor(b / 11, a);\n  if(a % 11 == 0) return greatest_common_divisor(a,\
    \ b / 11);\n  if(b % 13 == 0) return greatest_common_divisor(b / 13, a);\n  if(a\
    \ % 13 == 0) return greatest_common_divisor(a, b / 13);\n  if(b % 17 == 0) return\
    \ greatest_common_divisor(b / 17, a);\n  if(a % 17 == 0) return greatest_common_divisor(a,\
    \ b / 17);\n  if(b % 19 == 0) return greatest_common_divisor(b / 19, a);\n  if(a\
    \ % 19 == 0) return greatest_common_divisor(a, b / 19);\n  if(b % 23 == 0) return\
    \ greatest_common_divisor(b / 23, a);\n  if(a % 23 == 0) return greatest_common_divisor(a,\
    \ b / 23);\n  if(b % 29 == 0) return greatest_common_divisor(b / 29, a);\n  if(a\
    \ % 29 == 0) return greatest_common_divisor(a, b / 29);\n  if(b % 31 == 0) return\
    \ greatest_common_divisor(b / 31, a);\n  if(a % 31 == 0) return greatest_common_divisor(a,\
    \ b / 31);\n  if(b % 37 == 0) return greatest_common_divisor(b / 37, a % 37);\n\
    \  if(a % 37 == 0) return greatest_common_divisor(a, b / 37);\n  if(b % 41 ==\
    \ 0) return greatest_common_divisor(b / 41, a % 41);\n  if(a % 41 == 0) return\
    \ greatest_common_divisor(a, b / 41);\n  if(b % 43 == 0) return greatest_common_divisor(b\
    \ / 43, a % 43);\n  if(a % 43 == 0) return greate\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpl53003e9.js:48\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_ejs18h0.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ejs18h0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b === -1) return\
    \ -a;\n  if(b === -2) return a;\n  if(b === -3) return -a;\n  if(b === -4) return\
    \ a;\n  if(b === -5) return -a;\n  if(b === -6) return a;\n  if(b === -7) return\
    \ -a;\n  if(b === -8) return a;\n  if(b === -9) return -a;\n  if(b === -10) return\
    \ a;\n  if(b === -11) return -a;\n  if(b === -12) return a;\n  if(b === -13) return\
    \ -a;\n  if(b === -14) return a;\n  if(b === -15) return -a;\n  if(b === -16)\
    \ return a;\n  if(b === -17) return -a;\n  if(b === -18) return a;\n  if(b ===\
    \ -19) return -a;\n  if(b === -20) return a;\n  if(b === -21) return -a;\n  if(b\
    \ === -22) return a;\n  if(b === -23) return -a;\n  if(b === -24) return a;\n\
    \  if(b === -25) return -a;\n  if(b === -26) return a;\n  if(b === -27) return\
    \ -a;\n  if(b === -28) return a;\n  if(b === -29) return -a;\n  if(b === -30)\
    \ return a;\n  if(b === -31) return -a;\n  if(b === -32) return a;\n  if(b ===\
    \ -33) return -a;\n  if(b === -34) return a;\n  if(b === -35) return -a;\n  if(b\
    \ === -36) return a;\n  if(b === -37) return -a;\n  if(b === -38) return a;\n\
    \  if(b === -39) return -a;\n  if(b === -40) return a;\n  if(b === -41) return\
    \ -a;\n  if(b === -42) return a;\n  if(b === -43) return -a;\n  if(b === -44)\
    \ return a;\n  if(b === -45) return -a;\n  if(b === -46) return a;\n  if(b ===\
    \ -47) return -a;\n  if(b === -48) return a;\n  if(b === -49) return -a;\n  if(b\
    \ === -50) return a;\n  if(b === -51) return -a;\n  if(b === -52) return a;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmppwbzyelo.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(a > b){\n    return a;\n \
    \ }\n  if(a < b){\n    return b;\n  }\n  while(b !== 0){\n    var c = a % b;\n\
    \    a = b;\n    b = c;\n  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7irqi8pw.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7irqi8pw.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpomctnxwe.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpomctnxwe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(b == 0)\n    return a;\n \
    \ if(b == 1)\n    return a;\n  if(b == -1)\n    return a;\n  if(b == 2)\n    return\
    \ a;\n  if(b == -2)\n    return a;\n  if(b == 3)\n    return a;\n  if(b == -3)\n\
    \    return a;\n  if(b == 4)\n    return a;\n  if(b == -4)\n    return a;\n  if(b\
    \ == 5)\n    return a;\n  if(b == -5)\n    return a;\n  if(b == 6)\n    return\
    \ a;\n  if(b == -6)\n    return a;\n  if(b == 7)\n    return a;\n  if(b == -7)\n\
    \    return a;\n  if(b == 8)\n    return a;\n  if(b == -8)\n    return a;\n  if(b\
    \ == 9)\n    return a;\n  if(b == -9)\n    return a;\n  if(b == 10)\n    return\
    \ a;\n  if(b == -10)\n    return a;\n  if(b == 11)\n    return a;\n  if(b == -11)\n\
    \    return a;\n  if(b == 12)\n    return a;\n  if(b == -12)\n    return a;\n\
    \  if(b == 13)\n    return a;\n  if(b == -13)\n    return a;\n  if(b == 14)\n\
    \    return a;\n  if(b == -14)\n    return a;\n  if(b == 15)\n    return a;\n\
    \  if(b == -15)\n    return a;\n  if(b == 16)\n    return a;\n  if(b == -16)\n\
    \    return a;\n  if(b == 17)\n    return a;\n  if(b == -17)\n    return a;\n\
    \  if(b == 18)\n    return a;\n  if(b == -18)\n    return a;\n  if(b == 19)\n\
    \    return a;\n  if(b == -19)\n    return a;\n  if(b == 20)\n    return a;\n\
    \  if(b == -20)\n    return a;\n  if(b == 21)\n    return a;\n  if(b == -21)\n\
    \    return a;\n  if(b == 22)\n    return a;\n  if(b == -22)\n    return a;\n\
    \  if(b == 23)\n    return a;\n  if(b == -23)\n    return a;\n  if(b == 24)\n\
    \    return a;\n  if(b == -24)\n    return a;\n  if(b == 25)\n    return a;\n\
    \  if(b == -25)\n    return a;\n  if(b == 26)\n    return a;\n  if(b == -26\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp39rj_d5t.js:114\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpny1f6mg7.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b;\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:3)\n    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:21)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpny1f6mg7.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b;\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:3)\n    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:21)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b / 2, a);\n  else\n    return greatest_common_divisor(b\
    \ / 2, a) % a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmprmcr3rhr.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprmcr3rhr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n21\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6sh92tc6.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6sh92tc6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / gcd(a, b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpurn1irvr.js:7\n  return Math.abs(a * b) / gcd(a, b);\n        \
    \      ^\n\nReferenceError: gcd is not defined\n    at greatest_common_divisor\
    \ (/tmp/tmpurn1irvr.js:7:15)\n    at test (/tmp/tmpurn1irvr.js:15:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpurn1irvr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(b <= a) return a;\n  if(b\
    \ >= a) return b;\n  while(a != b){\n    a = a % b;\n  }\n  return a;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdaltqf3y.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdaltqf3y.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b instanceof BigNumber){\n\
    \    return a.gcdOf(b);\n  }\n  if(a instanceof BigNumber){\n    return b.gcdOf(a);\n\
    \  }\n  if(a === 0 || b === 0) return 0;\n  if(a < 0 || b < 0) return null;\n\
    \  if(a === b) return a;\n  if(a < b) return a;\n  return b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfuqxbcsn.js:9\n  if(b instanceof BigNumber){\n                \
    \  ^\n\nReferenceError: BigNumber is not defined\n    at greatest_common_divisor\
    \ (/tmp/tmpfuqxbcsn.js:9:19)\n    at test (/tmp/tmpfuqxbcsn.js:27:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpfuqxbcsn.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b % 2\
    \ === 0)\n    return greatest_common_divisor(b / 2, a);\n  if(a % 2 === 0)\n \
    \   return greatest_common_divisor(a/2, b);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  return\
    \ b;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpljix3n32.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpljix3n32.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_ejs18h0.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ejs18h0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(Math.abs(a), Math.abs(b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpsned7vyk.js:7\n  return Math.abs(a * b) / greatest_common_divisor(Math.abs(a),\
    \ Math.abs(b));\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpsned7vyk.js:7:3)\n    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpsned7vyk.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpsned7vyk.js:7:28)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return b;\n  if(b > a)\n    return greatest_common_divisor(b, a % b);\n\
    \  if(a > b)\n    return greatest_common_divisor(a, b % b);\n  return a;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpa1lkzx04.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa1lkzx04.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpomctnxwe.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpomctnxwe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(b == 0)\n    return a;\n \
    \ if(b == 1)\n    return a;\n  if(b == -1)\n    return a;\n  if(b == -2)\n   \
    \ return a;\n  if(b == -3)\n    return a;\n  if(b == -4)\n    return a;\n  if(b\
    \ == -5)\n    return a;\n  if(b == -6)\n    return a;\n  if(b == -7)\n    return\
    \ a;\n  if(b == -8)\n    return a;\n  if(b == -9)\n    return a;\n  if(b == -10)\n\
    \    return a;\n  if(b == -11)\n    return a;\n  if(b == -12)\n    return a;\n\
    \  if(b == -13)\n    return a;\n  if(b == -14)\n    return a;\n  if(b == -15)\n\
    \    return a;\n  if(b == -16)\n    return a;\n  if(b == -17)\n    return a;\n\
    \  if(b == -18)\n    return a;\n  if(b == -19)\n    return a;\n  if(b == -20)\n\
    \    return a;\n  if(b == -21)\n    return a;\n  if(b == -22)\n    return a;\n\
    \  if(b == -23)\n    return a;\n  if(b == -24)\n    return a;\n  if(b == -25)\n\
    \    return a;\n  if(b == -26)\n    return a;\n  if(b == -27)\n    return a;\n\
    \  if(b == -28)\n    return a;\n  if(b == -29)\n    return a;\n  if(b == -30)\n\
    \    return a;\n  if(b == -31)\n    return a;\n  if(b == -32)\n    return a;\n\
    \  if(b == -33)\n    return a;\n  if(b == -34)\n    return a;\n  if(b == -35)\n\
    \    return a;\n  if(b == -36)\n    return a;\n  if(b == -37)\n    return a;\n\
    \  if(b == -38)\n    return a;\n  if(b == -39)\n    return a;\n  if(b == -40)\n\
    \    return a;\n  if(b == -41)\n    return a;\n  if(b == -42)\n    return a;\n\
    \  if(b == -43)\n    return a;\n  if(b == -44)\n    return a;\n  if(b == -45)\n\
    \    return a;\n  if(b == -46)\n    return a;\n  if(b == -47)\n    return a;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbewtar1r.js:118\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b/2, a);\n  else\n    return greatest_common_divisor(b-1,\
    \ a%b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpd8_8nup3.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd8_8nup3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * b) / Math.abs(a) + b * Math.abs(b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.375\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmp9944kkn7.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9944kkn7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.375,\n \
    \ expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_ejs18h0.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ejs18h0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747698
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpn57y8evm.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:3)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpn57y8evm.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:3)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpn57y8evm.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpn57y8evm.js:7:21)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ b/a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.469802112191199e-227\n\
    \nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpsm4q4mup.js:22:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpsm4q4mup.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.469802112191199e-227,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpny1f6mg7.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b;\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:3)\n    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpny1f6mg7.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpny1f6mg7.js:7:21)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747699

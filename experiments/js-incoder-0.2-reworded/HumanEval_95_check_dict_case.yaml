name: HumanEval_95_check_dict_case
language: js
prompt: "//Given an object, return true if all keys are strings in lower \n// case\
  \ or all keys are strings in upper case, else return false.\n// The function should\
  \ return false is the given object is empty.\n// Examples:\n// >>> check_dict_case({\"\
  a\": \"apple\", \"b\": \"banana\"})\n// true\n// >>> check_dict_case({\"a\": \"\
  apple\", \"A\": \"banana\", \"B\": \"banana\"})\n// false\n// >>> check_dict_case({\"\
  a\": \"apple\", 8: \"banana\", \"a\": \"apple\"})\n// false\n// >>> check_dict_case({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"})\n// false\n// >>> check_dict_case({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"})\n// true\nfunction check_dict_case(dict){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = check_dict_case;\n  assert.deepEqual(candidate({\"p\": \"pineapple\", \"b\"\
  : \"banana\"}),true);\n  assert.deepEqual(candidate({\"p\": \"pineapple\", \"A\"\
  : \"banana\", \"B\": \"banana\"}),false);\n  assert.deepEqual(candidate({\"p\":\
  \ \"pineapple\", \"5\": \"banana\", \"a\": \"apple\"}),false);\n  assert.deepEqual(candidate({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"}),false);\n  assert.deepEqual(candidate({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"}),true);\n  assert.deepEqual(candidate({\"fruit\"\
  : \"Orange\", \"taste\": \"Sweet\"}),true);\n  assert.deepEqual(candidate({}),false);\n\
  }\n\ntest();"
completions: ["    var keys = Object.keys(dict);\n    var is_all_strings = true;\n\
    \    for(var i=0; i<keys.length; i++){\n        if(typeof dict[keys[i]] != \"\
    string\"){\n            is_all_strings = false;\n            break;\n        }\n\
    \    }\n    return is_all_strings;\n}\n", "    var keys = Object.keys(dict);\n\
    \    var is_all_strings = true;\n    for(var i=0; i<keys.length; i++){\n     \
    \   if(typeof dict[keys[i]] !== \"string\"){\n            is_all_strings = false;\n\
    \            break;\n        }\n    }\n    return is_all_strings;\n}\n", "\tfor(var\
    \ key in dict){\n\t\tif(typeof dict[key] !== \"string\"){\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n", "\tvar keys = Object.keys(dict);\n\tvar is_all_strings\
    \ = true\n\tfor(var i in keys){\n\t\tif(typeof keys[i] !== \"string\"){\n\t\t\t\
    is_all_strings = false;\n\t\t}\n\t}\n\treturn is_all_strings;\n}\n", "    for(var\
    \ key in dict){\n        if(typeof dict[key] === \"string\"){\n            if(dict[key].toLowerCase()\
    \ === dict[key].toLowerCase()){\n                continue;\n            }\n  \
    \          else if(dict[key].toUpperCase() === dict[key].toUpperCase()){\n   \
    \             continue;\n            }\n            else{\n                return\
    \ false;\n            }\n        }\n        else{\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    var keys = Object.keys(dict);\n\
    \    var is_all_strings = true;\n    for(var i in keys){\n        var key = keys[i];\n\
    \        if(typeof dict[key] !== \"string\"){\n            is_all_strings = false;\n\
    \            break;\n        }\n    }\n    return is_all_strings;\n}\n", "\tfor(var\
    \ key in dict){\n\t\tif(typeof dict[key] === \"string\"){\n\t\t\tif((dict[key].toLowerCase()\
    \ === dict[key].toLowerCase()) || (dict[key].toUpperCase() === dict[key].toUpperCase())){\n\
    \t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", "    if(Object.keys(dict).length\
    \ == 0){\n        return false;\n    }\n    for(var key in dict){\n        if(typeof\
    \ dict[key] === \"string\"){\n            if(dict[key].toLowerCase() === dict[key].toUpperCase()){\n\
    \                continue;\n            }\n            return false;\n       \
    \ }\n        if(typeof dict[key] === \"number\"){\n            if(dict[key] ===\
    \ parseInt(dict[key])){\n                continue;\n            }\n          \
    \  return false;\n        }\n        if(typeof dict[key] === \"boolean\"){\n \
    \           if(dict[key] === dict[key]){\n                continue;\n        \
    \    }\n            return false;\n        }\n        if(typeof dict[key] ===\
    \ \"object\"){\n            if(check_dict_case(dict[key]) === false){\n      \
    \          return false;\n            }\n        }\n    }\n    return true;\n\
    }\n", "\tfor(var key in dict){\n\t\tif(typeof dict[key] === \"string\"){\n\t\t\
    \tif((dict[key].toLowerCase() === dict[key].toUpperCase()) || (dict[key].toLowerCase()\
    \ === dict[key])){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n", "\tfor(var key in dict){\n\t\tif(typeof dict[key] === \"string\"){\n\t\t\
    \tif(dict[key].toLowerCase() !== dict[key].toLowerCase()){\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t\telse if(typeof dict[key] === \"number\"){\n\t\t\tif(dict[key]\
    \ !== dict[key]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if(typeof dict[key]\
    \ === \"object\"){\n\t\t\tif(check_dict_case(dict[key]) === false){\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "    if(!dict){\n  \
    \      return false;\n    }\n    for(var key in dict){\n        if(typeof dict[key]\
    \ === \"string\"){\n            if(dict[key].toLowerCase() !== dict[key]){\n \
    \               return false;\n            }\n        }\n        else if(typeof\
    \ dict[key] === \"number\"){\n            if(dict[key] !== dict[key]){\n     \
    \           return false;\n            }\n        }\n        else if(typeof dict[key]\
    \ === \"boolean\"){\n            if(dict[key] !== dict[key]){\n              \
    \  return false;\n            }\n        }\n        else if(typeof dict[key] ===\
    \ \"object\"){\n            if(check_dict_case(dict[key]) === false){\n      \
    \          return false;\n            }\n        }\n    }\n    return true;\n\
    }\n", "\tfor(var key in dict){\n\t\tif(typeof dict[key] === \"string\"){\n\t\t\
    \tif(dict[key].toLowerCase() !== dict[key]){\n\t\t\t\treturn false;\n\t\t\t}\n\
    \t\t}\n\t\telse if(typeof dict[key] === \"number\"){\n\t\t\tif(dict[key] !== parseInt(dict[key])){\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if(typeof dict[key] === \"boolean\"\
    ){\n\t\t\tif(dict[key] !== Boolean(dict[key])){\n\t\t\t\treturn false;\n\t\t\t\
    }\n\t\t}\n\t\telse if(typeof dict[key] === \"object\"){\n\t\t\tif(!(dict[key]\
    \ instanceof Object)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!check_dict_case(dict[key])){\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "\tfor(var key\
    \ in dict){\n\t\tif(typeof dict[key] === \"string\"){\n\t\t\tif(!(key.toLowerCase()\
    \ === key)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if(typeof dict[key]\
    \ === \"number\"){\n\t\t\tif(!(key.toString() === key)){\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "\tfor(var key in dict){\n\t\tif(typeof\
    \ dict[key] === \"string\"){\n\t\t\tif(!(key.toLowerCase() === key)){\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t}\n\t\telse if(typeof dict[key] === \"number\"){\n\
    \t\t\tif(!(key.toString() === key)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\
    \telse if(typeof dict[key] === \"object\"){\n\t\t\tif(!check_dict_case(dict[key])){\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "    if(!dict)\n\
    \        return false;\n    for(var key in dict){\n        if(typeof dict[key]\
    \ === \"string\"){\n            if(dict[key].toLowerCase() !== dict[key].toUpperCase())\n\
    \                return false;\n        }\n    }\n    return true;\n}\n", "\t\
    var keys = Object.keys(dict);\n\tfor(var i=0; i<keys.length; i++){\n\t\tif(typeof\
    \ dict[keys[i]] === \"string\"){\n\t\t\tfor(var j=0; j<keys.length; j++){\n\t\t\
    \t\tif(keys[j] === keys[i]){\n\t\t\t\t\tif(dict[keys[i]].toLowerCase() !== dict[keys[j]])\
    \ return false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "\tfor(var\
    \ key in dict){\n\t\tif(typeof dict[key] === \"string\"){\n\t\t\tif((key.toLowerCase()\
    \ === key) || (key.toUpperCase() === key)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn false;\n}\n", "    var keys = Object.keys(dict);\n    for(var\
    \ i = 0; i < keys.length; i++){\n        if(typeof dict[keys[i]] === \"string\"\
    ){\n            if(keys[i].toLowerCase() !== keys[i]){\n                return\
    \ false;\n            }\n        }\n        else if(typeof dict[keys[i]] === \"\
    number\"){\n            if(dict[keys[i]] !== keys[i]){\n                return\
    \ false;\n            }\n        }\n    }\n    return true;\n}\n", "    var keys\
    \ = Object.keys(dict);\n    var is_all_strings = true;\n    for(var i=0; i<keys.length;\
    \ i++){\n        var key = keys[i];\n        var value = dict[key];\n        if(typeof\
    \ value !== \"string\"){\n            is_all_strings = false;\n        }\n   \
    \ }\n    return is_all_strings;\n}\n", "    for(var key in dict){\n        if(typeof\
    \ dict[key] === \"string\"){\n            if(dict[key].toLowerCase() === dict[key].toUpperCase()){\n\
    \                continue;\n            }\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

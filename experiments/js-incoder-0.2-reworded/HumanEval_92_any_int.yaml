name: HumanEval_92_any_int
language: js
prompt: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n// true\n\
  // >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n// >>> any_int(3.6,\
  \ -2.2, 2)\n// false\nfunction any_int(x, y, z){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
  \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
  \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
  \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
  \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
  \ 4, 7),false);\n}\n\ntest();"
completions: ["\tif(x == y || x == z){\n\t\treturn true;\n\t}\n\telse{\n\t\treturn\
    \ false;\n\t}\n}\n", "\tlet sum = 0;\n\tlet num1 = Number(x);\n\tlet num2 = Number(y);\n\
    \tlet num3 = Number(z);\n\t\n\tif(num1 === num2 && num1 === num3){\n\t\treturn\
    \ true;\n\t}\n\t\n\tif(!Number.isInteger(num1) || !Number.isInteger(num2) || !Number.isInteger(num3)){\n\
    \t\treturn false;\n\t}\n\t\n\tsum = num1 + num2 + num3;\n\t\n\tif(sum === num1\
    \ || sum === num2 || sum === num3){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n\
    }\n", "  if(typeof x === 'number' && typeof y === 'number' && typeof z === 'number'){\n\
    \    return ((x + y + z) === (x + y) || x === y || x === z || y === z);\n  }\n\
    \  return false;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number' ||\
    \ typeof z !== 'number'){\n    return false;\n  }\n  if(x === y || x === z){\n\
    \    return true;\n  }\n  if(x < y && x < z){\n    return true;\n  }\n  if(y <\
    \ x && y < z){\n    return true;\n  }\n  if(z < x && z < y){\n    return true;\n\
    \  }\n  return false;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number'\
    \ || typeof z !== 'number'){\n    return false;\n  }\n  if(x === y){\n    return\
    \ true;\n  }\n  if(x === z){\n    return true;\n  }\n  if(y === z){\n    return\
    \ true;\n  }\n  if(x === 0 || y === 0 || z === 0){\n    return false;\n  }\n \
    \ if(x < y && y < z){\n    return true;\n  }\n  if(x < z && z < y){\n    return\
    \ true;\n  }\n  if(y < x && x < z){\n    return true;\n  }\n  if(y < z && z <\
    \ x){\n    return true;\n  }\n  return false;\n}\n", "    var sum = 0;\n    for(var\
    \ i=0; i<x.length; i++){\n        sum += x[i];\n    }\n    for(var i=0; i<y.length;\
    \ i++){\n        sum += y[i];\n    }\n    for(var i=0; i<z.length; i++){\n   \
    \     sum += z[i];\n    }\n    return sum == (x+y+z);\n}\n", "  if(typeof x ===\
    \ 'number' && typeof y === 'number' && typeof z === 'number'){\n    return ((x\
    \ + y + z) === (x + y));\n  }\n  return false;\n}\n", "    var sum = 0;\n    for(var\
    \ i = 0; i<arguments.length; i++){\n        sum += arguments[i];\n    }\n    return\
    \ sum == x || sum == y || sum == z;\n}\n", "\tx = Number(x);\n\ty = Number(y);\n\
    \tz = Number(z);\n\t\n\tif (isNaN(x) || isNaN(y) || isNaN(z)){\n\t\treturn false;\n\
    \t}\n\t\n\tif (x === Infinity || y === Infinity || z === Infinity){\n\t\treturn\
    \ false;\n\t}\n\t\n\tif (x === -Infinity || y === -Infinity || z === -Infinity){\n\
    \t\treturn false;\n\t}\n\t\n\treturn (x === y || x === z || y === z);\n}\n", " \
    \ if(typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n\
    \    return false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x\
    \ > y && x > z){\n    return true;\n  }\n  if(y > x && y > z){\n    return true;\n\
    \  }\n  if(z > x && z > y){\n    return true;\n  }\n  return false;\n}\n", "\t\
    let sum = 0;\n\tfor (let i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\t\
    for (let i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor (let i = 0;\
    \ i < z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn (sum === (x[0] + y[0] +\
    \ z[0]));\n}\n", "    var sum = 0;\n    for(var i = 0; i < x.length; i++){\n \
    \       sum += x[i];\n    }\n    for(var i = 0; i < y.length; i++){\n        sum\
    \ += y[i];\n    }\n    for(var i = 0; i < z.length; i++){\n        sum += z[i];\n\
    \    }\n    return sum === (x[0] + y[0] + z[0]);\n}\n", "  if(typeof x === 'number'\
    \ && typeof y === 'number' && typeof z === 'number'){\n    return ((x + y + z)\
    \ === (x + y) || x === y || x === z || y === z);\n  }\n  return false;\n}\n",
  "\tif (typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n\
    \t\treturn false;\n\t}\n\tif (x === y || x === z){\n\t\treturn true;\n\t}\n\t\
    if (x === 0 || y === 0 || z === 0){\n\t\treturn false;\n\t}\n\treturn (x + y +\
    \ z === 0);\n}\n", "    if (x === y || x === z){\n        return true;\n    }\n\
    \    if (x === null || x === undefined){\n        return false;\n    }\n    if\
    \ (y === null || y === undefined){\n        return false;\n    }\n    if (z ===\
    \ null || z === undefined){\n        return false;\n    }\n    if (x.constructor\
    \ !== Number){\n        return false;\n    }\n    if (y.constructor !== Number){\n\
    \        return false;\n    }\n    if (z.constructor !== Number){\n        return\
    \ false;\n    }\n    if (x.constructor === Number){\n        if (x.toFixed(0)\
    \ === y.toFixed(0) || x.toFixed(0) === z.toFixed(0)){\n            return true;\n\
    \        }\n    }\n    return false;\n}\n", "    var sum = 0;\n    for(var i=0;\
    \ i<x.length; i++){\n        sum += x[i];\n    }\n    for(var i=0; i<y.length;\
    \ i++){\n        sum += y[i];\n    }\n    for(var i=0; i<z.length; i++){\n   \
    \     sum += z[i];\n    }\n    return sum == (x+y+z);\n}\n", "  var sum = 0;\n\
    \  for(var i=0; i<x.length; i++){\n    sum += x[i];\n  }\n  for(var i=0; i<y.length;\
    \ i++){\n    sum += y[i];\n  }\n  for(var i=0; i<z.length; i++){\n    sum += z[i];\n\
    \  }\n  return sum == (x+y+z);\n}\n", "    var sum = 0;\n    for(var i = 0; i\
    \ < x.length; i++){\n        sum += x[i];\n    }\n    for(var i = 0; i < y.length;\
    \ i++){\n        sum += y[i];\n    }\n    for(var i = 0; i < z.length; i++){\n\
    \        sum += z[i];\n    }\n    return sum == x || sum == y || sum == z;\n}\n",
  "  if(typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n\
    \    return false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x\
    \ > y && x > z){\n    return true;\n  }\n  if(y > x && y > z){\n    return true;\n\
    \  }\n  if(z > x && z > y){\n    return true;\n  }\n  return false;\n}\n", " \
    \   var sum = 0;\n    for(var i=0; i<x.length; i++){\n        sum += x[i];\n \
    \   }\n    for(var i=0; i<y.length; i++){\n        sum += y[i];\n    }\n    for(var\
    \ i=0; i<z.length; i++){\n        sum += z[i];\n    }\n    return (sum === 0 ||\
    \ sum === x.length + y.length + z.length);\n}\n", "  if(typeof x !== 'number'\
    \ || typeof y !== 'number' || typeof z !== 'number'){\n    return false;\n  }\n\
    \  if(x === y || x === z){\n    return true;\n  }\n  if(x === 0){\n    return\
    \ y === 0;\n  }\n  if(y === 0){\n    return z === 0;\n  }\n  if(z === 0){\n  \
    \  return x === 0 || y === 0 || x === y || y === z;\n  }\n  if(x === y){\n   \
    \ return z === y;\n  }\n  if(y === z){\n    return x === z;\n  }\n  if(x === z){\n\
    \    return y === z;\n  }\n  if(y === x){\n    return z === x;\n  }\n  if(z ===\
    \ x){\n    return y === x;\n  }\n  return false;\n}\n", "\tif((typeof x === 'number')\
    \ && (typeof y === 'number') && (typeof z === 'number')){\n\t\tif((x + y + z)\
    \ === 0){\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\telse{\n\t\treturn false;\n\t}\n}\n", "  if(typeof x !== 'number' || typeof\
    \ y !== 'number' || typeof z !== 'number'){\n    return false;\n  }\n  if(x ===\
    \ y || x === z){\n    return true;\n  }\n  if(x === 0 || y === 0 || z === 0){\n\
    \    return false;\n  }\n  if(x > y && x > z){\n    return true;\n  }\n  if(y\
    \ > x && y > z){\n    return true;\n  }\n  if(z > x && z > y){\n    return true;\n\
    \  }\n  return false;\n}\n", "    var sum = 0;\n    for(var i=0; i<x.length; i++){\n\
    \        sum += x[i];\n    }\n    for(var i=0; i<y.length; i++){\n        sum\
    \ += y[i];\n    }\n    for(var i=0; i<z.length; i++){\n        sum += z[i];\n\
    \    }\n    return sum == 0 || sum == x.length + y.length + z.length;\n}\n", " \
    \   if (x === y || x === z){\n        return true;\n    }\n    if (x === null\
    \ || x === undefined){\n        return false;\n    }\n    if (y === null || y\
    \ === undefined){\n        return false;\n    }\n    if (z === null || z === undefined){\n\
    \        return false;\n    }\n    if (x.constructor !== Number){\n        return\
    \ false;\n    }\n    if (y.constructor !== Number){\n        return false;\n \
    \   }\n    if (z.constructor !== Number){\n        return false;\n    }\n    if\
    \ (x === y){\n        if (x === z){\n            return true;\n        }\n   \
    \     if (x === null || x === undefined){\n            return false;\n       \
    \ }\n        if (y === null || y === undefined){\n            return false;\n\
    \        }\n        if (z === null || z === undefined){\n            return false;\n\
    \        }\n        if (x.constructor !== Number){\n            return false;\n\
    \        }\n        if (y.constructor !== Number){\n            return false;\n\
    \        }\n        if (z.constructor !== Number){\n            return false;\n\
    \        }\n        if (x === y){\n            if (x === z){\n               \
    \ return true;\n            }\n            if (x === null || x === undefined){\n\
    \                return false;\n            }\n            if (y === null || y\
    \ === undefined){\n                return false;\n            }\n            if\
    \ (z === null || z === undefined){\n                return false;\n          \
    \  }\n            if (x.constructor !== Number){\n                return false;\n\
    \            }\n            if (y.constructor !== Number){\n                return\
    \ false;\n            }\n            if (z.constructor !== Number){\n        \
    \        return false;\n            }\n            if (x.constructor === Number){\n\
    \                return true;\n            }\n            if (x.constructor ===\
    \ String){\n                return false;\n            }\n            if (x.constructor\
    \ === Boolean){\n                return false;\n            }\n            if\
    \ (x.constructor === Date){\n                return false;\n            }\n  \
    \          if (x.constructor === Array){\n                return false;\n    \
    \        }\n            if (x.constructor === Object){\n                return\
    \ false;\n            }\n            if (x.constructor === RegExp){\n        \
    \        return false;\n            }\n            if (x.constructor === Error){\n\
    \                return false;\n            }\n        }\n    }\n    if (x ===\
    \ z){\n        return true;\n    }\n    if (x === null || x === undefined){\n\
    \        return false;\n    }\n    if (y === null || y === undefined){\n     \
    \   return false;\n    }\n    if (z === null || z === undefined){\n        return\
    \ false;\n    }\n    if (x.constructor !== Number){\n        return false;\n \
    \   }\n    if (y.constructor !== Number){\n        return false;\n    }\n    if\
    \ (z.constructor !== Number){\n        return false;\n    }\n    if (x === y){\n\
    \        if (x === z){\n            return true;\n        }\n        if (x ===\
    \ null || x === undefined){\n            return false;\n        }\n        if\
    \ (y === null || y === undefined){\n            return false;\n        }\n   \
    \     if (z === null || z === undefined){\n", "    if (x === y || x === z){\n\
    \        return true;\n    }\n    if (x === null || x === undefined){\n      \
    \  return false;\n    }\n    if (y === null || y === undefined){\n        return\
    \ false;\n    }\n    if (z === null || z === undefined){\n        return false;\n\
    \    }\n    if (x.constructor === Array && y.constructor === Array && z.constructor\
    \ === Array){\n        var arr = [];\n        arr.push(x);\n        arr.push(y);\n\
    \        arr.push(z);\n        var sum = 0;\n        arr.forEach(function(item){\n\
    \            sum += item;\n        });\n        if (sum === x || sum === y ||\
    \ sum === z){\n            return true;\n        }\n    }\n    return false;\n\
    }\n", "    var sum = 0;\n    for(var i = 0; i < x.length; i++){\n        sum +=\
    \ x[i];\n    }\n    for(var i = 0; i < y.length; i++){\n        sum += y[i];\n\
    \    }\n    for(var i = 0; i < z.length; i++){\n        sum += z[i];\n    }\n\
    \    return (sum === 0);\n}\n", "  if(typeof x === 'number' && typeof y === 'number'\
    \ && typeof z === 'number'){\n    return ((x + y + z) === ((x + y) + z));\n  }\n\
    \  return false;\n}\n", "    var sum = 0;\n    for(var i=0; i<x.length; i++){\n\
    \        sum += x[i];\n    }\n    for(var i=0; i<y.length; i++){\n        sum\
    \ += y[i];\n    }\n    for(var i=0; i<z.length; i++){\n        sum += z[i];\n\
    \    }\n    return sum == (x+y+z);\n}\n", "    var sum = 0;\n    for(var i=0;\
    \ i<x.length; i++){\n        sum += x[i];\n    }\n    for(var i=0; i<y.length;\
    \ i++){\n        sum += y[i];\n    }\n    for(var i=0; i<z.length; i++){\n   \
    \     sum += z[i];\n    }\n    return sum == (x+y+z);\n}\n", "    if (x === y\
    \ || x === z){\n        return true;\n    }\n    if (x === null || x === undefined){\n\
    \        return false;\n    }\n    if (y === null || y === undefined){\n     \
    \   return false;\n    }\n    if (z === null || z === undefined){\n        return\
    \ false;\n    }\n    if (x.constructor === Number){\n        if (x.constructor\
    \ === Number){\n            return x === y || x === z;\n        }\n        if\
    \ (x.constructor === String){\n            return any_int(parseInt(x), parseInt(y),\
    \ parseInt(z));\n        }\n    }\n    return false;\n}\n", "    return ((x ===\
    \ y || x === z) && (x % 1 === 0 || x % 1 === 1)) && (x % 1 !== 0 || x % 1 !==\
    \ 1);\n}\n", "\tif((typeof x == 'number') && (typeof y == 'number') && (typeof\
    \ z == 'number')){\n\t\tif(x === y){\n\t\t\tif(x === z){\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t\telse{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t\
    return false;\n\t\t}\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\n", "\tvar sum =\
    \ 0;\n\tfor(var i = 0; i <= x; i++){\n\t\tsum += i;\n\t}\n\tfor(var i = 0; i <=\
    \ y; i++){\n\t\tsum += i;\n\t}\n\tfor(var i = 0; i <= z; i++){\n\t\tsum += i;\n\
    \t}\n\treturn (sum == x || sum == y || sum == z);\n}\n", "\tlet sum = 0;\n\tfor(let\
    \ i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\tfor(let i = 0; i < y.length;\
    \ i++){\n\t\tsum += y[i];\n\t}\n\tfor(let i = 0; i < z.length; i++){\n\t\tsum\
    \ += z[i];\n\t}\n\treturn (sum === 0 || sum === x.length + y.length + z.length);\n\
    }\n", "\tlet sum = 0;\n\tlet flag = false;\n\tfor (let i = 0; i < x.length; i++){\n\
    \t\tsum += x[i];\n\t\tif (sum === y){\n\t\t\tflag = true;\n\t\t}\n\t}\n\tfor (let\
    \ i = 0; i < z.length; i++){\n\t\tsum += z[i];\n\t\tif (sum === y){\n\t\t\tflag\
    \ = true;\n\t\t}\n\t}\n\treturn flag;\n}\n", "    var sum = 0;\n    for(var i=0;\
    \ i<x.length; i++){\n        sum += x[i];\n    }\n    for(var i=0; i<y.length;\
    \ i++){\n        sum += y[i];\n    }\n    for(var i=0; i<z.length; i++){\n   \
    \     sum += z[i];\n    }\n    return (sum == 0);\n}\n", "  if(typeof x !== 'number'\
    \ || typeof y !== 'number' || typeof z !== 'number'){\n    return false;\n  }\n\
    \  if(x === y){\n    if(x === z){\n      return true;\n    }\n    return false;\n\
    \  }\n  if(x === z){\n    return true;\n  }\n  return false;\n}\n", "    return\
    \ ((x === y) || x === z || y === z || isNaN(x) || isNaN(y) || isNaN(z));\n}\n",
  "\tif (typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n\
    \t\treturn false;\n\t}\n\tif (x === y || x === z){\n\t\treturn true;\n\t}\n\t\
    if (x > y && x > z){\n\t\treturn true;\n\t}\n\tif (y > z){\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n", "\tlet sum = 0;\n\tlet num1 = parseInt(x);\n\tlet\
    \ num2 = parseInt(y);\n\tlet num3 = parseInt(z);\n\t\n\tlet nums = [num1, num2,\
    \ num3];\n\t\n\tfor(let i = 0; i < nums.length; i++){\n\t\tsum += nums[i];\n\t\
    }\n\t\n\tif(sum === num1 + num2 + num3){\n\t\treturn true;\n\t}\n\telse{\n\t\t\
    return false;\n\t}\n}\n", "    var sum = 0;\n    for(var i = 0; i < x.length;\
    \ i++){\n        sum += x[i];\n    }\n    for(var i = 0; i < y.length; i++){\n\
    \        sum += y[i];\n    }\n    for(var i = 0; i < z.length; i++){\n       \
    \ sum += z[i];\n    }\n    return (sum === 0 || sum === x.length + y.length +\
    \ z.length);\n}\n", "    if (x === y || x === z){\n        return true;\n    }\n\
    \    if (x !== x && y !== y && z !== z){\n        return false;\n    }\n    if\
    \ (x === 0 || y === 0 || z === 0){\n        return false;\n    }\n    if (x ===\
    \ y && x === z){\n        return true;\n    }\n    if (x === y || x === z){\n\
    \        return true;\n    }\n    if (y === z){\n        return true;\n    }\n\
    \    return false;\n}\n", "  if(typeof x === 'number' && typeof y === 'number'\
    \ && typeof z === 'number'){\n    return ((x + y + z) === (x + y) || x === y ||\
    \ x === z || y === z);\n  }\n  return false;\n}\n", "  if(typeof x !== 'number'\
    \ || typeof y !== 'number' || typeof z !== 'number'){\n    return false;\n  }\n\
    \  if(x === y){\n    return true;\n  }\n  if(x === z){\n    return true;\n  }\n\
    \  if(y === z){\n    return true;\n  }\n  if(x === 0 || y === 0 || z === 0){\n\
    \    return false;\n  }\n  if(x === y){\n    return false;\n  }\n  if(x === z){\n\
    \    return false;\n  }\n  if(y === z){\n    return false;\n  }\n  if(x < y &&\
    \ y < z){\n    return false;\n  }\n  if(y < x && x < z){\n    return false;\n\
    \  }\n  if(y < x && y < z){\n    return false;\n  }\n  if(x < y && y < z){\n \
    \   return false;\n  }\n  if(y < x && y < z){\n    return false;\n  }\n  if(x\
    \ < y && y < z){\n    return false;\n  }\n  if(y < x && y < z){\n    return false;\n\
    \  }\n  if(x < y && y < z){\n    return false;\n  }\n  if(y < x && y < z){\n \
    \   return false;\n  }\n  if(x < y && y < z){\n    return false;\n  }\n  if(y\
    \ < x && y < z){\n    return false;\n  }\n  if(x < y && y < z){\n    return false;\n\
    \  }\n  if(y < x && y < z){\n    return false;\n  }\n  if(x < y && y < z){\n \
    \   return false;\n  }\n  if(y < x && y < z){\n    return false;\n  }\n  if(x\
    \ < y && y < z){\n    return false;\n  }\n  if(y < x && y < z){\n    return false;\n\
    \  }\n  if(x < y && y < z){\n    return false;\n  }\n  if(y < x && y < z){\n \
    \   return false;\n  }\n  if(x < y && y < z){\n    return false;\n  }\n  if(y\
    \ < x && y < z){\n    return false;\n  }\n  if(x < y && y < z){\n    return false;\n\
    \  }\n  if(y < x && y < z){\n    return false;\n  }\n  if(x < y && y < z){\n \
    \   return false;\n  }\n  if(y < x && y < z){\n    return false;\n  }\n  if(x\
    \ < y && y < z){\n    return false;\n  }\n  if(y < x && y < z){\n    return false;\n\
    \  }\n  if(x < y && y < z){\n    return false;\n  }\n  if(y < x && y < z){\n \
    \   return false;\n  }\n  if(x < y && y < z){\n    return false;\n  }\n  if(y\
    \ < x && y < z){\n    return false;\n  }\n  if(x < ", "  if(typeof x === 'number'\
    \ && typeof y === 'number' && typeof z === 'number'){\n    return ((x + y + z)\
    \ === (x + y) || x === y || x === z || y === z);\n  }\n  return false;\n}\n",
  "\tlet sum = 0;\n\tlet n = x;\n\tlet m = y;\n\tlet o = z;\n\twhile (n != 0 || m\
    \ != 0){\n\t\tsum += n % 10;\n\t\tsum += m % 10;\n\t\tn /= 10;\n\t\tm /= 10;\n\
    \t}\n\treturn sum == o;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number'\
    \ || typeof z !== 'number'){\n    return false;\n  }\n  if(x === y){\n    if(x\
    \ === z){\n      return true;\n    }\n    return false;\n  }\n  if(x === z){\n\
    \    return true;\n  }\n  if(y === z){\n    return true;\n  }\n  return false;\n\
    }\n", "  if(typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n\
    \    return false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x\
    \ < y && x < z){\n    return true;\n  }\n  if(y < x && y < z){\n    return true;\n\
    \  }\n  if(z < x && z < y){\n    return true;\n  }\n  return false;\n}\n", " \
    \   if (x === y || x === z){\n        return true;\n    }\n    if (x !== x ||\
    \ y !== y || z !== z){\n        return false;\n    }\n    if (x < y && x < z){\n\
    \        return true;\n    }\n    if (y < x && y < z){\n        return true;\n\
    \    }\n    if (z < x && z < y){\n        return true;\n    }\n    return false;\n\
    }\n", "\tlet sum = 0;\n\tfor(let i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\
    \t}\n\tfor(let i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor(let i\
    \ = 0; i < z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn sum == (x[0] + y[0]\
    \ + z[0]);\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number' || typeof\
    \ z !== 'number'){\n    return false;\n  }\n  if(x === y){\n    return true;\n\
    \  }\n  if(x === z){\n    return true;\n  }\n  if(y === z){\n    return true;\n\
    \  }\n  if(x > y && x > z){\n    return true;\n  }\n  if(y > z){\n    return true;\n\
    \  }\n  return false;\n}\n", "    var sum = 0;\n    for(var i=0; i<x.length; i++){\n\
    \        sum += x[i];\n    }\n    for(var i=0; i<y.length; i++){\n        sum\
    \ += y[i];\n    }\n    for(var i=0; i<z.length; i++){\n        sum += z[i];\n\
    \    }\n    return (sum === 0 || sum === x.length + y.length + z.length);\n}\n",
  "\tlet sum = 0;\n\tlet min = 0;\n\tlet max = 0;\n\tlet num = 0;\n\tlet num2 = 0;\n\
    \tlet num3 = 0;\n\tlet num4 = 0;\n\tlet num5 = 0;\n\tlet num6 = 0;\n\tlet num7\
    \ = 0;\n\tlet num8 = 0;\n\tlet num9 = 0;\n\tlet num10 = 0;\n\tlet num11 = 0;\n\
    \tlet num12 = 0;\n\tlet num13 = 0;\n\tlet num14 = 0;\n\tlet num15 = 0;\n\tlet\
    \ num16 = 0;\n\tlet num17 = 0;\n\tlet num18 = 0;\n\tlet num19 = 0;\n\tlet num20\
    \ = 0;\n\tlet num21 = 0;\n\tlet num22 = 0;\n\tlet num23 = 0;\n\tlet num24 = 0;\n\
    \tlet num25 = 0;\n\tlet num26 = 0;\n\tlet num27 = 0;\n\tlet num28 = 0;\n\tlet\
    \ num29 = 0;\n\tlet num30 = 0;\n\tlet num31 = 0;\n\tlet num32 = 0;\n\tlet num33\
    \ = 0;\n\tlet num34 = 0;\n\tlet num35 = 0;\n\tlet num36 = 0;\n\tlet num37 = 0;\n\
    \tlet num38 = 0;\n\tlet num39 = 0;\n\tlet num40 = 0;\n\tlet num41 = 0;\n\tlet\
    \ num42 = 0;\n\tlet num43 = 0;\n\tlet num44 = 0;\n\tlet num45 = 0;\n\tlet num46\
    \ = 0;\n\tlet num47 = 0;\n\tlet num48 = 0;\n\tlet num49 = 0;\n\tlet num50 = 0;\n\
    \tlet num51 = 0;\n\tlet num52 = 0;\n\tlet num53 = 0;\n\tlet num54 = 0;\n\tlet\
    \ num55 = 0;\n\tlet num56 = 0;\n\tlet num57 = 0;\n\tlet num58 = 0;\n\tlet num59\
    \ = 0;\n\tlet num60 = 0;\n\tlet num61 = 0;\n\tlet num62 = 0;\n\tlet num63 = 0;\n\
    \tlet num64 = 0;\n\tlet num65 = 0;\n\tlet num66 = 0;\n\tlet num67 = 0;\n\tlet\
    \ num68 = 0;\n\tlet num69 = 0;\n\tlet num70 = 0;\n\tlet num71 = 0;\n\tlet num72\
    \ = 0;\n\tlet num73 = 0;\n\tlet num74 = 0;\n\tlet num75 = 0;\n\tlet num76 = 0;\n\
    \tlet num77 = 0;\n\tlet num78 = 0;\n\tlet num79 = 0;\n\tlet num80 = 0;\n\tlet\
    \ num81 = 0;\n\tlet num82 = 0;\n\tlet num83 = 0;\n\tlet num84", "  if(typeof x\
    \ !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x > y &&\
    \ x > z){\n    return true;\n  }\n  if(y > x && y > z){\n    return true;\n  }\n\
    \  if(z > x && z > y){\n    return true;\n  }\n  return false;\n}\n", "  if(typeof\
    \ x === 'number' && typeof y === 'number' && typeof z === 'number'){\n    return\
    \ ((x + y + z) === (x + y));\n  }\n  return false;\n}\n", "  if(typeof x === 'number'\
    \ && typeof y === 'number' && typeof z === 'number'){\n    return ((x + y + z)\
    \ === (x + y));\n  }\n  return false;\n}\n", "    if (x === y || x === z){\n \
    \       return true;\n    }\n    if (x === null || x === undefined){\n       \
    \ return false;\n    }\n    if (y === null || y === undefined){\n        return\
    \ false;\n    }\n    if (z === null || z === undefined){\n        return false;\n\
    \    }\n    if (x.constructor !== Number){\n        return false;\n    }\n   \
    \ if (y.constructor !== Number){\n        return false;\n    }\n    if (z.constructor\
    \ !== Number){\n        return false;\n    }\n    if (x === y){\n        if (x\
    \ === z){\n            return true;\n        }\n        if (x === null || x ===\
    \ undefined){\n            return false;\n        }\n        if (y === null ||\
    \ y === undefined){\n            return false;\n        }\n        if (z === null\
    \ || z === undefined){\n            return false;\n        }\n        if (x.constructor\
    \ !== Number){\n            return false;\n        }\n        if (y.constructor\
    \ !== Number){\n            return false;\n        }\n        if (z.constructor\
    \ !== Number){\n            return false;\n        }\n        if (x === y){\n\
    \            if (x === z){\n                return true;\n            }\n    \
    \        if (x === null || x === undefined){\n                return false;\n\
    \            }\n            if (y === null || y === undefined){\n            \
    \    return false;\n            }\n            if (z === null || z === undefined){\n\
    \                return false;\n            }\n            if (x.constructor !==\
    \ Number){\n                return false;\n            }\n            if (y.constructor\
    \ !== Number){\n                return false;\n            }\n            if (z.constructor\
    \ !== Number){\n                return false;\n            }\n            if (x\
    \ === y){\n                if (x === z){\n                    return true;\n \
    \               }\n                if (x === null || x === undefined){\n     \
    \               return false;\n                }\n                if (y === null\
    \ || y === undefined){\n                    return false;\n                }\n\
    \                if (z === null || z === undefined){\n                    return\
    \ false;\n                }\n                if (x.constructor !== Number){\n\
    \                    return false;\n                }\n                if (y.constructor\
    \ !== Number){\n                    return false;\n                }\n       \
    \         if (z.constructor !== Number){\n                    return false;\n\
    \                }\n                if (x === y){\n                    if (x ===\
    \ z){\n                        return true;\n                    }\n         \
    \           if (x === null || x === undefined){\n                        return\
    \ false;\n                    }\n                    if (y === null || y === undefined){\n\
    \                        return false;\n                    }\n              \
    \      if (z === null || z === undefined){\n                        return false;\n\
    \                    }\n                    if (x.constructor !== Number){\n \
    \                       return false;\n                    }\n               \
    \     if (y.constructor !== Number){\n                        return false;\n\
    \                    }\n                    if (z.constructor !== Number){\n \
    \                       return false;\n                    }\n               \
    \     if (x === y){\n                        if (x === z){\n                 \
    \           return true;\n                        }\n                        if\
    \ (x === null || x === undefined){\n                            return false;\n\
    \                        }\n                        if (y === null || y === undefined){\n\
    \                            return false;\n                        }\n      \
    \                  if (", "  if(typeof x === 'number' && typeof y === 'number'\
    \ && typeof z === 'number'){\n    return ((x + y + z) === ((x + y) + z));\n  }\n\
    \  return false;\n}\n", "\tlet sum = 0;\n\tfor(let i = 0; i < x.length; i++){\n\
    \t\tsum += x[i];\n\t}\n\tfor(let i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\
    \t}\n\tfor(let i = 0; i < z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn sum\
    \ === (x[0] + y[0] + z[0]);\n}\n", "  if(typeof x === 'number' && typeof y ===\
    \ 'number' && typeof z === 'number'){\n    return ((x + y + z) === (x + y) ||\
    \ x === y || x === z || y === z);\n  }\n  return false;\n}\n", "\tvar sum = 0;\n\
    \tfor(var i = 0; i<arguments.length; i++){\n\t\tsum += arguments[i];\n\t}\n\t\
    return (sum == x || sum == y || sum == z);\n}\n", "\tlet sum = 0;\n\tlet num1\
    \ = parseInt(x);\n\tlet num2 = parseInt(y);\n\tlet num3 = parseInt(z);\n\t\n\t\
    if(num1 === num2 && num2 === num3){\n\t\treturn true;\n\t}\n\t\n\tif(num1 > num2\
    \ && num1 > num3){\n\t\treturn true;\n\t}\n\t\n\tif(num2 > num1 && num2 > num3){\n\
    \t\treturn true;\n\t}\n\t\n\tif(num3 > num1 && num3 > num2){\n\t\treturn true;\n\
    \t}\n\t\n\treturn false;\n}\n", "\tvar sum = 0;\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tsum += x[i];\n\t}\n\tfor(var i=0; i<y.length; i++){\n\t\tsum += y[i];\n\t\
    }\n\tfor(var i=0; i<z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn (sum == 0\
    \ || sum == x.length + y.length + z.length);\n}\n", "    if (x === y || x ===\
    \ z){\n        return true;\n    }\n    if (x !== x && y !== y && z !== z){\n\
    \        return false;\n    }\n    if (x === 0 && y === 0 && z === 0){\n     \
    \   return true;\n    }\n    if (x === 0 && y === 0 && z === 0){\n        return\
    \ true;\n    }\n    if (x === 0 && y === 0 && z === 0){\n        return true;\n\
    \    }\n    if (x === 0 && y === 0 && z === 0){\n        return true;\n    }\n\
    \    if (x === 0 && y === 0 && z === 0){\n        return true;\n    }\n    if\
    \ (x === 0 && y === 0 && z === 0){\n        return true;\n    }\n    if (x ===\
    \ 0 && y === 0 && z === 0){\n        return true;\n    }\n    if (x === 0 && y\
    \ === 0 && z === 0){\n        return true;\n    }\n    if (x === 0 && y === 0\
    \ && z === 0){\n        return true;\n    }\n    if (x === 0 && y === 0 && z ===\
    \ 0){\n        return true;\n    }\n    if (x === 0 && y === 0 && z === 0){\n\
    \        return true;\n    }\n    if (x === 0 && y === 0 && z === 0){\n      \
    \  return true;\n    }\n    if (x === 0 && y === 0 && z === 0){\n        return\
    \ true;\n    }\n    if (x === 0 && y === 0 && z === 0){\n        return true;\n\
    \    }\n    if (x === 0 && y === 0 && z === 0){\n        return true;\n    }\n\
    \    if (x === 0 && y === 0 && z === 0){\n        return true;\n    }\n    if\
    \ (x === 0 && y === 0 && z === 0){\n        return true;\n    }\n    if (x ===\
    \ 0 && y === 0 && z === 0){\n        return true;\n    }\n    if (x === 0 && y\
    \ === 0 && z === 0){\n        return true;\n    }\n    if (x === 0 && y === 0\
    \ && z === 0){\n        return true;\n    }\n    if (x === 0 && y === 0 && z ===\
    \ 0){\n        return true;\n    }\n    if (x === 0 && y === 0 && z === 0){\n\
    \        return true;\n    }\n    if (x === 0 && y === 0 && z === 0){\n      \
    \  return true;\n    }\n    if (x === 0 && y === 0 && z === 0){\n        return\
    \ true;\n    }\n    if (x === 0 && y === 0 && z === 0){\n        return true;\n\
    \    }\n    if (x === 0 && y === 0 && z === 0){\n        return true;\n    }\n\
    \    if (x === 0 && y === 0 && z === 0){\n        return true;\n    }\n    if\
    \ (x === 0 && y === 0 && z === 0){\n        return true;\n    }\n    if (x ===\
    \ 0 && y === 0 && z === 0){\n        return true;\n    }\n    if (x === 0 && y\
    \ === 0 && z === 0){\n        return true;\n    }\n", "    var sum = 0;\n    for(var\
    \ i = 0; i < x.length; i++){\n        sum += x[i];\n    }\n    for(var i = 0;\
    \ i < y.length; i++){\n        sum += y[i];\n    }\n    for(var i = 0; i < z.length;\
    \ i++){\n        sum += z[i];\n    }\n    return sum == 0 || sum == x || sum ==\
    \ y || sum == z;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number' ||\
    \ typeof z !== 'number'){\n    return false;\n  }\n  if(x === y || x === z){\n\
    \    return true;\n  }\n  if(x > y && x > z){\n    return true;\n  }\n  if(y >\
    \ z){\n    return true;\n  }\n  return false;\n}\n", "\tlet sum = 0;\n\tlet num1\
    \ = Number(x);\n\tlet num2 = Number(y);\n\tlet num3 = Number(z);\n\tlet num4 =\
    \ num1 + num2;\n\tlet num5 = num3 + num4;\n\tlet num6 = num1 * num2;\n\tlet num7\
    \ = num3 * num4;\n\tlet num8 = num1 * num3;\n\tlet num9 = num2 * num3;\n\tlet\
    \ num10 = num1 * num2;\n\tlet num11 = num3 * num1;\n\tlet num12 = num2 * num1;\n\
    \tlet num13 = num1 * num3;\n\tlet num14 = num3 * num2;\n\tlet num15 = num1 * num2;\n\
    \tlet num16 = num3 * num1;\n\tlet num17 = num2 * num3;\n\tlet num18 = num1 * num2;\n\
    \tlet num19 = num3 * num1;\n\tlet num20 = num2 * num1;\n\tlet num21 = num1 * num3;\n\
    \tlet num22 = num3 * num2;\n\tlet num23 = num1 * num2;\n\tlet num24 = num3 * num1;\n\
    \tlet num25 = num2 * num3;\n\tlet num26 = num1 * num2;\n\tlet num27 = num3 * num1;\n\
    \tlet num28 = num2 * num1;\n\tlet num29 = num1 * num3;\n\tlet num30 = num3 * num2;\n\
    \tlet num31 = num1 * num2;\n\tlet num32 = num3 * num1;\n\tlet num33 = num2 * num3;\n\
    \tlet num34 = num1 * num2;\n\tlet num35 = num3 * num1;\n\tlet num36 = num2 * num1;\n\
    \tlet num37 = num1 * num3;\n\tlet num38 = num3 * num2;\n\tlet num39 = num1 * num2;\n\
    \tlet num40 = num3 * num1;\n\tlet num41 = num2 * num3;\n\tlet num42 = num1 * num2;\n\
    \tlet num43 = num3 * num1;\n\tlet num44 = num2 * num1;\n\tlet num45 = num1 * num3;\n\
    \tlet num46 = num3 * num2;\n\tlet num47 = num1 * num2;\n\tlet num48 = num3 * num1;\n\
    \tlet num49 = num2 * num3;\n\tlet num50 = num1 * num2;\n\tlet num51 = num3 * num1;\n\
    \tlet num52 = num2 * num1;\n\tlet num5", "\tlet sum = 0;\n\tlet n = x;\n\tlet\
    \ m = y;\n\tlet o = z;\n\twhile (n != 0 || m != 0){\n\t\tsum += n;\n\t\tsum +=\
    \ m;\n\t\tn /= 10;\n\t\tm /= 10;\n\t}\n\treturn sum == o;\n}\n", "  if(typeof\
    \ x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x > y &&\
    \ x > z){\n    return true;\n  }\n  if(y > z){\n    return true;\n  }\n  return\
    \ false;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number' || typeof\
    \ z !== 'number'){\n    return false;\n  }\n  if(x === y){\n    if(x === z){\n\
    \      return true;\n    }\n    return false;\n  }\n  if(x === z){\n    return\
    \ true;\n  }\n  if(y === z){\n    return true;\n  }\n  if(x < y && x < z){\n \
    \   return true;\n  }\n  if(y < x && y < z){\n    return true;\n  }\n  if(z <\
    \ x && z < y){\n    return true;\n  }\n  return false;\n}\n", "\tlet sum = 0;\n\
    \tfor (let i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\tfor (let i = 0;\
    \ i < y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor (let i = 0; i < z.length;\
    \ i++){\n\t\tsum += z[i];\n\t}\n\treturn sum == x || sum == y || sum == z;\n}\n",
  "  if(typeof x === 'number' && typeof y === 'number' && typeof z === 'number'){\n\
    \    return ((x + y + z) === (x + y));\n  }\n  return false;\n}\n", "\tlet sum\
    \ = 0;\n\tfor (let i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\tfor (let\
    \ i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor (let i = 0; i < z.length;\
    \ i++){\n\t\tsum += z[i];\n\t}\n\treturn (sum === 0 || sum === x.length + y.length\
    \ + z.length);\n}\n", "  if(typeof x === 'number' && typeof y === 'number' &&\
    \ typeof z === 'number'){\n    return ((x + y + z) === (x + y));\n  }\n  return\
    \ false;\n}\n", "\tvar sum = 0;\n\tfor(var i=0; i<x.length; i++){\n\t\tsum +=\
    \ x[i];\n\t}\n\tfor(var i=0; i<y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor(var\
    \ i=0; i<z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn (sum == 0 || sum ==\
    \ x.length + y.length + z.length);\n}\n", "    var sum = 0;\n    for(var i = 0;\
    \ i<arguments.length; i++){\n        sum += arguments[i];\n    }\n    return ((sum\
    \ === x) || (sum === y)) && isInt(sum);\n}\n", "  if(typeof x !== 'number' ||\
    \ typeof y !== 'number' || typeof z !== 'number'){\n    return false;\n  }\n \
    \ if(x === y){\n    return x === z;\n  }\n  if(x === z){\n    return x === y;\n\
    \  }\n  if(y === z){\n    return x === y;\n  }\n  return false;\n}\n", "  if(typeof\
    \ x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x < y &&\
    \ y < z){\n    return true;\n  }\n  if(x < z && z < y){\n    return true;\n  }\n\
    \  return false;\n}\n", "    if (x === undefined) return false;\n    if (y ===\
    \ undefined) return false;\n    if (z === undefined) return false;\n    if (x\
    \ === y || x === z) return true;\n    if (x === 0 || y === 0 || z === 0) return\
    \ false;\n    if (x === Infinity || y === Infinity || z === Infinity) return true;\n\
    \    if (x === -Infinity || y === -Infinity || z === -Infinity) return true;\n\
    \    if (isNaN(x) || isNaN(y) || isNaN(z)) return false;\n    if (x === 0 || y\
    \ === 0 || z === 0) return false;\n    if (x === Infinity || y === Infinity ||\
    \ z === Infinity) return true;\n    if (x === -Infinity || y === -Infinity ||\
    \ z === -Infinity) return true;\n    if (isNaN(x) || isNaN(y) || isNaN(z)) return\
    \ false;\n    if (x === 0 || y === 0 || z === 0) return false;\n    if (x ===\
    \ Infinity || y === Infinity || z === Infinity) return true;\n    if (x === -Infinity\
    \ || y === -Infinity || z === -Infinity) return true;\n    if (isNaN(x) || isNaN(y)\
    \ || isNaN(z)) return false;\n    if (x === 0 || y === 0 || z === 0) return false;\n\
    \    if (x === Infinity || y === Infinity || z === Infinity) return true;\n  \
    \  if (x === -Infinity || y === -Infinity || z === -Infinity) return true;\n \
    \   if (isNaN(x) || isNaN(y) || isNaN(z)) return false;\n    if (x === 0 || y\
    \ === 0 || z === 0) return false;\n    if (x === Infinity || y === Infinity ||\
    \ z === Infinity) return true;\n    if (x === -Infinity || y === -Infinity ||\
    \ z === -Infinity) return true;\n    if (isNaN(x) || isNaN(y) || isNaN(z)) return\
    \ false;\n    if (x === 0 || y === 0 || z === 0) return false;\n    if (x ===\
    \ Infinity || y === Infinity || z === Infinity) return true;\n    if (x === -Infinity\
    \ || y === -Infinity || z === -Infinity) return true;\n    if (isNaN(x) || isNaN(y)\
    \ || isNaN(z)) return false;\n    if (x === 0 || y === 0 || z === 0) return false;\n\
    \    if (x === Infinity || y === Infinity || z === Infinity) return true;\n  \
    \  if (x === -Infinity || y === -Infinity || z === -Infinity) return true;\n \
    \   if (isNaN(x) || isNaN(y) || isNaN(z)) return false;\n    if (x === 0 || y\
    \ === 0 || z === 0) return false;\n    if (x === Infinity || y === Infinity ||\
    \ z === Infinity) return true;\n    if (x === -Infinity || y === -Infinity ||\
    \ z === -Infinity) return true;", "  if(typeof x === 'number' && typeof y ===\
    \ 'number' && typeof z === 'number'){\n    return ((x + y + z) === (x + y) ||\
    \ x === y || x === z || y === z);\n  }\n  return false;\n}\n", "  if(typeof x\
    \ !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x < y &&\
    \ x < z){\n    return true;\n  }\n  if(y < x && y < z){\n    return true;\n  }\n\
    \  if(z < x && z < y){\n    return true;\n  }\n  return false;\n}\n", "    var\
    \ sum = 0;\n    for(var i=0; i<x.length; i++){\n        sum += x[i];\n    }\n\
    \    for(var i=0; i<y.length; i++){\n        sum += y[i];\n    }\n    for(var\
    \ i=0; i<z.length; i++){\n        sum += z[i];\n    }\n    return sum == 0 ||\
    \ sum == x.length + y.length + z.length;\n}\n", "    var sum = 0;\n    for(var\
    \ i = 0; i<arguments.length; i++){\n        sum += arguments[i];\n    }\n    return\
    \ sum == x || sum == y || sum == z;\n}\n", "  if(typeof x === 'number' && typeof\
    \ y === 'number' && typeof z === 'number'){\n    return ((x + y + z) === (x +\
    \ y) || x === y || x === z || y === z);\n  }\n  return false;\n}\n", "  if(typeof\
    \ x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    throw\
    \ new Error('All arguments must be numbers.');\n  }\n  if(x === y){\n    return\
    \ true;\n  }\n  if(x === z){\n    return true;\n  }\n  if(y === z){\n    return\
    \ true;\n  }\n  if(x === 0 || y === 0 || z === 0){\n    return false;\n  }\n \
    \ if(x < y && y < z){\n    return true;\n  }\n  if(y < x && x < z){\n    return\
    \ true;\n  }\n  if(y < x && y < z){\n    return true;\n  }\n  if(x < y && y <\
    \ z){\n    return true;\n  }\n  return false;\n}\n", "    return ((x === y ||\
    \ x === z) && (x % 1 === 0 || x % 1 === 1)) || ((y === x || y === z) && (y % 1\
    \ === 0 || y % 1 === 1)) || ((z === x || z === y) && (z % 1 === 0 || z % 1 ===\
    \ 1));\n}\n", "  if(typeof x === 'number' && typeof y === 'number' && typeof z\
    \ === 'number'){\n    return ((x + y + z) === (x + y) || x === y || x === z ||\
    \ y === z);\n  }\n  return false;\n}\n", "    if (typeof(x) != 'number' || typeof(y)\
    \ != 'number' || typeof(z) != 'number'){\n        throw 'Invalid arguments'\n\
    \    }\n    if (x == y || x == z){\n        return true;\n    }\n    if (x > y\
    \ && x > z){\n        return true;\n    }\n    if (y > x && y > z){\n        return\
    \ true;\n    }\n    if (z > x && z > y){\n        return true;\n    }\n    return\
    \ false;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number' || typeof\
    \ z !== 'number'){\n    return false;\n  }\n  if(x === y || x === z){\n    return\
    \ true;\n  }\n  if(x > y && x > z){\n    return true;\n  }\n  if(y > x && y >\
    \ z){\n    return true;\n  }\n  if(z > x && z > y){\n    return true;\n  }\n \
    \ return false;\n}\n", "\tlet sum = 0;\n\tfor (let i = 0; i < x.length; i++){\n\
    \t\tsum += x[i];\n\t}\n\tfor (let i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\
    \t}\n\tfor (let i = 0; i < z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn (sum\
    \ === (x[0] + y[0] + z[0]));\n}\n", "  if(typeof x !== 'number' || typeof y !==\
    \ 'number' || typeof z !== 'number'){\n    return false;\n  }\n  if(x === y ||\
    \ x === z){\n    return true;\n  }\n  if(x > y && x > z){\n    return true;\n\
    \  }\n  if(y > z){\n    return true;\n  }\n  return false;\n}\n", "  if(typeof\
    \ x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y){\n    if(x === z){\n      return true;\n    }\n \
    \   return false;\n  }\n  if(x === z){\n    return true;\n  }\n  return false;\n\
    }\n", "\tvar sum = 0;\n\tfor(var i = 0; i<arguments.length; i++){\n\t\tsum +=\
    \ arguments[i];\n\t}\n\treturn (sum === x || sum === y || sum === z);\n}\n", "\t\
    let sum = 0;\n\tlet n = x;\n\tlet m = y;\n\tlet o = z;\n\twhile (n != 0 || m !=\
    \ 0){\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t\tm /= 10;\n\t}\n\treturn sum == o\
    \ && sum == m;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number' ||\
    \ typeof z !== 'number'){\n    return false;\n  }\n  if(x === y || x === z){\n\
    \    return true;\n  }\n  if(x > y && x > z){\n    return true;\n  }\n  if(y >\
    \ z){\n    return true;\n  }\n  return false;\n}\n", "    if (x === y || x ===\
    \ z){\n        return true;\n    }\n    if (x === 0 || y === 0 || z === 0){\n\
    \        return false;\n    }\n    if (x < 0 || y < 0 || z < 0){\n        return\
    \ false;\n    }\n    if (x > y || y > z || z > x){\n        return false;\n  \
    \  }\n    if (x === y){\n        if (x === z){\n            return true;\n   \
    \     }\n        if (x === 0){\n            return false;\n        }\n    }\n\
    \    if (x === z){\n        return true;\n    }\n    if (y === z){\n        return\
    \ true;\n    }\n    return false;\n}\n", "\tlet sum = 0;\n\tlet num = 0;\n\tlet\
    \ num2 = 0;\n\tlet num3 = 0;\n\tlet num4 = 0;\n\tlet num5 = 0;\n\tlet num6 = 0;\n\
    \tlet num7 = 0;\n\tlet num8 = 0;\n\tlet num9 = 0;\n\tlet num10 = 0;\n\tlet num11\
    \ = 0;\n\tlet num12 = 0;\n\tlet num13 = 0;\n\tlet num14 = 0;\n\tlet num15 = 0;\n\
    \tlet num16 = 0;\n\tlet num17 = 0;\n\tlet num18 = 0;\n\tlet num19 = 0;\n\tlet\
    \ num20 = 0;\n\tlet num21 = 0;\n\tlet num22 = 0;\n\tlet num23 = 0;\n\tlet num24\
    \ = 0;\n\tlet num25 = 0;\n\tlet num26 = 0;\n\tlet num27 = 0;\n\tlet num28 = 0;\n\
    \tlet num29 = 0;\n\tlet num30 = 0;\n\tlet num31 = 0;\n\tlet num32 = 0;\n\tlet\
    \ num33 = 0;\n\tlet num34 = 0;\n\tlet num35 = 0;\n\tlet num36 = 0;\n\tlet num37\
    \ = 0;\n\tlet num38 = 0;\n\tlet num39 = 0;\n\tlet num40 = 0;\n\tlet num41 = 0;\n\
    \tlet num42 = 0;\n\tlet num43 = 0;\n\tlet num44 = 0;\n\tlet num45 = 0;\n\tlet\
    \ num46 = 0;\n\tlet num47 = 0;\n\tlet num48 = 0;\n\tlet num49 = 0;\n\tlet num50\
    \ = 0;\n\tlet num51 = 0;\n\tlet num52 = 0;\n\tlet num53 = 0;\n\tlet num54 = 0;\n\
    \tlet num55 = 0;\n\tlet num56 = 0;\n\tlet num57 = 0;\n\tlet num58 = 0;\n\tlet\
    \ num59 = 0;\n\tlet num60 = 0;\n\tlet num61 = 0;\n\tlet num62 = 0;\n\tlet num63\
    \ = 0;\n\tlet num64 = 0;\n\tlet num65 = 0;\n\tlet num66 = 0;\n\tlet num67 = 0;\n\
    \tlet num68 = 0;\n\tlet num69 = 0;\n\tlet num70 = 0;\n\tlet num71 = 0;\n\tlet\
    \ num72 = 0;\n\tlet num73 = 0;\n\tlet num74 = 0;\n\tlet num75 = 0;\n\tlet num76\
    \ = 0;\n\tlet num77 = 0;\n\tlet num78 = 0;\n\tlet num79 = 0;\n\tlet num80 = 0;\n\
    \tlet num81 = 0;\n\tlet num82 = 0;\n\tlet num83 = 0;\n\tlet num84 = 0;\n\tlet\
    \ num85 = 0;\n\tlet ", "  if(typeof x !== 'number' || typeof y !== 'number' ||\
    \ typeof z !== 'number'){\n    return false;\n  }\n  if(x === y){\n    if(x ===\
    \ z){\n      return true;\n    }\n    return false;\n  }\n  if(x === z){\n   \
    \ return true;\n  }\n  if(y === z){\n    return true;\n  }\n  if(x < y && x <\
    \ z){\n    return true;\n  }\n  if(y < x && y < z){\n    return true;\n  }\n \
    \ if(z < x && z < y){\n    return true;\n  }\n  return false;\n}\n", "\tlet sum\
    \ = 0;\n\tfor(let i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\tfor(let\
    \ i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor(let i = 0; i < z.length;\
    \ i++){\n\t\tsum += z[i];\n\t}\n\treturn sum == (x[0] + y[0] + z[0]);\n}\n", " \
    \ if(typeof x === 'number' && typeof y === 'number' && typeof z === 'number'){\n\
    \    return ((x + y + z) === (x + y) || x === y || x === z || y === z);\n  }\n\
    \  return false;\n}\n", "\tlet sum = 0;\n\tlet num1 = parseInt(x);\n\tlet num2\
    \ = parseInt(y);\n\tlet num3 = parseInt(z);\n\t\n\tif(!isNaN(num1) && !isNaN(num2)\
    \ && !isNaN(num3)){\n\t\tsum = num1 + num2 + num3;\n\t\tif(sum === 0){\n\t\t\t\
    return true;\n\t\t}\n\t\telse if(sum > 0){\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\n", "  if\
    \ (x === y || x === z){\n    return true;\n  }\n  else if (x !== x && y !== y\
    \ && z !== z){\n    return false;\n  }\n  else if (x === 0 || y === 0 || z ===\
    \ 0){\n    return false;\n  }\n  else if (x === y || x === z || y === z){\n  \
    \  return true;\n  }\n  else if (x === 0 || y === 0 || z === 0){\n    return false;\n\
    \  }\n  else if (x === y || x === z){\n    return true;\n  }\n  else if (x ===\
    \ z){\n    return true;\n  }\n  else if (y === z){\n    return true;\n  }\n  else\
    \ if (x === y){\n    return true;\n  }\n  else if (x === z){\n    return true;\n\
    \  }\n  else if (y === z){\n    return true;\n  }\n  else if (x === y){\n    return\
    \ true;\n  }\n  else if (x === z){\n    return true;\n  }\n  else if (y === z){\n\
    \    return true;\n  }\n  else if (x === y){\n    return true;\n  }\n  else if\
    \ (x === z){\n    return true;\n  }\n  else if (y === z){\n    return true;\n\
    \  }\n  else if (x === y){\n    return true;\n  }\n  else if (x === z){\n    return\
    \ true;\n  }\n  else if (y === z){\n    return true;\n  }\n  else if (x === y){\n\
    \    return true;\n  }\n  else if (x === z){\n    return true;\n  }\n  else if\
    \ (y === z){\n    return true;\n  }\n  else if (x === y){\n    return true;\n\
    \  }\n  else if (x === z){\n    return true;\n  }\n  else if (y === z){\n    return\
    \ true;\n  }\n  else if (x === y){\n    return true;\n  }\n  else if (x === z){\n\
    \    return true;\n  }\n  else if (y === z){\n    return true;\n  }\n  else if\
    \ (x === y){\n    return true;\n  }\n  else if (x === z){\n    return true;\n\
    \  }\n  else if (y === z){\n    return true;\n  }\n  else if (x === y){\n    return\
    \ true;\n  }\n  else if (x === z){\n    return true;\n  }\n  else if (y === z){\n\
    \    return true;\n  }\n  else if (x === y){\n    return true;\n  }\n  else if\
    \ (x === z){\n    return true;\n  }\n  else if (y === z){\n    return true;\n\
    \  }\n  else if (x === y){\n    return true;\n  }\n  else if (x === z){\n    return\
    \ true;\n  }\n  else if (y === z){\n    return true;\n  }\n  else if (x === y){\n\
    \    return true;\n  }\n  else if (x === z){\n    return true;\n  }\n  else if\
    \ (y === ", "    var sum = 0;\n    for(var i = 0; i < x.length; i++){\n      \
    \  sum += x[i];\n    }\n    for(var i = 0; i < y.length; i++){\n        sum +=\
    \ y[i];\n    }\n    for(var i = 0; i < z.length; i++){\n        sum += z[i];\n\
    \    }\n    return sum === 0 || sum === x.length + y.length + z.length;\n}\n",
  "  if(typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n\
    \    return false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x\
    \ < y && y < z){\n    return true;\n  }\n  if(x < z && z < y){\n    return true;\n\
    \  }\n  return false;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number'\
    \ || typeof z !== 'number'){\n    throw new Error('All arguments must be numbers.');\n\
    \  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x === 0 || y ===\
    \ 0 || z === 0){\n    return false;\n  }\n  if(x === y){\n    return z === 0;\n\
    \  }\n  if(x === z){\n    return y === 0;\n  }\n  if(y === z){\n    return x ===\
    \ 0;\n  }\n  if(x === 0 && y === 0 && z === 0){\n    return true;\n  }\n  if(x\
    \ === 0 && y === 0 && z === 0){\n    return false;\n  }\n  if(x === 0 && y ===\
    \ 0 && z === 0){\n    return false;\n  }\n  if(x === 0 && y === 0 && z === 0){\n\
    \    return false;\n  }\n  if(x === 0 && y === 0 && z === 0){\n    return false;\n\
    \  }\n  if(x === 0 && y === 0 && z === 0){\n    return false;\n  }\n  if(x ===\
    \ 0 && y === 0 && z === 0){\n    return false;\n  }\n  if(x === 0 && y === 0 &&\
    \ z === 0){\n    return false;\n  }\n  if(x === 0 && y === 0 && z === 0){\n  \
    \  return false;\n  }\n  if(x === 0 && y === 0 && z === 0){\n    return false;\n\
    \  }\n  if(x === 0 && y === 0 && z === 0){\n    return false;\n  }\n  if(x ===\
    \ 0 && y === 0 && z === 0){\n    return false;\n  }\n  if(x === 0 && y === 0 &&\
    \ z === 0){\n    return false;\n  }\n  if(x === 0 && y === 0 && z === 0){\n  \
    \  return false;\n  }\n  if(x === 0 && y === 0 && z === 0){\n    return false;\n\
    \  }\n  if(x === 0 && y === 0 && z === 0){\n    return false;\n  }\n  if(x ===\
    \ 0 && y === 0 && z === 0){\n    return false;\n  }\n  if(x === 0 && y === 0 &&\
    \ z === 0){\n    return false;\n  }\n  if(x === 0 && y === 0 && z === 0){\n  \
    \  return false;\n  }\n  if(x === 0 && y === 0 && z === 0){\n    return false;\n\
    \  }\n  if(x === 0 && y === 0 && z === 0){\n    return false;\n  }\n  if(x ===\
    \ 0 && y === 0 && z === 0){\n    return false;\n  }\n  if(x === 0 && y === 0 &&\
    \ z === 0){\n    return false;\n  }\n  if(x === 0 && y === 0 && z === 0){\n  \
    \  return false;\n  }\n  ", "    if (x === undefined) return false;\n    if (y\
    \ === undefined) return false;\n    if (z === undefined) return false;\n    if\
    \ (x === null || y === null || z === null) return false;\n    if (x === 0 || y\
    \ === 0 || z === 0) return false;\n    if (x === Infinity || y === Infinity ||\
    \ z === Infinity) return false;\n    if (x === -Infinity || y === -Infinity ||\
    \ z === -Infinity) return false;\n    if (x === Number.POSITIVE_INFINITY || y\
    \ === Number.POSITIVE_INFINITY || z === Number.POSITIVE_INFINITY) return false;\n\
    \    if (x === Number.NEGATIVE_INFINITY || y === Number.NEGATIVE_INFINITY || z\
    \ === Number.NEGATIVE_INFINITY) return false;\n    if (x === Number.POSITIVE_INFINITY\
    \ || y === Number.NEGATIVE_INFINITY || z === Number.POSITIVE_INFINITY) return\
    \ false;\n    if (x === Number.NEGATIVE_INFINITY || y === Number.POSITIVE_INFINITY\
    \ || z === Number.NEGATIVE_INFINITY) return false;\n    if (x === Number.POSITIVE_INFINITY\
    \ || y === Number.POSITIVE_INFINITY || z === Number.NEGATIVE_INFINITY) return\
    \ false;\n    if (x === Number.NEGATIVE_INFINITY || y === Number.NEGATIVE_INFINITY\
    \ || z === Number.POSITIVE_INFINITY) return false;\n    if (x === Number.POSITIVE_INFINITY\
    \ || y === Number.POSITIVE_INFINITY || z === Number.NEGATIVE_INFINITY) return\
    \ false;\n    if (x === Number.NEGATIVE_INFINITY || y === Number.NEGATIVE_INFINITY\
    \ || z === Number.POSITIVE_INFINITY) return false;\n    if (x === Number.POSITIVE_INFINITY\
    \ || y === Number.POSITIVE_INFINITY || z === Number.NEGATIVE_INFINITY) return\
    \ false;\n    if (x === Number.NEGATIVE_INFINITY || y === Number.NEGATIVE_INFINITY\
    \ || z === Number.POSITIVE_INFINITY) return false;\n    if (x === Number.POSITIVE_INFINITY\
    \ || y === Number.POSITIVE_INFINITY || z === Number.NEGATIVE_INFINITY) return\
    \ false;\n    if (x === Number.NEGATIVE_INFINITY || y === Number.NEGATIVE_INFINITY\
    \ || z === Number.POSITIVE_INFINITY) return false;\n    if (x === Number.POSITIVE_INFINITY\
    \ || y === Number.POSITIVE_INFINITY || z === Number.NEGATIVE_INFINITY) return\
    \ false;\n    if (x === Number.NEGATIVE_INFINITY || y === Number.NEGATIVE_INF",
  "  if(typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n\
    \    return false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x\
    \ > y && x > z){\n    return true;\n  }\n  if(y > x && y > z){\n    return true;\n\
    \  }\n  if(z > x && z > y){\n    return true;\n  }\n  return false;\n}\n", "\t\
    let sum = 0;\n\tfor(let i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\t\
    for(let i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor(let i = 0; i\
    \ < z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn sum === (x+y+z);\n}\n", " \
    \ if(typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n\
    \    throw new Error('All arguments must be numbers.');\n  }\n  if(x === y ||\
    \ x === z){\n    return true;\n  }\n  if(x === 0 || y === 0 || z === 0){\n   \
    \ return false;\n  }\n  if(x < 0 || y < 0 || z < 0){\n    return false;\n  }\n\
    \  if(x > y || y > z || z > x){\n    return false;\n  }\n  if(x === y || x ===\
    \ z || y === z){\n    return true;\n  }\n  if(x === 0 || y === 0 || z === 0){\n\
    \    return false;\n  }\n  if(x < 0 || y < 0 || z < 0){\n    return false;\n \
    \ }\n  if(x > y || y > z || z > x){\n    return false;\n  }\n  if(x === y || x\
    \ === z || y === z){\n    return true;\n  }\n  if(x === 0 || y === 0 || z ===\
    \ 0){\n    return false;\n  }\n  if(x < 0 || y < 0 || z < 0){\n    return false;\n\
    \  }\n  if(x > y || y > z || z > x){\n    return false;\n  }\n  if(x === y ||\
    \ x === z || y === z){\n    return true;\n  }\n  if(x === 0 || y === 0 || z ===\
    \ 0){\n    return false;\n  }\n  if(x < 0 || y < 0 || z < 0){\n    return false;\n\
    \  }\n  if(x > y || y > z || z > x){\n    return false;\n  }\n  if(x === y ||\
    \ x === z || y === z){\n    return true;\n  }\n  if(x === 0 || y === 0 || z ===\
    \ 0){\n    return false;\n  }\n  if(x < 0 || y < 0 || z < 0){\n    return false;\n\
    \  }\n  if(x > y || y > z || z > x){\n    return false;\n  }\n  if(x === y ||\
    \ x === z || y === z){\n    return true;\n  }\n  if(x === 0 || y === 0 || z ===\
    \ 0){\n    return false;\n  }\n  if(x < 0 || y < 0 || z < 0){\n    return false;\n\
    \  }\n  if(x > y || y > z || z > x){\n    return false;\n  }\n  if(x === y ||\
    \ x === z || y === z){\n    return true;\n  }\n  if(x === 0 || y === 0 || z ===\
    \ 0){\n    return false;\n  }\n  if(x < 0 || y < 0 || z < 0){\n    return false;\n\
    \  }\n  if(x > y || y > z || z > x){\n    return false;\n  }\n  if(x === ", " \
    \   if (x === y || x === z){\n        return true;\n    }\n    if (x !== x &&\
    \ y !== y && z !== z){\n        return false;\n    }\n    if (x === 0 || y ===\
    \ 0 || z === 0){\n        return false;\n    }\n    if (x === y && x === z){\n\
    \        return true;\n    }\n    if (x === y || x === z){\n        return true;\n\
    \    }\n    if (y === z){\n        return true;\n    }\n    if (x === 0 || y ===\
    \ 0 || z === 0){\n        return false;\n    }\n    if (x === y && x === z){\n\
    \        return true;\n    }\n    if (x === y || x === z){\n        return true;\n\
    \    }\n    if (y === z){\n        return true;\n    }\n    if (x === 0 || y ===\
    \ 0 || z === 0){\n        return false;\n    }\n    if (x === y && x === z){\n\
    \        return true;\n    }\n    if (x === y || x === z){\n        return true;\n\
    \    }\n    if (y === z){\n        return true;\n    }\n    if (x === 0 || y ===\
    \ 0 || z === 0){\n        return false;\n    }\n    if (x === y && x === z){\n\
    \        return true;\n    }\n    if (x === y || x === z){\n        return true;\n\
    \    }\n    if (y === z){\n        return true;\n    }\n    if (x === 0 || y ===\
    \ 0 || z === 0){\n        return false;\n    }\n    if (x === y && x === z){\n\
    \        return true;\n    }\n    if (x === y || x === z){\n        return true;\n\
    \    }\n    if (y === z){\n        return true;\n    }\n    if (x === 0 || y ===\
    \ 0 || z === 0){\n        return false;\n    }\n    if (x === y && x === z){\n\
    \        return true;\n    }\n    if (x === y || x === z){\n        return true;\n\
    \    }\n    if (y === z){\n        return true;\n    }\n    if (x === 0 || y ===\
    \ 0 || z === 0){\n        return false;\n    }\n    if (x === y && x === z){\n\
    \        return true;\n    }\n    if (x === y || x === z){\n        return true;\n\
    \    }\n    if (y === z){\n        return true;\n    }\n    if (x === 0 || y ===\
    \ 0 || z === 0){\n        return false;\n    }\n    if (x === y && x === z){\n\
    \        return true;\n    }\n    if (x === y || x === z){\n        return true;\n\
    \    }\n    if (y === z){\n        return true;\n    }\n    if (x === 0 || y ===\
    \ 0 || z === 0){\n        return false;\n    }\n    if (x === y && x === z){\n\
    \        return true;\n    }\n    if (x === y || x === z){\n        return true;\n\
    \    }\n    if (y === z", "\tlet sum = 0;\n\tlet num1 = parseInt(x);\n\tlet num2\
    \ = parseInt(y);\n\tlet num3 = parseInt(z);\n\tlet num4 = parseInt(x + y);\n\t\
    let num5 = parseInt(x + z);\n\tlet num6 = parseInt(y + z);\n\tlet num7 = parseInt(x\
    \ + y + z);\n\tlet num8 = parseInt(x * y);\n\tlet num9 = parseInt(x * z);\n\t\
    let num10 = parseInt(y * z);\n\tlet num11 = parseInt(x * y + z);\n\tlet num12\
    \ = parseInt(x * z + y);\n\tlet num13 = parseInt(y * z + x);\n\tlet num14 = parseInt(x\
    \ * y + z + y);\n\tlet num15 = parseInt(x * z + y + x);\n\tlet num16 = parseInt(y\
    \ * z + x + y);\n\tlet num17 = parseInt(x * y + z + y + x);\n\tlet num18 = parseInt(x\
    \ * z + y + x + y);\n\tlet num19 = parseInt(y * z + x + y + x);\n\tlet num20 =\
    \ parseInt(x * y + z + y + x + y);\n\tlet num21 = parseInt(x * z + y + x + y +\
    \ x);\n\tlet num22 = parseInt(y * z + x + y + x + y);\n\tlet num23 = parseInt(x\
    \ * y + z + y + x + y + x);\n\tlet num24 = parseInt(x * z + y + x + y + x + y);\n\
    \tlet num25 = parseInt(y * z + x + y + x + y + x);\n\tlet num26 = parseInt(x *\
    \ y + z + y + x + y + x + y);\n\tlet num27 = parseInt(x * z + y + x + y + x +\
    \ y + x);\n\tlet num28 = parseInt(y * z + x + y + x + y + x + y);\n\tlet num29\
    \ = parseInt(x * y + z + y + x + y + x + y + x);\n\tlet num30 = parseInt(x * z\
    \ + y + x + y + x + y + x + y);\n\tlet num31 = parseInt(y * z + x + y + x + y\
    \ + x + y + x);\n\tlet num32 = parseInt(x * y + z + y + x + y + x + y + x + y);\n\
    \tlet num33 = parseInt(x * z + y + x + y + x + y + x + y + x);\n\tlet num34 =\
    \ parseInt(y * z + x + y + x + y + x + y + x + y);\n\tlet num35 = parseInt(x *\
    \ y + z + y + x + y + x + y + x + y + x);\n\tlet num36 = parseInt(x * z + y +\
    \ x + y + x + y + x + y + x + y);\n\tlet num37 = parseInt(y * z + x + y + x +\
    \ y + x + y + x + y + x);\n\tlet num38 = parseInt(x * y + z + y + x + y + x +\
    \ y + x + y + x + y);\n", "\tlet sum = 0;\n\tlet n = x;\n\tlet m = y;\n\tlet o\
    \ = z;\n\twhile (n > 0 || m > 0){\n\t\tsum += n;\n\t\tsum += m;\n\t\tn /= 10;\n\
    \t\tm /= 10;\n\t}\n\treturn sum == o;\n}\n", "    var sum = 0;\n    for(var i\
    \ = 0; i < x.length; i++){\n        sum += x[i];\n    }\n    for(var i = 0; i\
    \ < y.length; i++){\n        sum += y[i];\n    }\n    for(var i = 0; i < z.length;\
    \ i++){\n        sum += z[i];\n    }\n    return sum === (x[0] + y[0] + z[0]);\n\
    }\n", "\tlet sum = 0;\n\tfor(let i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\
    \t}\n\tfor(let i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor(let i\
    \ = 0; i < z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn (sum === (x[0] + y[0]\
    \ + z[0]));\n}\n", "\tlet sum = 0;\n\tfor (let i = 0; i < x.length; i++){\n\t\t\
    sum += x[i];\n\t}\n\tfor (let i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\t\
    }\n\tfor (let i = 0; i < z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn (sum\
    \ === 0 || sum === x.length + y.length + z.length);\n}\n", "  if(typeof x !==\
    \ 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return false;\n\
    \  }\n  if(x === y){\n    if(x === z){\n      return true;\n    }\n    return\
    \ false;\n  }\n  if(x === z){\n    return true;\n  }\n  if(y === z){\n    return\
    \ true;\n  }\n  if(x === 0 || y === 0 || z === 0){\n    return false;\n  }\n \
    \ return true;\n}\n", "\tif (typeof x !== 'number' || typeof y !== 'number' ||\
    \ typeof z !== 'number'){\n\t\treturn false;\n\t}\n\tif (x === y || x === z){\n\
    \t\treturn true;\n\t}\n\tif (x < y && y < z){\n\t\treturn true;\n\t}\n\tif (x\
    \ > y && y > z){\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "  if(typeof x\
    \ !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x > y &&\
    \ x > z){\n    return true;\n  }\n  if(y > z){\n    return true;\n  }\n  return\
    \ false;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number' || typeof\
    \ z !== 'number'){\n    return false;\n  }\n  if(x === y || x === z){\n    return\
    \ true;\n  }\n  if(x > y && x > z){\n    return true;\n  }\n  if(y > x && y >\
    \ z){\n    return true;\n  }\n  if(z > x && z > y){\n    return true;\n  }\n \
    \ return false;\n}\n", "    return ((x === y || x === z) && x % 1 === 0 && x %\
    \ 1 === 0 && x % 1 === 0);\n}\n", "    var sum = 0;\n    for(var i = 0; i < x.length;\
    \ i++){\n        sum += x[i];\n    }\n    for(var i = 0; i < y.length; i++){\n\
    \        sum += y[i];\n    }\n    for(var i = 0; i < z.length; i++){\n       \
    \ sum += z[i];\n    }\n    return sum === 0 || sum === x.length + y.length + z.length;\n\
    }\n", "  if(typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n\
    \    return false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x\
    \ < y && x < z){\n    return true;\n  }\n  if(y < x && y < z){\n    return true;\n\
    \  }\n  if(z < x && z < y){\n    return true;\n  }\n  return false;\n}\n", "\t\
    if((typeof x == 'number') && (typeof y == 'number') && (typeof z == 'number')){\n\
    \t\treturn ((x + y + z) == ((x + y) + z));\n\t}\n\treturn false;\n}\n", "  if(typeof\
    \ x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x > y &&\
    \ x > z){\n    return true;\n  }\n  if(y > x && y > z){\n    return true;\n  }\n\
    \  if(z > x && z > y){\n    return true;\n  }\n  return false;\n}\n", "    if\
    \ (x === y || x === z){\n        return true;\n    }\n    if (x === null || x\
    \ === undefined){\n        return false;\n    }\n    if (y === null || y === undefined){\n\
    \        return false;\n    }\n    if (z === null || z === undefined){\n     \
    \   return false;\n    }\n    if (x.constructor === Array && y.constructor ===\
    \ Array && z.constructor === Array){\n        var arr = [];\n        arr.push(x);\n\
    \        arr.push(y);\n        arr.push(z);\n        return any_int(arr[0], arr[1],\
    \ arr[2]);\n    }\n    if (x.constructor === Array && y.constructor === Array){\n\
    \        var arr = [];\n        arr.push(x);\n        arr.push(y);\n        return\
    \ any_int(arr[0], arr[1]);\n    }\n    if (x.constructor === Array && z.constructor\
    \ === Array){\n        var arr = [];\n        arr.push(x);\n        arr.push(z);\n\
    \        return any_int(arr[0], arr[1]);\n    }\n    if (x.constructor === Array){\n\
    \        var arr = [];\n        arr.push(x);\n        return any_int(arr[0], arr[1],\
    \ arr[2]);\n    }\n    if (y.constructor === Array){\n        var arr = [];\n\
    \        arr.push(y);\n        return any_int(arr[0], arr[1], arr[2]);\n    }\n\
    \    if (z.constructor === Array){\n        var arr = [];\n        arr.push(z);\n\
    \        return any_int(arr[0], arr[1], arr[2]);\n    }\n    if (x.constructor\
    \ === Number){\n        if (y === z){\n            return true;\n        }\n \
    \       if (y === null || y === undefined){\n            return false;\n     \
    \   }\n        if (z === null || z === undefined){\n            return false;\n\
    \        }\n        if (y.constructor === Number){\n            if (z === y){\n\
    \                return true;\n            }\n            if (z === null || z\
    \ === undefined){\n                return false;\n            }\n            return\
    \ any_int(x, y, z);\n        }\n        if (z.constructor === Number){\n     \
    \       if (y === z){\n                return true;\n            }\n         \
    \   if (y === null || y === undefined){\n                return false;\n     \
    \       }\n            return any_int(x, y, z);\n        }\n        return false;\n\
    \    }\n    if (y.constructor === Number){\n        if (z === y){\n          \
    \  return true;\n        }\n        if (z === null || z === undefined){\n    \
    \        return false;\n        }\n        if (x.constructor === Number){\n  \
    \          return any_int(x, y, z);\n        }\n        if (z.constructor ===\
    \ Number){\n            return any_int(x, y, z);\n        }\n        return false;\n\
    \    }\n    if (z.constructor === Number){\n        if (x === y){\n          \
    \  return true;\n        }\n        if (x === null || x === undefined){\n    \
    \        return false;\n        }\n        if (y.constructor === Number){\n  \
    \          return any_int(x, y, z);\n        }\n        if (z.constructor ===\
    \ Number", "  if(typeof x === 'number' && typeof y === 'number' && typeof z ===\
    \ 'number'){\n    return ((x + y + z) === (x + y) || x === y || x === z || y ===\
    \ z);\n  }\n  return false;\n}\n", "  if(typeof x !== 'number' || typeof y !==\
    \ 'number' || typeof z !== 'number'){\n    return false;\n  }\n  if(x === y ||\
    \ x === z){\n    return true;\n  }\n  if(x > y && x > z){\n    return true;\n\
    \  }\n  if(y > x && y > z){\n    return true;\n  }\n  if(z > x && z > y){\n  \
    \  return true;\n  }\n  return false;\n}\n", "\tif(x == y || x == z){\n\t\treturn\
    \ true;\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\n", "  if(typeof x !== 'number'\
    \ || typeof y !== 'number' || typeof z !== 'number'){\n    return false;\n  }\n\
    \  if(x === y || x === z){\n    return true;\n  }\n  if(x > y && x > z){\n   \
    \ return true;\n  }\n  if(y > x && y > z){\n    return true;\n  }\n  if(z > x\
    \ && z > y){\n    return true;\n  }\n  return false;\n}\n", "    return ((typeof\
    \ x == 'number') && (typeof y == 'number') && (typeof z == 'number')) ? x != 0\
    \ && (x + y + z == parseInt(x + y + z)) : false;\n}\n", "\tlet sum = 0;\n\tfor(let\
    \ i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\tfor(let i = 0; i < y.length;\
    \ i++){\n\t\tsum += y[i];\n\t}\n\tfor(let i = 0; i < z.length; i++){\n\t\tsum\
    \ += z[i];\n\t}\n\treturn sum == (x[0] + y[0] + z[0]);\n}\n", "\tx = parseInt(x);\n\
    \ty = parseInt(y);\n\tz = parseInt(z);\n\treturn ((x === y || x === z) && (x ===\
    \ 0 || x === -0)) && (x === y || x === z) && (x === 0 || x === -0);\n}\n", "\t\
    if((typeof x == 'number') && (typeof y == 'number') && (typeof z == 'number')){\n\
    \t\treturn ((x + y + z) == ((x + y) + z));\n\t}\n\treturn false;\n}\n", "    if\
    \ (x === y){\n        if (x === z){\n            return true;\n        }\n   \
    \     return false;\n    }\n    if (x === z){\n        return true;\n    }\n \
    \   return false;\n}\n", "\tlet sum = 0;\n\tfor (let i = 0; i < x.length; i++){\n\
    \t\tsum += x[i];\n\t}\n\tfor (let i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\
    \t}\n\tfor (let i = 0; i < z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn (sum\
    \ === (x[0] + y[0] + z[0]));\n}\n", "  if(typeof x !== 'number' || typeof y !==\
    \ 'number' || typeof z !== 'number'){\n    return false;\n  }\n  if(x === y ||\
    \ x === z){\n    return true;\n  }\n  if(x === 0 || y === 0 || z === 0){\n   \
    \ return false;\n  }\n  if(x === y && y === z){\n    return true;\n  }\n  if(x\
    \ === z){\n    return true;\n  }\n  if(y === z){\n    return true;\n  }\n  if(x\
    \ === 0 || y === 0 || z === 0){\n    return false;\n  }\n  if(x === y || x ===\
    \ z){\n    return true;\n  }\n  if(x === y && y === z){\n    return true;\n  }\n\
    \  if(x === z){\n    return true;\n  }\n  if(y === z){\n    return true;\n  }\n\
    \  if(x === 0 || y === 0 || z === 0){\n    return false;\n  }\n  if(x === y ||\
    \ x === z){\n    return true;\n  }\n  if(x === y && y === z){\n    return true;\n\
    \  }\n  if(x === z){\n    return true;\n  }\n  if(y === z){\n    return true;\n\
    \  }\n  if(x === 0 || y === 0 || z === 0){\n    return false;\n  }\n  if(x ===\
    \ y || x === z){\n    return true;\n  }\n  if(x === y && y === z){\n    return\
    \ true;\n  }\n  if(x === z){\n    return true;\n  }\n  if(y === z){\n    return\
    \ true;\n  }\n  if(x === 0 || y === 0 || z === 0){\n    return false;\n  }\n \
    \ if(x === y || x === z){\n    return true;\n  }\n  if(x === y && y === z){\n\
    \    return true;\n  }\n  if(x === z){\n    return true;\n  }\n  if(y === z){\n\
    \    return true;\n  }\n  if(x === 0 || y === 0 || z === 0){\n    return false;\n\
    \  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x === y && y ===\
    \ z){\n    return true;\n  }\n  if(x === z){\n    return true;\n  }\n  if(y ===\
    \ z){\n    return true;\n  }\n  if(x === 0 || y === 0 || z === 0){\n    return\
    \ false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x === y\
    \ && y === z){\n    return true;\n  }\n  if(x === z){\n    return true;\n  }\n\
    \  if(y === z){\n    return true;\n  }\n  if(x === 0 || y ", "\tlet sum = 0;\n\
    \tfor(let i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\tfor(let i = 0;\
    \ i < y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor(let i = 0; i < z.length; i++){\n\
    \t\tsum += z[i];\n\t}\n\treturn (sum === (x[0] + y[0] + z[0]));\n}\n", "  if(typeof\
    \ x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x < y &&\
    \ x < z){\n    return true;\n  }\n  if(y < x && y < z){\n    return true;\n  }\n\
    \  if(z < x && z < y){\n    return true;\n  }\n  return false;\n}\n", "  if(typeof\
    \ x === 'number' && typeof y === 'number' && typeof z === 'number'){\n    return\
    \ ((x + y + z) === (x + y) || x === y || x === z || y === z);\n  }\n  return false;\n\
    }\n", "  if(typeof x === 'number' && typeof y === 'number' && typeof z === 'number'){\n\
    \    return ((x + y + z) === (x + y) || x === y || x === z || y === z);\n  }\n\
    \  return false;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number' ||\
    \ typeof z !== 'number'){\n    return false;\n  }\n  if(x === y || x === z){\n\
    \    return true;\n  }\n  if(x > y && x > z){\n    return true;\n  }\n  if(y >\
    \ z){\n    return true;\n  }\n  return false;\n}\n", "\tlet sum = 0;\n\tfor(let\
    \ i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\tfor(let i = 0; i < y.length;\
    \ i++){\n\t\tsum += y[i];\n\t}\n\tfor(let i = 0; i < z.length; i++){\n\t\tsum\
    \ += z[i];\n\t}\n\treturn (sum == 0 || sum == x || sum == y || sum == z);\n}\n",
  "    var sum = 0;\n    for(var i=0; i<x.length; i++){\n        sum += x[i];\n  \
    \  }\n    for(var i=0; i<y.length; i++){\n        sum += y[i];\n    }\n    for(var\
    \ i=0; i<z.length; i++){\n        sum += z[i];\n    }\n    return sum === 0 ||\
    \ sum === x.length + y.length + z.length;\n}\n", "\tx = parseInt(x);\n\ty = parseInt(y);\n\
    \tz = parseInt(z);\n\treturn (x === y || x === z || y === z) ? true : false;\n\
    }\n", "\tif (typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n\
    \t\treturn false;\n\t}\n\tif (x === y || x === z){\n\t\treturn true;\n\t}\n\t\
    if (x > y && x > z){\n\t\treturn true;\n\t}\n\tif (y > z){\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n", "  if(typeof x === 'number' && typeof y === 'number'\
    \ && typeof z === 'number'){\n    return (x + y + z === 0);\n  }\n  return false;\n\
    }\n", "\tlet sum = 0;\n\tlet num1 = parseInt(x);\n\tlet num2 = parseInt(y);\n\t\
    let num3 = parseInt(z);\n\t\n\tfor(let i = 0; i < 3; i++){\n\t\tsum += num1[i];\n\
    \t}\n\t\n\tfor(let i = 0; i < 3; i++){\n\t\tsum += num2[i];\n\t}\n\t\n\tfor(let\
    \ i = 0; i < 3; i++){\n\t\tsum += num3[i];\n\t}\n\t\n\tif(sum === num1 + num2\
    \ + num3){\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n", "    if (x === y\
    \ || x === z){\n        return true;\n    }\n    if (x === 0 || y === 0 || z ===\
    \ 0){\n        return false;\n    }\n    if (x < y && x < z){\n        return\
    \ true;\n    }\n    if (y < x && y < z){\n        return true;\n    }\n    if\
    \ (z < x && z < y){\n        return true;\n    }\n    return false;\n}\n", "\t\
    if (typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n\
    \t\tthrow new TypeError('any_int() expects 3 numbers as arguments');\n\t}\n\t\
    if (x === y || x === z){\n\t\treturn true;\n\t}\n\tif (x > y && x > z){\n\t\t\
    return true;\n\t}\n\tif (y > z){\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
  "    var sum = 0;\n    for(var i = 0; i < x.length; i++){\n        sum += x[i];\n\
    \    }\n    for(var i = 0; i < y.length; i++){\n        sum += y[i];\n    }\n\
    \    for(var i = 0; i < z.length; i++){\n        sum += z[i];\n    }\n    return\
    \ sum == 0 || sum == x || sum == y || sum == z;\n}\n", "  if(typeof x !== 'number'\
    \ || typeof y !== 'number' || typeof z !== 'number'){\n    return false;\n  }\n\
    \  if(x === y || x === z){\n    return true;\n  }\n  if(x > y && x > z){\n   \
    \ return true;\n  }\n  if(y > x && y > z){\n    return true;\n  }\n  if(z > x\
    \ && z > y){\n    return true;\n  }\n  return false;\n}\n", "  if(typeof x ===\
    \ 'number' && typeof y === 'number' && typeof z === 'number'){\n    return ((x\
    \ + y + z) === (x + y) || x === y || x === z || y === z);\n  }\n  return false;\n\
    }\n", "\tif((typeof x == 'number') && (typeof y == 'number') && (typeof z == 'number')){\n\
    \t\tif(x === y){\n\t\t\tif(x === z){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse{\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\treturn false;\n\t\t}\n\
    \t}\n\telse{\n\t\treturn false;\n\t}\n}\n", "\tvar sum = 0;\n\tfor(var i=0; i<x.length;\
    \ i++){\n\t\tsum += x[i];\n\t}\n\tfor(var i=0; i<y.length; i++){\n\t\tsum += y[i];\n\
    \t}\n\tfor(var i=0; i<z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn (sum ==\
    \ 0 || sum == x.length || sum == y.length || sum == z.length);\n}\n", "    if(typeof\
    \ x === 'number' && typeof y === 'number' && typeof z === 'number'){\n       \
    \ return ((x + y + z) === (x + y) || x === y || x === z || y === z);\n    }\n\
    \    return false;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number'\
    \ || typeof z !== 'number'){\n    return false;\n  }\n  if(x === y || x === z){\n\
    \    return true;\n  }\n  if(x === 0 || y === 0 || z === 0){\n    return false;\n\
    \  }\n  if(x === Infinity || y === Infinity || z === Infinity){\n    return false;\n\
    \  }\n  if(x === -Infinity || y === -Infinity || z === -Infinity){\n    return\
    \ false;\n  }\n  if(x === Number.POSITIVE_INFINITY || y === Number.POSITIVE_INFINITY\
    \ || z === Number.POSITIVE_INFINITY){\n    return true;\n  }\n  if(x === Number.NEGATIVE_INFINITY\
    \ || y === Number.NEGATIVE_INFINITY || z === Number.NEGATIVE_INFINITY){\n    return\
    \ false;\n  }\n  if(x === Number.POSITIVE_INFINITY || y === Number.NEGATIVE_INFINITY\
    \ || z === Number.POSITIVE_INFINITY){\n    return false;\n  }\n  if(x === Number.NEGATIVE_INFINITY\
    \ || y === Number.POSITIVE_INFINITY || z === Number.NEGATIVE_INFINITY){\n    return\
    \ false;\n  }\n  if(x === Number.POSITIVE_INFINITY || y === Number.POSITIVE_INFINITY\
    \ || z === Number.NEGATIVE_INFINITY){\n    return true;\n  }\n  if(x === Number.NEGATIVE_INFINITY\
    \ || y === Number.NEGATIVE_INFINITY || z === Number.POSITIVE_INFINITY){\n    return\
    \ false;\n  }\n  if(x === Number.POSITIVE_INFINITY || y === Number.POSITIVE_INFINITY\
    \ || z === Number.NEGATIVE_INFINITY){\n    return true;\n  }\n  if(x === Number.NEGATIVE_INFINITY\
    \ || y === Number.NEGATIVE_INFINITY || z === Number.POSITIVE_INFINITY){\n    return\
    \ false;\n  }\n  if(x === Number.POSITIVE_INFINITY || y === Number.POSITIVE_INFINITY\
    \ || z === Number.NEGATIVE_INFINITY){\n    return true;\n  }\n  if(x === Number.NEGATIVE_INFINITY\
    \ || y === Number.NEGATIVE_INFINITY || z === Number.POSITIVE_INFINITY){\n    return\
    \ false;\n  }\n  if(x === Number.POSITIVE_INFINITY || y === Number.POSITIVE_INFINITY\
    \ || z === Number.NEGATIVE_INFINITY){\n    return true;\n  }\n  if(x === Number.",
  "\tlet sum = 0;\n\tfor (let i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\t\
    for (let i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor (let i = 0;\
    \ i < z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn (sum === (x[0] + y[0] +\
    \ z[0]));\n}\n", "  if(typeof x === 'number' && typeof y === 'number' && typeof\
    \ z === 'number'){\n    return ((x + y + z) === ((x + y) + (z)));\n  }\n  return\
    \ false;\n}\n", "\tlet sum = 0;\n\tfor(let i = 0; i < x.length; i++){\n\t\tsum\
    \ += x[i];\n\t}\n\tfor(let i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\t}\n\
    \tfor(let i = 0; i < z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn sum == (x[0]\
    \ + y[0] + z[0]);\n}\n", "  if (x === y || x === z){\n    return true;\n  }\n\
    \  else if (x === 0 || y === 0 || z === 0){\n    return false;\n  }\n  else if\
    \ (x < y && x < z){\n    return true;\n  }\n  else if (y < x && y < z){\n    return\
    \ true;\n  }\n  else if (z < x && z < y){\n    return true;\n  }\n  else if (x\
    \ > y && x > z){\n    return true;\n  }\n  else if (y > x && y > z){\n    return\
    \ true;\n  }\n  else if (z > x && z > y){\n    return true;\n  }\n  else {\n \
    \   return false;\n  }\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number'\
    \ || typeof z !== 'number'){\n    return false;\n  }\n  if(x === y){\n    if(x\
    \ === z){\n      return true;\n    }\n    return false;\n  }\n  if(x === z){\n\
    \    return true;\n  }\n  if(y === z){\n    return true;\n  }\n  if(x < y && y\
    \ < z){\n    return true;\n  }\n  if(y < x && x < z){\n    return true;\n  }\n\
    \  if(y < z && z < x){\n    return true;\n  }\n  if(z < x && x < y){\n    return\
    \ true;\n  }\n  return false;\n}\n", "\tlet sum = 0;\n\tfor (let i = 0; i < 3;\
    \ i++){\n\t\tsum += x[i];\n\t}\n\tfor (let i = 0; i < 3; i++){\n\t\tsum += y[i];\n\
    \t}\n\tfor (let i = 0; i < 3; i++){\n\t\tsum += z[i];\n\t}\n\treturn (sum ===\
    \ (x[0] + y[0] + z[0]));\n}\n", "\tlet sum = 0;\n\tlet flag = false;\n\tfor(let\
    \ i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\tfor(let i = 0; i < y.length;\
    \ i++){\n\t\tsum += y[i];\n\t}\n\tfor(let i = 0; i < z.length; i++){\n\t\tsum\
    \ += z[i];\n\t}\n\tif(sum == x){\n\t\tflag = true;\n\t}\n\telse if(sum == y){\n\
    \t\tflag = true;\n\t}\n\telse if(sum == z){\n\t\tflag = true;\n\t}\n\telse{\n\t\
    \tflag = false;\n\t}\n\treturn flag;\n}\n", "  if(typeof x !== 'number' || typeof\
    \ y !== 'number' || typeof z !== 'number'){\n    return false;\n  }\n  if(x ===\
    \ y || x === z){\n    return true;\n  }\n  if(x > y && x > z){\n    return true;\n\
    \  }\n  if(y > x && y > z){\n    return true;\n  }\n  if(z > x && z > y){\n  \
    \  return true;\n  }\n  return false;\n}\n", "\tlet sum = 0;\n\tlet i;\n\tlet\
    \ j;\n\tlet k;\n\t\n\tfor(i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\t\
    \n\tfor(j = 0; j < y.length; j++){\n\t\tsum += y[j];\n\t}\n\t\n\tfor(k = 0; k\
    \ < z.length; k++){\n\t\tsum += z[k];\n\t}\n\t\n\tif(sum === 0){\n\t\treturn false;\n\
    \t}\n\t\n\tfor(i = 0; i < x.length; i++){\n\t\tif(typeof x[i] !== 'number' ||\
    \ typeof y[i] !== 'number' || typeof z[i] !== 'number'){\n\t\t\treturn false;\n\
    \t\t}\n\t\t\n\t\tif(typeof x[i] !== 'number' || typeof y[i] !== 'number' || typeof\
    \ z[i] !== 'number'){\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(typeof x[i] !==\
    \ 'number' || typeof y[i] !== 'number' || typeof z[i] !== 'number'){\n\t\t\treturn\
    \ false;\n\t\t}\n\t\t\n\t\tif(typeof x[i] !== 'number' || typeof y[i] !== 'number'\
    \ || typeof z[i] !== 'number'){\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(typeof\
    \ x[i] !== 'number' || typeof y[i] !== 'number' || typeof z[i] !== 'number'){\n\
    \t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(typeof x[i] !== 'number' || typeof y[i]\
    \ !== 'number' || typeof z[i] !== 'number'){\n\t\t\treturn false;\n\t\t}\n\t\t\
    \n\t\tif(typeof x[i] !== 'number' || typeof y[i] !== 'number' || typeof z[i] !==\
    \ 'number'){\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(typeof x[i] !== 'number'\
    \ || typeof y[i] !== 'number' || typeof z[i] !== 'number'){\n\t\t\treturn false;\n\
    \t\t}\n\t\t\n\t\tif(typeof x[i] !== 'number' || typeof y[i] !== 'number' || typeof\
    \ z[i] !== 'number'){\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(typeof x[i] !==\
    \ 'number' || typeof y[i] !== 'number' || typeof z[i] !== 'number'){\n\t\t\treturn\
    \ false;\n\t\t}\n\t\t\n\t\tif(typeof x[i] !== 'number' || typeof y[i] !== 'number'\
    \ || typeof z[i] !== 'number'){\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(typeof\
    \ x[i] !== 'number' || typeof y[i] !== 'number' || typeof z[i] !== 'number'){\n\
    \t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(typeof x[i] !== 'number' || typeof y[i]\
    \ !== 'number' || typeof z[i] !== 'number'){\n\t\t\treturn false;\n\t\t}\n\t\t\
    \n\t\tif(typeof x[i] !== 'number' || typeof y[i] !== 'number' || typeof z[i] !==\
    \ 'number'){\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(typeof x[i] !== 'number'\
    \ || typeof y[i] !== 'number' || typeof z[i] !== 'number'){\n\t\t\treturn false;\n\
    \t\t}\n\t\t\n\t\tif(typeof x[i] !== 'number' || typeof y[i] !== '", "  if(typeof\
    \ x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x > y &&\
    \ x > z){\n    return true;\n  }\n  if(y > z){\n    return true;\n  }\n  return\
    \ false;\n}\n", "    var sum = 0;\n    for(var i = 0; i < x.length; i++){\n  \
    \      sum += x[i];\n    }\n    for(var i = 0; i < y.length; i++){\n        sum\
    \ += y[i];\n    }\n    for(var i = 0; i < z.length; i++){\n        sum += z[i];\n\
    \    }\n    return sum === 0 || sum === x.length + y.length + z.length;\n}\n",
  "    var sum = 0;\n    for(var i=0; i<x.length; i++){\n        sum += x[i];\n  \
    \  }\n    for(var i=0; i<y.length; i++){\n        sum += y[i];\n    }\n    for(var\
    \ i=0; i<z.length; i++){\n        sum += z[i];\n    }\n    return (sum == 0);\n\
    }\n", "\tlet sum = 0;\n\tlet num1 = Number(x);\n\tlet num2 = Number(y);\n\tlet\
    \ num3 = Number(z);\n\t\n\tlet nums = [num1, num2, num3];\n\t\n\tfor(let i = 0;\
    \ i < nums.length; i++){\n\t\tsum += nums[i];\n\t}\n\t\n\tif(sum === num1 + num2\
    \ + num3){\n\t\treturn true;\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\n", "  if(typeof\
    \ x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x < y &&\
    \ y < z){\n    return true;\n  }\n  if(y < x && x < z){\n    return true;\n  }\n\
    \  return false;\n}\n", "    if (x === y || x === z){\n        return true;\n\
    \    }\n    if (x === null || x === undefined){\n        return false;\n    }\n\
    \    if (y === null || y === undefined){\n        return false;\n    }\n    if\
    \ (z === null || z === undefined){\n        return false;\n    }\n    if (x.constructor\
    \ === Array || x.constructor === Float32Array || x.constructor === Float64Array){\n\
    \        if (x.length !== y.length || x.length !== z.length){\n            return\
    \ false;\n        }\n        for (var i=0; i<x.length; i++){\n            if (x[i]\
    \ !== y[i] || x[i] !== z[i]){\n                return false;\n            }\n\
    \        }\n        return true;\n    }\n    if (x.constructor === Object){\n\
    \        if (Object.keys(x).length !== Object.keys(y).length || Object.keys(x).length\
    \ !== Object.keys(z).length){\n            return false;\n        }\n        for\
    \ (var key in x){\n            if (x[key] !== y[key] || x[key] !== z[key]){\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    return false;\n}\n", "\tif((typeof x == 'number') && (typeof y ==\
    \ 'number') && (typeof z == 'number')){\n\t\treturn ((x + y + z) == ((x | y |\
    \ z)));\n\t}\n\treturn false;\n}\n", "  var sum = 0;\n  for(var i = 0; i<arguments.length;\
    \ i++){\n    sum += arguments[i];\n  }\n  if(sum === x || sum === y || sum ===\
    \ z){\n    return true;\n  }\n  return false;\n}\n", "    var sum = 0;\n    for(var\
    \ i = 0; i <= x; i++){\n        sum += i;\n    }\n    for(var i = 0; i <= y; i++){\n\
    \        sum += i;\n    }\n    for(var i = 0; i <= z; i++){\n        sum += i;\n\
    \    }\n    return sum == x || sum == y || sum == z;\n}\n", "\tlet sum = 0;\n\t\
    for(let i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\tfor(let i = 0; i\
    \ < y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor(let i = 0; i < z.length; i++){\n\
    \t\tsum += z[i];\n\t}\n\treturn (sum === 0 || sum === x.length || sum === y.length\
    \ || sum === z.length);\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number'\
    \ || typeof z !== 'number'){\n    return false;\n  }\n  if(x === y || x === z){\n\
    \    return true;\n  }\n  if(x > y && x > z){\n    return true;\n  }\n  if(y >\
    \ z){\n    return true;\n  }\n  return false;\n}\n", "    if (x === y || x ===\
    \ z){\n        return true;\n    }\n    if (x === null || x === undefined){\n\
    \        return false;\n    }\n    if (y === null || y === undefined){\n     \
    \   return false;\n    }\n    if (z === null || z === undefined){\n        return\
    \ false;\n    }\n    if (x.constructor !== Number){\n        return false;\n \
    \   }\n    if (y.constructor !== Number){\n        return false;\n    }\n    if\
    \ (z.constructor !== Number){\n        return false;\n    }\n    if (x < y &&\
    \ y < z && z < x){\n        return true;\n    }\n    return false;\n}\n", "  if(typeof\
    \ x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x > y &&\
    \ x > z){\n    return true;\n  }\n  if(y > x && y > z){\n    return true;\n  }\n\
    \  if(z > x && z > y){\n    return true;\n  }\n  return false;\n}\n", "\tif((typeof\
    \ x == 'number') && (typeof y == 'number') && (typeof z == 'number')){\n\t\treturn\
    \ ((x + y + z) == ((x + y) + z));\n\t}\n\treturn false;\n}\n", "\tlet sum = 0;\n\
    \tfor(let i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\tfor(let i = 0;\
    \ i < y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor(let i = 0; i < z.length; i++){\n\
    \t\tsum += z[i];\n\t}\n\treturn sum == (x[0] + y[0] + z[0]);\n}\n", "  if(typeof\
    \ x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y){\n    if(x === z){\n      return true;\n    }\n \
    \   return false;\n  }\n  if(x === z){\n    return true;\n  }\n  return false;\n\
    }\n", "    return ((x === y || x === z) && (x % 1 === 0 || x % 1 === 1)) && x\
    \ % 1 === 0;\n}\n", "\tif((typeof x == 'number') && (typeof y == 'number') &&\
    \ (typeof z == 'number')){\n\t\treturn ((x + y + z) == ((x * y) + z));\n\t}\n\t\
    return false;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number' || typeof\
    \ z !== 'number'){\n    return false;\n  }\n  if(x === y || x === z){\n    return\
    \ true;\n  }\n  if(x > y && x > z){\n    return true;\n  }\n  if(y > x && y >\
    \ z){\n    return true;\n  }\n  if(z > x && z > y){\n    return true;\n  }\n \
    \ return false;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number' ||\
    \ typeof z !== 'number'){\n    return false;\n  }\n  if(x === y){\n    return\
    \ x === z;\n  }\n  if(x === z){\n    return x === y;\n  }\n  if(y === z){\n  \
    \  return x === y;\n  }\n  if(x === 0 || y === 0 || z === 0){\n    return false;\n\
    \  }\n  if(x === y || x === z || y === z){\n    return true;\n  }\n  if(x > y\
    \ && x > z){\n    return true;\n  }\n  if(y > z && y > x){\n    return true;\n\
    \  }\n  if(z > x && z > y){\n    return true;\n  }\n  return false;\n}\n", " \
    \ if(typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n\
    \    return false;\n  }\n  if(x === y || x === z){\n    return true;\n  }\n  if(x\
    \ > y && x > z){\n    return true;\n  }\n  if(y > z){\n    return true;\n  }\n\
    \  return false;\n}\n", "\tfor(var i = 0; i<arguments.length; i++){\n\t\tif(typeof\
    \ arguments[i] !== 'number'){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn (x +\
    \ y + z === ((x + y) + z));\n}\n", "\tvar sum = 0;\n\tfor(var i=0; i<x.length;\
    \ i++){\n\t\tsum += x[i];\n\t}\n\tfor(var i=0; i<y.length; i++){\n\t\tsum += y[i];\n\
    \t}\n\tfor(var i=0; i<z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn sum ==\
    \ 0 || sum == x || sum == y || sum == z;\n}\n", "  if(typeof x === 'number' &&\
    \ typeof y === 'number' && typeof z === 'number'){\n    return ((x + y + z) ===\
    \ (x + y) || x === y || x === z || y === z);\n  }\n  return false;\n}\n", "\t\
    if((typeof x == 'number') && (typeof y == 'number') && (typeof z == 'number')){\n\
    \t\treturn ((x + y + z) == ((x | y | z)));\n\t}\n\treturn false;\n}\n", "  var\
    \ sum = 0;\n  for(var i = 0; i<arguments.length; i++){\n    sum += arguments[i];\n\
    \  }\n  return ((sum === x) || (sum === y)) && isInt(sum);\n}\n", "  if(typeof\
    \ x !== 'number' || typeof y !== 'number' || typeof z !== 'number'){\n    return\
    \ false;\n  }\n  if(x === y){\n    return true;\n  }\n  if(x === z){\n    return\
    \ true;\n  }\n  if(y === z){\n    return true;\n  }\n  if(x > y && x > z){\n \
    \   return true;\n  }\n  if(y > x && y > z){\n    return true;\n  }\n  if(z >\
    \ x && z > y){\n    return true;\n  }\n  return false;\n}\n", "\tif(x == y ||\
    \ x == z){\n\t\treturn true;\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\n", "\t\
    let sum = 0;\n\tfor(let i = 0; i < x.length; i++){\n\t\tsum += x[i];\n\t}\n\t\
    for(let i = 0; i < y.length; i++){\n\t\tsum += y[i];\n\t}\n\tfor(let i = 0; i\
    \ < z.length; i++){\n\t\tsum += z[i];\n\t}\n\treturn sum === (x[0] + y[0] + z[0]);\n\
    }\n", "    var sum = 0;\n    for(var i = 0; i < x.length; i++){\n        sum +=\
    \ x[i];\n    }\n    for(var i = 0; i < y.length; i++){\n        sum += y[i];\n\
    \    }\n    for(var i = 0; i < z.length; i++){\n        sum += z[i];\n    }\n\
    \    return sum == 0 || sum == x || sum == y || sum == z;\n}\n", "\tlet sum =\
    \ 0;\n\tlet num1 = parseInt(x);\n\tlet num2 = parseInt(y);\n\tlet num3 = parseInt(z);\n\
    \tlet num4 = parseInt(x + y);\n\tlet num5 = parseInt(x + z);\n\tlet num6 = parseInt(y\
    \ + z);\n\tlet num7 = parseInt(x + y + z);\n\tlet num8 = parseInt(x - y);\n\t\
    let num9 = parseInt(x - z);\n\tlet num10 = parseInt(y - z);\n\tlet num11 = parseInt(x\
    \ - y + z);\n\tlet num12 = parseInt(x - y - z);\n\tlet num13 = parseInt(x - y\
    \ - z);\n\tlet num14 = parseInt(x - y + z);\n\tlet num15 = parseInt(x - y - z);\n\
    \tlet num16 = parseInt(x - y + z);\n\tlet num17 = parseInt(x - y - z);\n\tlet\
    \ num18 = parseInt(x - y + z);\n\tlet num19 = parseInt(x - y - z);\n\tlet num20\
    \ = parseInt(x - y + z);\n\tlet num21 = parseInt(x - y - z);\n\tlet num22 = parseInt(x\
    \ - y + z);\n\tlet num23 = parseInt(x - y - z);\n\tlet num24 = parseInt(x - y\
    \ + z);\n\tlet num25 = parseInt(x - y - z);\n\tlet num26 = parseInt(x - y + z);\n\
    \tlet num27 = parseInt(x - y - z);\n\tlet num28 = parseInt(x - y + z);\n\tlet\
    \ num29 = parseInt(x - y - z);\n\tlet num30 = parseInt(x - y + z);\n\tlet num31\
    \ = parseInt(x - y - z);\n\tlet num32 = parseInt(x - y + z);\n\tlet num33 = parseInt(x\
    \ - y - z);\n\tlet num34 = parseInt(x - y + z);\n\tlet num35 = parseInt(x - y\
    \ - z);\n\tlet num36 = parseInt(x - y + z);\n\tlet num37 = parseInt(x - y - z);\n\
    \tlet num38 = parseInt(x - y + z);\n\tlet num39 = parseInt(x - y - z);\n\tlet\
    \ num40 = parseInt(x - y + z);\n\tlet num41 = parseInt(x - y - z);\n\tlet num42\
    \ = parseInt(x - y + z);\n\tlet num43 = parseInt(x - y - z);\n\tlet num44 = parseInt(x\
    \ - y + z);\n\tlet num45 = parseInt(x - y - z);\n\tlet num46 = parseInt(x - y\
    \ + z);\n\tlet num47 = parseInt(x - y - z);\n\tlet num48 = parseInt(x - y + z);\n\
    \tlet num49 = parseInt(x - ", "\tlet sum = 0;\n\tlet num1 = parseInt(x);\n\tlet\
    \ num2 = parseInt(y);\n\tlet num3 = parseInt(z);\n\t\n\twhile(num1 > 0){\n\t\t\
    sum += num1;\n\t\tnum1--;\n\t}\n\twhile(num2 > 0){\n\t\tsum += num2;\n\t\tnum2--;\n\
    \t}\n\twhile(num3 > 0){\n\t\tsum += num3;\n\t\tnum3--;\n\t}\n\t\n\treturn (sum\
    \ == num1 + num2 + num3);\n}\n", "  if(typeof x === 'number' && typeof y === 'number'\
    \ && typeof z === 'number'){\n    return ((x + y + z) === (x + y));\n  }\n  return\
    \ false;\n}\n", "  if(typeof x !== 'number' || typeof y !== 'number' || typeof\
    \ z !== 'number'){\n    return false;\n  }\n  if(x === y || x === z){\n    return\
    \ true;\n  }\n  if(x > y && x > z){\n    return true;\n  }\n  if(y > x && y >\
    \ z){\n    return true;\n  }\n  if(z > x && z > y){\n    return true;\n  }\n \
    \ return false;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

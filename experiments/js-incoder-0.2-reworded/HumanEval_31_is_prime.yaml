name: HumanEval_31_is_prime
language: js
prompt: "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n\
  // false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n// true\n// >>> is_prime(13441)\n\
  // true\n// >>> is_prime(61)\n// true\n// >>> is_prime(4)\n// false\n// >>> is_prime(1)\n\
  // false\nfunction is_prime(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = is_prime;\n  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
  \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
  \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
  \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
  \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
  \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
  \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
completions: ["\tvar prime=true;\n\tvar i=2;\n\twhile(i<n){\n\t\tif(prime){\n\t\t\t\
    if(n%i==0){\n\t\t\t\tprime=false;\n\t\t\t}\n\t\t}else{\n\t\t\tif(n%i==0){\n\t\t\
    \t\tprime=true;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn prime;\n}\n", "    if\
    \ (n < 2){\n        return false;\n    }\n    if (n === 2){\n        return true;\n\
    \    }\n    if (n % 2 == 0){\n        return false;\n    }\n    var sqrt_n = Math.sqrt(n);\n\
    \    for (var i = 3; i <= sqrt_n; i += 2){\n        if (n % i == 0){\n       \
    \     return false;\n        }\n    }\n    return true;\n}\n", "    var i = 2\n\
    \    while(i*i <= n){\n        if(n % i == 0){\n            return false\n   \
    \     }\n        i++\n    }\n    return true\n}\n", "  if(n<=1){\n    return false;\n\
    \  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n    if(n % i === 0){\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "    var i = 2;\n    while(i * i <=\
    \ n){\n        if(n % i == 0){\n            return false;\n        }\n       \
    \ i++;\n    }\n    return true;\n}\n", "  if(n<=1){\n    return false;\n  }\n\
    \  for(var i=2;i<=Math.sqrt(n);i++){\n    if(n % i === 0){\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if(n<=1){\n    return false;\n  }\n  for(var\
    \ i=2;i<=Math.sqrt(n);i++){\n    if(n%i===0){\n      return false;\n    }\n  }\n\
    \  return true;\n}\n", "    if (n < 2){\n        return false;\n    }\n    if\
    \ (n === 2){\n        return true;\n    }\n    if (n % 2 === 0){\n        return\
    \ false;\n    }\n    var sqrt_n = Math.sqrt(n);\n    for (var i = 3; i <= sqrt_n;\
    \ i += 2){\n        if (n % i === 0){\n            return false;\n        }\n\
    \    }\n    return true;\n}\n", "    var sqrtn = Math.sqrt(n);\n    for (var i\
    \ = 2; i <= sqrtn; i++){\n        if (n % i == 0){\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    var i = 2;\n    while(i <= Math.sqrt(n))\
    \ {\n        if(n % i == 0){\n            return false;\n        }\n        i++;\n\
    \    }\n    return true;\n}\n", "    if(n<=1){\n        return false;\n    }\n\
    \    for(var i=2;i<=Math.sqrt(n);i++){\n        if(n%i===0){\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    var sqrtn = Math.sqrt(n);\n\
    \    for (var i = 2; i <= sqrtn; i++){\n        if (n % i == 0){\n           \
    \ return false;\n        }\n    }\n    return true;\n}\n", "    var i = 2;\n \
    \   while(i * i <= n){\n        if(n % i == 0){\n            return false;\n \
    \       }\n        i += 1;\n    }\n    return true;\n}\n", "    if (n < 2) return\
    \ false;\n    if (n < 4) return true;\n    if (n % 2 == 0) return false;\n   \
    \ if (n % 3 == 0) return true;\n    if (n % 5 == 0) return false;\n    for (var\
    \ i = 6; i * i <= n; i += 6){\n        if (n % i == 0) return false;\n    }\n\
    \    return true;\n}\n", "    var i = 2\n    while(i*i <= n){\n        if(n %\
    \ i == 0){\n            return false\n        }\n        i++\n    }\n    return\
    \ true\n}\n", "    var sqrtn = Math.sqrt(n);\n    for (var i = 2; i <= sqrtn;\
    \ i++){\n        if (n % i == 0){\n            return false;\n        }\n    }\n\
    \    return true;\n}\n", "    var i = 2\n    while(i*i <= n){\n        if(n %\
    \ i == 0){\n            return false\n        }\n        i++\n    }\n    return\
    \ true\n}\n", "\tvar sqrtn = Math.sqrt(n);\n\tfor(var i = 2; i <= sqrtn; i++){\n\
    \t\tif(n % i == 0){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", " \
    \   if(n == 1){\n        return false;\n    }\n    for(var i = 2; i < n; i++){\n\
    \        if(n % i == 0){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    var i = 2;\n    while(i <= Math.sqrt(n)){\n        if(n %\
    \ i == 0){\n            return false;\n        }\n        i++;\n    }\n    return\
    \ true;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_143_words_in_sentence
language: js
prompt: "//You are given a string representing a sentence,\n// the sentence contains\
  \ some words separated by a space,\n// and you have to return a string that contains\
  \ the words from the original sentence,\n// whose lengths are prime numbers,\n//\
  \ the order of the words in the new string should be the same as the original one.\n\
  // Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example\
  \ 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n\
  // * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence(sentence){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = words_in_sentence;\n  assert.deepEqual(candidate(\"This is a test\"),\"is\"\
  );\n  assert.deepEqual(candidate(\"lets go for swimming\"),\"go for\");\n  assert.deepEqual(candidate(\"\
  there is no place available here\"),\"there is no place\");\n  assert.deepEqual(candidate(\"\
  Hi I am Hussein\"),\"Hi am Hussein\");\n  assert.deepEqual(candidate(\"go for it\"\
  ),\"go for it\");\n  assert.deepEqual(candidate(\"here\"),\"\");\n  assert.deepEqual(candidate(\"\
  here is\"),\"is\");\n}\n\ntest();"
completions: ["    let result = [];\n    let primes = [];\n    let primesLength =\
    \ 0;\n    for(let i = 0; i < sentence.length; i++){\n        if(primes.includes(sentence[i])){\n\
    \            primesLength++;\n        }else{\n            primes.push(sentence[i]);\n\
    \            primesLength++;\n        }\n    }\n    for(let i = 0; i < primesLength;\
    \ i++){\n        let primesString = \"\";\n        for(let j = 0; j < primes.length;\
    \ j++){\n            primesString += primes[j];\n        }\n        result.push(primesString);\n\
    \    }\n    return result.join(\" \");\n}\n", "    let words = sentence.split(\"\
    \ \");\n    let result = [];\n    for(let word of words){\n        if(isPrime(word.length)){\n\
    \            result.push(word);\n        }\n    }\n    return result.join(\" \"\
    );\n}\n", "    let words = sentence.split(\" \");\n    let result = [];\n    for(let\
    \ i = 0; i < words.length; i++){\n        let word = words[i];\n        let prime\
    \ = true;\n        for(let j = i; j < words.length; j++){\n            if(words[j].length\
    \ != word.length){\n                prime = false;\n                break;\n \
    \           }\n        }\n        if(prime){\n            result.push(word);\n\
    \        }\n    }\n    return result.join(\" \");\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let str = arr[i];\n        let prime = true;\n        for(let j = 1; j < str.length;\
    \ j++){\n            if(str[j] % str[j-1] != 0){\n                prime = false;\n\
    \                break;\n            }\n        }\n        if(prime){\n      \
    \      result.push(str);\n        }\n    }\n    return result.join(\" \");\n}\n",
  "    let arr = sentence.split(\" \");\n    let result = [];\n    for(let i = 0;\
    \ i < arr.length; i++){\n        let str = arr[i];\n        let count = 0;\n \
    \       for(let j = 0; j < str.length; j++){\n            if(str.charAt(j) ===\
    \ str.charAt(j)){\n                count++;\n            }\n        }\n      \
    \  if(count === str.length){\n            result.push(str);\n        }\n    }\n\
    \    return result.join(\" \");\n}\n", "    let arr = sentence.split(\" \");\n\
    \    let newArr = arr.filter(function(val){\n        return val.length % 2 ===\
    \ 0;\n    });\n    return newArr.join(\" \");\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let str = arr[i];\n        let count = 0;\n        for(let j = 0; j < str.length;\
    \ j++){\n            if(str[j] === \"a\"){\n                count++;\n       \
    \     }\n        }\n        if(count % 2 === 0){\n            result.push(str);\n\
    \        }\n    }\n    return result.join(\" \");\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let count = 0;\n        for(let j = 0; j < arr.length; j++){\n           \
    \ if(arr[j] === arr[i]){\n                count++;\n            }\n        }\n\
    \        if(count === 1){\n            newArr.push(arr[i]);\n        }\n    }\n\
    \    return newArr.join(\" \");\n}\n", "    let arr = sentence.split(\" \");\n\
    \    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        let count\
    \ = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] ===\
    \ arr[i]){\n                count++;\n            }\n        }\n        if(count\
    \ === 1){\n            result.push(arr[i]);\n        }\n    }\n    return result.join(\"\
    \ \");\n}\n", "    let arr = sentence.split(\" \");\n    let newArr = arr.filter(function(item){\n\
    \        return item.length%2 === 0;\n    });\n    return newArr.join(\" \");\n\
    }\n", "    let arr = sentence.split(\" \");\n    let newArr = arr.filter(function(item){\n\
    \        return item.length == prime(item.length);\n    });\n    return newArr.join(\"\
    \ \");\n}\n", "    let arr = sentence.split(\" \");\n    let res = [];\n    for(let\
    \ i=0;i<arr.length;i++){\n        let str = arr[i];\n        let len = str.length;\n\
    \        for(let j=2;j<=Math.sqrt(len);j++){\n            if(len%j===0){\n   \
    \             res.push(str);\n                break;\n            }\n        }\n\
    \    }\n    return res.join(\" \");\n}\n", "    let arr = sentence.split(\" \"\
    );\n    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n        let\
    \ str = arr[i];\n        let count = 0;\n        for(let j = 0; j < str.length;\
    \ j++){\n            for(let k = 0; k < newArr.length; k++){\n               \
    \ if(newArr[k] === str[j]){\n                    count++;\n                }\n\
    \            }\n        }\n        if(count === str.length){\n            newArr.push(str);\n\
    \        }\n    }\n    return newArr.join(\" \");\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let count = 0;\n        for(let j = 0; j < arr.length; j++){\n           \
    \ if(arr[j] === arr[i]){\n                count++;\n            }\n        }\n\
    \        if(count === 1){\n            newArr.push(arr[i]);\n        }\n    }\n\
    \    return newArr.join(\" \");\n}\n", "    // Write your code here\n    let arr\
    \ = sentence.split(\" \");\n    let newArr = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        let count = 0;\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[j] === arr[i]){\n                count++;\n            }\n\
    \        }\n        if(count === 2){\n            newArr.push(arr[i]);\n     \
    \   }\n    }\n    return newArr.join(\" \");\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let newArr = arr.filter(function(val){\n        return val.length\
    \ % 2 === 0;\n    });\n    return newArr.join(\" \");\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let count = 0;\n        for(let j = 0; j < arr.length; j++){\n           \
    \ if(arr[j] === arr[i]){\n                count++;\n            }\n        }\n\
    \        if(count === 1){\n            newArr.push(arr[i]);\n        }\n    }\n\
    \    return newArr.join(\" \");\n}\n", "    let arr = sentence.split(\" \");\n\
    \    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n        let count\
    \ = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] ===\
    \ arr[i]){\n                count++;\n            }\n        }\n        if(count\
    \ === 1){\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    let arr = sentence.split(\" \");\n    let newArr = [];\n  \
    \  for(let i = 0; i < arr.length; i++){\n        let count = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[i] === arr[j]){\n         \
    \       count++;\n            }\n        }\n        if(count === 1){\n       \
    \     newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\" \");\n\
    }\n", "    let words = [];\n    for(let i = 0; i < sentence.length; i++){\n  \
    \      if(isPrime(sentence.length)){\n            words.push(sentence.slice(i,i+1));\n\
    \        }\n    }\n    return words.join(\" \");\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

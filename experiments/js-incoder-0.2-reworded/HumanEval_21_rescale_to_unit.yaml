name: HumanEval_21_rescale_to_unit
language: js
prompt: "//Given array of numbers (of at least two elements), apply a linear transform\
  \ to that array,\n// such that the smallest number will become 0 and the largest\
  \ will become 1\n// >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n// [0.0, 0.25,\
  \ 0.5, 0.75, 1.0]\nfunction rescale_to_unit(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = rescale_to_unit;\n  assert.deepEqual(candidate([2.0, 49.9]),[0.0, 1.0]);\n \
  \ assert.deepEqual(candidate([100.0, 49.9]),[1.0, 0.0]);\n  assert.deepEqual(candidate([1.0,\
  \ 2.0, 3.0, 4.0, 5.0]),[0.0, 0.25, 0.5, 0.75, 1.0]);\n  assert.deepEqual(candidate([2.0,\
  \ 1.0, 5.0, 3.0, 4.0]),[0.25, 0.0, 1.0, 0.5, 0.75]);\n  assert.deepEqual(candidate([12.0,\
  \ 11.0, 15.0, 13.0, 14.0]),[0.25, 0.0, 1.0, 0.5, 0.75]);\n}\n\ntest();"
completions: ["    var min_number = numbers[0];\n    var max_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] > max_number){\n\
    \            max_number = numbers[i];\n        }\n        else if(numbers[i] <\
    \ min_number){\n            min_number = numbers[i];\n        }\n    }\n    return\
    \ [min_number, max_number];\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min = Math.min(numbers);\n    var max =\
    \ Math.max(numbers);\n    var range = max - min;\n    var rescaled = [];\n   \
    \ for(var i = 0; i < numbers.length; i++){\n        rescaled.push(numbers[i] -\
    \ min);\n    }\n    rescaled.push(1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled[i] = rescaled[i] / range;\n    }\n    return rescaled;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range / (max - min)) * 100);\n    var new_numbers = [];\n    for(var i =\
    \ 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale +\
    \ min);\n    }\n    return new_numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = max - min;\n    var scale = (range == 0) ? 0 : ((range / numbers.length) -\
    \ 1);\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        new_numbers.push(min + (numbers[i] - min) * scale);\n    }\n    return\
    \ new_numbers;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n \
    \   var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    return rescaled;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range / max) + 1);\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "\tvar min = numbers[0];\n\tvar max = numbers[0];\n\tfor(var i = 1; i <\
    \ numbers.length; i++){\n\t\tif(numbers[i] < min) min = numbers[i];\n\t\tif(numbers[i]\
    \ > max) max = numbers[i];\n\t}\n\tvar scale = (max - min) / (max - min);\n\t\
    for(var i = 1; i < numbers.length; i++){\n\t\tnumbers[i] *= scale;\n\t}\n\treturn\
    \ numbers;\n}\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value){\n\
    \            min_value = numbers[i];\n        }\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    var range = (max_value\
    \ - min_value);\n    var new_array = new Array(numbers.length);\n    for(var i\
    \ = 0; i < numbers.length; i++){\n        new_array[i] = (numbers[i] - min_value)\
    \ / range;\n    }\n    return new_array;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var new_min = min - range * 0.5;\n    var new_max = max\
    \ + range * 0.5;\n    return [new_min, new_max];\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : ((range / (max - min)) *\
    \ 100) / 100;\n    var new_numbers = [];\n    new_numbers[0] = min - scale;\n\
    \    new_numbers[1] = max - scale;\n    return new_numbers;\n}\n", "    var min\
    \ = numbers[0];\n    var max = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min) min = numbers[i];\n        if(numbers[i]\
    \ > max) max = numbers[i];\n    }\n    var range = (max - min);\n    if(range\
    \ == 0) return numbers;\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i]/range);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min = Math.min(numbers);\n    var max =\
    \ Math.max(numbers);\n    var range = max - min;\n    var new_range = range /\
    \ 1.5;\n    var new_min = min - new_range;\n    var new_max = max + new_range;\n\
    \    var new_numbers = [];\n    for(var i=0; i<numbers.length; i++){\n       \
    \ new_numbers.push(new_min + (new_numbers[i]-min)*new_range/range);\n    }\n \
    \   return new_numbers;\n}\n", "\tvar min_value = numbers[0];\n\tvar max_value\
    \ = numbers[0];\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i]\
    \ < min_value){\n\t\t\tmin_value = numbers[i];\n\t\t}\n\t\telse if(numbers[i]\
    \ > max_value){\n\t\t\tmax_value = numbers[i];\n\t\t}\n\t}\n\tvar scale = (max_value\
    \ - min_value) / (numbers.length - 1);\n\tfor(var i = 0; i < numbers.length; i++){\n\
    \t\tnumbers[i] = (numbers[i] - min_value) * scale + min_value;\n\t}\n\treturn\
    \ numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max\
    \ = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n    var new_range\
    \ = Math.round(range / 2);\n    var new_min = min - new_range;\n    var new_max\
    \ = max + new_range;\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] * new_range / new_max);\n    }\n\
    \    return new_numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : ((range - min) / range);\n    var scaled_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        scaled_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return scaled_numbers;\n}\n", "\tvar min = Math.min(numbers[0],\
    \ numbers[1]);\n\tvar max = Math.max(numbers[0], numbers[1]);\n\tvar range = max\
    \ - min;\n\tvar scale = (range == 0) ? 0 : ((numbers[1] - numbers[0]) / range);\n\
    \treturn [min, scale];\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var new_min = min - range * 0.5;\n    var new_max = max + range * 0.5;\n\
    \    var new_range = (new_max - new_min);\n    return [new_min, new_max, new_range];\n\
    }\n", "\tvar min = Math.min(numbers[0], numbers[1]);\n\tvar max = Math.max(numbers[0],\
    \ numbers[1]);\n\tvar range = max - min;\n\tvar new_min = min - range * 0.5;\n\
    \tvar new_max = max + range * 0.5;\n\tvar new_range = new_max - new_min;\n\tvar\
    \ new_min_value = new_min + new_range * 0.5;\n\tvar new_max_value = new_max -\
    \ new_range * 0.5;\n\treturn [new_min_value, new_max_value];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

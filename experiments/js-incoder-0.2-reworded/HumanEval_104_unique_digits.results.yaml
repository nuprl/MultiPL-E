language: js
name: HumanEval_104_unique_digits
results:
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i in x){\n\t\tif(x[i]\
    \ % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpbp5tgssc.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbp5tgssc.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i] % 2 == 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpiv_1wfy2.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiv_1wfy2.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i]%2==0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpcxduj4_8.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcxduj4_8.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tx[j] = null;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpsk72nf9c.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsk72nf9c.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=0; j<result.length; j++){\n\t\t\tif(x[i] % result[j] === 0){\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j === result.length){\n\t\t\tresult.push(x[i]);\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpkrbvkwkn.js:29:10)\n    at Object.<anonymous> (/tmp/tmpkrbvkwkn.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a-b;\n    });\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppzk2o37m.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmppzk2o37m.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] === 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  1,\n\
    \  33,\n  1,\n  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n\
    \  33\n]\n    at test (/tmp/tmp_050bg2x.js:28:10)\n    at Object.<anonymous> (/tmp/tmp_050bg2x.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 1, 33,\
    \ 1, 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=0; j<result.length; j++){\n\t\t\tif(x[i] % result[j] === 0){\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j === result.length){\n\t\t\tresult.push(x[i]);\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpa5pnz4h2.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa5pnz4h2.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpbpabrxvc.js:27:10)\n    at Object.<anonymous> (/tmp/tmpbpabrxvc.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort(function(a,b){\n        return a-b;\n    });\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3i7akuq6.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3i7akuq6.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i]%2==0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpt6hrzaxt.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt6hrzaxt.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    var digits = [];\n    for(var\
    \ i=0;i<x.length;i++){\n        digits.push(x[i].toString());\n    }\n    for(var\
    \ i=0;i<digits.length;i++){\n        var digit = digits[i];\n        if(digit.charAt(0)!='0'){\n\
    \            result.push(parseInt(digit));\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmpb90o_mcq.js:30:10)\n    at Object.<anonymous> (/tmp/tmpb90o_mcq.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test\
    \ (/tmp/tmp3jn9slaf.js:27:10)\n    at Object.<anonymous> (/tmp/tmp3jn9slaf.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0; i<x.length;\
    \ i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n       \
    \ }\n    }\n    result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpkbw8rwc8.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkbw8rwc8.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpuimfci4x.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuimfci4x.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpwgayid8q.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgayid8q.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j]==0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tx.splice(j,1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmplh6_ejxx.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmplh6_ejxx.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tfor(var j=0;j<arr.length;j++){\n\t\t\tif(x[i]%arr[j] === 0){\n\t\t\t\tarr.splice(j,1);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(i===arr.length){\n\t\t\tarr.push(x[i]);\n\
    \t\t}\n\t}\n\treturn arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpoip46bun.js:30:10)\n    at Object.<anonymous> (/tmp/tmpoip46bun.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp9utiozza.js:27:10)\n    at Object.<anonymous> (/tmp/tmp9utiozza.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2==0){\n            result.push(x[i]);\n        }\n    }\n  \
    \  result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp46qgfeld.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp46qgfeld.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpuimfci4x.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuimfci4x.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2==0){\n            result.push(x[i]);\n        }\n    }\n  \
    \  result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp46qgfeld.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp46qgfeld.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i]%2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort(function(a,b){return\
    \ a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp4urgv3y0.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4urgv3y0.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpjkop9rra.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjkop9rra.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i]%2 === 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp0okm2ctl.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0okm2ctl.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpjkop9rra.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjkop9rra.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tx.splice(j,1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpewnhgiwh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpewnhgiwh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] == 0){\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpyewjbdmf.js:27:10)\n    at Object.<anonymous> (/tmp/tmpyewjbdmf.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i]%2==0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpcxduj4_8.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcxduj4_8.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tlet result = [];\n\tfor(let i = 0; i < x.length;\
    \ i++){\n\t\tlet digit = x[i];\n\t\tlet index = result.indexOf(digit);\n\t\tif(index\
    \ === -1){\n\t\t\tresult.push(digit);\n\t\t}\n\t}\n\treturn result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpu7rlz4ga.js:26:10)\n    at Object.<anonymous> (/tmp/tmpu7rlz4ga.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2==0){\n            result.push(x[i]);\n        }\n    }\n  \
    \  result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp46qgfeld.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp46qgfeld.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=i+1; j<x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tx.splice(j, 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpx8zm0_73.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx8zm0_73.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tvar num = x[i];\n\t\tvar digits = num.toString().split('');\n\t\tfor(var j=0;j<digits.length;j++){\n\
    \t\t\tif(digits[j].length%2 == 0){\n\t\t\t\tresult.push(parseInt(digits[j]));\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result.sort(function(a,b){return a-b});\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpb61bwyb5.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb61bwyb5.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        var digit = x[i];\n        if(digit%2 === 0){\n            result.push(digit);\n\
    \        }\n    }\n    result.sort(function(a,b){\n        return a-b;\n    });\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpkcjtvelk.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkcjtvelk.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort(function(a,b){\n        return a-b;\n    });\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3i7akuq6.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3i7akuq6.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n       \
    \ }\n    }\n    result.sort(function(a, b){\n        return a - b;\n    });\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp0y1j3lei.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0y1j3lei.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  1,\n\
    \  33,\n  1,\n  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n\
    \  33\n]\n    at test (/tmp/tmpocjt9d5d.js:28:10)\n    at Object.<anonymous> (/tmp/tmpocjt9d5d.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 1, 33,\
    \ 1, 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort(function(a,b){\n\
    \t\treturn a-b;\n\t});\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpd28bt7l_.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd28bt7l_.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 == 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpb69md0ye.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb69md0ye.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i]%2==0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpt6hrzaxt.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt6hrzaxt.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n       \
    \ }\n    }\n    result.sort(function(a, b){\n        return a - b;\n    });\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp0y1j3lei.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0y1j3lei.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0; i<x.length;\
    \ i++){\n        var digit = x[i];\n        if(digit % 2 === 0){\n           \
    \ result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpr_np9mg2.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr_np9mg2.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tvar digit = x[i];\n\t\tvar index = result.indexOf(digit);\n\t\tif(index ==\
    \ -1){\n\t\t\tresult.push(digit);\n\t\t}\n\t}\n\treturn result.sort();\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmp76y0zmng.js:26:10)\n    at Object.<anonymous> (/tmp/tmp76y0zmng.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i]%2==0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpcxduj4_8.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcxduj4_8.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=0; j<result.length; j++){\n\t\t\tif(x[i] % result[j] === 0){\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j === result.length){\n\t\t\tresult.push(x[i]);\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpa5pnz4h2.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa5pnz4h2.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort(function(a,b){\n        return a-b;\n    });\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3i7akuq6.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3i7akuq6.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpatmdmdrd.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpatmdmdrd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tx[j] = x[j];\n\t\t\t\tx[i] = x[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp21_ga3df.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmp21_ga3df.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        var digit = x[i];\n        if(digit%2 === 0){\n            result.push(digit);\n\
    \        }\n    }\n    result.sort(function(a,b){\n        return a-b;\n    });\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpkcjtvelk.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkcjtvelk.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] === 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  1,\n\
    \  33,\n  1,\n  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n\
    \  33\n]\n    at test (/tmp/tmp_050bg2x.js:28:10)\n    at Object.<anonymous> (/tmp/tmp_050bg2x.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 1, 33,\
    \ 1, 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    var len = x.length;\n  \
    \  for(var i = 0; i < len; i++){\n        var item = x[i];\n        for(var j\
    \ = 0; j < len; j++){\n            if(x[j] % item === 0){\n                break;\n\
    \            }\n        }\n        if(j === len){\n            result.push(item);\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9wkjhmrd.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9wkjhmrd.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpuimfci4x.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuimfci4x.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        var digit = x[i];\n        if(digit % 2 === 0){\n            result.push(digit);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a - b;\n  \
    \  });\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpor4h4_4p.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpor4h4_4p.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        var digit = x[i];\n        if(digit%2===0){\n            result.push(digit);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp2hz9m156.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2hz9m156.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\
    \t\t\t\tresult.push(x[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmphv9xc4n4.js:27:10)\n    at Object.<anonymous> (/tmp/tmphv9xc4n4.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tlet result = [];\n\tfor(let i = 0; i < x.length;\
    \ i++){\n\t\tlet digit = x[i];\n\t\tfor(let j = i+1; j < x.length; j++){\n\t\t\
    \tlet digit2 = x[j];\n\t\t\tif(digit % 2 == 0 && digit2 % 2 == 0){\n\t\t\t\tresult.push(digit);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp10pgozeq.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmp10pgozeq.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i = 0; i < x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9bujder3.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9bujder3.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var arr = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        var str = x[i].toString();\n        var digits = str.split('');\n\
    \        for(var j = 0; j < digits.length; j++){\n            if(digits[j] % 2\
    \ === 0){\n                arr.push(parseInt(digits[j]));\n            }\n   \
    \     }\n    }\n    return arr.sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  2,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp53e9j8fc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp53e9j8fc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 2, 4\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i = 0; i < x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9bujder3.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9bujder3.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    var len = x.length;\n  \
    \  for(var i = 0; i < len; i++){\n        var item = x[i];\n        var found\
    \ = false;\n        for(var j = 0; j < result.length; j++){\n            if(item\
    \ % result[j] === 0){\n                found = true;\n                break;\n\
    \            }\n        }\n        if(!found){\n            result.push(item);\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpzn_ycy3n.js:33:10)\n    at Object.<anonymous> (/tmp/tmpzn_ycy3n.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tlet result = [];\n\tfor(let i = 0; i < x.length;\
    \ i++){\n\t\tlet digit = x[i];\n\t\tlet isEven = false;\n\t\tfor(let j = 0; j\
    \ < result.length; j++){\n\t\t\tif(result[j] % 10 == digit){\n\t\t\t\tisEven =\
    \ true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!isEven){\n\t\t\tresult.push(digit);\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpb4dz5ci8.js:32:10)\n    at Object.<anonymous> (/tmp/tmpb4dz5ci8.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    var len = x.length;\n  \
    \  var i;\n    for(i = 0; i < len; i++){\n        if(x[i] % 2 === 0){\n      \
    \      result.push(x[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpv0_ja18p.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv0_ja18p.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] === 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  1,\n\
    \  33,\n  1,\n  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n\
    \  33\n]\n    at test (/tmp/tmp_050bg2x.js:28:10)\n    at Object.<anonymous> (/tmp/tmp_050bg2x.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 1, 33,\
    \ 1, 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i]%2==0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpho0_fz48.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpho0_fz48.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=0; j<result.length; j++){\n\t\t\tif(x[i] % result[j] === 0){\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j === result.length){\n\t\t\tresult.push(x[i]);\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpa5pnz4h2.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa5pnz4h2.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tlet result = [];\n\tfor(let i = 0; i < x.length;\
    \ i++){\n\t\tlet found = false;\n\t\tfor(let j = 0; j < result.length; j++){\n\
    \t\t\tif(x[i] % result[j] === 0){\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\
    \t}\n\t\t}\n\t\tif(!found){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpfp6ql0_9.js:31:10)\n    at Object.<anonymous> (/tmp/tmpfp6ql0_9.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tvar digit = x[i];\n\t\twhile(digit%2 === 0){\n\t\t\tdigit = digit/2;\n\t\t}\n\
    \t\tarr.push(digit);\n\t}\n\treturn arr.sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  15,\n\
    \  33,\n  711\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpbjjkm39_.js:26:10)\n    at Object.<anonymous> (/tmp/tmpbjjkm39_.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 15, 33,\
    \ 711 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7a49tqmp.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7a49tqmp.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i] % 2 === 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmponqd3mt1.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmponqd3mt1.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n       \
    \ }\n    }\n    result.sort(function(a, b){\n        return a - b;\n    });\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp0y1j3lei.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0y1j3lei.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  1,\n\
    \  33,\n  1,\n  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n\
    \  33\n]\n    at test (/tmp/tmpocjt9d5d.js:28:10)\n    at Object.<anonymous> (/tmp/tmpocjt9d5d.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 1, 33,\
    \ 1, 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp9utiozza.js:27:10)\n    at Object.<anonymous> (/tmp/tmp9utiozza.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tlet result = [];\n\tfor(let i = 0; i < x.length;\
    \ i++){\n\t\tlet digit = x[i];\n\t\tlet found = false;\n\t\tfor(let j = 0; j <\
    \ result.length; j++){\n\t\t\tif(result[j] === digit){\n\t\t\t\tfound = true;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found){\n\t\t\tresult.push(digit);\n\t\
    \t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp2yut6jlt.js:32:10)\n    at Object.<anonymous> (/tmp/tmp2yut6jlt.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpjkop9rra.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjkop9rra.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var arr = [];\n    for(var i=0; i<x.length; i++){\n\
    \        for(var j=i+1; j<x.length; j++){\n            if(x[i] % x[j] === 0){\n\
    \                arr.push(x[j]);\n                arr.push(x[i]);\n          \
    \      break;\n            }\n        }\n    }\n    return arr;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  15,\n\
    \  1,\n  33,\n  1,\n  1422\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n\
    \  33\n]\n    at test (/tmp/tmp5ypscc5h.js:28:10)\n    at Object.<anonymous> (/tmp/tmp5ypscc5h.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 15, 1,\
    \ 33, 1, 1422 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\
    \t\t\t\tresult.push(x[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmphv9xc4n4.js:27:10)\n    at Object.<anonymous> (/tmp/tmphv9xc4n4.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=i+1; j<x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tx.splice(j, 1);\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmps1cenoo3.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmps1cenoo3.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpjkop9rra.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjkop9rra.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpuimfci4x.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuimfci4x.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        var sum = 0;\n        for(var j=0;j<x.length;j++){\n            if(x[i]%10\
    \ == x[j]%10){\n                sum++;\n            }\n        }\n        if(sum\
    \ == 0){\n            result.push(x[i]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpe8yje9rw.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe8yje9rw.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n       \
    \ }\n    }\n    result.sort(function(a, b){\n        return a - b;\n    });\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp0y1j3lei.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0y1j3lei.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        var digit = x[i];\n        if(digit%2 === 0){\n            result.push(digit);\n\
    \        }\n    }\n    result.sort(function(a,b){\n        return a-b;\n    });\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpkcjtvelk.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkcjtvelk.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] == 0){\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpyewjbdmf.js:27:10)\n    at Object.<anonymous> (/tmp/tmpyewjbdmf.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i] % 2 == 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpiv_1wfy2.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiv_1wfy2.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i = 0; i < x.length; i++){\n\
    \t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] == 0){\n\t\t\t\t\
    arr.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpae1s39nr.js:27:10)\n    at Object.<anonymous> (/tmp/tmpae1s39nr.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tvar num = x[i];\n\t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tvar num2 = x[j];\n\
    \t\t\tif(num%num2 === 0){\n\t\t\t\tresult.push(num);\n\t\t\t\tbreak;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test\
    \ (/tmp/tmpj4lpgj_e.js:29:10)\n    at Object.<anonymous> (/tmp/tmpj4lpgj_e.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmps3esy20z.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmps3esy20z.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tlet result = [];\n\tfor(let i = 0; i < x.length;\
    \ i++){\n\t\tlet found = false;\n\t\tfor(let j = 0; j < result.length; j++){\n\
    \t\t\tif(x[i] % result[j] === 0){\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\
    \t}\n\t\t}\n\t\tif(!found){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpfp6ql0_9.js:31:10)\n    at Object.<anonymous> (/tmp/tmpfp6ql0_9.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort(function(a,b){\n        return a-b;\n    });\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3i7akuq6.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3i7akuq6.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n       \
    \ }\n    }\n    result.sort(function(a, b){\n        return a - b;\n    });\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp0y1j3lei.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0y1j3lei.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        var temp = x[i];\n        for(var j=i+1;j<x.length;j++){\n          \
    \  if(x[j] % temp == 0){\n                temp = x[j];\n            }\n      \
    \  }\n        result.push(temp);\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpkp_t8hnq.js:28:10)\n    at Object.<anonymous> (/tmp/tmpkp_t8hnq.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var arr = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2 === 0){\n            arr.push(x[i]);\n        }\n    }\n  \
    \  return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpbghlzjo8.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbghlzjo8.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=0; j<result.length; j++){\n\t\t\tif(x[i] % result[j] === 0){\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j === result.length){\n\t\t\tresult.push(x[i]);\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpa5pnz4h2.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa5pnz4h2.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort(function(a,\
    \ b){return a - b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpyirniolj.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyirniolj.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0; i<x.length;\
    \ i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n       \
    \ }\n    }\n    result.sort(function(a, b){\n        return a - b;\n    });\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpwscayfet.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwscayfet.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tvar num = x[i];\n\t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[j] % num ==\
    \ 0){\n\t\t\t\tresult.push(num);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp2psymab5.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2psymab5.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var arr = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2==0){\n            arr.push(x[i]);\n        }\n    }\n    return\
    \ arr.sort();\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpmhytfjme.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmhytfjme.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tlet result = [];\n\tfor(let i = 0; i < x.length;\
    \ i++){\n\t\tlet digit = x[i];\n\t\tlet count = 0;\n\t\tfor(let j = 0; j < result.length;\
    \ j++){\n\t\t\tif(result[j] === digit){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\t\
    if(count === 0){\n\t\t\tresult.push(digit);\n\t\t}\n\t}\n\treturn result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpdj1qi2op.js:31:10)\n    at Object.<anonymous> (/tmp/tmpdj1qi2op.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        var digit = x[i];\n        if(digit%2==0){\n            result.push(digit);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=arrays,javascript,sorting |>\n<code>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpvm7_itcb.js:20\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpatmdmdrd.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpatmdmdrd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2==0){\n            result.push(x[i]);\n        }\n    }\n  \
    \  result.sort();\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript,sorting\
    \ |>\n<code>\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp3nzfdzmp.js:19\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=0; j<result.length; j++){\n\t\t\tif(x[i] % result[j] === 0){\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j === result.length){\n\t\t\tresult.push(x[i]);\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpa5pnz4h2.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa5pnz4h2.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j]==0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpo98g67d8.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo98g67d8.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] == 0){\n\
    \t\t\t\tresult.push(x[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpptw6v3_j.js:27:10)\n    at Object.<anonymous> (/tmp/tmpptw6v3_j.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    var hash = {};\n    for(var\
    \ i=0;i<x.length;i++){\n        var num = x[i];\n        if(!hash[num]){\n   \
    \         result.push(num);\n            hash[num] = true;\n        }\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpb8k01qx8.js:27:10)\n    at Object.<anonymous> (/tmp/tmpb8k01qx8.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3acvfg1w.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3acvfg1w.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i] % 2 == 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpiv_1wfy2.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiv_1wfy2.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i] % 2 === 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpfh8nxvwa.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfh8nxvwa.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2===0){\n            result.push(x[i]);\n        }\n    }\n \
    \   result.sort(function(a,b){return a-b});\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpdccgivvd.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdccgivvd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpuimfci4x.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuimfci4x.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpuimfci4x.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuimfci4x.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpwgayid8q.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgayid8q.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpuimfci4x.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuimfci4x.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tvar digit = x[i];\n\t\tvar index = result.indexOf(digit);\n\t\tif(index\
    \ == -1){\n\t\t\tresult.push(digit);\n\t\t}\n\t}\n\treturn result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpa2ic2ddv.js:26:10)\n    at Object.<anonymous> (/tmp/tmpa2ic2ddv.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i]%2==0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpt6hrzaxt.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt6hrzaxt.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tx.splice(j,1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpkt44klmj.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkt44klmj.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0; i<x.length;\
    \ i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n       \
    \ }\n    }\n    result.sort(function(a, b){\n        return a - b;\n    });\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpwscayfet.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwscayfet.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i]%2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp26awxx0f.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp26awxx0f.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=0; j<result.length; j++){\n\t\t\tif(x[i] % result[j] === 0){\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j === result.length){\n\t\t\tresult.push(x[i]);\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpa5pnz4h2.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa5pnz4h2.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpuimfci4x.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuimfci4x.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp41mtyjz.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp41mtyjz.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpjkop9rra.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjkop9rra.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=0; j<result.length; j++){\n\t\t\tif(x[i] % result[j] === 0){\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j === result.length){\n\t\t\tresult.push(x[i]);\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpa5pnz4h2.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa5pnz4h2.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=0; j<result.length; j++){\n\t\t\tif(x[i] % result[j] === 0){\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j === result.length){\n\t\t\tresult.push(x[i]);\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpa5pnz4h2.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa5pnz4h2.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var arr = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            arr.push(x[i]);\n        }\n    }\n\
    \    return arr.sort();\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| c |>\n\
    This doesn't work if the array contains negative numbers. `unique_digits([-1,\
    \ -15, -33, -1422, 1])` returns `[-33, -1422, -1]`\n<|/ c |>\n<| a dscore=1 |>\n\
    <code>\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp3nc6h7iy.js:18\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 == 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpb69md0ye.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb69md0ye.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 == 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpb69md0ye.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb69md0ye.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tvar digit = x[i];\n\t\tvar found = false;\n\t\tfor(var j=0;j<result.length;j++){\n\
    \t\t\tif(result[j] == digit){\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\
    \t\t}\n\t\tif(!found){\n\t\t\tresult.push(digit);\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpd_yf9gjh.js:32:10)\n    at Object.<anonymous> (/tmp/tmpd_yf9gjh.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpwgayid8q.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwgayid8q.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpatmdmdrd.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpatmdmdrd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        var num = x[i];\n        for(var j=i+1;j<x.length;j++){\n           \
    \ var num2 = x[j];\n            if(num%num2===0){\n                result.push(num);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test\
    \ (/tmp/tmp2z1w4zj6.js:29:10)\n    at Object.<anonymous> (/tmp/tmp2z1w4zj6.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tvar digit = x[i];\n\t\tvar index = result.indexOf(digit);\n\t\tif(index ==\
    \ -1){\n\t\t\tresult.push(digit);\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpe0x976tc.js:26:10)\n    at Object.<anonymous> (/tmp/tmpe0x976tc.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i = 0; i < x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9bujder3.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9bujder3.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp9utiozza.js:27:10)\n    at Object.<anonymous> (/tmp/tmp9utiozza.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  1,\n\
    \  33,\n  1,\n  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n\
    \  33\n]\n    at test (/tmp/tmpocjt9d5d.js:28:10)\n    at Object.<anonymous> (/tmp/tmpocjt9d5d.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 1, 33,\
    \ 1, 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpuimfci4x.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuimfci4x.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i]%2==0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpho0_fz48.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpho0_fz48.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort(function(a,\
    \ b){\n\t\treturn a-b;\n\t});\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp28mxw2dc.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp28mxw2dc.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpjkop9rra.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjkop9rra.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] === 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  1,\n\
    \  33,\n  1,\n  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n\
    \  33\n]\n    at test (/tmp/tmp_050bg2x.js:28:10)\n    at Object.<anonymous> (/tmp/tmp_050bg2x.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 1, 33,\
    \ 1, 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2==0){\n            result.push(x[i]);\n        }\n    }\n  \
    \  result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp46qgfeld.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp46qgfeld.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tvar digit = x[i];\n\t\twhile(digit>0){\n\t\t\tresult.push(digit%10);\n\t\t\
    \tdigit = digit/10;\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  1.5,\n\
    \  0.15,\n  0.015,\n  0.0015,\n  0.00015000000000000001,\n  0.000015000000000000002,\n\
    \  0.0000015000000000000002,\n  1.5000000000000002e-7,\n  1.5000000000000002e-8,\n\
    \  1.5000000000000002e-9,\n  1.5000000000000002e-10,\n  1.5000000000000003e-11,\n\
    \  1.5000000000000003e-12,\n  1.5000000000000002e-13,\n  1.5000000000000002e-14,\n\
    \  1.5000000000000003e-15,\n  1.5000000000000002e-16,\n  1.5000000000000003e-17,\n\
    \  1.5000000000000003e-18,\n  1.5000000000000002e-19,\n  1.5e-20,\n  1.5000000000000001e-21,\n\
    \  1.50000000000...\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n\
    \    at test (/tmp/tmpkk11h4h2.js:26:10)\n    at Object.<anonymous> (/tmp/tmpkk11h4h2.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\n\
    \    1.5,\n    0.15,\n    0.015,\n    0.0015,\n    0.00015000000000000001,\n \
    \   0.000015000000000000002,\n    0.0000015000000000000002,\n    1.5000000000000002e-7,\n\
    \    1.5000000000000002e-8,\n    1.5000000000000002e-9,\n    1.5000000000000002e-10,\n\
    \    1.5000000000000003e-11,\n    1.5000000000000003e-12,\n    1.5000000000000002e-13,\n\
    \    1.5000000000000002e-14,\n    1.5000000000000003e-15,\n    1.5000000000000002e-16,\n\
    \    1.5000000000000003e-17,\n    1.5000000000000003e-18,\n    1.5000000000000002e-19,\n\
    \    1.5e-20,\n    1.5000000000000001e-21,\n    1.5000000000000002e-22,\n    1.5000000000000003e-23,\n\
    \    1.5000000000000003e-24,\n    1.5000000000000003e-25,\n    1.5000000000000003e-26,\n\
    \    1.5000000000000004e-27,\n    1.5000000000000005e-28,\n    1.5000000000000004e-29,\n\
    \    1.5000000000000005e-30,\n    1.5000"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  1,\n\
    \  33,\n  1,\n  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n\
    \  33\n]\n    at test (/tmp/tmpocjt9d5d.js:28:10)\n    at Object.<anonymous> (/tmp/tmpocjt9d5d.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 1, 33,\
    \ 1, 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tvar num = x[i];\n\t\tvar digits = [];\n\t\twhile(num>0){\n\t\t\tdigits.push(num%10);\n\
    \t\t\tnum = Math.floor(num/10);\n\t\t}\n\t\tfor(var j=0;j<digits.length;j++){\n\
    \t\t\tif(digits[j]%2==0){\n\t\t\t\tresult.push(digits[j]);\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  2,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp6ow2h292.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6ow2h292.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 2, 4\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i in x){\n\t\tif(x[i] %\
    \ 2 === 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpsgq98y9o.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsgq98y9o.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j]==0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpo98g67d8.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo98g67d8.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpuimfci4x.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuimfci4x.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\
    \t\t\t\tresult.push(x[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmphv9xc4n4.js:27:10)\n    at Object.<anonymous> (/tmp/tmphv9xc4n4.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp9utiozza.js:27:10)\n    at Object.<anonymous> (/tmp/tmp9utiozza.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\
    \t\t\t\tresult.push(x[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmphv9xc4n4.js:27:10)\n    at Object.<anonymous> (/tmp/tmphv9xc4n4.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var arr = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        var digit = x[i];\n        if(digit % 2 === 0){\n           \
    \ arr.push(digit);\n        }\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp5_rp1m1x.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5_rp1m1x.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0; i<x.length;\
    \ i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n       \
    \ }\n    }\n    result.sort(function(a, b){return a - b});\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpmt6k9leb.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmt6k9leb.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        var flag = true;\n        for(var j=0;j<result.length;j++){\n       \
    \     if(x[i]%result[j] === 0){\n                flag = false;\n             \
    \   break;\n            }\n        }\n        if(flag){\n            result.push(x[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpyxi0zcdt.js:31:10)\n    at Object.<anonymous> (/tmp/tmpyxi0zcdt.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] === 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  1,\n\
    \  33,\n  1,\n  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n\
    \  33\n]\n    at test (/tmp/tmp_050bg2x.js:28:10)\n    at Object.<anonymous> (/tmp/tmp_050bg2x.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 1, 33,\
    \ 1, 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tlet result = [];\n\tfor(let i = 0; i < x.length;\
    \ i++){\n\t\tlet digit = x[i];\n\t\tlet isEven = true;\n\t\tfor(let j = 0; j <\
    \ result.length; j++){\n\t\t\tif(result[j] % 10 == 0){\n\t\t\t\tisEven = false;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(isEven){\n\t\t\tresult.push(digit);\n\t\
    \t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp9sdcdsxh.js:32:10)\n    at Object.<anonymous> (/tmp/tmp9sdcdsxh.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tlet result = [];\n\tfor(let i = 0; i < x.length;\
    \ i++){\n\t\tlet digit = x[i];\n\t\tfor(let j = 0; j < result.length; j++){\n\t\
    \t\tif(digit % result[j] === 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j ===\
    \ result.length){\n\t\t\tresult.push(digit);\n\t\t}\n\t}\n\treturn result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpjkqb79qa.js:18\n\t\tif(j === result.length){\n\t\t^\n\nReferenceError:\
    \ j is not defined\n    at unique_digits (/tmp/tmpjkqb79qa.js:18:3)\n    at test\
    \ (/tmp/tmpjkqb79qa.js:30:20)\n    at Object.<anonymous> (/tmp/tmpjkqb79qa.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] == 0){\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpyewjbdmf.js:27:10)\n    at Object.<anonymous> (/tmp/tmpyewjbdmf.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var arr = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            arr.push(x[i]);\n        }\n    }\n\
    \    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp50ljewj3.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp50ljewj3.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tvar digit = x[i];\n\t\tfor(var j=0; j<result.length; j++){\n\t\t\tvar item\
    \ = result[j];\n\t\t\tif(item == digit){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\
    if(j == result.length){\n\t\t\tresult.push(digit);\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp_pzv46mv.js:31:10)\n    at Object.<anonymous> (/tmp/tmp_pzv46mv.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp9utiozza.js:27:10)\n    at Object.<anonymous> (/tmp/tmp9utiozza.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort(function(a,b){return\
    \ a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp8bhut_0z.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8bhut_0z.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    var seen = [];\n    for(var\
    \ i = 0, len = x.length; i < len; i++){\n        var item = x[i];\n        if(seen.indexOf(item)\
    \ == -1){\n            seen.push(item);\n            result.push(item);\n    \
    \    }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpynqd6mc7.js:27:10)\n    at Object.<anonymous> (/tmp/tmpynqd6mc7.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  1,\n\
    \  33,\n  1,\n  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n\
    \  33\n]\n    at test (/tmp/tmpocjt9d5d.js:28:10)\n    at Object.<anonymous> (/tmp/tmpocjt9d5d.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 1, 33,\
    \ 1, 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tlet result = [];\n\tfor(let i = 0; i < x.length;\
    \ i++){\n\t\tlet digit = x[i];\n\t\tlet found = false;\n\t\tfor(let j = 0; j <\
    \ result.length; j++){\n\t\t\tif(result[j] === digit){\n\t\t\t\tfound = true;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found){\n\t\t\tresult.push(digit);\n\t\
    \t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp2yut6jlt.js:32:10)\n    at Object.<anonymous> (/tmp/tmp2yut6jlt.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i] % 2 == 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpiv_1wfy2.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiv_1wfy2.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        var num = x[i];\n        for(var j=1;j<i;j++){\n            if(x[j] %\
    \ num == 0){\n                break;\n            }\n        }\n        if(j ==\
    \ i){\n            result.push(num);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  33,\n  1422\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmprkx74xhc.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmprkx74xhc.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 33, 1422\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i=0;i<x.length;i++){\n\t\
    \tif(x[i] % 2 === 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpfh8nxvwa.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfh8nxvwa.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0; i<x.length;\
    \ i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n       \
    \ }\n    }\n    result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpkbw8rwc8.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkbw8rwc8.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=0; j<result.length; j++){\n\t\t\tif(x[i] % result[j] === 0){\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j === result.length){\n\t\t\tresult.push(x[i]);\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpa5pnz4h2.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa5pnz4h2.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] == 0){\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpyewjbdmf.js:27:10)\n    at Object.<anonymous> (/tmp/tmpyewjbdmf.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpigpyhdkq.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigpyhdkq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 1\
    \ ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i = 0; i < x.length; i++){\n\
    \t\tvar digit = x[i];\n\t\twhile(digit % 2 == 0){\n\t\t\tdigit = parseInt(digit/10);\n\
    \t\t}\n\t\tarr.push(digit);\n\t}\n\treturn arr.sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmp2mbighs_.js:26:10)\n    at Object.<anonymous> (/tmp/tmp2mbighs_.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 15,\
    \ 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n       \
    \ }\n    }\n    result.sort(function(a, b){\n        return a - b;\n    });\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp0y1j3lei.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0y1j3lei.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var arr = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        var num = x[i];\n        for(var j = 0; j < num.length; j++){\n\
    \            if(num[j] % 2 === 0){\n                arr.push(num);\n         \
    \       break;\n            }\n        }\n    }\n    return arr;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpzpkg7p2d.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzpkg7p2d.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i]%2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpt8vg5hv0.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt8vg5hv0.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpatmdmdrd.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpatmdmdrd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i]%2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp26awxx0f.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp26awxx0f.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\
    \t\tfor(var j=i+1; j<x.length; j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[j]);\n\
    \t\t\t\tx.splice(j, 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpl3qzu972.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl3qzu972.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i = 0; i < x.length; i++){\n\
    \t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] == 0){\n\t\t\t\t\
    arr.push(x[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp6dff688n.js:27:10)\n    at Object.<anonymous> (/tmp/tmp6dff688n.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[j] % 2 === 0){\n\t\
    \t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422,\n \
    \ 1422,\n  1422,\n  1422\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n \
    \ 33\n]\n    at test (/tmp/tmpl234v37n.js:27:10)\n    at Object.<anonymous> (/tmp/tmpl234v37n.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422, 1422,\
    \ 1422, 1422 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tvar digit = x[i];\n\t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tvar digit2 =\
    \ x[j];\n\t\t\tif(digit2%digit==0){\n\t\t\t\tresult.push(digit2);\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpdyw907zd.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdyw907zd.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpuimfci4x.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuimfci4x.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        var flag = false;\n        for(var j = 0; j < result.length;\
    \ j++){\n            if(x[i] % result[j] === 0){\n                flag = true;\n\
    \                break;\n            }\n        }\n        if(flag === false){\n\
    \            result.push(x[i]);\n        }\n    }\n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp7njvnrqg.js:31:10)\n    at Object.<anonymous> (/tmp/tmp7njvnrqg.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        var digit = x[i];\n        for(var j = 0; j < result.length;\
    \ j++){\n            if(digit % result[j] === 0){\n                break;\n  \
    \          }\n        }\n        if(j === result.length){\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpkuhwa_dq.js:30:10)\n    at Object.<anonymous> (/tmp/tmpkuhwa_dq.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746973
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar arr = [];\n\tfor(var i = 0; i < x.length; i++){\n\
    \t\tif(x[i] % 2 === 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9bujder3.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9bujder3.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j] == 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  1,\n\
    \  33,\n  1,\n  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n\
    \  33\n]\n    at test (/tmp/tmpocjt9d5d.js:28:10)\n    at Object.<anonymous> (/tmp/tmpocjt9d5d.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 1, 33,\
    \ 1, 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x){\n    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i] % 2 === 0){\n            result.push(x[i]);\n        }\n    }\n\
    \    result.sort(function(a,b){\n        return a-b;\n    });\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3i7akuq6.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3i7akuq6.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''

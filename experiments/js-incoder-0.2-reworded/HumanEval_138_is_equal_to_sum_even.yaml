name: HumanEval_138_is_equal_to_sum_even
language: js
prompt: "//Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n// Example\n// >>> is_equal_to_sum_even(4)\n// false\n\
  // >>> is_equal_to_sum_even(6)\n// false\n// >>> is_equal_to_sum_even(8)\n// true\n\
  function is_equal_to_sum_even(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = is_equal_to_sum_even;\n  assert.deepEqual(candidate(4),false);\n  assert.deepEqual(candidate(6),false);\n\
  \  assert.deepEqual(candidate(8),true);\n  assert.deepEqual(candidate(10),true);\n\
  \  assert.deepEqual(candidate(11),false);\n  assert.deepEqual(candidate(12),true);\n\
  \  assert.deepEqual(candidate(13),false);\n  assert.deepEqual(candidate(16),true);\n\
  }\n\ntest();"
completions: ["    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum +=\
    \ i;\n        if(sum % 2 == 0){\n            return false;\n        }\n    }\n\
    \    return true;\n}\n", "    let sum = 0;\n    for(let i = 0; i <= n; i++){\n\
    \        sum += i;\n        if(sum % 2 === 0){\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n", "    var sum = 0;\n    for(var i = 1;\
    \ i <= n; i++){\n        sum += i;\n        if(sum % 2 == 0){\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "\tif(n%2===0){\n\t\tif(n<4){\n\
    \t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse{\n\
    \t\treturn false;\n\t}\n}\n", "\tif(n<4){\n\t\treturn false;\n\t}\n\tlet sum =\
    \ 0;\n\tfor(let i = 0; i<n; i++){\n\t\tsum += i;\n\t}\n\treturn sum%2 === 0;\n\
    }\n", "\tif(n%2===0){\n\t\tif(n<4){\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\
    \treturn false;\n\t\t}\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\n", "    var sum\
    \ = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n        if(sum %\
    \ 2 === 0){\n            return false;\n        }\n    }\n    return true;\n}\n",
  "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n    if(sum % 2 ==\
    \ 0){\n      return false;\n    }\n  }\n  return true;\n}\n", "\tif(n%2==0){\n\
    \t\tfor(var i=3;i<=n;i+=2){\n\t\t\tif(n%i==0){\n\t\t\t\treturn false;\n\t\t\t\
    }\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "\tif(n%2==0){\n\t\tif(n<4){\n\
    \t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse{\n\
    \t\treturn false;\n\t}\n}\n", "\tif(n%2==0){\n\t\tif(n<4){\n\t\t\treturn true;\n\
    \t\t}\n\t\telse{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse{\n\t\treturn false;\n\
    \t}\n}\n", "    let sum = 0;\n    for(let i = 1; i <= n; i++){\n        if(n %\
    \ i === 0){\n            sum += i;\n        }\n    }\n    return sum === 4;\n\
    }\n", "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    if(n % i == 0){\n \
    \     sum += i;\n    }\n  }\n  return sum == n;\n}\n", "    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n        if(sum % 2 == 0){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "\tlet sum\
    \ = 0;\n\tfor(let i = 0; i <= n; i++){\n\t\tsum += i;\n\t\tif(sum % 2 === 0){\n\
    \t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n", "    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            sum += i;\n\
    \        }\n    }\n    return sum == n;\n}\n", "    var sum = 0;\n    for(var\
    \ i = 1; i <= n; i++){\n        sum += i;\n        if(sum % 2 == 0){\n       \
    \     return false;\n        }\n    }\n    return true;\n}\n", "\tif(n%2==0){\n\
    \t\tif(n%4==0){\n\t\t\tif(n%8==0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn false;\n}\n", "    let sum = 0;\n    for(let i = 1; i <= n; i++){\n \
    \       sum += i;\n        if(sum % 2 === 0){\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n", "  if(n % 2 === 0){\n    return false\n\
    \  }\n  let sum = 0\n  for(let i = 1; i <= n; i++){\n    sum += i\n    if(sum\
    \ % 2 === 0){\n      return true\n    }\n  }\n  return false\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

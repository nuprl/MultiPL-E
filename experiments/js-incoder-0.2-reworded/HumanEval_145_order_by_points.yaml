name: HumanEval_145_order_by_points
language: js
prompt: "//Write a function which sorts the given array of integers\n// in ascending\
  \ order according to the sum of their digits.\n// Note: if there are several items\
  \ with similar sum of their digits,\n// order them based on their index in original\
  \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
  \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11,\
  \ 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423,\
  \ 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
  \ 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
  \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
completions: ["    var sum = 0;\n    var result = [];\n    nums.forEach(function(num){\n\
    \        sum += num;\n        result.push(num);\n    });\n    result.sort(function(a,\
    \ b){\n        return sum - a;\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    var sum = 0;\n    var index = 0;\n    for(var i=0; i<nums.length;\
    \ i++){\n        sum += nums[i];\n        result.push(nums[i]);\n    }\n    result.sort(function(a,\
    \ b){\n        return sum - a;\n    });\n    return result;\n}\n", "    var sum\
    \ = 0;\n    var len = nums.length;\n    var result = [];\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        result.push(sum);\n    }\n    result.sort(function(a,\
    \ b){\n        return b-a;\n    });\n    return result;\n}\n", "    var sum =\
    \ 0;\n    var result = [];\n    for(var i=0;i<nums.length;i++){\n        sum +=\
    \ nums[i];\n        result.push(nums[i]);\n    }\n    result.sort(function(a,b){\n\
    \        return sum - a + b;\n    });\n    return result;\n}\n", "    var sum\
    \ = 0;\n    var result = [];\n    for(var i=0; i<nums.length; i++){\n        sum\
    \ += nums[i];\n        result.push(sum);\n    }\n    result.sort(function(a, b){\n\
    \        return b-a;\n    });\n    return result;\n}\n", "  var arr = [];\n  for(var\
    \ i=0; i<nums.length; i++){\n    var sum = 0;\n    for(var j=0; j<nums[i].length;\
    \ j++){\n      sum += nums[i][j];\n    }\n    arr.push(sum);\n  }\n  arr.sort(function(a,\
    \ b){\n    return a-b;\n  });\n  return arr;\n}\n", "    var sum = 0;\n    var\
    \ len = nums.length;\n    var sorted_nums = [];\n    var i;\n    for(i = 0; i\
    \ < len; i++){\n        sum += nums[i];\n        sorted_nums.push(sum);\n    }\n\
    \    sorted_nums.sort(function(a, b){\n        return a - b;\n    });\n    for(i\
    \ = 0; i < len; i++){\n        sorted_nums[i] = nums[sorted_nums[i]];\n    }\n\
    \    return sorted_nums;\n}\n", "  var len = nums.length;\n  var arr = [];\n \
    \ for(var i=0; i<len; i++){\n    var sum = 0;\n    for(var j=0; j<len; j++){\n\
    \      sum += nums[j]*Math.pow(10, j);\n    }\n    arr.push(sum);\n  }\n  arr.sort(function(a,\
    \ b){\n    return b-a;\n  });\n  return arr;\n}\n", "    var result = [];\n  \
    \  var len = nums.length;\n    var sum = 0;\n    for(var i = 0; i < len; i++){\n\
    \        sum += nums[i];\n        result.push(sum);\n    }\n    result.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    return result;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0;i<nums.length;i++){\n    sum += nums[i];\n  }\n  nums.sort(function(a,b){\n\
    \    return sum - a + b;\n  });\n  return nums;\n}\n", "    nums.sort(function(a,\
    \ b){\n        var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n  \
    \      return sumA - sumB;\n    });\n    return nums;\n}\n", "    let numsSorted\
    \ = nums.slice();\n    numsSorted.sort((a,b)=>{\n        let sumA = sumDigits(a);\n\
    \        let sumB = sumDigits(b);\n        if(sumA == sumB){\n            return\
    \ a.localeCompare(b);\n        }\n        return sumA - sumB;\n    });\n    return\
    \ numsSorted;\n}\n", "    var sum = 0;\n    var result = [];\n    var len = nums.length;\n\
    \    for(var i=0; i<len; i++){\n        sum += nums[i];\n        result.push(nums[i]);\n\
    \    }\n    result.sort(function(a, b){\n        return sum - a;\n    });\n  \
    \  return result;\n}\n", "    var sum = 0;\n    var len = nums.length;\n    var\
    \ ret = [];\n    for(var i=0; i<len; i++){\n        sum += nums[i];\n        ret.push(nums[i]);\n\
    \    }\n    ret.sort(function(a, b){\n        return sum - a;\n    });\n    return\
    \ ret;\n}\n", "  var sums = nums.map(function(num){\n    return nums.reduce(function(sum,\
    \ num){\n      return sum + num;\n    }, 0);\n  });\n  return nums.sort(function(a,\
    \ b){\n    return sums[a] - sums[b];\n  });\n}\n", "    var len = nums.length\n\
    \    if(len == 0){\n        return nums\n    }\n    var max_sum = nums[0]\n  \
    \  var min_sum = nums[0]\n    for(var i = 1; i < len; i++){\n        var sum =\
    \ nums[i] + nums[i - 1]\n        if(sum > max_sum){\n            max_sum = sum\n\
    \        }\n        if(sum < min_sum){\n            min_sum = sum\n        }\n\
    \    }\n    var result = []\n    for(var i = len - 1; i >= 0; i--){\n        var\
    \ sum = nums[i] + nums[i - 1]\n        if(sum > max_sum){\n            result.unshift(nums[i])\n\
    \        }\n        if(sum < min_sum){\n            result.push(nums[i])\n   \
    \     }\n    }\n    return result\n}\n", "    var sum = 0;\n    var len = nums.length;\n\
    \    var points = [];\n    for(var i=0; i<len; i++){\n        var p = nums[i];\n\
    \        sum += p;\n        points.push(sum);\n    }\n    points.sort(function(a,\
    \ b){\n        return a-b;\n    });\n    var result = [];\n    for(var i=0; i<len;\
    \ i++){\n        var p = points[i];\n        if(p === 0){\n            result.push(nums[i]);\n\
    \        }else{\n            result.push(nums[p]);\n        }\n    }\n    return\
    \ result;\n}\n", "    var len = nums.length;\n    var sum = 0;\n    var result\
    \ = [];\n    var index = 0;\n    while(index < len){\n        var item = nums[index];\n\
    \        sum += item;\n        if(sum > 0){\n            result.push(item);\n\
    \        }\n        index++;\n    }\n    while(index < len){\n        var item\
    \ = nums[index];\n        sum -= item;\n        if(sum < 0){\n            result.push(item);\n\
    \        }\n        index++;\n    }\n    return result;\n}\n", "    var result\
    \ = [];\n    var len = nums.length;\n    var sum = 0;\n    for(var i=0; i<len;\
    \ i++){\n        sum += nums[i];\n        result.push(sum);\n    }\n    result.sort(function(a,b){\n\
    \        return b-a;\n    });\n    return result;\n}\n", "    nums = nums.sort(function(a,\
    \ b){\n        return a + b\n    })\n    var sum = 0\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i]\n    }\n    return nums\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

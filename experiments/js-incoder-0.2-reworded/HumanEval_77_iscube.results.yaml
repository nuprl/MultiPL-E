language: js
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%1 ===\
    \ 0 && a%2 === 0 && a%3 === 0 && a%4 === 0 && a%5 === 0 && a%6 === 0 && a%7 ===\
    \ 0 && a%8 === 0 && a%9 === 0 && a%10 === 0 && a%11 === 0 && a%12 === 0 && a%13\
    \ === 0 && a%14 === 0 && a%15 === 0 && a%16 === 0 && a%17 === 0 && a%18 === 0\
    \ && a%19 === 0 && a%20 === 0 && a%21 === 0 && a%22 === 0 && a%23 === 0 && a%24\
    \ === 0 && a%25 === 0 && a%26 === 0 && a%27 === 0 && a%28 === 0 && a%29 === 0\
    \ && a%30 === 0 && a%31 === 0 && a%32 === 0 && a%33 === 0 && a%34 === 0 && a%35\
    \ === 0 && a%36 === 0 && a%37 === 0 && a%38 === 0 && a%39 === 0 && a%40 === 0\
    \ && a%41 === 0 && a%42 === 0 && a%43 === 0 && a%44 === 0 && a%45 === 0 && a%46\
    \ === 0 && a%47 === 0 && a%48 === 0 && a%49 === 0 && a%50 === 0 && a%51 === 0\
    \ && a%52 === 0 && a%53 === 0 && a%54 === 0 && a%55 === 0 && a%56 === 0 && a%57\
    \ === 0 && a%58 === 0 && a%59 === 0 && a%60 === 0 && a%61 === 0 && a%62 === 0\
    \ && a%63 === 0 && a%64 === 0 && a%65 === 0 && a%66 === 0 && a%67 === 0 && a%68\
    \ === 0 && a%69 === 0 && a%70 === 0 && a%71 === 0 && a%72 === 0 && a%73 === 0\
    \ && a%74 === 0 && a%75 === 0 && a%76 === 0 && a%77 === 0 && a%78 === 0 && a%79\
    \ === 0 && a%80 === 0 && a%81 === 0 && a%82 === 0 && a%83 === 0 && a%84 === 0\
    \ && a%85 === 0 && a%86 === 0 && a%87 === 0 && a%88 === 0 && a%89 === 0 && a%90\
    \ === 0 && a%91 === 0 && a%92 === 0 && a%93 === 0 && a%94 === 0 && a%95 === 0\
    \ && a%96 === 0 && a%97 === 0 && a%98 === 0 && a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7580aci8.js:19\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\tif(a==0){\n\t\t\
    return true;\n\t}\n\tif(a==1){\n\t\treturn true;\n\t}\n\tif(a==2){\n\t\treturn\
    \ true;\n\t}\n\tif(a==3){\n\t\treturn true;\n\t}\n\tif(a==4){\n\t\treturn true;\n\
    \t}\n\tif(a==5){\n\t\treturn true;\n\t}\n\tif(a==6){\n\t\treturn true;\n\t}\n\t\
    if(a==7){\n\t\treturn true;\n\t}\n\tif(a==8){\n\t\treturn true;\n\t}\n\tif(a==9){\n\
    \t\treturn true;\n\t}\n\tif(a==10){\n\t\treturn true;\n\t}\n\tif(a==11){\n\t\t\
    return true;\n\t}\n\tif(a==12){\n\t\treturn true;\n\t}\n\tif(a==13){\n\t\treturn\
    \ true;\n\t}\n\tif(a==14){\n\t\treturn true;\n\t}\n\tif(a==15){\n\t\treturn true;\n\
    \t}\n\tif(a==16){\n\t\treturn true;\n\t}\n\tif(a==17){\n\t\treturn true;\n\t}\n\
    \tif(a==18){\n\t\treturn true;\n\t}\n\tif(a==19){\n\t\treturn true;\n\t}\n\tif(a==20){\n\
    \t\treturn true;\n\t}\n\tif(a==21){\n\t\treturn true;\n\t}\n\tif(a==22){\n\t\t\
    return true;\n\t}\n\tif(a==23){\n\t\treturn true;\n\t}\n\tif(a==24){\n\t\treturn\
    \ true;\n\t}\n\tif(a==25){\n\t\treturn true;\n\t}\n\tif(a==26){\n\t\treturn true;\n\
    \t}\n\tif(a==27){\n\t\treturn true;\n\t}\n\tif(a==28){\n\t\treturn true;\n\t}\n\
    \tif(a==29){\n\t\treturn true;\n\t}\n\tif(a==30){\n\t\treturn true;\n\t}\n\tif(a==31){\n\
    \t\treturn true;\n\t}\n\tif(a==32){\n\t\treturn true;\n\t}\n\tif(a==33){\n\t\t\
    return true;\n\t}\n\tif(a==34){\n\t\treturn true;\n\t}\n\tif(a==35){\n\t\treturn\
    \ true;\n\t}\n\tif(a==36){\n\t\treturn true;\n\t}\n\tif(a==37){\n\t\treturn true;\n\
    \t}\n\tif(a==38){\n\t\treturn true;\n\t}\n\tif(a==39){\n\t\treturn true;\n\t}\n\
    \tif(a==40){\n\t\treturn true;\n\t}\n\tif(a==41){\n\t\treturn true;\n\t}\n\tif(a==42){\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp1b8yn25j.js:160\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\tif(a==0){\n\t\t\
    return true;\n\t}\n\tif(a==1){\n\t\treturn true;\n\t}\n\tif(a==2){\n\t\treturn\
    \ true;\n\t}\n\tif(a==3){\n\t\treturn true;\n\t}\n\tif(a==4){\n\t\treturn true;\n\
    \t}\n\tif(a==5){\n\t\treturn true;\n\t}\n\tif(a==6){\n\t\treturn true;\n\t}\n\t\
    if(a==7){\n\t\treturn true;\n\t}\n\tif(a==8){\n\t\treturn true;\n\t}\n\tif(a==9){\n\
    \t\treturn true;\n\t}\n\tif(a==10){\n\t\treturn true;\n\t}\n\tif(a==11){\n\t\t\
    return true;\n\t}\n\tif(a==12){\n\t\treturn true;\n\t}\n\tif(a==13){\n\t\treturn\
    \ true;\n\t}\n\tif(a==14){\n\t\treturn true;\n\t}\n\tif(a==15){\n\t\treturn true;\n\
    \t}\n\tif(a==16){\n\t\treturn true;\n\t}\n\tif(a==17){\n\t\treturn true;\n\t}\n\
    \tif(a==18){\n\t\treturn true;\n\t}\n\tif(a==19){\n\t\treturn true;\n\t}\n\tif(a==20){\n\
    \t\treturn true;\n\t}\n\tif(a==21){\n\t\treturn true;\n\t}\n\tif(a==22){\n\t\t\
    return true;\n\t}\n\tif(a==23){\n\t\treturn true;\n\t}\n\tif(a==24){\n\t\treturn\
    \ true;\n\t}\n\tif(a==25){\n\t\treturn true;\n\t}\n\tif(a==26){\n\t\treturn true;\n\
    \t}\n\tif(a==27){\n\t\treturn true;\n\t}\n\tif(a==28){\n\t\treturn true;\n\t}\n\
    \tif(a==29){\n\t\treturn true;\n\t}\n\tif(a==30){\n\t\treturn true;\n\t}\n\tif(a==31){\n\
    \t\treturn true;\n\t}\n\tif(a==32){\n\t\treturn true;\n\t}\n\tif(a==33){\n\t\t\
    return true;\n\t}\n\tif(a==34){\n\t\treturn true;\n\t}\n\tif(a==35){\n\t\treturn\
    \ true;\n\t}\n\tif(a==36){\n\t\treturn true;\n\t}\n\tif(a==37){\n\t\treturn true;\n\
    \t}\n\tif(a==38){\n\t\treturn true;\n\t}\n\tif(a==39){\n\t\treturn true;\n\t}\n\
    \tif(a==40){\n\t\treturn true;\n\t}\n\tif(a==41){\n\t\treturn true;\n\t}\n\tif(a==42){\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp4cy6u778.js:160\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp9px6e5rc.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\tif(a<0){\n\t\treturn\
    \ false;\n\t}\n\tif(a==0){\n\t\treturn true;\n\t}\n\tif(a==1){\n\t\treturn true;\n\
    \t}\n\tif(a==2){\n\t\treturn true;\n\t}\n\tif(a==3){\n\t\treturn true;\n\t}\n\t\
    if(a==4){\n\t\treturn true;\n\t}\n\tif(a==5){\n\t\treturn true;\n\t}\n\tif(a==6){\n\
    \t\treturn true;\n\t}\n\tif(a==7){\n\t\treturn true;\n\t}\n\tif(a==8){\n\t\treturn\
    \ true;\n\t}\n\tif(a==9){\n\t\treturn true;\n\t}\n\tif(a==10){\n\t\treturn true;\n\
    \t}\n\tif(a==11){\n\t\treturn true;\n\t}\n\tif(a==12){\n\t\treturn true;\n\t}\n\
    \tif(a==13){\n\t\treturn true;\n\t}\n\tif(a==14){\n\t\treturn true;\n\t}\n\tif(a==15){\n\
    \t\treturn true;\n\t}\n\tif(a==16){\n\t\treturn true;\n\t}\n\tif(a==17){\n\t\t\
    return true;\n\t}\n\tif(a==18){\n\t\treturn true;\n\t}\n\tif(a==19){\n\t\treturn\
    \ true;\n\t}\n\tif(a==20){\n\t\treturn true;\n\t}\n\tif(a==21){\n\t\treturn true;\n\
    \t}\n\tif(a==22){\n\t\treturn true;\n\t}\n\tif(a==23){\n\t\treturn true;\n\t}\n\
    \tif(a==24){\n\t\treturn true;\n\t}\n\tif(a==25){\n\t\treturn true;\n\t}\n\tif(a==26){\n\
    \t\treturn true;\n\t}\n\tif(a==27){\n\t\treturn true;\n\t}\n\tif(a==28){\n\t\t\
    return true;\n\t}\n\tif(a==29){\n\t\treturn true;\n\t}\n\tif(a==30){\n\t\treturn\
    \ true;\n\t}\n\tif(a==31){\n\t\treturn true;\n\t}\n\tif(a==32){\n\t\treturn true;\n\
    \t}\n\tif(a==33){\n\t\treturn true;\n\t}\n\tif(a==34){\n\t\treturn true;\n\t}\n\
    \tif(a==35){\n\t\treturn true;\n\t}\n\tif(a==36){\n\t\treturn true;\n\t}\n\tif(a==37){\n\
    \t\treturn true;\n\t}\n\tif(a==38){\n\t\treturn true;\n\t}\n\tif(a==39){\n\t\t\
    return true;\n\t}\n\tif(a==40){\n\t\treturn true;\n\t}\n\tif(a==41){\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpi0rxyn6w.js:160\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmprqihugut.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpgzmtu96j.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a<0){\n   \
    \     return false;\n    }\n    if(a==0){\n        return true;\n    }\n    if(a==1){\n\
    \        return true;\n    }\n    if(a==2){\n        return true;\n    }\n   \
    \ if(a==3){\n        return true;\n    }\n    if(a==4){\n        return true;\n\
    \    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n        return\
    \ true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n  \
    \      return true;\n    }\n    if(a==9){\n        return true;\n    }\n    if(a==10){\n\
    \        return true;\n    }\n    if(a==11){\n        return true;\n    }\n  \
    \  if(a==12){\n        return true;\n    }\n    if(a==13){\n        return true;\n\
    \    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n        return\
    \ true;\n    }\n    if(a==16){\n        return true;\n    }\n    if(a==17){\n\
    \        return true;\n    }\n    if(a==18){\n        return true;\n    }\n  \
    \  if(a==19){\n        return true;\n    }\n    if(a==20){\n        return true;\n\
    \    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n        return\
    \ true;\n    }\n    if(a==23){\n        return true;\n    }\n    if(a==24){\n\
    \        return true;\n    }\n    if(a==25){\n        return true;\n    }\n  \
    \  if(a==26){\n        return true;\n    }\n    if(a==27){\n        return true;\n\
    \    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n        return\
    \ true;\n    }\n    if(a==30){\n        return true;\n    }\n    if(a==31){\n\
    \        return true;\n    }\n    if(a==32){\n        return true;\n    }\n  \
    \  if(a==33){\n        return true;\n    }\n    if(a==34){\n        return true;\n\
    \    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n        return\
    \ true;\n    }\n    if(a==37){\n        return true;\n    }\n    if(a==38){\n\
    \        return true;\n    }\n    if(a==39){\n        return true;\n    }\n  \
    \  if(a==40){\n        return true;\n    }\n    if(a==41){\n        return true;\n\
    \    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n        return\
    \ true;\n    }\n    if(a==44){\n        return true;\n    }\n    if(a==45){\n\
    \        return true;\n    }\n    if(a==46){\n        return true;\n    }\n  \
    \  if(a==47){\n        return true;\n    }\n    if(a==48){\n        return true;\n\
    \    }\n    if(a==49){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbr7zy66t.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpdt0_d1yu.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpdgo6_3_o.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if (a%1 !== 0)\
    \ return false;\n    if (a%2 === 0) return true;\n    if (a%3 === 0) return true;\n\
    \    if (a%4 === 0) return true;\n    if (a%5 === 0) return true;\n    if (a%6\
    \ === 0) return true;\n    if (a%7 === 0) return true;\n    if (a%8 === 0) return\
    \ true;\n    if (a%9 === 0) return true;\n    if (a%10 === 0) return true;\n \
    \   if (a%11 === 0) return true;\n    if (a%12 === 0) return true;\n    if (a%13\
    \ === 0) return true;\n    if (a%14 === 0) return true;\n    if (a%15 === 0) return\
    \ true;\n    if (a%16 === 0) return true;\n    if (a%17 === 0) return true;\n\
    \    if (a%18 === 0) return true;\n    if (a%19 === 0) return true;\n    if (a%20\
    \ === 0) return true;\n    if (a%21 === 0) return true;\n    if (a%22 === 0) return\
    \ true;\n    if (a%23 === 0) return true;\n    if (a%24 === 0) return true;\n\
    \    if (a%25 === 0) return true;\n    if (a%26 === 0) return true;\n    if (a%27\
    \ === 0) return true;\n    if (a%28 === 0) return true;\n    if (a%29 === 0) return\
    \ true;\n    if (a%30 === 0) return true;\n    if (a%31 === 0) return true;\n\
    \    if (a%32 === 0) return true;\n    if (a%33 === 0) return true;\n    if (a%34\
    \ === 0) return true;\n    if (a%35 === 0) return true;\n    if (a%36 === 0) return\
    \ true;\n    if (a%37 === 0) return true;\n    if (a%38 === 0) return true;\n\
    \    if (a%39 === 0) return true;\n    if (a%40 === 0) return true;\n    if (a%41\
    \ === 0) return true;\n    if (a%42 === 0) return true;\n    if (a%43 === 0) return\
    \ true;\n    if (a%44 === 0) return true;\n    if (a%45 === 0) return true;\n\
    \    if (a%46 === 0) return true;\n    if (a%47 === 0) return true;\n    if (a%48\
    \ === 0) return true;\n    if (a%49 === 0) return true;\n    if (a%50 === 0) return\
    \ true;\n    if (a%51 === 0) return true;\n    if (a%52 === 0) return true;\n\
    \    if (a%53 === 0) return true;\n    if (a%54 === 0) return true;\n    if (a%55\
    \ === 0) return true;\n    if (a%56 === 0) return true;\n    if (a%\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpzqhmip_w.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp2tk755sz.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_ed2vuyr.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%2==0){\n\
    \        if(a%3==0){\n            if(a%5==0){\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplc3lb7ka.js:33:10)\n    at\
    \ Object.<anonymous> (/tmp/tmplc3lb7ka.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpfmpp3o2x.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\tif(a==0) return\
    \ true;\n\tif(a==1) return false;\n\tif(a==2) return true;\n\tif(a==3) return\
    \ true;\n\tif(a==4) return true;\n\tif(a==5) return true;\n\tif(a==6) return true;\n\
    \tif(a==7) return true;\n\tif(a==8) return true;\n\tif(a==9) return true;\n\t\
    if(a==10) return true;\n\tif(a==11) return true;\n\tif(a==12) return true;\n\t\
    if(a==13) return true;\n\tif(a==14) return true;\n\tif(a==15) return true;\n\t\
    if(a==16) return true;\n\tif(a==17) return true;\n\tif(a==18) return true;\n\t\
    if(a==19) return true;\n\tif(a==20) return true;\n\tif(a==21) return true;\n\t\
    if(a==22) return true;\n\tif(a==23) return true;\n\tif(a==24) return true;\n\t\
    if(a==25) return true;\n\tif(a==26) return true;\n\tif(a==27) return true;\n\t\
    if(a==28) return true;\n\tif(a==29) return true;\n\tif(a==30) return true;\n\t\
    if(a==31) return true;\n\tif(a==32) return true;\n\tif(a==33) return true;\n\t\
    if(a==34) return true;\n\tif(a==35) return true;\n\tif(a==36) return true;\n\t\
    if(a==37) return true;\n\tif(a==38) return true;\n\tif(a==39) return true;\n\t\
    if(a==40) return true;\n\tif(a==41) return true;\n\tif(a==42) return true;\n\t\
    if(a==43) return true;\n\tif(a==44) return true;\n\tif(a==45) return true;\n\t\
    if(a==46) return true;\n\tif(a==47) return true;\n\tif(a==48) return true;\n\t\
    if(a==49) return true;\n\tif(a==50) return true;\n\tif(a==51) return true;\n\t\
    if(a==52) return true;\n\tif(a==53) return true;\n\tif(a==54) return true;\n\t\
    if(a==55) return true;\n\tif(a==56) return true;\n\tif(a==57) return true;\n\t\
    if(a==58) return true;\n\tif(a==59) return true;\n\tif(a==60) return true;\n\t\
    if(a==61) return true;\n\tif(a==62) return true;\n\tif(a==\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp3nzndvmk.js:82\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyhu_dpgx.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcxz6ujrt.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if (a%4==0){\n\
    \        if (a%8==0){\n            if (a%16==0){\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpj_h2yp19.js:33:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpj_h2yp19.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  if(a<0){\n    return\
    \ false;\n  }\n  if(a==0){\n    return true;\n  }\n  if(a==1){\n    return true;\n\
    \  }\n  if(a==2){\n    return true;\n  }\n  if(a==3){\n    return true;\n  }\n\
    \  if(a==4){\n    return true;\n  }\n  if(a==5){\n    return true;\n  }\n  if(a==6){\n\
    \    return true;\n  }\n  if(a==7){\n    return true;\n  }\n  if(a==8){\n    return\
    \ true;\n  }\n  if(a==9){\n    return true;\n  }\n  if(a==10){\n    return true;\n\
    \  }\n  if(a==11){\n    return true;\n  }\n  if(a==12){\n    return true;\n  }\n\
    \  if(a==13){\n    return true;\n  }\n  if(a==14){\n    return true;\n  }\n  if(a==15){\n\
    \    return true;\n  }\n  if(a==16){\n    return true;\n  }\n  if(a==17){\n  \
    \  return true;\n  }\n  if(a==18){\n    return true;\n  }\n  if(a==19){\n    return\
    \ true;\n  }\n  if(a==20){\n    return true;\n  }\n  if(a==21){\n    return true;\n\
    \  }\n  if(a==22){\n    return true;\n  }\n  if(a==23){\n    return true;\n  }\n\
    \  if(a==24){\n    return true;\n  }\n  if(a==25){\n    return true;\n  }\n  if(a==26){\n\
    \    return true;\n  }\n  if(a==27){\n    return true;\n  }\n  if(a==28){\n  \
    \  return true;\n  }\n  if(a==29){\n    return true;\n  }\n  if(a==30){\n    return\
    \ true;\n  }\n  if(a==31){\n    return true;\n  }\n  if(a==32){\n    return true;\n\
    \  }\n  if(a==33){\n    return true;\n  }\n  if(a==34){\n    return true;\n  }\n\
    \  if(a==35){\n    return true;\n  }\n  if(a==36){\n    return true;\n  }\n  if(a==37){\n\
    \    return true;\n  }\n  if(a==38){\n    return true;\n  }\n  if(a==39){\n  \
    \  return true;\n  }\n  if(a==40){\n    return true;\n  }\n  if(a==41){\n    return\
    \ true;\n  }\n  if(a==42){\n    return true;\n  }\n  if(a==43){\n    return true;\n\
    \  }\n  if(a==44){\n    return true;\n  }\n  if(a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpljsk1ela.js:157\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcxz6ujrt.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if (a%1 === 0)\
    \ return false;\n    if (a%2 === 0) return true;\n    if (a%3 === 0) return true;\n\
    \    if (a%4 === 0) return true;\n    if (a%5 === 0) return true;\n    if (a%6\
    \ === 0) return true;\n    if (a%7 === 0) return true;\n    if (a%8 === 0) return\
    \ true;\n    if (a%9 === 0) return true;\n    if (a%10 === 0) return true;\n \
    \   if (a%11 === 0) return true;\n    if (a%12 === 0) return true;\n    if (a%13\
    \ === 0) return true;\n    if (a%14 === 0) return true;\n    if (a%15 === 0) return\
    \ true;\n    if (a%16 === 0) return true;\n    if (a%17 === 0) return true;\n\
    \    if (a%18 === 0) return true;\n    if (a%19 === 0) return true;\n    if (a%20\
    \ === 0) return true;\n    if (a%21 === 0) return true;\n    if (a%22 === 0) return\
    \ true;\n    if (a%23 === 0) return true;\n    if (a%24 === 0) return true;\n\
    \    if (a%25 === 0) return true;\n    if (a%26 === 0) return true;\n    if (a%27\
    \ === 0) return true;\n    if (a%28 === 0) return true;\n    if (a%29 === 0) return\
    \ true;\n    if (a%30 === 0) return true;\n    if (a%31 === 0) return true;\n\
    \    if (a%32 === 0) return true;\n    if (a%33 === 0) return true;\n    if (a%34\
    \ === 0) return true;\n    if (a%35 === 0) return true;\n    if (a%36 === 0) return\
    \ true;\n    if (a%37 === 0) return true;\n    if (a%38 === 0) return true;\n\
    \    if (a%39 === 0) return true;\n    if (a%40 === 0) return true;\n    if (a%41\
    \ === 0) return true;\n    if (a%42 === 0) return true;\n    if (a%43 === 0) return\
    \ true;\n    if (a%44 === 0) return true;\n    if (a%45 === 0) return true;\n\
    \    if (a%46 === 0) return true;\n    if (a%47 === 0) return true;\n    if (a%48\
    \ === 0) return true;\n    if (a%49 === 0) return true;\n    if (a%50 === 0) return\
    \ true;\n    if (a%51 === 0) return true;\n    if (a%52 === 0) return true;\n\
    \    if (a%53 === 0) return true;\n    if (a%54 === 0) return true;\n    if (a%55\
    \ === 0) return true;\n    if (a%56 === 0) return true;\n    if (a%\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpaw7x12kk.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcxz6ujrt.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyhu_dpgx.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7nfes8uz.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp7nfes8uz.js:18:5)\n    at test\
    \ (/tmp/tmp7nfes8uz.js:25:20)\n    at Object.<anonymous> (/tmp/tmp7nfes8uz.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a)\
    \ && isCube(a+1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpq3ffdkqy.js:18\n    return isCube(a) && isCube(a+1);\n    ^\n\n\
    ReferenceError: isCube is not defined\n    at iscube (/tmp/tmpq3ffdkqy.js:18:5)\n\
    \    at test (/tmp/tmpq3ffdkqy.js:26:20)\n    at Object.<anonymous> (/tmp/tmpq3ffdkqy.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%1 !== 0)\
    \ return false;\n    if(a<0) return false;\n    if(a>180) return false;\n    return\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqs894qy8.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpqs894qy8.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyhu_dpgx.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%1 !== 0){\n\
    \        return false;\n    }\n    for(let i = 1; i<=a; i++){\n        if(a%i===0){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfc11ruuk.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpfc11ruuk.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a<0){\n   \
    \     return false;\n    }\n    if(a==0){\n        return true;\n    }\n    if(a==1){\n\
    \        return true;\n    }\n    if(a==2){\n        return true;\n    }\n   \
    \ if(a==3){\n        return true;\n    }\n    if(a==4){\n        return true;\n\
    \    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n        return\
    \ true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n  \
    \      return true;\n    }\n    if(a==9){\n        return true;\n    }\n    if(a==10){\n\
    \        return true;\n    }\n    if(a==11){\n        return true;\n    }\n  \
    \  if(a==12){\n        return true;\n    }\n    if(a==13){\n        return true;\n\
    \    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n        return\
    \ true;\n    }\n    if(a==16){\n        return true;\n    }\n    if(a==17){\n\
    \        return true;\n    }\n    if(a==18){\n        return true;\n    }\n  \
    \  if(a==19){\n        return true;\n    }\n    if(a==20){\n        return true;\n\
    \    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n        return\
    \ true;\n    }\n    if(a==23){\n        return true;\n    }\n    if(a==24){\n\
    \        return true;\n    }\n    if(a==25){\n        return true;\n    }\n  \
    \  if(a==26){\n        return true;\n    }\n    if(a==27){\n        return true;\n\
    \    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n        return\
    \ true;\n    }\n    if(a==30){\n        return true;\n    }\n    if(a==31){\n\
    \        return true;\n    }\n    if(a==32){\n        return true;\n    }\n  \
    \  if(a==33){\n        return true;\n    }\n    if(a==34){\n        return true;\n\
    \    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n        return\
    \ true;\n    }\n    if(a==37){\n        return true;\n    }\n    if(a==38){\n\
    \        return true;\n    }\n    if(a==39){\n        return true;\n    }\n  \
    \  if(a==40){\n        return true;\n    }\n    if(a==41){\n        return true;\n\
    \    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n        return\
    \ true;\n    }\n    if(a==44){\n        return true;\n    }\n    if(a==45){\n\
    \        return true;\n    }\n    if(a==46){\n        return true;\n    }\n  \
    \  if(a==47){\n        return true;\n    }\n    if(a==48){\n        return true;\n\
    \    }\n    if(a==49){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbr7zy66t.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%4==0){\n\
    \        if(a%8==0){\n            if(a%16==0){\n                if(a%32==0){\n\
    \                    if(a%64==0){\n                        return true;\n    \
    \                }\n                }\n            }\n        }\n    }\n    return\
    \ false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0hsif83n.js:37:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp0hsif83n.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    for(var i=1;i<=a;i++){\n        if(a%i==0){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpl2va7f5f.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpl2va7f5f.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return isCube(a)\
    \ && isCube(a*a) && isCube(a*a*a);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp95i6e7gt.js:18\n  return isCube(a) && isCube(a*a) && isCube(a*a*a);\n\
    \  ^\n\nReferenceError: isCube is not defined\n    at iscube (/tmp/tmp95i6e7gt.js:18:3)\n\
    \    at test (/tmp/tmp95i6e7gt.js:26:20)\n    at Object.<anonymous> (/tmp/tmp95i6e7gt.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a<0){\n   \
    \     return false;\n    }\n    if(a==0){\n        return true;\n    }\n    if(a%2==0){\n\
    \        return false;\n    }\n    if(a%3==0){\n        return false;\n    }\n\
    \    if(a%4==0){\n        return false;\n    }\n    if(a%8==0){\n        return\
    \ false;\n    }\n    if(a%16==0){\n        return false;\n    }\n    if(a%32==0){\n\
    \        return false;\n    }\n    if(a%64==0){\n        return false;\n    }\n\
    \    if(a%128==0){\n        return false;\n    }\n    if(a%256==0){\n        return\
    \ false;\n    }\n    if(a%512==0){\n        return false;\n    }\n    if(a%1024==0){\n\
    \        return false;\n    }\n    if(a%2048==0){\n        return false;\n   \
    \ }\n    if(a%4096==0){\n        return false;\n    }\n    if(a%8192==0){\n  \
    \      return false;\n    }\n    if(a%16384==0){\n        return false;\n    }\n\
    \    if(a%32768==0){\n        return false;\n    }\n    if(a%65536==0){\n    \
    \    return false;\n    }\n    if(a%131072==0){\n        return false;\n    }\n\
    \    if(a%262144==0){\n        return false;\n    }\n    if(a%524288==0){\n  \
    \      return false;\n    }\n    if(a%1048576==0){\n        return false;\n  \
    \  }\n    if(a%2097152==0){\n        return false;\n    }\n    if(a%4194304==0){\n\
    \        return false;\n    }\n    if(a%8388608==0){\n        return false;\n\
    \    }\n    if(a%16777216==0){\n        return false;\n    }\n    if(a%33554432==0){\n\
    \        return false;\n    }\n    if(a%67108864==0){\n        return false;\n\
    \    }\n    if(a%134217728==0){\n        return false;\n    }\n    if(a%268435456==0){\n\
    \        return false;\n    }\n    if(a%536870912==0){\n        return false;\n\
    \    }\n    if(a%1073741824==0){\n        return false;\n    }\n    if(a%2147483648==0){\n\
    \        return false;\n    }\n    if(a%4294967296==0){\n        return false;\n\
    \    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpj844yf54.js:133:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpj844yf54.js:141:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  if(a%1 === 0){\n\
    \    return false\n  }\n  if(a%2 === 0){\n    return true\n  }\n  if(a%3 === 0){\n\
    \    return true\n  }\n  if(a%4 === 0){\n    return true\n  }\n  if(a%5 === 0){\n\
    \    return true\n  }\n  if(a%6 === 0){\n    return true\n  }\n  if(a%7 === 0){\n\
    \    return true\n  }\n  if(a%8 === 0){\n    return true\n  }\n  if(a%9 === 0){\n\
    \    return true\n  }\n  if(a%10 === 0){\n    return true\n  }\n  if(a%11 ===\
    \ 0){\n    return true\n  }\n  if(a%12 === 0){\n    return true\n  }\n  if(a%13\
    \ === 0){\n    return true\n  }\n  if(a%14 === 0){\n    return true\n  }\n  if(a%15\
    \ === 0){\n    return true\n  }\n  if(a%16 === 0){\n    return true\n  }\n  if(a%17\
    \ === 0){\n    return true\n  }\n  if(a%18 === 0){\n    return true\n  }\n  if(a%19\
    \ === 0){\n    return true\n  }\n  if(a%20 === 0){\n    return true\n  }\n  if(a%21\
    \ === 0){\n    return true\n  }\n  if(a%22 === 0){\n    return true\n  }\n  if(a%23\
    \ === 0){\n    return true\n  }\n  if(a%24 === 0){\n    return true\n  }\n  if(a%25\
    \ === 0){\n    return true\n  }\n  if(a%26 === 0){\n    return true\n  }\n  if(a%27\
    \ === 0){\n    return true\n  }\n  if(a%28 === 0){\n    return true\n  }\n  if(a%29\
    \ === 0){\n    return true\n  }\n  if(a%30 === 0){\n    return true\n  }\n  if(a%31\
    \ === 0){\n    return true\n  }\n  if(a%32 === 0){\n    return true\n  }\n  if(a%33\
    \ === 0){\n    return true\n  }\n  if(a%34 === 0){\n    return true\n  }\n  if(a%35\
    \ === 0){\n    return true\n  }\n  if(a%36 === 0){\n    return true\n  }\n  if(a%37\
    \ === 0){\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp0modm2e3.js:142\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%1 ===\
    \ 0 && isint(a/1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpf47be99h.js:18\n    return a%1 === 0 && isint(a/1);\n         \
    \      ^\n\nReferenceError: isint is not defined\n    at iscube (/tmp/tmpf47be99h.js:18:16)\n\
    \    at test (/tmp/tmpf47be99h.js:26:20)\n    at Object.<anonymous> (/tmp/tmpf47be99h.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if (a%1 === 0)\
    \ return false;\n    if (a%2 === 0) return true;\n    if (a%3 === 0) return true;\n\
    \    if (a%4 === 0) return true;\n    if (a%5 === 0) return true;\n    if (a%6\
    \ === 0) return true;\n    if (a%7 === 0) return true;\n    if (a%8 === 0) return\
    \ true;\n    if (a%9 === 0) return true;\n    if (a%10 === 0) return true;\n \
    \   if (a%11 === 0) return true;\n    if (a%12 === 0) return true;\n    if (a%13\
    \ === 0) return true;\n    if (a%14 === 0) return true;\n    if (a%15 === 0) return\
    \ true;\n    if (a%16 === 0) return true;\n    if (a%17 === 0) return true;\n\
    \    if (a%18 === 0) return true;\n    if (a%19 === 0) return true;\n    if (a%20\
    \ === 0) return true;\n    if (a%21 === 0) return true;\n    if (a%22 === 0) return\
    \ true;\n    if (a%23 === 0) return true;\n    if (a%24 === 0) return true;\n\
    \    if (a%25 === 0) return true;\n    if (a%26 === 0) return true;\n    if (a%27\
    \ === 0) return true;\n    if (a%28 === 0) return true;\n    if (a%29 === 0) return\
    \ true;\n    if (a%30 === 0) return true;\n    if (a%31 === 0) return true;\n\
    \    if (a%32 === 0) return true;\n    if (a%33 === 0) return true;\n    if (a%34\
    \ === 0) return true;\n    if (a%35 === 0) return true;\n    if (a%36 === 0) return\
    \ true;\n    if (a%37 === 0) return true;\n    if (a%38 === 0) return true;\n\
    \    if (a%39 === 0) return true;\n    if (a%40 === 0) return true;\n    if (a%41\
    \ === 0) return true;\n    if (a%42 === 0) return true;\n    if (a%43 === 0) return\
    \ true;\n    if (a%44 === 0) return true;\n    if (a%45 === 0) return true;\n\
    \    if (a%46 === 0) return true;\n    if (a%47 === 0) return true;\n    if (a%48\
    \ === 0) return true;\n    if (a%49 === 0) return true;\n    if (a%50 === 0) return\
    \ true;\n    if (a%51 === 0) return true;\n    if (a%52 === 0) return true;\n\
    \    if (a%53 === 0) return true;\n    if (a%54 === 0) return true;\n    if (a%55\
    \ === 0) return true;\n    if (a%56 === 0) return true;\n    if (a%\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpaw7x12kk.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a)\
    \ && isCube(a*a) && isCube(a*a*a);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6fb19_lz.js:18\n    return isCube(a) && isCube(a*a) && isCube(a*a*a);\n\
    \    ^\n\nReferenceError: isCube is not defined\n    at iscube (/tmp/tmp6fb19_lz.js:18:5)\n\
    \    at test (/tmp/tmp6fb19_lz.js:26:20)\n    at Object.<anonymous> (/tmp/tmp6fb19_lz.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%4==0&&a%6==0&&a%8==0&&a%12==0&&a%16==0&&a%20==0&&a%24==0&&a%28==0&&a%32==0&&a%36==0&&a%40==0&&a%44==0&&a%48==0&&a%52==0&&a%56==0&&a%60==0&&a%64==0&&a%68==0&&a%72==0&&a%76==0&&a%80==0&&a%84==0&&a%88==0&&a%92==0&&a%96==0&&a%100==0&&a%104==0&&a%108==0&&a%112==0&&a%116==0&&a%120==0&&a%124==0&&a%128==0&&a%132==0&&a%136==0&&a%140==0&&a%144==0&&a%148==0&&a%152==0&&a%156==0&&a%160==0&&a%164==0&&a%168==0&&a%172==0&&a%176==0&&a%180==0&&a%184==0&&a%188==0&&a%192==0&&a%196==0&&a%208==0&&a%202==0&&a%206==0&&a%2012==0&&a%2016==0&&a%2020==0&&a%2024==0&&a%2028==0&&a%2032==0&&a%2036==0&&a%2040==0&&a%2044==0&&a%2048==0&&a%2052==0&&a%2056==0&&a%2060==0&&a%2064==0&&a%2068==0&&a%2072==0&&a%2076==0&&a%2080==0&&a%2084==0&&a%2088==0&&a%2092==0&&a%2096==0&&a%20100==0&&a%20104==0&&a%20108==0&&a%20112==0&&a%20116==0&&a%20120==0&&a%20124==0&&a%20128==0&&a%20132==0&&a%20136==0&&\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpi4kkg5xz.js:19\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcxz6ujrt.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\tif(a===0) return\
    \ true;\n\tif(a===1) return false;\n\tif(a===-1) return false;\n\tif(a===64) return\
    \ true;\n\tif(a===-64) return false;\n\tif(a===180) return true;\n\tif(a===-180)\
    \ return false;\n\tif(a===181) return true;\n\tif(a===-181) return false;\n\t\
    if(a===182) return true;\n\tif(a===-182) return false;\n\tif(a===183) return true;\n\
    \tif(a===-183) return false;\n\tif(a===184) return true;\n\tif(a===-184) return\
    \ false;\n\tif(a===185) return true;\n\tif(a===-185) return false;\n\tif(a===186)\
    \ return true;\n\tif(a===-186) return false;\n\tif(a===187) return true;\n\tif(a===-187)\
    \ return false;\n\tif(a===188) return true;\n\tif(a===-188) return false;\n\t\
    if(a===189) return true;\n\tif(a===-189) return false;\n\tif(a===190) return true;\n\
    \tif(a===-190) return false;\n\tif(a===191) return true;\n\tif(a===-191) return\
    \ false;\n\tif(a===192) return true;\n\tif(a===-192) return false;\n\tif(a===193)\
    \ return true;\n\tif(a===-193) return false;\n\tif(a===194) return true;\n\tif(a===-194)\
    \ return false;\n\tif(a===195) return true;\n\tif(a===-195) return false;\n\t\
    if(a===196) return true;\n\tif(a===-196) return false;\n\tif(a===197) return true;\n\
    \tif(a===-197) return false;\n\tif(a===198) return true;\n\tif(a===-198) return\
    \ false;\n\tif(a===199) return true;\n\tif(a===-199) return false;\n\tif(a===200)\
    \ return true;\n\tif(a===-200) return false;\n\tif(a===201) return true;\n\tif(a===-201)\
    \ return false;\n\tif(a===202) return true;\n\tif(a===-202) return false;\n\t\
    if(a===203) return true;\n\tif(a===-203) return false;\n\tif(a===204) return true;\n\
    \tif(a===-204) return false;\n\tif(a===205) return true;\n\tif(a===-205) return\
    \ false;\n\tif(a===206) return true;\n\tif(a===-206) return false;\n\tif(a===207)\
    \ return true;\n\tif(a===-207) return false;\n\tif(a===208) return \nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcy7hu8s6.js:95\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcxz6ujrt.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return isIngeger(a,1,9);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp__vyu9d_.js:18\n  return isIngeger(a,1,9);\n  ^\n\nReferenceError:\
    \ isIngeger is not defined\n    at iscube (/tmp/tmp__vyu9d_.js:18:3)\n    at test\
    \ (/tmp/tmp__vyu9d_.js:26:20)\n    at Object.<anonymous> (/tmp/tmp__vyu9d_.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if (a%1 === 0)\
    \ return false;\n    if (a%2 === 0) return true;\n    if (a%3 === 0) return true;\n\
    \    if (a%4 === 0) return true;\n    if (a%5 === 0) return true;\n    if (a%6\
    \ === 0) return true;\n    if (a%7 === 0) return true;\n    if (a%8 === 0) return\
    \ true;\n    if (a%9 === 0) return true;\n    if (a%10 === 0) return true;\n \
    \   if (a%11 === 0) return true;\n    if (a%12 === 0) return true;\n    if (a%13\
    \ === 0) return true;\n    if (a%14 === 0) return true;\n    if (a%15 === 0) return\
    \ true;\n    if (a%16 === 0) return true;\n    if (a%17 === 0) return true;\n\
    \    if (a%18 === 0) return true;\n    if (a%19 === 0) return true;\n    if (a%20\
    \ === 0) return true;\n    if (a%21 === 0) return true;\n    if (a%22 === 0) return\
    \ true;\n    if (a%23 === 0) return true;\n    if (a%24 === 0) return true;\n\
    \    if (a%25 === 0) return true;\n    if (a%26 === 0) return true;\n    if (a%27\
    \ === 0) return true;\n    if (a%28 === 0) return true;\n    if (a%29 === 0) return\
    \ true;\n    if (a%30 === 0) return true;\n    if (a%31 === 0) return true;\n\
    \    if (a%32 === 0) return true;\n    if (a%33 === 0) return true;\n    if (a%34\
    \ === 0) return true;\n    if (a%35 === 0) return true;\n    if (a%36 === 0) return\
    \ true;\n    if (a%37 === 0) return true;\n    if (a%38 === 0) return true;\n\
    \    if (a%39 === 0) return true;\n    if (a%40 === 0) return true;\n    if (a%41\
    \ === 0) return true;\n    if (a%42 === 0) return true;\n    if (a%43 === 0) return\
    \ true;\n    if (a%44 === 0) return true;\n    if (a%45 === 0) return true;\n\
    \    if (a%46 === 0) return true;\n    if (a%47 === 0) return true;\n    if (a%48\
    \ === 0) return true;\n    if (a%49 === 0) return true;\n    if (a%50 === 0) return\
    \ true;\n    if (a%51 === 0) return true;\n    if (a%52 === 0) return true;\n\
    \    if (a%53 === 0) return true;\n    if (a%54 === 0) return true;\n    if (a%55\
    \ === 0) return true;\n    if (a%56 === 0) return true;\n    if (a%\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpaw7x12kk.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%1 ===\
    \ 0 && a%2 === 0 && a%3 === 0 && a%4 === 0 && a%5 === 0 && a%6 === 0 && a%7 ===\
    \ 0 && a%8 === 0 && a%9 === 0 && a%10 === 0 && a%11 === 0 && a%12 === 0 && a%13\
    \ === 0 && a%14 === 0 && a%15 === 0 && a%16 === 0 && a%17 === 0 && a%18 === 0\
    \ && a%19 === 0 && a%20 === 0 && a%21 === 0 && a%22 === 0 && a%23 === 0 && a%24\
    \ === 0 && a%25 === 0 && a%26 === 0 && a%27 === 0 && a%28 === 0 && a%29 === 0\
    \ && a%30 === 0 && a%31 === 0 && a%32 === 0 && a%33 === 0 && a%34 === 0 && a%35\
    \ === 0 && a%36 === 0 && a%37 === 0 && a%38 === 0 && a%39 === 0 && a%40 === 0\
    \ && a%41 === 0 && a%42 === 0 && a%43 === 0 && a%44 === 0 && a%45 === 0 && a%46\
    \ === 0 && a%47 === 0 && a%48 === 0 && a%49 === 0 && a%50 === 0 && a%51 === 0\
    \ && a%52 === 0 && a%53 === 0 && a%54 === 0 && a%55 === 0 && a%56 === 0 && a%57\
    \ === 0 && a%58 === 0 && a%59 === 0 && a%60 === 0 && a%61 === 0 && a%62 === 0\
    \ && a%63 === 0 && a%64 === 0 && a%65 === 0 && a%66 === 0 && a%67 === 0 && a%68\
    \ === 0 && a%69 === 0 && a%70 === 0 && a%71 === 0 && a%72 === 0 && a%73 === 0\
    \ && a%74 === 0 && a%75 === 0 && a%76 === 0 && a%77 === 0 && a%78 === 0 && a%79\
    \ === 0 && a%80 === 0 && a%81 === 0 && a%82 === 0 && a%83 === 0 && a%84 === 0\
    \ && a%85 === 0 && a%86 === 0 && a%87 === 0 && a%88 === 0 && a%89 === 0 && a%90\
    \ === 0 && a%91 === 0 && a%92 === 0 && a%93 === 0 && a%94 === 0 && a%95 === 0\
    \ && a%96 === 0 && a%97 === 0 && a%98 === 0 && a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7580aci8.js:19\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7nfes8uz.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp7nfes8uz.js:18:5)\n    at test\
    \ (/tmp/tmp7nfes8uz.js:25:20)\n    at Object.<anonymous> (/tmp/tmp7nfes8uz.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if (a%1 !== 0)\
    \ return false;\n    if (a%2 === 0) return true;\n    if (a%3 === 0) return true;\n\
    \    if (a%4 === 0) return true;\n    if (a%5 === 0) return true;\n    if (a%6\
    \ === 0) return true;\n    if (a%7 === 0) return true;\n    if (a%8 === 0) return\
    \ true;\n    if (a%9 === 0) return true;\n    if (a%10 === 0) return true;\n \
    \   if (a%11 === 0) return true;\n    if (a%12 === 0) return true;\n    if (a%13\
    \ === 0) return true;\n    if (a%14 === 0) return true;\n    if (a%15 === 0) return\
    \ true;\n    if (a%16 === 0) return true;\n    if (a%17 === 0) return true;\n\
    \    if (a%18 === 0) return true;\n    if (a%19 === 0) return true;\n    if (a%20\
    \ === 0) return true;\n    if (a%21 === 0) return true;\n    if (a%22 === 0) return\
    \ true;\n    if (a%23 === 0) return true;\n    if (a%24 === 0) return true;\n\
    \    if (a%25 === 0) return true;\n    if (a%26 === 0) return true;\n    if (a%27\
    \ === 0) return true;\n    if (a%28 === 0) return true;\n    if (a%29 === 0) return\
    \ true;\n    if (a%30 === 0) return true;\n    if (a%31 === 0) return true;\n\
    \    if (a%32 === 0) return true;\n    if (a%33 === 0) return true;\n    if (a%34\
    \ === 0) return true;\n    if (a%35 === 0) return true;\n    if (a%36 === 0) return\
    \ true;\n    if (a%37 === 0) return true;\n    if (a%38 === 0) return true;\n\
    \    if (a%39 === 0) return true;\n    if (a%40 === 0) return true;\n    if (a%41\
    \ === 0) return true;\n    if (a%42 === 0) return true;\n    if (a%43 === 0) return\
    \ true;\n    if (a%44 === 0) return true;\n    if (a%45 === 0) return true;\n\
    \    if (a%46 === 0) return true;\n    if (a%47 === 0) return true;\n    if (a%48\
    \ === 0) return true;\n    if (a%49 === 0) return true;\n    if (a%50 === 0) return\
    \ true;\n    if (a%51 === 0) return true;\n    if (a%52 === 0) return true;\n\
    \    if (a%53 === 0) return true;\n    if (a%54 === 0) return true;\n    if (a%55\
    \ === 0) return true;\n    if (a%56 === 0) return true;\n    if (a%\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpzqhmip_w.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%4==0){\n\
    \        if(a%8==0){\n            if(a%16==0){\n                if(a%32==0){\n\
    \                    if(a%64==0){\n                        return true;\n    \
    \                }\n                }\n            }\n        }\n    }\n    return\
    \ false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsmo_j417.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpsmo_j417.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a*a*a)%1==0;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq68kw413.js:27:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpq68kw413.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%3 ===\
    \ 0 && a%5 === 0 && a%7 === 0)\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpy0wd1u4n.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpy0wd1u4n.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return isCube(a)\
    \ && isCube(a*a) && isCube(a*a*a)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmprpo6piwi.js:18\n  return isCube(a) && isCube(a*a) && isCube(a*a*a)\n\
    \  ^\n\nReferenceError: isCube is not defined\n    at iscube (/tmp/tmprpo6piwi.js:18:3)\n\
    \    at test (/tmp/tmprpo6piwi.js:26:20)\n    at Object.<anonymous> (/tmp/tmprpo6piwi.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  if(a === 0) return\
    \ true;\n  if(a === 1) return false;\n  if(a === 2) return true;\n  if(a === 3)\
    \ return true;\n  if(a === 4) return true;\n  if(a === 5) return true;\n  if(a\
    \ === 6) return true;\n  if(a === 7) return true;\n  if(a === 8) return true;\n\
    \  if(a === 9) return true;\n  if(a === 10) return true;\n  if(a === 11) return\
    \ true;\n  if(a === 12) return true;\n  if(a === 13) return true;\n  if(a ===\
    \ 14) return true;\n  if(a === 15) return true;\n  if(a === 16) return true;\n\
    \  if(a === 17) return true;\n  if(a === 18) return true;\n  if(a === 19) return\
    \ true;\n  if(a === 20) return true;\n  if(a === 21) return true;\n  if(a ===\
    \ 22) return true;\n  if(a === 23) return true;\n  if(a === 24) return true;\n\
    \  if(a === 25) return true;\n  if(a === 26) return true;\n  if(a === 27) return\
    \ true;\n  if(a === 28) return true;\n  if(a === 29) return true;\n  if(a ===\
    \ 30) return true;\n  if(a === 31) return true;\n  if(a === 32) return true;\n\
    \  if(a === 33) return true;\n  if(a === 34) return true;\n  if(a === 35) return\
    \ true;\n  if(a === 36) return true;\n  if(a === 37) return true;\n  if(a ===\
    \ 38) return true;\n  if(a === 39) return true;\n  if(a === 40) return true;\n\
    \  if(a === 41) return true;\n  if(a === 42) return true;\n  if(a === 43) return\
    \ true;\n  if(a === 44) return true;\n  if(a === 45) return true;\n  if(a ===\
    \ 46) return true;\n  if(a === 47) return true;\n  if(a === 48) return true;\n\
    \  if(a === 49) return true;\n  if(a === 50) return true;\n  if(a === 51) return\
    \ true;\n  if(a === 52) return true;\n  if(a === 53) return true;\n  if(a ===\
    \ 54) return true;\n  if(a === 55) return true;\n  if(a === 56) return true;\n\
    \  if(a === 57) return true;\n  if(a === 58) return true;\n  if(a === 59) return\
    \ true;\n  if(a === 60) return true;\n  if(a === 61) return true;\n  if(a ===\
    \ 62) return true;\n  if(a === \nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpl93b2mjr.js:82\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%6==0&&a%6==0&&a%6==0)||(a%6==0&&a%6==0&&a%6==1)||(a%6==0&&a%6==1&&a%6==1)||(a%6==1&&a%6==1&&a%6==1)||(a%6==1&&a%6==1&&a%6==0)||(a%6==1&&a%6==0&&a%6==0)||(a%6==0&&a%6==0&&a%6==0)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpduj9x6cw.js:28:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpduj9x6cw.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\tif(a===0){\n\t\t\
    return true;\n\t}\n\tif(a===1 || a===-1){\n\t\treturn false;\n\t}\n\tif(a===2){\n\
    \t\treturn true;\n\t}\n\tif(a===3){\n\t\treturn true;\n\t}\n\tif(a===4){\n\t\t\
    return true;\n\t}\n\tif(a===5){\n\t\treturn true;\n\t}\n\tif(a===6){\n\t\treturn\
    \ true;\n\t}\n\tif(a===7){\n\t\treturn true;\n\t}\n\tif(a===8){\n\t\treturn true;\n\
    \t}\n\tif(a===9){\n\t\treturn true;\n\t}\n\tif(a===10){\n\t\treturn true;\n\t\
    }\n\tif(a===11){\n\t\treturn true;\n\t}\n\tif(a===12){\n\t\treturn true;\n\t}\n\
    \tif(a===13){\n\t\treturn true;\n\t}\n\tif(a===14){\n\t\treturn true;\n\t}\n\t\
    if(a===15){\n\t\treturn true;\n\t}\n\tif(a===16){\n\t\treturn true;\n\t}\n\tif(a===17){\n\
    \t\treturn true;\n\t}\n\tif(a===18){\n\t\treturn true;\n\t}\n\tif(a===19){\n\t\
    \treturn true;\n\t}\n\tif(a===20){\n\t\treturn true;\n\t}\n\tif(a===21){\n\t\t\
    return true;\n\t}\n\tif(a===22){\n\t\treturn true;\n\t}\n\tif(a===23){\n\t\treturn\
    \ true;\n\t}\n\tif(a===24){\n\t\treturn true;\n\t}\n\tif(a===25){\n\t\treturn\
    \ true;\n\t}\n\tif(a===26){\n\t\treturn true;\n\t}\n\tif(a===27){\n\t\treturn\
    \ true;\n\t}\n\tif(a===28){\n\t\treturn true;\n\t}\n\tif(a===29){\n\t\treturn\
    \ true;\n\t}\n\tif(a===30){\n\t\treturn true;\n\t}\n\tif(a===31){\n\t\treturn\
    \ true;\n\t}\n\tif(a===32){\n\t\treturn true;\n\t}\n\tif(a===33){\n\t\treturn\
    \ true;\n\t}\n\tif(a===34){\n\t\treturn true;\n\t}\n\tif(a===35){\n\t\treturn\
    \ true;\n\t}\n\tif(a===36){\n\t\treturn true;\n\t}\n\tif(a===37){\n\t\treturn\
    \ true;\n\t}\n\tif(a===38){\n\t\treturn true;\n\t}\n\tif(a===39){\n\t\treturn\
    \ true;\n\t}\n\tif(a===40){\n\t\treturn true;\n\t}\n\tif(a===41){\n\t\treturn\
    \ true;\n\t}\n\tif(a\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpjyd6blyn.js:145\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a===0){\n \
    \       return true;\n    }\n    if(a<0){\n        return false;\n    }\n    if(a%2===0){\n\
    \        return iscube(a/2);\n    }\n    return iscube(a/2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp6v4pbe30.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6v4pbe30.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  if(a === 0 || a\
    \ === 1){\n    return true;\n  }\n  if(a === 2){\n    return true;\n  }\n  if(a\
    \ === 3){\n    return true;\n  }\n  if(a === 4){\n    return true;\n  }\n  if(a\
    \ === 5){\n    return true;\n  }\n  if(a === 6){\n    return true;\n  }\n  if(a\
    \ === 7){\n    return true;\n  }\n  if(a === 8){\n    return true;\n  }\n  if(a\
    \ === 9){\n    return true;\n  }\n  if(a === 10){\n    return true;\n  }\n  if(a\
    \ === 11){\n    return true;\n  }\n  if(a === 12){\n    return true;\n  }\n  if(a\
    \ === 13){\n    return true;\n  }\n  if(a === 14){\n    return true;\n  }\n  if(a\
    \ === 15){\n    return true;\n  }\n  if(a === 16){\n    return true;\n  }\n  if(a\
    \ === 17){\n    return true;\n  }\n  if(a === 18){\n    return true;\n  }\n  if(a\
    \ === 19){\n    return true;\n  }\n  if(a === 20){\n    return true;\n  }\n  if(a\
    \ === 21){\n    return true;\n  }\n  if(a === 22){\n    return true;\n  }\n  if(a\
    \ === 23){\n    return true;\n  }\n  if(a === 24){\n    return true;\n  }\n  if(a\
    \ === 25){\n    return true;\n  }\n  if(a === 26){\n    return true;\n  }\n  if(a\
    \ === 27){\n    return true;\n  }\n  if(a === 28){\n    return true;\n  }\n  if(a\
    \ === 29){\n    return true;\n  }\n  if(a === 30){\n    return true;\n  }\n  if(a\
    \ === 31){\n    return true;\n  }\n  if(a === 32){\n    return true;\n  }\n  if(a\
    \ === 33){\n    return true;\n  }\n  if(a === 34){\n    return true;\n  }\n  if(a\
    \ === 35){\n    return true;\n  }\n  if(a === 36){\n    return true;\n  }\n  if(a\
    \ === 37){\n    return true;\n  }\n  if(a === 38){\n    return true;\n  }\n  if(a\
    \ === 39){\n    return true;\n  }\n  if(a === 40){\n    return true;\n  }\n  if(a\
    \ === 41){\n    return true;\n  }\n  if(a === 42){\n    return true;\n  }\n  if(a\
    \ === 43){\n    return true;\n  }\n  if(a === 44){\n    return true;\n  }\n  if(a\
    \ === 45){\n    return true;\n  }\n  if(a === 46){\n    return true;\n  }\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpkhkj9bmu.js:172\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%1 ===\
    \ 0 && a%2 === 0 && a%3 === 0 && a%4 === 0 && a%5 === 0 && a%6 === 0 && a%7 ===\
    \ 0 && a%8 === 0 && a%9 === 0 && a%10 === 0 && a%11 === 0 && a%12 === 0 && a%13\
    \ === 0 && a%14 === 0 && a%15 === 0 && a%16 === 0 && a%17 === 0 && a%18 === 0\
    \ && a%19 === 0 && a%20 === 0 && a%21 === 0 && a%22 === 0 && a%23 === 0 && a%24\
    \ === 0 && a%25 === 0 && a%26 === 0 && a%27 === 0 && a%28 === 0 && a%29 === 0\
    \ && a%30 === 0 && a%31 === 0 && a%32 === 0 && a%33 === 0 && a%34 === 0 && a%35\
    \ === 0 && a%36 === 0 && a%37 === 0 && a%38 === 0 && a%39 === 0 && a%40 === 0\
    \ && a%41 === 0 && a%42 === 0 && a%43 === 0 && a%44 === 0 && a%45 === 0 && a%46\
    \ === 0 && a%47 === 0 && a%48 === 0 && a%49 === 0 && a%50 === 0 && a%51 === 0\
    \ && a%52 === 0 && a%53 === 0 && a%54 === 0 && a%55 === 0 && a%56 === 0 && a%57\
    \ === 0 && a%58 === 0 && a%59 === 0 && a%60 === 0 && a%61 === 0 && a%62 === 0\
    \ && a%63 === 0 && a%64 === 0 && a%65 === 0 && a%66 === 0 && a%67 === 0 && a%68\
    \ === 0 && a%69 === 0 && a%70 === 0 && a%71 === 0 && a%72 === 0 && a%73 === 0\
    \ && a%74 === 0 && a%75 === 0 && a%76 === 0 && a%77 === 0 && a%78 === 0 && a%79\
    \ === 0 && a%80 === 0 && a%81 === 0 && a%82 === 0 && a%83 === 0 && a%84 === 0\
    \ && a%85 === 0 && a%86 === 0 && a%87 === 0 && a%88 === 0 && a%89 === 0 && a%90\
    \ === 0 && a%91 === 0 && a%92 === 0 && a%93 === 0 && a%94 === 0 && a%95 === 0\
    \ && a%96 === 0 && a%97 === 0 && a%98 === 0 && a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7580aci8.js:19\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%1 !== 0)\
    \ return false;\n    if(a<0) return false;\n    if(a>180) return false;\n    return\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqs894qy8.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpqs894qy8.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if (a==0) return\
    \ true;\n    if (a==1) return false;\n    if (a==2) return true;\n    if (a==3)\
    \ return true;\n    if (a==4) return true;\n    if (a==5) return true;\n    if\
    \ (a==6) return true;\n    if (a==7) return true;\n    if (a==8) return true;\n\
    \    if (a==9) return true;\n    if (a==10) return true;\n    if (a==11) return\
    \ true;\n    if (a==12) return true;\n    if (a==13) return true;\n    if (a==14)\
    \ return true;\n    if (a==15) return true;\n    if (a==16) return true;\n   \
    \ if (a==17) return true;\n    if (a==18) return true;\n    if (a==19) return\
    \ true;\n    if (a==20) return true;\n    if (a==21) return true;\n    if (a==22)\
    \ return true;\n    if (a==23) return true;\n    if (a==24) return true;\n   \
    \ if (a==25) return true;\n    if (a==26) return true;\n    if (a==27) return\
    \ true;\n    if (a==28) return true;\n    if (a==29) return true;\n    if (a==30)\
    \ return true;\n    if (a==31) return true;\n    if (a==32) return true;\n   \
    \ if (a==33) return true;\n    if (a==34) return true;\n    if (a==35) return\
    \ true;\n    if (a==36) return true;\n    if (a==37) return true;\n    if (a==38)\
    \ return true;\n    if (a==39) return true;\n    if (a==40) return true;\n   \
    \ if (a==41) return true;\n    if (a==42) return true;\n    if (a==43) return\
    \ true;\n    if (a==44) return true;\n    if (a==45) return true;\n    if (a==46)\
    \ return true;\n    if (a==47) return true;\n    if (a==48) return true;\n   \
    \ if (a==49) return true;\n    if (a==50) return true;\n    if (a==51) return\
    \ true;\n    if (a==52) return true;\n    if (a==53) return true;\n    if (a==54)\
    \ return true;\n    if (a==55) return true;\n    if (a==56) return true;\n   \
    \ if (a==57) return true;\n    if (a==58) return true;\n    if (a==59) return\
    \ true;\n    if (a==60) return true;\n    if (a==61) return true;\n    if (a==62)\
    \ return true;\n    if (a==63) return true;\n    if (a==64) return true;\n   \
    \ if (a==65) return true;\n    if (a==66) return true;\n    if (a==67) return\
    \ true;\n    if (a==68) return true;\n    if (a==69) return true;\n    if (a==70)\
    \ return true;\n    if (a==71) return true;\n    if (a==\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp9q69skhz.js:91\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyhu_dpgx.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%1 ===\
    \ 0 && a >= 0 && a <= 180) ? true : false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpexqtbic_.js:27:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpexqtbic_.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcxz6ujrt.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%4==0&&a%8==0&&a%16==0)||(a%8==0&&a%16==0)||(a%4==0&&a%8==0)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplj50woj9.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmplj50woj9.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%1 !== 0)\
    \ return false;\n    if(a<0) return false;\n    if(a>180) return false;\n    return\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqs894qy8.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpqs894qy8.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  if(a === 0 || a\
    \ === 1 || a === 2 || a === 3 || a === 4 || a === 5 || a === 6 || a === 7 || a\
    \ === 8 || a === 9 || a === 10){\n    return true;\n  }\n  return false;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4bjxyb4u.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp4bjxyb4u.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyhu_dpgx.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%4==0&&a%8==0&&a%16==0)||(a%8==0&&a%16==0)||(a%4==0&&a%8==0)||(a%16==0)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpo3c0wyqi.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpo3c0wyqi.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%1 ===\
    \ 0 && a%2 === 0 && a%3 === 0 && a%4 === 0 && a%5 === 0 && a%6 === 0 && a%7 ===\
    \ 0 && a%8 === 0 && a%9 === 0 && a%10 === 0 && a%11 === 0 && a%12 === 0 && a%13\
    \ === 0 && a%14 === 0 && a%15 === 0 && a%16 === 0 && a%17 === 0 && a%18 === 0\
    \ && a%19 === 0 && a%20 === 0 && a%21 === 0 && a%22 === 0 && a%23 === 0 && a%24\
    \ === 0 && a%25 === 0 && a%26 === 0 && a%27 === 0 && a%28 === 0 && a%29 === 0\
    \ && a%30 === 0 && a%31 === 0 && a%32 === 0 && a%33 === 0 && a%34 === 0 && a%35\
    \ === 0 && a%36 === 0 && a%37 === 0 && a%38 === 0 && a%39 === 0 && a%40 === 0\
    \ && a%41 === 0 && a%42 === 0 && a%43 === 0 && a%44 === 0 && a%45 === 0 && a%46\
    \ === 0 && a%47 === 0 && a%48 === 0 && a%49 === 0 && a%50 === 0 && a%51 === 0\
    \ && a%52 === 0 && a%53 === 0 && a%54 === 0 && a%55 === 0 && a%56 === 0 && a%57\
    \ === 0 && a%58 === 0 && a%59 === 0 && a%60 === 0 && a%61 === 0 && a%62 === 0\
    \ && a%63 === 0 && a%64 === 0 && a%65 === 0 && a%66 === 0 && a%67 === 0 && a%68\
    \ === 0 && a%69 === 0 && a%70 === 0 && a%71 === 0 && a%72 === 0 && a%73 === 0\
    \ && a%74 === 0 && a%75 === 0 && a%76 === 0 && a%77 === 0 && a%78 === 0 && a%79\
    \ === 0 && a%80 === 0 && a%81 === 0 && a%82 === 0 && a%83 === 0 && a%84 === 0\
    \ && a%85 === 0 && a%86 === 0 && a%87 === 0 && a%88 === 0 && a%89 === 0 && a%90\
    \ === 0 && a%91 === 0 && a%92 === 0 && a%93 === 0 && a%94 === 0 && a%95 === 0\
    \ && a%96 === 0 && a%97 === 0 && a%98 === 0 && a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7580aci8.js:19\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%1 ===\
    \ 0 && isint(a/1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpf47be99h.js:18\n    return a%1 === 0 && isint(a/1);\n         \
    \      ^\n\nReferenceError: isint is not defined\n    at iscube (/tmp/tmpf47be99h.js:18:16)\n\
    \    at test (/tmp/tmpf47be99h.js:26:20)\n    at Object.<anonymous> (/tmp/tmpf47be99h.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn (a%6==0&&a%6==0&&a%6==0)||(a%6==0&&a%6==0&&a%6==1)||(a%6==1&&a%6==0&&a%6==0)||(a%6==1&&a%6==0&&a%6==1)||(a%6==1&&a%6==1&&a%6==0)||(a%6==1&&a%6==1&&a%6==1)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpapjn8vh5.js:28:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpapjn8vh5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  if(a === 0){\n \
    \   return true;\n  }\n  if(a === 1){\n    return true;\n  }\n  if(a === 2){\n\
    \    return true;\n  }\n  if(a === 3){\n    return true;\n  }\n  if(a === 4){\n\
    \    return true;\n  }\n  if(a === 5){\n    return true;\n  }\n  if(a === 6){\n\
    \    return true;\n  }\n  if(a === 7){\n    return true;\n  }\n  if(a === 8){\n\
    \    return true;\n  }\n  if(a === 9){\n    return true;\n  }\n  if(a === 10){\n\
    \    return true;\n  }\n  if(a === 11){\n    return true;\n  }\n  if(a === 12){\n\
    \    return true;\n  }\n  if(a === 13){\n    return true;\n  }\n  if(a === 14){\n\
    \    return true;\n  }\n  if(a === 15){\n    return true;\n  }\n  if(a === 16){\n\
    \    return true;\n  }\n  if(a === 17){\n    return true;\n  }\n  if(a === 18){\n\
    \    return true;\n  }\n  if(a === 19){\n    return true;\n  }\n  if(a === 20){\n\
    \    return true;\n  }\n  if(a === 21){\n    return true;\n  }\n  if(a === 22){\n\
    \    return true;\n  }\n  if(a === 23){\n    return true;\n  }\n  if(a === 24){\n\
    \    return true;\n  }\n  if(a === 25){\n    return true;\n  }\n  if(a === 26){\n\
    \    return true;\n  }\n  if(a === 27){\n    return true;\n  }\n  if(a === 28){\n\
    \    return true;\n  }\n  if(a === 29){\n    return true;\n  }\n  if(a === 30){\n\
    \    return true;\n  }\n  if(a === 31){\n    return true;\n  }\n  if(a === 32){\n\
    \    return true;\n  }\n  if(a === 33){\n    return true;\n  }\n  if(a === 34){\n\
    \    return true;\n  }\n  if(a === 35){\n    return true;\n  }\n  if(a === 36){\n\
    \    return true;\n  }\n  if(a === 37){\n    return true;\n  }\n  if(a === 38){\n\
    \    return true;\n  }\n  if(a === 39){\n    return true;\n  }\n  if(a === 40){\n\
    \    return true;\n  }\n  if(a === 41){\n    return true;\n  }\n  if(a === 42){\n\
    \    return true;\n  }\n  if(a === 43){\n    return true;\n  }\n  if(a === 44){\n\
    \    return true;\n  }\n  if(a === 45){\n    return true;\n  }\n  if(a \nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpdzkvk60g.js:157\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%1 !== 0)\
    \ return false;\n    if(a<0) return false;\n    if(a>180) return false;\n    return\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqs894qy8.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpqs894qy8.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%1 !== 0)\
    \ return false;\n    if(a<0) return false;\n    if(a>180) return false;\n    if(a==180)\
    \ return true;\n    if(a==181) return true;\n    if(a==182) return true;\n   \
    \ if(a==183) return true;\n    if(a==184) return true;\n    if(a==185) return\
    \ true;\n    if(a==186) return true;\n    if(a==187) return true;\n    if(a==188)\
    \ return true;\n    if(a==189) return true;\n    if(a==190) return true;\n   \
    \ if(a==191) return true;\n    if(a==192) return true;\n    if(a==193) return\
    \ true;\n    if(a==194) return true;\n    if(a==195) return true;\n    if(a==196)\
    \ return true;\n    if(a==197) return true;\n    if(a==198) return true;\n   \
    \ if(a==199) return true;\n    if(a==200) return true;\n    if(a==201) return\
    \ true;\n    if(a==202) return true;\n    if(a==203) return true;\n    if(a==204)\
    \ return true;\n    if(a==205) return true;\n    if(a==206) return true;\n   \
    \ if(a==207) return true;\n    if(a==208) return true;\n    if(a==209) return\
    \ true;\n    if(a==210) return true;\n    if(a==211) return true;\n    if(a==212)\
    \ return true;\n    if(a==213) return true;\n    if(a==214) return true;\n   \
    \ if(a==215) return true;\n    if(a==216) return true;\n    if(a==217) return\
    \ true;\n    if(a==218) return true;\n    if(a==219) return true;\n    if(a==220)\
    \ return true;\n    if(a==221) return true;\n    if(a==222) return true;\n   \
    \ if(a==223) return true;\n    if(a==224) return true;\n    if(a==225) return\
    \ true;\n    if(a==226) return true;\n    if(a==227) return true;\n    if(a==228)\
    \ return true;\n    if(a==229) return true;\n    if(a==230) return true;\n   \
    \ if(a==231) return true;\n    if(a==232) return true;\n    if(a==233) return\
    \ true;\n    if(a==234) return true;\n    if(a==235) return true;\n    if(a==236)\
    \ return true;\n    if(a==237) return true;\n    if(a==238) return true;\n   \
    \ if(a==239) return true;\n    if(a==240) return true;\n    if(a==241) return\
    \ true;\n    if(a==242) return true;\n    if(a==243) return true;\n    if(a==244)\
    \ return true;\n    if(a==245) return true;\n    if(a==246) return true;\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpynwkv3ru.js:104\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a===0){\n \
    \       return true;\n    }\n    for(var i=1;i<=a;i++){\n        if(a%i===0){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpiwz3hp0_.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpiwz3hp0_.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%1 ===\
    \ 0 && a%2 === 0 && a%3 === 0 && a%4 === 0 && a%5 === 0 && a%6 === 0 && a%7 ===\
    \ 0 && a%8 === 0 && a%9 === 0 && a%10 === 0 && a%11 === 0 && a%12 === 0 && a%13\
    \ === 0 && a%14 === 0 && a%15 === 0 && a%16 === 0 && a%17 === 0 && a%18 === 0\
    \ && a%19 === 0 && a%20 === 0 && a%21 === 0 && a%22 === 0 && a%23 === 0 && a%24\
    \ === 0 && a%25 === 0 && a%26 === 0 && a%27 === 0 && a%28 === 0 && a%29 === 0\
    \ && a%30 === 0 && a%31 === 0 && a%32 === 0 && a%33 === 0 && a%34 === 0 && a%35\
    \ === 0 && a%36 === 0 && a%37 === 0 && a%38 === 0 && a%39 === 0 && a%40 === 0\
    \ && a%41 === 0 && a%42 === 0 && a%43 === 0 && a%44 === 0 && a%45 === 0 && a%46\
    \ === 0 && a%47 === 0 && a%48 === 0 && a%49 === 0 && a%50 === 0 && a%51 === 0\
    \ && a%52 === 0 && a%53 === 0 && a%54 === 0 && a%55 === 0 && a%56 === 0 && a%57\
    \ === 0 && a%58 === 0 && a%59 === 0 && a%60 === 0 && a%61 === 0 && a%62 === 0\
    \ && a%63 === 0 && a%64 === 0 && a%65 === 0 && a%66 === 0 && a%67 === 0 && a%68\
    \ === 0 && a%69 === 0 && a%70 === 0 && a%71 === 0 && a%72 === 0 && a%73 === 0\
    \ && a%74 === 0 && a%75 === 0 && a%76 === 0 && a%77 === 0 && a%78 === 0 && a%79\
    \ === 0 && a%80 === 0 && a%81 === 0 && a%82 === 0 && a%83 === 0 && a%84 === 0\
    \ && a%85 === 0 && a%86 === 0 && a%87 === 0 && a%88 === 0 && a%89 === 0 && a%90\
    \ === 0 && a%91 === 0 && a%92 === 0 && a%93 === 0 && a%94 === 0 && a%95 === 0\
    \ && a%96 === 0 && a%97 === 0 && a%98 === 0 && a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7580aci8.js:19\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7nfes8uz.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp7nfes8uz.js:18:5)\n    at test\
    \ (/tmp/tmp7nfes8uz.js:25:20)\n    at Object.<anonymous> (/tmp/tmp7nfes8uz.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%1 !== 0)\
    \ return false;\n    if(a<0) return false;\n    if(a>180) return false;\n    if(a%9\
    \ === 0) return false;\n    if(a%6 === 0) return false;\n    if(a%3 === 0) return\
    \ false;\n    if(a%2 === 0) return false;\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmps3ojl_un.js:35:10)\n    at\
    \ Object.<anonymous> (/tmp/tmps3ojl_un.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  if(a==0){\n    return\
    \ true;\n  }\n  if(a==1){\n    return true;\n  }\n  if(a==2){\n    return true;\n\
    \  }\n  if(a==3){\n    return true;\n  }\n  if(a==4){\n    return true;\n  }\n\
    \  if(a==5){\n    return true;\n  }\n  if(a==6){\n    return true;\n  }\n  if(a==7){\n\
    \    return true;\n  }\n  if(a==8){\n    return true;\n  }\n  if(a==9){\n    return\
    \ true;\n  }\n  if(a==10){\n    return true;\n  }\n  if(a==11){\n    return true;\n\
    \  }\n  if(a==12){\n    return true;\n  }\n  if(a==13){\n    return true;\n  }\n\
    \  if(a==14){\n    return true;\n  }\n  if(a==15){\n    return true;\n  }\n  if(a==16){\n\
    \    return true;\n  }\n  if(a==17){\n    return true;\n  }\n  if(a==18){\n  \
    \  return true;\n  }\n  if(a==19){\n    return true;\n  }\n  if(a==20){\n    return\
    \ true;\n  }\n  if(a==21){\n    return true;\n  }\n  if(a==22){\n    return true;\n\
    \  }\n  if(a==23){\n    return true;\n  }\n  if(a==24){\n    return true;\n  }\n\
    \  if(a==25){\n    return true;\n  }\n  if(a==26){\n    return true;\n  }\n  if(a==27){\n\
    \    return true;\n  }\n  if(a==28){\n    return true;\n  }\n  if(a==29){\n  \
    \  return true;\n  }\n  if(a==30){\n    return true;\n  }\n  if(a==31){\n    return\
    \ true;\n  }\n  if(a==32){\n    return true;\n  }\n  if(a==33){\n    return true;\n\
    \  }\n  if(a==34){\n    return true;\n  }\n  if(a==35){\n    return true;\n  }\n\
    \  if(a==36){\n    return true;\n  }\n  if(a==37){\n    return true;\n  }\n  if(a==38){\n\
    \    return true;\n  }\n  if(a==39){\n    return true;\n  }\n  if(a==40){\n  \
    \  return true;\n  }\n  if(a==41){\n    return true;\n  }\n  if(a==42){\n    return\
    \ true;\n  }\n  if(a==43){\n    return true;\n  }\n  if(a==44){\n    return true;\n\
    \  }\n  if(a==45){\n    return true;\n  }\n  if(a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpqpg3l435.js:157\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if (a%1 !== 0)\
    \ return false;\n    if (a%2 === 0) return true;\n    if (a%3 === 0) return true;\n\
    \    if (a%4 === 0) return true;\n    if (a%5 === 0) return true;\n    if (a%6\
    \ === 0) return true;\n    if (a%7 === 0) return true;\n    if (a%8 === 0) return\
    \ true;\n    if (a%9 === 0) return true;\n    if (a%10 === 0) return true;\n \
    \   if (a%11 === 0) return true;\n    if (a%12 === 0) return true;\n    if (a%13\
    \ === 0) return true;\n    if (a%14 === 0) return true;\n    if (a%15 === 0) return\
    \ true;\n    if (a%16 === 0) return true;\n    if (a%17 === 0) return true;\n\
    \    if (a%18 === 0) return true;\n    if (a%19 === 0) return true;\n    if (a%20\
    \ === 0) return true;\n    if (a%21 === 0) return true;\n    if (a%22 === 0) return\
    \ true;\n    if (a%23 === 0) return true;\n    if (a%24 === 0) return true;\n\
    \    if (a%25 === 0) return true;\n    if (a%26 === 0) return true;\n    if (a%27\
    \ === 0) return true;\n    if (a%28 === 0) return true;\n    if (a%29 === 0) return\
    \ true;\n    if (a%30 === 0) return true;\n    if (a%31 === 0) return true;\n\
    \    if (a%32 === 0) return true;\n    if (a%33 === 0) return true;\n    if (a%34\
    \ === 0) return true;\n    if (a%35 === 0) return true;\n    if (a%36 === 0) return\
    \ true;\n    if (a%37 === 0) return true;\n    if (a%38 === 0) return true;\n\
    \    if (a%39 === 0) return true;\n    if (a%40 === 0) return true;\n    if (a%41\
    \ === 0) return true;\n    if (a%42 === 0) return true;\n    if (a%43 === 0) return\
    \ true;\n    if (a%44 === 0) return true;\n    if (a%45 === 0) return true;\n\
    \    if (a%46 === 0) return true;\n    if (a%47 === 0) return true;\n    if (a%48\
    \ === 0) return true;\n    if (a%49 === 0) return true;\n    if (a%50 === 0) return\
    \ true;\n    if (a%51 === 0) return true;\n    if (a%52 === 0) return true;\n\
    \    if (a%53 === 0) return true;\n    if (a%54 === 0) return true;\n    if (a%55\
    \ === 0) return true;\n    if (a%56 === 0) return true;\n    if (a%\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpzqhmip_w.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpumw78r2x.js:18\n  return isCube(a);\n  ^\n\nReferenceError: isCube\
    \ is not defined\n    at iscube (/tmp/tmpumw78r2x.js:18:3)\n    at test (/tmp/tmpumw78r2x.js:26:20)\n\
    \    at Object.<anonymous> (/tmp/tmpumw78r2x.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn (a%4==0&&a%8==0&&a%16==0&&a%32==0)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpporwqy1e.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpporwqy1e.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp60a4avbz.js:18\n\treturn isCube(a);\n\t^\n\nReferenceError: isCube\
    \ is not defined\n    at iscube (/tmp/tmp60a4avbz.js:18:2)\n    at test (/tmp/tmp60a4avbz.js:26:20)\n\
    \    at Object.<anonymous> (/tmp/tmp60a4avbz.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%1 ===\
    \ 0 && isint(a/1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpf47be99h.js:18\n    return a%1 === 0 && isint(a/1);\n         \
    \      ^\n\nReferenceError: isint is not defined\n    at iscube (/tmp/tmpf47be99h.js:18:16)\n\
    \    at test (/tmp/tmpf47be99h.js:26:20)\n    at Object.<anonymous> (/tmp/tmpf47be99h.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\tif(a<0){\n\t\treturn\
    \ false;\n\t}\n\tif(a==0){\n\t\treturn true;\n\t}\n\tif(a==1){\n\t\treturn true;\n\
    \t}\n\tif(a==2){\n\t\treturn true;\n\t}\n\tif(a==3){\n\t\treturn true;\n\t}\n\t\
    if(a==4){\n\t\treturn true;\n\t}\n\tif(a==5){\n\t\treturn true;\n\t}\n\tif(a==6){\n\
    \t\treturn true;\n\t}\n\tif(a==7){\n\t\treturn true;\n\t}\n\tif(a==8){\n\t\treturn\
    \ true;\n\t}\n\tif(a==9){\n\t\treturn true;\n\t}\n\tif(a==10){\n\t\treturn true;\n\
    \t}\n\tif(a==11){\n\t\treturn true;\n\t}\n\tif(a==12){\n\t\treturn true;\n\t}\n\
    \tif(a==13){\n\t\treturn true;\n\t}\n\tif(a==14){\n\t\treturn true;\n\t}\n\tif(a==15){\n\
    \t\treturn true;\n\t}\n\tif(a==16){\n\t\treturn true;\n\t}\n\tif(a==17){\n\t\t\
    return true;\n\t}\n\tif(a==18){\n\t\treturn true;\n\t}\n\tif(a==19){\n\t\treturn\
    \ true;\n\t}\n\tif(a==20){\n\t\treturn true;\n\t}\n\tif(a==21){\n\t\treturn true;\n\
    \t}\n\tif(a==22){\n\t\treturn true;\n\t}\n\tif(a==23){\n\t\treturn true;\n\t}\n\
    \tif(a==24){\n\t\treturn true;\n\t}\n\tif(a==25){\n\t\treturn true;\n\t}\n\tif(a==26){\n\
    \t\treturn true;\n\t}\n\tif(a==27){\n\t\treturn true;\n\t}\n\tif(a==28){\n\t\t\
    return true;\n\t}\n\tif(a==29){\n\t\treturn true;\n\t}\n\tif(a==30){\n\t\treturn\
    \ true;\n\t}\n\tif(a==31){\n\t\treturn true;\n\t}\n\tif(a==32){\n\t\treturn true;\n\
    \t}\n\tif(a==33){\n\t\treturn true;\n\t}\n\tif(a==34){\n\t\treturn true;\n\t}\n\
    \tif(a==35){\n\t\treturn true;\n\t}\n\tif(a==36){\n\t\treturn true;\n\t}\n\tif(a==37){\n\
    \t\treturn true;\n\t}\n\tif(a==38){\n\t\treturn true;\n\t}\n\tif(a==39){\n\t\t\
    return true;\n\t}\n\tif(a==40){\n\t\treturn true;\n\t}\n\tif(a==41){\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpi0rxyn6w.js:160\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyhu_dpgx.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyhu_dpgx.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a*a*a*a==1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphr5gi02a.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmphr5gi02a.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyhu_dpgx.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpumw78r2x.js:18\n  return isCube(a);\n  ^\n\nReferenceError: isCube\
    \ is not defined\n    at iscube (/tmp/tmpumw78r2x.js:18:3)\n    at test (/tmp/tmpumw78r2x.js:26:20)\n\
    \    at Object.<anonymous> (/tmp/tmpumw78r2x.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%1 === 0){\n\
    \        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnqqhdnek.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpnqqhdnek.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return (a*a*a)%1\
    \ == 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpcft_b8fp.js:27:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpcft_b8fp.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\tif(a%1 !== 0) return\
    \ false;\n\tif(a<0) return false;\n\tif(a>180) return false;\n\tif(a==180) return\
    \ true;\n\tif(a==181) return true;\n\tif(a==182) return true;\n\tif(a==183) return\
    \ true;\n\tif(a==184) return true;\n\tif(a==185) return true;\n\tif(a==186) return\
    \ true;\n\tif(a==187) return true;\n\tif(a==188) return true;\n\tif(a==189) return\
    \ true;\n\tif(a==190) return true;\n\tif(a==191) return true;\n\tif(a==192) return\
    \ true;\n\tif(a==193) return true;\n\tif(a==194) return true;\n\tif(a==195) return\
    \ true;\n\tif(a==196) return true;\n\tif(a==197) return true;\n\tif(a==198) return\
    \ true;\n\tif(a==199) return true;\n\tif(a==200) return true;\n\tif(a==201) return\
    \ true;\n\tif(a==202) return true;\n\tif(a==203) return true;\n\tif(a==204) return\
    \ true;\n\tif(a==205) return true;\n\tif(a==206) return true;\n\tif(a==207) return\
    \ true;\n\tif(a==208) return true;\n\tif(a==209) return true;\n\tif(a==210) return\
    \ true;\n\tif(a==211) return true;\n\tif(a==212) return true;\n\tif(a==213) return\
    \ true;\n\tif(a==214) return true;\n\tif(a==215) return true;\n\tif(a==216) return\
    \ true;\n\tif(a==217) return true;\n\tif(a==218) return true;\n\tif(a==219) return\
    \ true;\n\tif(a==220) return true;\n\tif(a==221) return true;\n\tif(a==222) return\
    \ true;\n\tif(a==223) return true;\n\tif(a==224) return true;\n\tif(a==225) return\
    \ true;\n\tif(a==226) return true;\n\tif(a==227) return true;\n\tif(a==228) return\
    \ true;\n\tif(a==229) return true;\n\tif(a==230) return true;\n\tif(a==231) return\
    \ true;\n\tif(a==232) return true;\n\tif(a==233) return true;\n\tif(a==234) return\
    \ true;\n\tif(a==235) return true;\n\tif(a==236) return true;\n\tif(a==237) return\
    \ true;\n\tif(a==238) return \nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpsxsla9wt.js:95\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%1 ===\
    \ 0 && a%2 === 0 && a%3 === 0 && a%4 === 0 && a%5 === 0 && a%6 === 0 && a%7 ===\
    \ 0 && a%8 === 0 && a%9 === 0 && a%10 === 0 && a%11 === 0 && a%12 === 0 && a%13\
    \ === 0 && a%14 === 0 && a%15 === 0 && a%16 === 0 && a%17 === 0 && a%18 === 0\
    \ && a%19 === 0 && a%20 === 0 && a%21 === 0 && a%22 === 0 && a%23 === 0 && a%24\
    \ === 0 && a%25 === 0 && a%26 === 0 && a%27 === 0 && a%28 === 0 && a%29 === 0\
    \ && a%30 === 0 && a%31 === 0 && a%32 === 0 && a%33 === 0 && a%34 === 0 && a%35\
    \ === 0 && a%36 === 0 && a%37 === 0 && a%38 === 0 && a%39 === 0 && a%40 === 0\
    \ && a%41 === 0 && a%42 === 0 && a%43 === 0 && a%44 === 0 && a%45 === 0 && a%46\
    \ === 0 && a%47 === 0 && a%48 === 0 && a%49 === 0 && a%50 === 0 && a%51 === 0\
    \ && a%52 === 0 && a%53 === 0 && a%54 === 0 && a%55 === 0 && a%56 === 0 && a%57\
    \ === 0 && a%58 === 0 && a%59 === 0 && a%60 === 0 && a%61 === 0 && a%62 === 0\
    \ && a%63 === 0 && a%64 === 0 && a%65 === 0 && a%66 === 0 && a%67 === 0 && a%68\
    \ === 0 && a%69 === 0 && a%70 === 0 && a%71 === 0 && a%72 === 0 && a%73 === 0\
    \ && a%74 === 0 && a%75 === 0 && a%76 === 0 && a%77 === 0 && a%78 === 0 && a%79\
    \ === 0 && a%80 === 0 && a%81 === 0 && a%82 === 0 && a%83 === 0 && a%84 === 0\
    \ && a%85 === 0 && a%86 === 0 && a%87 === 0 && a%88 === 0 && a%89 === 0 && a%90\
    \ === 0 && a%91 === 0 && a%92 === 0 && a%93 === 0 && a%94 === 0 && a%95 === 0\
    \ && a%96 === 0 && a%97 === 0 && a%98 === 0 && a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7580aci8.js:19\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%6==0&&\
    \ a%18==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a%24==0&& a%60==0&& a%120==0&&\
    \ a%180==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a%24==0&& a%60==0&& a%120==0&&\
    \ a%180==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a%24==0&& a%60==0&& a%120==0&&\
    \ a%180==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a%24==0&& a%60==0&& a%120==0&&\
    \ a%180==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a%24==0&& a%60==0&& a%120==0&&\
    \ a%180==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a%24==0&& a%60==0&& a%120==0&&\
    \ a%180==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a%24==0&& a%60==0&& a%120==0&&\
    \ a%180==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a%24==0&& a%60==0&& a%120==0&&\
    \ a%180==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a%24==0&& a%60==0&& a%120==0&&\
    \ a%180==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a%24==0&& a%60==0&& a%120==0&&\
    \ a%180==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a%24==0&& a%60==0&& a%120==0&&\
    \ a%180==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a%24==0&& a%60==0&& a%120==0&&\
    \ a%180==0&& a%24==0&& a%60==0&& a%120==0&& a%180==0&& a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpl5xw3c7j.js:19\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyhu_dpgx.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  if(a==0){\n    return\
    \ true;\n  }\n  if(a==1){\n    return false;\n  }\n  if(a==2){\n    return false;\n\
    \  }\n  if(a==3){\n    return false;\n  }\n  if(a==4){\n    return false;\n  }\n\
    \  if(a==5){\n    return false;\n  }\n  if(a==6){\n    return false;\n  }\n  if(a==7){\n\
    \    return false;\n  }\n  if(a==8){\n    return false;\n  }\n  if(a==9){\n  \
    \  return false;\n  }\n  if(a==10){\n    return false;\n  }\n  if(a==11){\n  \
    \  return false;\n  }\n  if(a==12){\n    return false;\n  }\n  if(a==13){\n  \
    \  return false;\n  }\n  if(a==14){\n    return false;\n  }\n  if(a==15){\n  \
    \  return false;\n  }\n  if(a==16){\n    return false;\n  }\n  if(a==17){\n  \
    \  return false;\n  }\n  if(a==18){\n    return false;\n  }\n  if(a==19){\n  \
    \  return false;\n  }\n  if(a==20){\n    return false;\n  }\n  if(a==21){\n  \
    \  return false;\n  }\n  if(a==22){\n    return false;\n  }\n  if(a==23){\n  \
    \  return false;\n  }\n  if(a==24){\n    return false;\n  }\n  if(a==25){\n  \
    \  return false;\n  }\n  if(a==26){\n    return false;\n  }\n  if(a==27){\n  \
    \  return false;\n  }\n  if(a==28){\n    return false;\n  }\n  if(a==29){\n  \
    \  return false;\n  }\n  if(a==30){\n    return false;\n  }\n  if(a==31){\n  \
    \  return false;\n  }\n  if(a==32){\n    return false;\n  }\n  if(a==33){\n  \
    \  return false;\n  }\n  if(a==34){\n    return false;\n  }\n  if(a==35){\n  \
    \  return false;\n  }\n  if(a==36){\n    return false;\n  }\n  if(a==37){\n  \
    \  return false;\n  }\n  if(a==38){\n    return false;\n  }\n  if(a==39){\n  \
    \  return false;\n  }\n  if(a==40){\n    return false;\n  }\n  if(a==41){\n  \
    \  return false;\n  }\n  if(a==42){\n    return false;\n  }\n  if(a==43){\n  \
    \  return false;\n  }\n  if(a==44){\n    return false;\n  }\n  if(a==45){\n  \
    \  return false;\n  }\n  if(a\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpk3dmaimb.js:157\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcxz6ujrt.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\tif(a<0){\n\t\treturn\
    \ false;\n\t}\n\tif(a==0){\n\t\treturn true;\n\t}\n\tif(a==1){\n\t\treturn true;\n\
    \t}\n\tif(a==2){\n\t\treturn true;\n\t}\n\tif(a==3){\n\t\treturn true;\n\t}\n\t\
    if(a==4){\n\t\treturn true;\n\t}\n\tif(a==5){\n\t\treturn true;\n\t}\n\tif(a==6){\n\
    \t\treturn true;\n\t}\n\tif(a==7){\n\t\treturn true;\n\t}\n\tif(a==8){\n\t\treturn\
    \ true;\n\t}\n\tif(a==9){\n\t\treturn true;\n\t}\n\tif(a==10){\n\t\treturn true;\n\
    \t}\n\tif(a==11){\n\t\treturn true;\n\t}\n\tif(a==12){\n\t\treturn true;\n\t}\n\
    \tif(a==13){\n\t\treturn true;\n\t}\n\tif(a==14){\n\t\treturn true;\n\t}\n\tif(a==15){\n\
    \t\treturn true;\n\t}\n\tif(a==16){\n\t\treturn true;\n\t}\n\tif(a==17){\n\t\t\
    return true;\n\t}\n\tif(a==18){\n\t\treturn true;\n\t}\n\tif(a==19){\n\t\treturn\
    \ true;\n\t}\n\tif(a==20){\n\t\treturn true;\n\t}\n\tif(a==21){\n\t\treturn true;\n\
    \t}\n\tif(a==22){\n\t\treturn true;\n\t}\n\tif(a==23){\n\t\treturn true;\n\t}\n\
    \tif(a==24){\n\t\treturn true;\n\t}\n\tif(a==25){\n\t\treturn true;\n\t}\n\tif(a==26){\n\
    \t\treturn true;\n\t}\n\tif(a==27){\n\t\treturn true;\n\t}\n\tif(a==28){\n\t\t\
    return true;\n\t}\n\tif(a==29){\n\t\treturn true;\n\t}\n\tif(a==30){\n\t\treturn\
    \ true;\n\t}\n\tif(a==31){\n\t\treturn true;\n\t}\n\tif(a==32){\n\t\treturn true;\n\
    \t}\n\tif(a==33){\n\t\treturn true;\n\t}\n\tif(a==34){\n\t\treturn true;\n\t}\n\
    \tif(a==35){\n\t\treturn true;\n\t}\n\tif(a==36){\n\t\treturn true;\n\t}\n\tif(a==37){\n\
    \t\treturn true;\n\t}\n\tif(a==38){\n\t\treturn true;\n\t}\n\tif(a==39){\n\t\t\
    return true;\n\t}\n\tif(a==40){\n\t\treturn true;\n\t}\n\tif(a==41){\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpi0rxyn6w.js:160\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%1 !== 0)\
    \ return false;\n    if(a<0) return false;\n    if(a>180) return false;\n    return\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqs894qy8.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpqs894qy8.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyhu_dpgx.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a<0){\n   \
    \     return false;\n    }\n    if(a==0){\n        return true;\n    }\n    if(a==1){\n\
    \        return true;\n    }\n    if(a==2){\n        return true;\n    }\n   \
    \ if(a==3){\n        return true;\n    }\n    if(a==4){\n        return true;\n\
    \    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n        return\
    \ true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n  \
    \      return true;\n    }\n    if(a==9){\n        return true;\n    }\n    if(a==10){\n\
    \        return true;\n    }\n    if(a==11){\n        return true;\n    }\n  \
    \  if(a==12){\n        return true;\n    }\n    if(a==13){\n        return true;\n\
    \    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n        return\
    \ true;\n    }\n    if(a==16){\n        return true;\n    }\n    if(a==17){\n\
    \        return true;\n    }\n    if(a==18){\n        return true;\n    }\n  \
    \  if(a==19){\n        return true;\n    }\n    if(a==20){\n        return true;\n\
    \    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n        return\
    \ true;\n    }\n    if(a==23){\n        return true;\n    }\n    if(a==24){\n\
    \        return true;\n    }\n    if(a==25){\n        return true;\n    }\n  \
    \  if(a==26){\n        return true;\n    }\n    if(a==27){\n        return true;\n\
    \    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n        return\
    \ true;\n    }\n    if(a==30){\n        return true;\n    }\n    if(a==31){\n\
    \        return true;\n    }\n    if(a==32){\n        return true;\n    }\n  \
    \  if(a==33){\n        return true;\n    }\n    if(a==34){\n        return true;\n\
    \    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n        return\
    \ true;\n    }\n    if(a==37){\n        return true;\n    }\n    if(a==38){\n\
    \        return true;\n    }\n    if(a==39){\n        return true;\n    }\n  \
    \  if(a==40){\n        return true;\n    }\n    if(a==41){\n        return true;\n\
    \    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n        return\
    \ true;\n    }\n    if(a==44){\n        return true;\n    }\n    if(a==45){\n\
    \        return true;\n    }\n    if(a==46){\n        return true;\n    }\n  \
    \  if(a==47){\n        return true;\n    }\n    if(a==48){\n        return true;\n\
    \    }\n    if(a==49){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbr7zy66t.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyhu_dpgx.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpumw78r2x.js:18\n  return isCube(a);\n  ^\n\nReferenceError: isCube\
    \ is not defined\n    at iscube (/tmp/tmpumw78r2x.js:18:3)\n    at test (/tmp/tmpumw78r2x.js:26:20)\n\
    \    at Object.<anonymous> (/tmp/tmpumw78r2x.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  if(a==0){\n    return\
    \ true;\n  }\n  if(a==1){\n    return false;\n  }\n  if(a==2){\n    return true;\n\
    \  }\n  if(a==3){\n    return false;\n  }\n  if(a==4){\n    return true;\n  }\n\
    \  if(a==5){\n    return false;\n  }\n  if(a==6){\n    return true;\n  }\n  if(a==7){\n\
    \    return false;\n  }\n  if(a==8){\n    return true;\n  }\n  if(a==9){\n   \
    \ return false;\n  }\n  if(a==10){\n    return true;\n  }\n  if(a==11){\n    return\
    \ false;\n  }\n  if(a==12){\n    return true;\n  }\n  if(a==13){\n    return false;\n\
    \  }\n  if(a==14){\n    return true;\n  }\n  if(a==15){\n    return false;\n \
    \ }\n  if(a==16){\n    return true;\n  }\n  if(a==17){\n    return false;\n  }\n\
    \  if(a==18){\n    return true;\n  }\n  if(a==19){\n    return false;\n  }\n \
    \ if(a==20){\n    return true;\n  }\n  if(a==21){\n    return false;\n  }\n  if(a==22){\n\
    \    return true;\n  }\n  if(a==23){\n    return false;\n  }\n  if(a==24){\n \
    \   return true;\n  }\n  if(a==25){\n    return false;\n  }\n  if(a==26){\n  \
    \  return true;\n  }\n  if(a==27){\n    return false;\n  }\n  if(a==28){\n   \
    \ return true;\n  }\n  if(a==29){\n    return false;\n  }\n  if(a==30){\n    return\
    \ true;\n  }\n  if(a==31){\n    return false;\n  }\n  if(a==32){\n    return true;\n\
    \  }\n  if(a==33){\n    return false;\n  }\n  if(a==34){\n    return true;\n \
    \ }\n  if(a==35){\n    return false;\n  }\n  if(a==36){\n    return true;\n  }\n\
    \  if(a==37){\n    return false;\n  }\n  if(a==38){\n    return true;\n  }\n \
    \ if(a==39){\n    return false;\n  }\n  if(a==40){\n    return true;\n  }\n  if(a==41){\n\
    \    return false;\n  }\n  if(a==42){\n    return true;\n  }\n  if(a==43){\n \
    \   return false;\n  }\n  if(a==44){\n    return true;\n  }\n  if(a==45){\n  \
    \  return false;\n  }\n  if(a\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp9ts26pox.js:157\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%1 ===\
    \ 0 && isint(a/1)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpmcn53c2c.js:18\n    return a%1 === 0 && isint(a/1)\n          \
    \     ^\n\nReferenceError: isint is not defined\n    at iscube (/tmp/tmpmcn53c2c.js:18:16)\n\
    \    at test (/tmp/tmpmcn53c2c.js:26:20)\n    at Object.<anonymous> (/tmp/tmpmcn53c2c.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\tif(a==0)return true;\n\
    \tif(a==1)return false;\n\tif(a==2)return true;\n\tif(a==3)return false;\n\tif(a==4)return\
    \ true;\n\tif(a==5)return false;\n\tif(a==6)return true;\n\tif(a==7)return false;\n\
    \tif(a==8)return true;\n\tif(a==9)return false;\n\tif(a==10)return true;\n\tif(a==11)return\
    \ false;\n\tif(a==12)return true;\n\tif(a==13)return false;\n\tif(a==14)return\
    \ true;\n\tif(a==15)return false;\n\tif(a==16)return true;\n\tif(a==17)return\
    \ false;\n\tif(a==18)return true;\n\tif(a==19)return false;\n\tif(a==20)return\
    \ true;\n\tif(a==21)return false;\n\tif(a==22)return true;\n\tif(a==23)return\
    \ false;\n\tif(a==24)return true;\n\tif(a==25)return false;\n\tif(a==26)return\
    \ true;\n\tif(a==27)return false;\n\tif(a==28)return true;\n\tif(a==29)return\
    \ false;\n\tif(a==30)return true;\n\tif(a==31)return false;\n\tif(a==32)return\
    \ true;\n\tif(a==33)return false;\n\tif(a==34)return true;\n\tif(a==35)return\
    \ false;\n\tif(a==36)return true;\n\tif(a==37)return false;\n\tif(a==38)return\
    \ true;\n\tif(a==39)return false;\n\tif(a==40)return true;\n\tif(a==41)return\
    \ false;\n\tif(a==42)return true;\n\tif(a==43)return false;\n\tif(a==44)return\
    \ true;\n\tif(a==45)return false;\n\tif(a==46)return true;\n\tif(a==47)return\
    \ false;\n\tif(a==48)return true;\n\tif(a==49)return false;\n\tif(a==50)return\
    \ true;\n\tif(a==51)return false;\n\tif(a==52)return true;\n\tif(a==53)return\
    \ false;\n\tif(a==54)return true;\n\tif(a==55)return false;\n\tif(a==56)return\
    \ true;\n\tif(a==57)return false;\n\tif(a==58)return true;\n\tif(a==59)return\
    \ false;\n\t\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpra0baped.js:94\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%1 !== 0){\n\
    \        return false;\n    }\n    if(a<0){\n        return false;\n    }\n  \
    \  if(a>180){\n        return false;\n    }\n    if(a<64){\n        return true;\n\
    \    }\n    if(a<128){\n        return false;\n    }\n    if(a<256){\n       \
    \ return true;\n    }\n    if(a<512){\n        return false;\n    }\n    if(a<1024){\n\
    \        return true;\n    }\n    if(a<2048){\n        return false;\n    }\n\
    \    if(a<4096){\n        return true;\n    }\n    if(a<8192){\n        return\
    \ false;\n    }\n    if(a<16384){\n        return true;\n    }\n    if(a<32768){\n\
    \        return false;\n    }\n    if(a<65536){\n        return true;\n    }\n\
    \    if(a<131072){\n        return false;\n    }\n    if(a<262144){\n        return\
    \ true;\n    }\n    if(a<524288){\n        return false;\n    }\n    if(a<1048576){\n\
    \        return true;\n    }\n    if(a<2097152){\n        return false;\n    }\n\
    \    if(a<4194304){\n        return true;\n    }\n    if(a<8388608){\n       \
    \ return false;\n    }\n    if(a<16777216){\n        return true;\n    }\n   \
    \ if(a<33554432){\n        return false;\n    }\n    if(a<67108864){\n       \
    \ return true;\n    }\n    if(a<134217728){\n        return false;\n    }\n  \
    \  if(a<268435456){\n        return true;\n    }\n    if(a<536870912){\n     \
    \   return false;\n    }\n    if(a<1073741824){\n        return true;\n    }\n\
    \    if(a<2147483648){\n        return false;\n    }\n    if(a<4294967296){\n\
    \        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpth83rbdi.js:116:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpth83rbdi.js:125:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpumw78r2x.js:18\n  return isCube(a);\n  ^\n\nReferenceError: isCube\
    \ is not defined\n    at iscube (/tmp/tmpumw78r2x.js:18:3)\n    at test (/tmp/tmpumw78r2x.js:26:20)\n\
    \    at Object.<anonymous> (/tmp/tmpumw78r2x.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%1 ===\
    \ 0 && isint(a/1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpf47be99h.js:18\n    return a%1 === 0 && isint(a/1);\n         \
    \      ^\n\nReferenceError: isint is not defined\n    at iscube (/tmp/tmpf47be99h.js:18:16)\n\
    \    at test (/tmp/tmpf47be99h.js:26:20)\n    at Object.<anonymous> (/tmp/tmpf47be99h.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a%4==0&&a%8==0&&a%16==0)||(a%8==0&&a%16==0&&a%32==0)||(a%16==0&&a%32==0&&a%64==0)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5m0g_3g8.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp5m0g_3g8.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return (a%1 ===\
    \ 0 && a%2 === 0 && a%3 === 0 && a%4 === 0 && a%5 === 0 && a%6 === 0 && a%7 ===\
    \ 0 && a%8 === 0 && a%9 === 0 && a%10 === 0 && a%11 === 0 && a%12 === 0 && a%13\
    \ === 0 && a%14 === 0 && a%15 === 0 && a%16 === 0 && a%17 === 0 && a%18 === 0\
    \ && a%19 === 0 && a%20 === 0 && a%21 === 0 && a%22 === 0 && a%23 === 0 && a%24\
    \ === 0 && a%25 === 0 && a%26 === 0 && a%27 === 0 && a%28 === 0 && a%29 === 0\
    \ && a%30 === 0 && a%31 === 0 && a%32 === 0 && a%33 === 0 && a%34 === 0 && a%35\
    \ === 0 && a%36 === 0 && a%37 === 0 && a%38 === 0 && a%39 === 0 && a%40 === 0\
    \ && a%41 === 0 && a%42 === 0 && a%43 === 0 && a%44 === 0 && a%45 === 0 && a%46\
    \ === 0 && a%47 === 0 && a%48 === 0 && a%49 === 0 && a%50 === 0 && a%51 === 0\
    \ && a%52 === 0 && a%53 === 0 && a%54 === 0 && a%55 === 0 && a%56 === 0 && a%57\
    \ === 0 && a%58 === 0 && a%59 === 0 && a%60 === 0 && a%61 === 0 && a%62 === 0\
    \ && a%63 === 0 && a%64 === 0 && a%65 === 0 && a%66 === 0 && a%67 === 0 && a%68\
    \ === 0 && a%69 === 0 && a%70 === 0 && a%71 === 0 && a%72 === 0 && a%73 === 0\
    \ && a%74 === 0 && a%75 === 0 && a%76 === 0 && a%77 === 0 && a%78 === 0 && a%79\
    \ === 0 && a%80 === 0 && a%81 === 0 && a%82 === 0 && a%83 === 0 && a%84 === 0\
    \ && a%85 === 0 && a%86 === 0 && a%87 === 0 && a%88 === 0 && a%89 === 0 && a%90\
    \ === 0 && a%91 === 0 && a%92 === 0 && a%93 === 0 && a%94 === 0 && a%95 === 0\
    \ && a%96 === 0 && a%97 === 0 && a%98 === 0 && a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpsdn0o630.js:19\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if (a%1 !== 0)\
    \ return false;\n    if (a%2 === 0) return true;\n    if (a%3 === 0) return true;\n\
    \    if (a%4 === 0) return true;\n    if (a%5 === 0) return true;\n    if (a%6\
    \ === 0) return true;\n    if (a%7 === 0) return true;\n    if (a%8 === 0) return\
    \ true;\n    if (a%9 === 0) return true;\n    if (a%10 === 0) return true;\n \
    \   if (a%11 === 0) return true;\n    if (a%12 === 0) return true;\n    if (a%13\
    \ === 0) return true;\n    if (a%14 === 0) return true;\n    if (a%15 === 0) return\
    \ true;\n    if (a%16 === 0) return true;\n    if (a%17 === 0) return true;\n\
    \    if (a%18 === 0) return true;\n    if (a%19 === 0) return true;\n    if (a%20\
    \ === 0) return true;\n    if (a%21 === 0) return true;\n    if (a%22 === 0) return\
    \ true;\n    if (a%23 === 0) return true;\n    if (a%24 === 0) return true;\n\
    \    if (a%25 === 0) return true;\n    if (a%26 === 0) return true;\n    if (a%27\
    \ === 0) return true;\n    if (a%28 === 0) return true;\n    if (a%29 === 0) return\
    \ true;\n    if (a%30 === 0) return true;\n    if (a%31 === 0) return true;\n\
    \    if (a%32 === 0) return true;\n    if (a%33 === 0) return true;\n    if (a%34\
    \ === 0) return true;\n    if (a%35 === 0) return true;\n    if (a%36 === 0) return\
    \ true;\n    if (a%37 === 0) return true;\n    if (a%38 === 0) return true;\n\
    \    if (a%39 === 0) return true;\n    if (a%40 === 0) return true;\n    if (a%41\
    \ === 0) return true;\n    if (a%42 === 0) return true;\n    if (a%43 === 0) return\
    \ true;\n    if (a%44 === 0) return true;\n    if (a%45 === 0) return true;\n\
    \    if (a%46 === 0) return true;\n    if (a%47 === 0) return true;\n    if (a%48\
    \ === 0) return true;\n    if (a%49 === 0) return true;\n    if (a%50 === 0) return\
    \ true;\n    if (a%51 === 0) return true;\n    if (a%52 === 0) return true;\n\
    \    if (a%53 === 0) return true;\n    if (a%54 === 0) return true;\n    if (a%55\
    \ === 0) return true;\n    if (a%56 === 0) return true;\n    if (a%\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpzqhmip_w.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a*a*a*a)\
    \ == (a*a*a*a*a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpk347rx77.js:28:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpk347rx77.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcxz6ujrt.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a)\
    \ && isCube(a*a) && isCube(a*a*a)\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqsalyxy3.js:18\n    return isCube(a) && isCube(a*a) && isCube(a*a*a)\n\
    \    ^\n\nReferenceError: isCube is not defined\n    at iscube (/tmp/tmpqsalyxy3.js:18:5)\n\
    \    at test (/tmp/tmpqsalyxy3.js:25:20)\n    at Object.<anonymous> (/tmp/tmpqsalyxy3.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\tif(a==0){\n\t\t\
    return true;\n\t}\n\tif(a==1){\n\t\treturn true;\n\t}\n\tif(a==2){\n\t\treturn\
    \ true;\n\t}\n\tif(a==3){\n\t\treturn true;\n\t}\n\tif(a==4){\n\t\treturn true;\n\
    \t}\n\tif(a==5){\n\t\treturn true;\n\t}\n\tif(a==6){\n\t\treturn true;\n\t}\n\t\
    if(a==7){\n\t\treturn true;\n\t}\n\tif(a==8){\n\t\treturn true;\n\t}\n\tif(a==9){\n\
    \t\treturn true;\n\t}\n\tif(a==10){\n\t\treturn true;\n\t}\n\tif(a==11){\n\t\t\
    return true;\n\t}\n\tif(a==12){\n\t\treturn true;\n\t}\n\tif(a==13){\n\t\treturn\
    \ true;\n\t}\n\tif(a==14){\n\t\treturn true;\n\t}\n\tif(a==15){\n\t\treturn true;\n\
    \t}\n\tif(a==16){\n\t\treturn true;\n\t}\n\tif(a==17){\n\t\treturn true;\n\t}\n\
    \tif(a==18){\n\t\treturn true;\n\t}\n\tif(a==19){\n\t\treturn true;\n\t}\n\tif(a==20){\n\
    \t\treturn true;\n\t}\n\tif(a==21){\n\t\treturn true;\n\t}\n\tif(a==22){\n\t\t\
    return true;\n\t}\n\tif(a==23){\n\t\treturn true;\n\t}\n\tif(a==24){\n\t\treturn\
    \ true;\n\t}\n\tif(a==25){\n\t\treturn true;\n\t}\n\tif(a==26){\n\t\treturn true;\n\
    \t}\n\tif(a==27){\n\t\treturn true;\n\t}\n\tif(a==28){\n\t\treturn true;\n\t}\n\
    \tif(a==29){\n\t\treturn true;\n\t}\n\tif(a==30){\n\t\treturn true;\n\t}\n\tif(a==31){\n\
    \t\treturn true;\n\t}\n\tif(a==32){\n\t\treturn true;\n\t}\n\tif(a==33){\n\t\t\
    return true;\n\t}\n\tif(a==34){\n\t\treturn true;\n\t}\n\tif(a==35){\n\t\treturn\
    \ true;\n\t}\n\tif(a==36){\n\t\treturn true;\n\t}\n\tif(a==37){\n\t\treturn true;\n\
    \t}\n\tif(a==38){\n\t\treturn true;\n\t}\n\tif(a==39){\n\t\treturn true;\n\t}\n\
    \tif(a==40){\n\t\treturn true;\n\t}\n\tif(a==41){\n\t\treturn true;\n\t}\n\tif(a==42){\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp4cy6u778.js:160\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcxz6ujrt.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a===0){\n \
    \       return true;\n    }\n    if(a<0){\n        return false;\n    }\n    if(a%2===0){\n\
    \        return iscube(a/2);\n    }\n    return iscube(a/2);\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbn1i7opx.js:35:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpbn1i7opx.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if (a==0){\n \
    \       return true;\n    }\n    if (a==1){\n        return true;\n    }\n   \
    \ if (a==2){\n        return true;\n    }\n    if (a==3){\n        return true;\n\
    \    }\n    if (a==4){\n        return true;\n    }\n    if (a==5){\n        return\
    \ true;\n    }\n    if (a==6){\n        return true;\n    }\n    if (a==7){\n\
    \        return true;\n    }\n    if (a==8){\n        return true;\n    }\n  \
    \  if (a==9){\n        return true;\n    }\n    if (a==10){\n        return true;\n\
    \    }\n    if (a==11){\n        return true;\n    }\n    if (a==12){\n      \
    \  return true;\n    }\n    if (a==13){\n        return true;\n    }\n    if (a==14){\n\
    \        return true;\n    }\n    if (a==15){\n        return true;\n    }\n \
    \   if (a==16){\n        return true;\n    }\n    if (a==17){\n        return\
    \ true;\n    }\n    if (a==18){\n        return true;\n    }\n    if (a==19){\n\
    \        return true;\n    }\n    if (a==20){\n        return true;\n    }\n \
    \   if (a==21){\n        return true;\n    }\n    if (a==22){\n        return\
    \ true;\n    }\n    if (a==23){\n        return true;\n    }\n    if (a==24){\n\
    \        return true;\n    }\n    if (a==25){\n        return true;\n    }\n \
    \   if (a==26){\n        return true;\n    }\n    if (a==27){\n        return\
    \ true;\n    }\n    if (a==28){\n        return true;\n    }\n    if (a==29){\n\
    \        return true;\n    }\n    if (a==30){\n        return true;\n    }\n \
    \   if (a==31){\n        return true;\n    }\n    if (a==32){\n        return\
    \ true;\n    }\n    if (a==33){\n        return true;\n    }\n    if (a==34){\n\
    \        return true;\n    }\n    if (a==35){\n        return true;\n    }\n \
    \   if (a==36){\n        return true;\n    }\n    if (a==37){\n        return\
    \ true;\n    }\n    if (a==38){\n        return true;\n    }\n    if (a==39){\n\
    \        return true;\n    }\n    if (a==40){\n        return true;\n    }\n \
    \   if (a==41){\n        return true;\n    }\n    if (a==42){\n        return\
    \ true;\n    }\n    if (a==43){\n        return true;\n    }\n    if (a==44){\n\
    \        return true;\n    }\n    if (a==45){\n        return true;\n    }\n \
    \   if (a==46){\n        return true;\n    }\n    if (a==47){\n        return\
    \ true;\n    }\n    if (a==48){\n        return true;\n    }\n    if (a==49){\n\
    \        return true;\n    }\n    if (a==50){\n        return true;\n    }\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpsnju5cbi.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%1 !== 0)\
    \ return false;\n    if(a<0) return false;\n    if(a>180) return false;\n    if(a<64)\
    \ return true;\n    if(a<128) return true;\n    if(a<256) return true;\n    if(a<512)\
    \ return true;\n    if(a<1024) return true;\n    if(a<2048) return true;\n   \
    \ if(a<4096) return true;\n    return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqlo0df1_.js:37:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpqlo0df1_.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    for(var i=1;i<=a;i++){\n        if(a%i==0){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpl2va7f5f.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpl2va7f5f.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return (a*a*a)%1==0;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq68kw413.js:27:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpq68kw413.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\treturn a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyhu_dpgx.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if (a%1 !== 0)\
    \ return false\n    return isCube(Math.floor(a/1))\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpff48azna.js:19\n    return isCube(Math.floor(a/1))\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmpff48azna.js:19:5)\n    at test\
    \ (/tmp/tmpff48azna.js:27:20)\n    at Object.<anonymous> (/tmp/tmpff48azna.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcxz6ujrt.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a==0){\n  \
    \      return true;\n    }\n    if(a==1){\n        return true;\n    }\n    if(a==2){\n\
    \        return true;\n    }\n    if(a==3){\n        return true;\n    }\n   \
    \ if(a==4){\n        return true;\n    }\n    if(a==5){\n        return true;\n\
    \    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n        return\
    \ true;\n    }\n    if(a==8){\n        return true;\n    }\n    if(a==9){\n  \
    \      return true;\n    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n\
    \        return true;\n    }\n    if(a==12){\n        return true;\n    }\n  \
    \  if(a==13){\n        return true;\n    }\n    if(a==14){\n        return true;\n\
    \    }\n    if(a==15){\n        return true;\n    }\n    if(a==16){\n        return\
    \ true;\n    }\n    if(a==17){\n        return true;\n    }\n    if(a==18){\n\
    \        return true;\n    }\n    if(a==19){\n        return true;\n    }\n  \
    \  if(a==20){\n        return true;\n    }\n    if(a==21){\n        return true;\n\
    \    }\n    if(a==22){\n        return true;\n    }\n    if(a==23){\n        return\
    \ true;\n    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n\
    \        return true;\n    }\n    if(a==26){\n        return true;\n    }\n  \
    \  if(a==27){\n        return true;\n    }\n    if(a==28){\n        return true;\n\
    \    }\n    if(a==29){\n        return true;\n    }\n    if(a==30){\n        return\
    \ true;\n    }\n    if(a==31){\n        return true;\n    }\n    if(a==32){\n\
    \        return true;\n    }\n    if(a==33){\n        return true;\n    }\n  \
    \  if(a==34){\n        return true;\n    }\n    if(a==35){\n        return true;\n\
    \    }\n    if(a==36){\n        return true;\n    }\n    if(a==37){\n        return\
    \ true;\n    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n\
    \        return true;\n    }\n    if(a==40){\n        return true;\n    }\n  \
    \  if(a==41){\n        return true;\n    }\n    if(a==42){\n        return true;\n\
    \    }\n    if(a==43){\n        return true;\n    }\n    if(a==44){\n        return\
    \ true;\n    }\n    if(a==45){\n        return true;\n    }\n    if(a==46){\n\
    \        return true;\n    }\n    if(a==47){\n        return true;\n    }\n  \
    \  if(a==48){\n        return true;\n    }\n    if(a==49){\n        return true;\n\
    \    }\n    if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcd8e76vj.js:186\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcxz6ujrt.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    if(a%2==0){\n\
    \        if(a%3==0){\n            if(a%5==0){\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplc3lb7ka.js:33:10)\n    at\
    \ Object.<anonymous> (/tmp/tmplc3lb7ka.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n\tif(a===0){\n\t\t\
    return true;\n\t}\n\tif(a<0){\n\t\treturn false;\n\t}\n\tif(a%2===0){\n\t\treturn\
    \ iscube(a/2);\n\t}\n\treturn iscube(a*3)+1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp2b40dgoh.js:18\n\tif(a===0){\n\t^\n\nRangeError: Maximum call stack\
    \ size exceeded\n    at iscube (/tmp/tmp2b40dgoh.js:18:2)\n    at iscube (/tmp/tmp2b40dgoh.js:27:9)\n\
    \    at iscube (/tmp/tmp2b40dgoh.js:27:9)\n    at iscube (/tmp/tmp2b40dgoh.js:25:10)\n\
    \    at iscube (/tmp/tmp2b40dgoh.js:25:10)\n    at iscube (/tmp/tmp2b40dgoh.js:25:10)\n\
    \    at iscube (/tmp/tmp2b40dgoh.js:25:10)\n    at iscube (/tmp/tmp2b40dgoh.js:25:10)\n\
    \    at iscube (/tmp/tmp2b40dgoh.js:25:10)\n    at iscube (/tmp/tmp2b40dgoh.js:25:10)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcxz6ujrt.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_wxts6py.js:34\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Write a function that takes an integer a and returns true \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
    // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
    // true\n// >>> iscube(180)\n// false\nfunction iscube(a){\n    return isCube(a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp80r6dvh9.js:18\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmp80r6dvh9.js:18:5)\n    at test\
    \ (/tmp/tmp80r6dvh9.js:26:20)\n    at Object.<anonymous> (/tmp/tmp80r6dvh9.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659747768

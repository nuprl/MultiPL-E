name: HumanEval_99_closest_integer
language: js
results:
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMin;\n  var diffAbsMinIndex;\n  var diffAbsMinValue;\n\
    \  var diffAbsValue;\n  var diffAbsValueIndex;\n  var diffAbsValueValue;\n  var\
    \ diffAbsValueValueIndex;\n  var diffAbsValueValueValue;\n  var diffAbsValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValue;\n  var diffAbsValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValue;\n  var diffAbsValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValue;\n  var diffAbsValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueValue;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValue\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvbvrn5_6.js:78\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  if(Math.abs(value) < 1){\n    closest = Math.round(value);\n  }else{\n    closest\
    \ = Math.round(value/Math.abs(value)) * Math.abs(value);\n  }\n  return closest;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n14.5\n\nshould\
    \ loosely deep-equal\n\n15\n    at test (/tmp/tmp4wvahf_9.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4wvahf_9.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 14.5,\n  expected:\
    \ 15,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMin;\n  var diffAbsMinIndex;\n  var diffAbsMinValue;\n\
    \  var diffAbsValue;\n  var diffAbsValueIndex;\n  var diffAbsValueValue;\n  var\
    \ diffAbsValueValueIndex;\n  var diffAbsValueValueValue;\n  var diffAbsValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValue;\n  var diffAbsValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValue;\n  var diffAbsValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValue;\n  var diffAbsValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueValue;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValue\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp494ypqx5.js:78\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMin;\n  var diffAbsMinIndex;\n  var diffAbsMinValue;\n\
    \  var diffAbsValue;\n  var diffAbsValueIndex;\n  var diffAbsValueValue;\n  var\
    \ diffAbsValueValueIndex;\n  var diffAbsValueValueValue;\n  var diffAbsValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValue;\n  var diffAbsValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValue;\n  var diffAbsValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValue;\n  var diffAbsValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueValue;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValue\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpximljogi.js:78\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxAbs;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex2;\n  var\
    \ diffAbsMaxAbsIndex3;\n  var diffAbsMaxAbsIndex4;\n  var diffAbsMaxAbsIndex5;\n\
    \  var diffAbsMaxAbsIndex6;\n  var diffAbsMaxAbsIndex7;\n  var diffAbsMaxAbsIndex8;\n\
    \  var diffAbsMaxAbsIndex9;\n  var diffAbsMaxAbsIndex10;\n  var diffAbsMaxAbsIndex11;\n\
    \  var diffAbsMaxAbsIndex12;\n  var diffAbsMaxAbsIndex13;\n  var diffAbsMaxAbsIndex14;\n\
    \  var diffAbsMaxAbsIndex15;\n  var diffAbsMaxAbsIndex16;\n  var diffAbsMaxAbsIndex17;\n\
    \  var diffAbsMaxAbsIndex18;\n  var diffAbsMaxAbsIndex19;\n  var diffAbsMaxAbsIndex20;\n\
    \  var diffAbsMaxAbsIndex21;\n  var diffAbsMaxAbsIndex22;\n  var diffAbsMaxAbsIndex23;\n\
    \  var diffAbsMaxAbsIndex24;\n  var diffAbsMaxAbsIndex25;\n  var diffAbsMaxAbsIndex26;\n\
    \  var diffAbsMaxAbsIndex27;\n  var diffAbsMaxAbsIndex28;\n  var diffAbsMaxAbsIndex29;\n\
    \  var diffAbsMaxAbsIndex30;\n  var diffAbsMaxAbsIndex31;\n  var diffAbsMaxAbsIndex32;\n\
    \  var diffAbsMaxAbsIndex33;\n  var diffAbsMaxAbsIndex34;\n  var diffAbsMaxAbsIndex35;\n\
    \  var diffAbsMaxAbsIndex36;\n  var diffAbsMaxAbsIndex37;\n  var diffAbsMaxAbsIndex38;\n\
    \  var diffAbsMaxAbsIndex39;\n  var diffAbsMaxAbsIndex40;\n  var diffAbsMaxAbsIndex41;\n\
    \  var diffAbsMaxAbsIndex42;\n  var diffAbsMaxAbsIndex43;\n  var diffAbsMaxAbsIndex44;\n\
    \  var diffAbsMaxAbsIndex45;\n  var diff\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpw4wy8pj8.js:79\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n    var closest\
    \ = null;\n    var closestDistance = Math.abs(parseInt(value));\n    for(var i\
    \ = 0; i<values.length; i++){\n        var distance = Math.abs(parseInt(values[i]));\n\
    \        if(closestDistance > distance){\n            closestDistance = distance;\n\
    \            closest = values[i];\n        }\n    }\n    return closest;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppmd1o94n.js:17\n    for(var i = 0; i<values.length; i++){\n   \
    \                  ^\n\nReferenceError: values is not defined\n    at closest_integer\
    \ (/tmp/tmppmd1o94n.js:17:22)\n    at test (/tmp/tmppmd1o94n.js:32:20)\n    at\
    \ Object.<anonymous> (/tmp/tmppmd1o94n.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var difference\
    \ = Math.abs(value - closest_integer(Math.floor(Math.abs(value))));\n  return\
    \ difference < .5 ? Math.floor(Math.abs(value)) : Math.ceil(Math.abs(value));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpy_kf_g1j.js:15\n  var difference = Math.abs(value - closest_integer(Math.floor(Math.abs(value))));\n\
    \                   ^\n\nRangeError: Maximum call stack size exceeded\n    at\
    \ closest_integer (/tmp/tmpy_kf_g1j.js:15:20)\n    at closest_integer (/tmp/tmpy_kf_g1j.js:15:37)\n\
    \    at closest_integer (/tmp/tmpy_kf_g1j.js:15:37)\n    at closest_integer (/tmp/tmpy_kf_g1j.js:15:37)\n\
    \    at closest_integer (/tmp/tmpy_kf_g1j.js:15:37)\n    at closest_integer (/tmp/tmpy_kf_g1j.js:15:37)\n\
    \    at closest_integer (/tmp/tmpy_kf_g1j.js:15:37)\n    at closest_integer (/tmp/tmpy_kf_g1j.js:15:37)\n\
    \    at closest_integer (/tmp/tmpy_kf_g1j.js:15:37)\n    at closest_integer (/tmp/tmpy_kf_g1j.js:15:37)\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest_integer\
    \ = Math.round(value);\n  var difference = Math.abs(value - closest_integer);\n\
    \  if (difference < 0.5){\n    return closest_integer;\n  } else {\n    return\
    \ closest_integer - 1;\n  }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n14\n\nshould loosely\
    \ deep-equal\n\n15\n    at test (/tmp/tmp9cfnqutb.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9cfnqutb.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 14,\n  expected:\
    \ 15,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMaxValueIndex;\n  var diffAbsMaxValueValue;\n\
    \  var diffAbsMaxValueValueIndex;\n  var diffAbsMaxValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbs\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxu0j0vyq.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var abs;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n\
    \  var diffAbsMaxAbs;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex2;\n\
    \  var diffAbsMaxAbsIndex3;\n  var diffAbsMaxAbsIndex4;\n  var diffAbsMaxAbsIndex5;\n\
    \  var diffAbsMaxAbsIndex6;\n  var diffAbsMaxAbsIndex7;\n  var diffAbsMaxAbsIndex8;\n\
    \  var diffAbsMaxAbsIndex9;\n  var diffAbsMaxAbsIndex10;\n  var diffAbsMaxAbsIndex11;\n\
    \  var diffAbsMaxAbsIndex12;\n  var diffAbsMaxAbsIndex13;\n  var diffAbsMaxAbsIndex14;\n\
    \  var diffAbsMaxAbsIndex15;\n  var diffAbsMaxAbsIndex16;\n  var diffAbsMaxAbsIndex17;\n\
    \  var diffAbsMaxAbsIndex18;\n  var diffAbsMaxAbsIndex19;\n  var diffAbsMaxAbsIndex20;\n\
    \  var diffAbsMaxAbsIndex21;\n  var diffAbsMaxAbsIndex22;\n  var diffAbsMaxAbsIndex23;\n\
    \  var diffAbsMaxAbsIndex24;\n  var diffAbsMaxAbsIndex25;\n  var diffAbsMaxAbsIndex26;\n\
    \  var diffAbsMaxAbsIndex27;\n  var diffAbsMaxAbsIndex28;\n  var diffAbsMaxAbsIndex29;\n\
    \  var diffAbsMaxAbsIndex30;\n  var diffAbsMaxAbsIndex31;\n  var diffAbsMaxAbsIndex32;\n\
    \  var diffAbsMaxAbsIndex33;\n  var diffAbsMaxAbsIndex34;\n  var diffAbsMaxAbsIndex35;\n\
    \  var diffAbsMaxAbsIndex36;\n  var diffAbsMaxAbsIndex37;\n  var diffAbsMaxAbsIndex38;\n\
    \  var diffAbsMaxAbsIndex39;\n  var diffAbsMaxAbsIndex40;\n  var diffAbsMaxAbsIndex41;\n\
    \  var diffAbsMaxAbsIndex42;\n  var diffAbsMaxAbsIndex43;\n  var diffAbsMaxAbsIndex44;\n\
    \  var diffAbsMaxAbsIndex45\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpds9ifgni.js:79\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest =\
    \ null;\n  var diff = null;\n  var diffAbs = null;\n  var diffAbsMax = null;\n\
    \  var diffAbsMaxIndex = null;\n  var diffAbsMaxAbs = null;\n  var diffAbsMaxAbsIndex\
    \ = null;\n  var diffAbsMaxAbsIndexAbs = null;\n  var diffAbsMaxAbsIndexAbsMax\
    \ = null;\n  var diffAbsMaxAbsIndexAbsMaxIndex = null;\n  var diffAbsMaxAbsIndexAbsMaxAbs\
    \ = null;\n  var diffAbsMaxAbsIndexAbsMaxAbsIndex = null;\n  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbs\
    \ = null;\n  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMax = null;\n  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxIndex\
    \ = null;\n  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbs = null;\n  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndex\
    \ = null;\n  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbs = null;\n \
    \ var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMax = null;\n  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxIndex\
    \ = null;\n  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbs = null;\n\
    \  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndex = null;\n\
    \  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbs = null;\n\
    \  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMax = null;\n\
    \  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxIndex\
    \ = null;\n  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbs\
    \ = null;\n  var diffAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndexAbsMaxAbsIndex\
    \ = null;\n  var diffAbsMaxAbsIndexAbsMaxAbsIndex\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppeugvrf6.js:55\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMaxValueIndex;\n  var diffAbsMaxValueValue;\n\
    \  var diffAbsMaxValueValueIndex;\n  var diffAbsMaxValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbs\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpb27b4a6k.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxAbs;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex2;\n  var\
    \ diffAbsMaxAbsIndex3;\n  var diffAbsMaxAbsIndex4;\n  var diffAbsMaxAbsIndex5;\n\
    \  var diffAbsMaxAbsIndex6;\n  var diffAbsMaxAbsIndex7;\n  var diffAbsMaxAbsIndex8;\n\
    \  var diffAbsMaxAbsIndex9;\n  var diffAbsMaxAbsIndex10;\n  var diffAbsMaxAbsIndex11;\n\
    \  var diffAbsMaxAbsIndex12;\n  var diffAbsMaxAbsIndex13;\n  var diffAbsMaxAbsIndex14;\n\
    \  var diffAbsMaxAbsIndex15;\n  var diffAbsMaxAbsIndex16;\n  var diffAbsMaxAbsIndex17;\n\
    \  var diffAbsMaxAbsIndex18;\n  var diffAbsMaxAbsIndex19;\n  var diffAbsMaxAbsIndex20;\n\
    \  var diffAbsMaxAbsIndex21;\n  var diffAbsMaxAbsIndex22;\n  var diffAbsMaxAbsIndex23;\n\
    \  var diffAbsMaxAbsIndex24;\n  var diffAbsMaxAbsIndex25;\n  var diffAbsMaxAbsIndex26;\n\
    \  var diffAbsMaxAbsIndex27;\n  var diffAbsMaxAbsIndex28;\n  var diffAbsMaxAbsIndex29;\n\
    \  var diffAbsMaxAbsIndex30;\n  var diffAbsMaxAbsIndex31;\n  var diffAbsMaxAbsIndex32;\n\
    \  var diffAbsMaxAbsIndex33;\n  var diffAbsMaxAbsIndex34;\n  var diffAbsMaxAbsIndex35;\n\
    \  var diffAbsMaxAbsIndex36;\n  var diffAbsMaxAbsIndex37;\n  var diffAbsMaxAbsIndex38;\n\
    \  var diffAbsMaxAbsIndex39;\n  var diffAbsMaxAbsIndex40;\n  var diffAbsMaxAbsIndex41;\n\
    \  var diffAbsMaxAbsIndex42;\n  var diffAbsMaxAbsIndex43;\n  var diffAbsMaxAbsIndex44;\n\
    \  var diffAbsMaxAbsIndex45;\n  var diff\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8h4e7xj9.js:79\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n    var closest;\n\
    \    var diff;\n    var diffAbs;\n    var diffAbsMax;\n    var diffAbsMaxIndex;\n\
    \    var diffAbsMaxValue;\n    var diffAbsMaxValueIndex;\n    var diffAbsMaxValueValue;\n\
    \    var diffAbsMaxValueValueIndex;\n    var diffAbsMaxValueValueValue;\n    var\
    \ diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n \
    \   var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbs\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n\
    \  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptnh7lt5a.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxAbs;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var\
    \ diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmph0gv0q1g.js:87\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMaxValueIndex;\n  var diffAbsMaxValueValue;\n\
    \  var diffAbsMaxValueValueIndex;\n  var diffAbsMaxValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbs\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptck5734p.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMin;\n  var diffAbsMinIndex;\n  var diffAbsMinValue;\n\
    \  var diffAbsValue;\n  var diffAbsValueIndex;\n  var diffAbsValueValue;\n  var\
    \ diffAbsValueValueIndex;\n  var diffAbsValueValueValue;\n  var diffAbsValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValue;\n  var diffAbsValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValue;\n  var diffAbsValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValue;\n  var diffAbsValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueValue;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValue\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqdfuxqqf.js:78\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest =\
    \ Math.round(value);\n  if (Math.abs(value - closest) < 0.0000001) {\n    return\
    \ closest;\n  }\n  return closest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-15\n\nshould\
    \ loosely deep-equal\n\n-16\n    at test (/tmp/tmpou1e3yx9.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpou1e3yx9.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -15,\n  expected:\
    \ -16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMaxValueIndex;\n  var diffAbsMaxValueValue;\n\
    \  var diffAbsMaxValueValueIndex;\n  var diffAbsMaxValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbs\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprs5_cwkp.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMaxValueIndex;\n  var diffAbsMaxValueValue;\n\
    \  var diffAbsMaxValueValueIndex;\n  var diffAbsMaxValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbs\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1agyv0jp.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError

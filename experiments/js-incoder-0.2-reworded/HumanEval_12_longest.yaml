name: HumanEval_12_longest
language: js
prompt: "//Out of array of strings, return the longest one. Return the first one in\
  \ case of multiple\n// strings of the same length. Return undefined in case the\
  \ input array is empty.\n// >>> longest([])\n// undefined\n// >>> longest([\"a\"\
  , \"b\", \"c\"])\n// \"a\"\n// >>> longest([\"a\", \"bb\", \"ccc\"])\n// \"ccc\"\
  \nfunction longest(strings){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = longest;\n  assert.deepEqual(candidate([]),undefined);\n  assert.deepEqual(candidate([\"\
  x\", \"y\", \"z\"]),\"x\");\n  assert.deepEqual(candidate([\"x\", \"yyy\", \"zzzz\"\
  , \"www\", \"kkkk\", \"abc\"]),\"zzzz\");\n}\n\ntest();"
completions: ["    var longest = strings[0];\n    for(var i = 1; i < strings.length;\
    \ i++){\n        if(strings[i].length > longest.length){\n            longest\
    \ = strings[i];\n        }\n    }\n    return longest;\n}\n", "  var longest =\
    \ 0;\n  var longestString = \"\";\n  for (var i = 0; i < strings.length; i++){\n\
    \    if (strings[i].length > longest){\n      longest = strings[i].length;\n \
    \     longestString = strings[i];\n    }\n  }\n  return longestString;\n}\n",
  "    var longest = strings[0];\n    for(var i = 1; i < strings.length; i++){\n \
    \       if(strings[i].length > longest.length){\n            longest = strings[i];\n\
    \        }\n    }\n    return longest;\n}\n", "  var longest = strings[0];\n \
    \ for(var i = 1; i < strings.length; i++){\n    if(strings[i].length > longest.length){\n\
    \      longest = strings[i];\n    }\n  }\n  return longest;\n}\n", "    var longest\
    \ = strings[0];\n    var length = longest.length;\n    for (var i = 1; i < strings.length;\
    \ i++){\n        var string = strings[i];\n        if (string.length > length){\n\
    \            longest = string;\n            length = longest.length;\n       \
    \ }\n    }\n    return longest;\n}\n", "    var longest = strings[0];\n    for(var\
    \ i = 1; i < strings.length; i++){\n        if(strings[i].length > longest.length){\n\
    \            longest = strings[i];\n        }\n    }\n    return longest;\n}\n",
  "    if(!strings.length){\n        return undefined;\n    }\n    var longest = strings[0];\n\
    \    for(var i = 1; i < strings.length; i++){\n        if(strings[i].length >\
    \ longest.length){\n            longest = strings[i];\n        }\n    }\n    return\
    \ longest;\n}\n", "    var longest = strings[0];\n    for(var i = 1; i < strings.length;\
    \ i++){\n        if(strings[i].length > longest.length){\n            longest\
    \ = strings[i];\n        }\n    }\n    return longest;\n}\n", "\tvar longest =\
    \ strings[0];\n\tfor(var i = 1; i < strings.length; i++){\n\t\tif(strings[i].length\
    \ > longest.length){\n\t\t\tlongest = strings[i];\n\t\t}\n\t}\n\treturn longest;\n\
    }\n", "    var longest = strings[0];\n    for(var i = 0; i < strings.length; i++){\n\
    \        if(strings[i].length > longest.length){\n            longest = strings[i];\n\
    \        }\n    }\n    return longest;\n}\n", "  var longest = strings[0];\n \
    \ var maxLength = 1;\n  for(var i = 1; i < strings.length; i++){\n    if(strings[i].length\
    \ > maxLength){\n      longest = strings[i];\n      maxLength = strings[i].length;\n\
    \    }\n  }\n  return longest;\n}\n", "    var maxLength = 0;\n    var maxString;\n\
    \    for(var i = 0; i < strings.length; i++){\n        var string = strings[i];\n\
    \        if(string.length > maxLength){\n            maxLength = string.length;\n\
    \            maxString = string;\n        }\n    }\n    return maxString;\n}\n",
  "    var longest = strings[0];\n    for(var i = 1; i < strings.length; i++){\n \
    \       if(strings[i].length > longest.length){\n            longest = strings[i];\n\
    \        }\n    }\n    return longest;\n}\n", "    var maxLen = strings[0].length;\n\
    \    var maxStr;\n    for(var i = 1; i < strings.length; i++){\n        if(strings[i].length\
    \ > maxLen){\n            maxLen = strings[i].length;\n            maxStr = strings[i];\n\
    \        }\n    }\n    return maxStr;\n}\n", "\tvar longest = strings[0];\n\t\
    for(var i = 1; i < strings.length; i++){\n\t\tif(strings[i].length > longest.length){\n\
    \t\t\tlongest = strings[i];\n\t\t}\n\t}\n\treturn longest;\n}\n", "\tvar longest\
    \ = strings[0];\n\tfor(var i = 1; i < strings.length; i++){\n\t\tif(strings[i].length\
    \ > longest.length){\n\t\t\tlongest = strings[i];\n\t\t}\n\t}\n\treturn longest;\n\
    }\n", "  var longest = strings[0];\n  for(var i = 1; i < strings.length; i++){\n\
    \    if(strings[i].length > longest.length){\n      longest = strings[i];\n  \
    \  }\n  }\n  return longest;\n}\n", "    var longest = strings[0];\n    for(var\
    \ i = 1; i < strings.length; i++){\n        if(strings[i].length > longest.length){\n\
    \            longest = strings[i];\n        }\n    }\n    return longest;\n}\n",
  "  var longest = strings[0];\n  for(var i = 1; i < strings.length; i++){\n    if(strings[i].length\
    \ > longest.length){\n      longest = strings[i];\n    }\n  }\n  return longest;\n\
    }\n", "  var longest = 0;\n  var str = \"\";\n  for (var i = 0; i < strings.length;\
    \ i++){\n    if (strings[i].length > longest){\n      longest = strings[i].length;\n\
    \      str = strings[i];\n    }\n  }\n  return str;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

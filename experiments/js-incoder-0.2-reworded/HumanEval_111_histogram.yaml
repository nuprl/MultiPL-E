name: HumanEval_111_histogram
language: js
prompt: "//Given a string representing a space separated lowercase letters, return\
  \ an object\n// of the letter with the most repetition and containing the corresponding\
  \ count.\n// If several letters have the same occurrence, return all of them.\n\
  // Example:\n// >>> histogram(\"a b c\")\n// {\"a\": 1, \"b\": 1, \"c\": 1}\n//\
  \ >>> histogram(\"a b b a\")\n// {\"a\": 2, \"b\": 2}\n// >>> histogram(\"a b c\
  \ a b\")\n// {\"a\": 2, \"b\": 2}\n// >>> histogram(\"b b b b a\")\n// {\"b\": 4}\n\
  // >>> histogram(\"\")\n// {}\nfunction histogram(test){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = histogram;\n  assert.deepEqual(candidate(\"a b b a\"),{\"a\": 2, \"b\": 2});\n\
  \  assert.deepEqual(candidate(\"a b c a b\"),{\"a\": 2, \"b\": 2});\n  assert.deepEqual(candidate(\"\
  a b c d g\"),{\"a\": 1, \"b\": 1, \"c\": 1, \"d\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"\
  r t g\"),{\"r\": 1, \"t\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"b b b\
  \ b a\"),{\"b\": 4});\n  assert.deepEqual(candidate(\"r t g\"),{\"r\": 1, \"t\"\
  : 1, \"g\": 1});\n  assert.deepEqual(candidate(\"\"),{});\n  assert.deepEqual(candidate(\"\
  a\"),{\"a\": 1});\n}\n\ntest();"
completions: ["  var letters = test.split(\" \");\n  var histogram = {};\n  letters.forEach(function(letter){\n\
    \    histogram[letter] = (histogram[letter] || 0) + 1;\n  });\n  return histogram;\n\
    }\n", "  var result = {};\n  var letters = test.split(\" \");\n  letters.forEach(function(letter){\n\
    \    result[letter] = result[letter] ? result[letter] + 1 : 1;\n  });\n  return\
    \ result;\n}\n", "  var letters = test.split(\" \");\n  var histogram = {};\n\
    \  for(var i = 0; i < letters.length; i++){\n    var letter = letters[i];\n  \
    \  if(histogram[letter] == undefined){\n      histogram[letter] = 1;\n    }else{\n\
    \      histogram[letter]++;\n    }\n  }\n  return histogram;\n}\n", "    var letters\
    \ = test.split(' '),\n        letter,\n        letterCounts = {},\n        letterCount;\n\
    \n    for(var i = 0, len = letters.length; i < len; i++){\n        letter = letters[i];\n\
    \        letterCounts[letter] = letterCounts[letter] ? letterCounts[letter] +\
    \ 1 : 1;\n    }\n\n    for(letter in letterCounts){\n        letterCount = letterCounts[letter];\n\
    \        if(letterCount > letterCounts[letter]){\n            letterCounts[letter]\
    \ = letterCount;\n        }\n    }\n\n    return letterCounts;\n}\n", "  var letters\
    \ = test.split(\" \");\n  var histogram = {};\n  for (var i = 0; i < letters.length;\
    \ i++){\n    var letter = letters[i];\n    histogram[letter] = histogram[letter]\
    \ ? histogram[letter] + 1 : 1;\n  }\n  return histogram;\n}\n", "    var letters\
    \ = test.split(\" \");\n    var histogram = {};\n    for(var i = 0; i < letters.length;\
    \ i++){\n        var letter = letters[i];\n        if(histogram[letter] == undefined){\n\
    \            histogram[letter] = 1;\n        } else {\n            histogram[letter]++;\n\
    \        }\n    }\n    return histogram;\n}\n", "    var result = {};\n    var\
    \ words = test.split(\" \");\n    for(var i = 0; i < words.length; i++){\n   \
    \     var letter = words[i];\n        if(result[letter] == undefined){\n     \
    \       result[letter] = 1;\n        }else{\n            result[letter]++;\n \
    \       }\n    }\n    return result;\n}\n", "  var letters = test.split(\" \"\
    );\n  var histogram = {};\n  for (var i = 0; i < letters.length; i++){\n    var\
    \ letter = letters[i];\n    if (histogram[letter] == undefined){\n      histogram[letter]\
    \ = 1;\n    } else {\n      histogram[letter]++;\n    }\n  }\n  return histogram;\n\
    }\n", "    var letters = test.split(' ').map(function(letter){\n        return\
    \ letter.toLowerCase();\n    });\n    var counts = {};\n    letters.forEach(function(letter){\n\
    \        counts[letter] = counts[letter] ? counts[letter] + 1 : 1;\n    });\n\
    \    return counts;\n}\n", "  var letters = test.split(\" \");\n  var histogram\
    \ = {};\n  for (var i = 0; i < letters.length; i++){\n    var letter = letters[i];\n\
    \    if (histogram[letter] == undefined){\n      histogram[letter] = 1;\n    }\
    \ else {\n      histogram[letter]++;\n    }\n  }\n  return histogram;\n}\n", " \
    \ var letters = test.split(\" \");\n  var histogram = {};\n  for(var i = 0; i\
    \ < letters.length; i++){\n    var letter = letters[i];\n    if(histogram[letter]\
    \ == undefined){\n      histogram[letter] = 1;\n    } else {\n      histogram[letter]++;\n\
    \    }\n  }\n  return histogram;\n}\n", "  var letters = test.split(\" \");\n\
    \  var histogram = {};\n  letters.forEach(function(letter){\n    histogram[letter]\
    \ = letters.filter(function(letter){\n      return letter === letter;\n    }).length;\n\
    \  });\n  return histogram;\n}\n", "    var result = {};\n    var letters = test.split(\"\
    \ \");\n    var letter;\n    var count;\n    for(var i=0; i<letters.length; i++){\n\
    \        letter = letters[i];\n        count = result[letter] ? result[letter]+1\
    \ : 1;\n        result[letter] = count;\n    }\n    return result;\n}\n", "  var\
    \ histogram = {};\n  test.split(\" \").forEach(function(letter){\n    histogram[letter]\
    \ = histogram[letter] ? histogram[letter] + 1 : 1;\n  });\n  return histogram;\n\
    }\n", "  var letters = test.split(\" \");\n  var histogram = {};\n  for(var i=0;\
    \ i<letters.length; i++){\n    if(histogram[letters[i]] == undefined){\n     \
    \ histogram[letters[i]] = 0;\n    }\n    histogram[letters[i]]++;\n  }\n  return\
    \ histogram;\n}\n", "  var histogram = {}\n  test.split(\" \").forEach(function(letter){\n\
    \    histogram[letter] = (histogram[letter] || 0) + 1\n  })\n  return histogram\n\
    }\n", "    var letters = test.split(\" \");\n    var histogram = {};\n    for(var\
    \ i = 0; i < letters.length; i++){\n        if(histogram[letters[i]] === undefined){\n\
    \            histogram[letters[i]] = 1;\n        }else{\n            histogram[letters[i]]++;\n\
    \        }\n    }\n    return histogram;\n}\n", "    var letters = test.split(\"\
    \ \");\n    var histogram = {};\n    for(var i = 0; i < letters.length; i++){\n\
    \        var letter = letters[i];\n        if(histogram[letter] == undefined){\n\
    \            histogram[letter] = 1;\n        }else{\n            histogram[letter]++;\n\
    \        }\n    }\n    return histogram;\n}\n", "    var letters = test.split(\"\
    \ \");\n    var histogram = {};\n    for(var i = 0; i < letters.length; i++){\n\
    \        if(histogram[letters[i]] == undefined){\n            histogram[letters[i]]\
    \ = 1;\n        }else{\n            histogram[letters[i]]++;\n        }\n    }\n\
    \    return histogram;\n}\n", "    var letters = test.split(\" \");\n    var histogram\
    \ = {};\n    for(var i = 0; i < letters.length; i++){\n        if(histogram[letters[i]]\
    \ === undefined){\n            histogram[letters[i]] = 1;\n        } else {\n\
    \            histogram[letters[i]]++;\n        }\n    }\n    return histogram;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

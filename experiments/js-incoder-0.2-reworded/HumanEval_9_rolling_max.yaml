name: HumanEval_9_rolling_max
language: js
prompt: "//From a given array of integers, generate an array of rolling maximum element\
  \ found until given moment\n// in the sequence.\n// >>> rolling_max([1, 2, 3, 2,\
  \ 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4,\
  \ 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
  }\n\ntest();"
completions: ["  var result = [];\n  var max = 0;\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    if(numbers[i] > max){\n      max = numbers[i];\n    }\n  }\n  for(var\
    \ i = 0; i < numbers.length; i++){\n    if(numbers[i] > max){\n      result.push(max);\n\
    \      max = numbers[i];\n    }\n  }\n  return result;\n}\n", "\tvar rolling_max\
    \ = [];\n\tvar max_value = numbers[0];\n\tfor(var i = 1; i < numbers.length; i++){\n\
    \t\tif(numbers[i] > max_value){\n\t\t\trolling_max = [max_value];\n\t\t\tmax_value\
    \ = numbers[i];\n\t\t}else{\n\t\t\trolling_max.push(numbers[i]);\n\t\t}\n\t}\n\
    \treturn rolling_max;\n}\n", "\tvar result = [];\n\tvar max_value = numbers[0];\n\
    \tvar max_index = 0;\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i]\
    \ > max_value){\n\t\t\tmax_value = numbers[i];\n\t\t\tmax_index = i;\n\t\t}\n\t\
    }\n\tresult.push(max_value);\n\tresult.push(max_index);\n\treturn result;\n}\n",
  "\tvar result = [];\n\tvar rolling_max;\n\tfor(var i=0;i<numbers.length;i++){\n\t\
    \trolling_max = Math.max(numbers[i]);\n\t\tresult.push(rolling_max);\n\t}\n\t\
    return result;\n}\n", "  var result = [];\n  var currentMax = numbers[0];\n  for(var\
    \ i = 1; i < numbers.length; i++){\n    if(numbers[i] > currentMax){\n      currentMax\
    \ = numbers[i];\n    }\n  }\n  result.push(currentMax);\n  return result;\n}\n",
  "\tvar max = numbers[0];\n\tvar max_index = -1;\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] > max){\n\t\t\tmax = numbers[i];\n\t\t\tmax_index =\
    \ i;\n\t\t}\n\t}\n\treturn numbers.slice(0, max_index + 1);\n}\n", "    var result\
    \ = [];\n    var max_value = numbers[0];\n    var max_index = -1;\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] > max_value){\n    \
    \        max_value = numbers[i];\n            max_index = i;\n        }\n    }\n\
    \    result.push(max_value);\n    result.push(max_index);\n    return result;\n\
    }\n", "    var result = [];\n    numbers.forEach(function(number){\n        var\
    \ max = 0;\n        for(var i=0; i<numbers.length; i++){\n            if(numbers[i]\
    \ > max){\n                max = numbers[i];\n            }\n        }\n     \
    \   result.push(max);\n    });\n    return result;\n}\n", "\tvar max_number =\
    \ 0;\n\tvar max_index = 0;\n\tfor(var i in numbers){\n\t\tmax_number = Math.max(max_number,\
    \ numbers[i]);\n\t\tmax_index = i;\n\t}\n\treturn numbers.slice(max_index, numbers.length);\n\
    }\n", "    var result = [];\n    var max = 0;\n    for(var i=0; i<numbers.length;\
    \ i++){\n        if(numbers[i] > max){\n            max = numbers[i];\n      \
    \  }\n    }\n    for(var i=0; i<numbers.length; i++){\n        if(numbers[i] >\
    \ max){\n            result.push(max);\n            max = numbers[i];\n      \
    \  }\n        else if(numbers[i] < max){\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var max_rolling = 0;\n    var\
    \ max_rolling_numbers = [];\n    for(var i=0; i<numbers.length; i++){\n      \
    \  if(numbers[i] > max_rolling){\n            max_rolling = numbers[i];\n    \
    \    }\n    }\n    for(var i=0; i<numbers.length; i++){\n        if(numbers[i]\
    \ > max_rolling){\n            max_rolling_numbers.push(max_rolling);\n      \
    \      max_rolling = numbers[i];\n        }\n    }\n    max_rolling_numbers.push(max_rolling);\n\
    \    return max_rolling_numbers;\n}\n", "    var result = [];\n    var max = numbers[0];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i] > max){\n\
    \            max = numbers[i];\n        }\n    }\n    result.push(max);\n    return\
    \ result;\n}\n", "\tvar result = [];\n\tvar max_value = numbers[0];\n\tvar max_index\
    \ = 0;\n\tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] > max_value){\n\
    \t\t\tmax_value = numbers[i];\n\t\t\tmax_index = i;\n\t\t}\n\t}\n\tresult.push(max_value);\n\
    \tresult.push(max_index);\n\treturn result;\n}\n", "\tvar rolling_max = [];\n\t\
    for(var i=0; i<numbers.length; i++){\n\t\trolling_max.push(numbers[i]);\n\t}\n\
    \trolling_max = rolling_max.sort(function(a, b){\n\t\treturn a-b;\n\t});\n\tfor(var\
    \ i=0; i<numbers.length; i++){\n\t\trolling_max[i] = rolling_max[i] + numbers[i];\n\
    \t}\n\treturn rolling_max;\n}\n", "    var result = [];\n    var max_value = numbers[0];\n\
    \    var max_index = 0;\n    for(var i = 1; i < numbers.length; i++){\n      \
    \  if(numbers[i] > max_value){\n            max_value = numbers[i];\n        \
    \    max_index = i;\n        }\n    }\n    result.push(max_value);\n    result.push(numbers[max_index]);\n\
    \    return result;\n}\n", "\tvar result = [];\n\tvar max_value = numbers[0];\n\
    \tfor(var i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] > max_value){\n\t\
    \t\tmax_value = numbers[i];\n\t\t}\n\t}\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] > max_value){\n\t\t\tresult.push(max_value);\n\t\t\t\
    max_value = numbers[i];\n\t\t}\n\t}\n\treturn result;\n}\n", "  var result = [];\n\
    \  var currentMax = numbers[0];\n  for(var i = 1; i < numbers.length; i++){\n\
    \    if(numbers[i] > currentMax){\n      currentMax = numbers[i];\n    }\n  }\n\
    \  result.push(currentMax);\n  return result;\n}\n", "  var result = [];\n  var\
    \ max_value = numbers[0];\n  var max_index = 0;\n  for(var i = 1; i < numbers.length;\
    \ i++){\n    if(numbers[i] > max_value){\n      max_value = numbers[i];\n    \
    \  max_index = i;\n    }\n  }\n  result.push(max_value);\n  result.push(max_index);\n\
    \  return result;\n}\n", "    var result = [];\n    var rolling_max;\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        rolling_max = numbers[i];\n      \
    \  for(var j = i - 1; j >= 0; j--){\n            if(numbers[j] > rolling_max){\n\
    \                rolling_max = numbers[j];\n            }\n        }\n       \
    \ result.push(rolling_max);\n    }\n    return result;\n}\n", "\tvar result =\
    \ [];\n\tvar max = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\t\tmax = Math.max(max,\
    \ numbers[i]);\n\t\tresult.push(max);\n\t}\n\treturn result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

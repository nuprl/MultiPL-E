name: HumanEval_76_is_simple_power
language: js
results:
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    if\
    \ (n==0) return true;\n    if (n==1) return false;\n    if (n==2) return (x==1);\n\
    \    if (n<0) return false;\n    if (x==1) return false;\n    if (x==0) return\
    \ true;\n    if (x<0) return false;\n    if (x<1) return false;\n    if (x<2)\
    \ return true;\n    if (x<3) return true;\n    if (x<4) return true;\n    if (x<5)\
    \ return true;\n    if (x<6) return true;\n    if (x<7) return true;\n    if (x<8)\
    \ return true;\n    if (x<9) return true;\n    if (x<10) return true;\n    if\
    \ (x<11) return true;\n    if (x<12) return true;\n    if (x<13) return true;\n\
    \    if (x<14) return true;\n    if (x<15) return true;\n    if (x<16) return\
    \ true;\n    if (x<17) return true;\n    if (x<18) return true;\n    if (x<19)\
    \ return true;\n    if (x<20) return true;\n    if (x<21) return true;\n    if\
    \ (x<22) return true;\n    if (x<23) return true;\n    if (x<24) return true;\n\
    \    if (x<25) return true;\n    if (x<26) return true;\n    if (x<27) return\
    \ true;\n    if (x<28) return true;\n    if (x<29) return true;\n    if (x<30)\
    \ return true;\n    if (x<31) return true;\n    if (x<32) return true;\n    if\
    \ (x<33) return true;\n    if (x<34) return true;\n    if (x<35) return true;\n\
    \    if (x<36) return true;\n    if (x<37) return true;\n    if (x<38) return\
    \ true;\n    if (x<39) return true;\n    if (x<40) return true;\n    if (x<41)\
    \ return true;\n    if (x<42) return true;\n    if (x<43) return true;\n    if\
    \ (x<44) return true;\n    if (x<45) return true;\n    if (x<46) return true;\n\
    \    if (x<47) return true;\n    if (x<48) return true;\n    if (x<49) return\
    \ true;\n    if (x<50) return true;\n    if (x<51) return true;\n    if (x<52)\
    \ return true;\n    if (x<53) return true;\n    if (x<54) return true;\n    if\
    \ (x<55) return true;\n    if (x<56) return true;\n    if (x<57) return true;\n\
    \    if (x<58) return true;\n    if (x<59) return true;\n    if (x<60) return\
    \ true;\n    if (x<61) return true;\n    if (x<62) return true;\n    if (x<63)\
    \ return true;\n    if (x<64) return true;\n    if (x<65) return true;\n    if\
    \ (x\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplqh4gion.js:91\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    if\
    \ (n<=1){\n        return true;\n    }\n    if (n%2==0){\n        return false;\n\
    \    }\n    if (n%4==0){\n        return true;\n    }\n    if (n%8==0){\n    \
    \    return true;\n    }\n    if (n%16==0){\n        return true;\n    }\n   \
    \ if (n%32==0){\n        return true;\n    }\n    if (n%64==0){\n        return\
    \ true;\n    }\n    if (n%128==0){\n        return true;\n    }\n    if (n%256==0){\n\
    \        return true;\n    }\n    if (n%512==0){\n        return true;\n    }\n\
    \    if (n%1024==0){\n        return true;\n    }\n    if (n%2048==0){\n     \
    \   return true;\n    }\n    if (n%4096==0){\n        return true;\n    }\n  \
    \  if (n%8192==0){\n        return true;\n    }\n    if (n%16384==0){\n      \
    \  return true;\n    }\n    if (n%32768==0){\n        return true;\n    }\n  \
    \  if (n%65536==0){\n        return true;\n    }\n    if (n%131072==0){\n    \
    \    return true;\n    }\n    if (n%262144==0){\n        return true;\n    }\n\
    \    if (n%524288==0){\n        return true;\n    }\n    if (n%1048576==0){\n\
    \        return true;\n    }\n    if (n%2097152==0){\n        return true;\n \
    \   }\n    if (n%4194304==0){\n        return true;\n    }\n    if (n%8388608==0){\n\
    \        return true;\n    }\n    if (n%16777216==0){\n        return true;\n\
    \    }\n    if (n%33554432==0){\n        return true;\n    }\n    if (n%67108864==0){\n\
    \        return true;\n    }\n    if (n%134217728==0){\n        return true;\n\
    \    }\n    if (n%268435456==0){\n        return true;\n    }\n    if (n%536870912==0){\n\
    \        return true;\n    }\n    if (n%1073741824==0){\n        return true;\n\
    \    }\n    if (n%2147483648==0){\n        return true;\n    }\n    if (n%4294967296==0){\n\
    \        return true;\n    }\n    if (n%8589934592==0){\n        return true;\n\
    \    }\n    if (n%17179869184==0){\n        return true;\n    }\n    if (n%34359738368==0){\n\
    \        return true;\n    }\n    if (n%68719476736==0){\n        return true;\n\
    \    }\n    if (n%137438953472\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn016kdmw.js:130\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    for(var\
    \ i=0;i<n;i++){\n        if(x%i==0){\n            return false;\n        }\n \
    \   }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdh_l0oxp.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpdh_l0oxp.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    for(var\
    \ i=0;i<n;i++){\n        if(x%n!=0){\n            return false;\n        }\n \
    \       x=x/n;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpw3zrf5ly.js:35:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpw3zrf5ly.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    for(var\
    \ i=0;i<n;i++){\n        if(x%n!==0){\n            return false;\n        }\n\
    \        x=x/n;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfele93ti.js:35:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpfele93ti.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    //\
    \ Your code here\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\ntrue\n    at test (/tmp/tmpblyzi8z0.js:26:10)\n \
    \   at Object.<anonymous> (/tmp/tmpblyzi8z0.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    if(n==0)\n\
    \        return true;\n    if(n==1)\n        return (x==1);\n    if(n==2)\n  \
    \      return (x==1);\n    if(n%2==0)\n        return (x%n==0);\n    return is_simple_power(x,\
    \ n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpv1oyfj3f.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpv1oyfj3f.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    for(var\
    \ i=0;i<n;i++){\n        if(x%i==0){\n            return false;\n        }\n \
    \   }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmftpbnnz.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmftpbnnz.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    if(n==0){\n\
    \        return true;\n    }\n    if(n==1){\n        return (x==1);\n    }\n \
    \   if(n==2){\n        return (x==1);\n    }\n    if(n==3){\n        return (x==1);\n\
    \    }\n    if(n==4){\n        return (x==1);\n    }\n    if(n==5){\n        return\
    \ (x==1);\n    }\n    if(n==6){\n        return (x==1);\n    }\n    if(n==7){\n\
    \        return (x==1);\n    }\n    if(n==8){\n        return (x==1);\n    }\n\
    \    if(n==9){\n        return (x==1);\n    }\n    if(n==10){\n        return\
    \ (x==1);\n    }\n    if(n==11){\n        return (x==1);\n    }\n    if(n==12){\n\
    \        return (x==1);\n    }\n    if(n==13){\n        return (x==1);\n    }\n\
    \    if(n==14){\n        return (x==1);\n    }\n    if(n==15){\n        return\
    \ (x==1);\n    }\n    if(n==16){\n        return (x==1);\n    }\n    if(n==17){\n\
    \        return (x==1);\n    }\n    if(n==18){\n        return (x==1);\n    }\n\
    \    if(n==19){\n        return (x==1);\n    }\n    if(n==20){\n        return\
    \ (x==1);\n    }\n    if(n==21){\n        return (x==1);\n    }\n    if(n==22){\n\
    \        return (x==1);\n    }\n    if(n==23){\n        return (x==1);\n    }\n\
    \    if(n==24){\n        return (x==1);\n    }\n    if(n==25){\n        return\
    \ (x==1);\n    }\n    if(n==26){\n        return (x==1);\n    }\n    if(n==27){\n\
    \        return (x==1);\n    }\n    if(n==28){\n        return (x==1);\n    }\n\
    \    if(n==29){\n        return (x==1);\n    }\n    if(n==30){\n        return\
    \ (x==1);\n    }\n    if(n==31){\n        return (x==1);\n    }\n    if(n==32){\n\
    \        return (x==1);\n    }\n    if(n==33){\n        return (x==1);\n    }\n\
    \    if(n==34){\n        return (x==1);\n    }\n    if(n==35){\n        return\
    \ (x==1);\n    }\n    if(n==36){\n        return (x==1);\n    }\n    if(n==37){\n\
    \        return (x==1);\n    }\n    if(n==38){\n        return (x==1);\n    }\n\
    \    if(n==39){\n        return \nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzme1mw4_.js:154\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    if(n==0)\
    \ return true;\n    if(n==1) return false;\n    if(n==2) return x==1;\n    if(n==3)\
    \ return x==1;\n    if(n==4) return x==1;\n    if(n==5) return x==1;\n    if(n==6)\
    \ return x==1;\n    if(n==7) return x==1;\n    if(n==8) return x==1;\n    if(n==9)\
    \ return x==1;\n    if(n==10) return x==1;\n    if(n==11) return x==1;\n    if(n==12)\
    \ return x==1;\n    if(n==13) return x==1;\n    if(n==14) return x==1;\n    if(n==15)\
    \ return x==1;\n    if(n==16) return x==1;\n    if(n==17) return x==1;\n    if(n==18)\
    \ return x==1;\n    if(n==19) return x==1;\n    if(n==20) return x==1;\n    if(n==21)\
    \ return x==1;\n    if(n==22) return x==1;\n    if(n==23) return x==1;\n    if(n==24)\
    \ return x==1;\n    if(n==25) return x==1;\n    if(n==26) return x==1;\n    if(n==27)\
    \ return x==1;\n    if(n==28) return x==1;\n    if(n==29) return x==1;\n    if(n==30)\
    \ return x==1;\n    if(n==31) return x==1;\n    if(n==32) return x==1;\n    if(n==33)\
    \ return x==1;\n    if(n==34) return x==1;\n    if(n==35) return x==1;\n    if(n==36)\
    \ return x==1;\n    if(n==37) return x==1;\n    if(n==38) return x==1;\n    if(n==39)\
    \ return x==1;\n    if(n==40) return x==1;\n    if(n==41) return x==1;\n    if(n==42)\
    \ return x==1;\n    if(n==43) return x==1;\n    if(n==44) return x==1;\n    if(n==45)\
    \ return x==1;\n    if(n==46) return x==1;\n    if(n==47) return x==1;\n    if(n==48)\
    \ return x==1;\n    if(n==49) return x==1;\n    if(n==50) return x==1;\n    if(n==51)\
    \ return x==1;\n    if(n==52) return x==1;\n    if(n==53) return x==1;\n    if(n==54)\
    \ return x==1;\n    if(n==55) return x==1;\n    if(n==56) return x==1;\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3v0jnrof.js:93\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    var\
    \ power = Math.pow(n, x);\n    return power==x;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpoqd44ma4.js:27:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpoqd44ma4.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    if(n==0)\
    \ return true;\n    if(n==1) return false;\n    if(n==2) return x==1;\n    if(n==3)\
    \ return x==1;\n    if(n==4) return x==1;\n    if(n==5) return x==1;\n    if(n==6)\
    \ return x==1;\n    if(n==7) return x==1;\n    if(n==8) return x==1;\n    if(n==9)\
    \ return x==1;\n    if(n==10) return x==1;\n    if(n==11) return x==1;\n    if(n==12)\
    \ return x==1;\n    if(n==13) return x==1;\n    if(n==14) return x==1;\n    if(n==15)\
    \ return x==1;\n    if(n==16) return x==1;\n    if(n==17) return x==1;\n    if(n==18)\
    \ return x==1;\n    if(n==19) return x==1;\n    if(n==20) return x==1;\n    if(n==21)\
    \ return x==1;\n    if(n==22) return x==1;\n    if(n==23) return x==1;\n    if(n==24)\
    \ return x==1;\n    if(n==25) return x==1;\n    if(n==26) return x==1;\n    if(n==27)\
    \ return x==1;\n    if(n==28) return x==1;\n    if(n==29) return x==1;\n    if(n==30)\
    \ return x==1;\n    if(n==31) return x==1;\n    if(n==32) return x==1;\n    if(n==33)\
    \ return x==1;\n    if(n==34) return x==1;\n    if(n==35) return x==1;\n    if(n==36)\
    \ return x==1;\n    if(n==37) return x==1;\n    if(n==38) return x==1;\n    if(n==39)\
    \ return x==1;\n    if(n==40) return x==1;\n    if(n==41) return x==1;\n    if(n==42)\
    \ return x==1;\n    if(n==43) return x==1;\n    if(n==44) return x==1;\n    if(n==45)\
    \ return x==1;\n    if(n==46) return x==1;\n    if(n==47) return x==1;\n    if(n==48)\
    \ return x==1;\n    if(n==49) return x==1;\n    if(n==50) return x==1;\n    if(n==51)\
    \ return x==1;\n    if(n==52) return x==1;\n    if(n==53) return x==1;\n    if(n==54)\
    \ return x==1;\n    if(n==55) return x==1;\n    if(n==56) return x==1;\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpuumsx99_.js:93\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n\tif(n==0)\
    \ return true;\n\tif(n==1) return false;\n\tif(n==2) return x==1;\n\tif(n<0) return\
    \ false;\n\tif(x==0) return false;\n\tif(x==1) return true;\n\tif(x==2) return\
    \ x==1;\n\tif(x<0) return false;\n\tif(x>1) return false;\n\tif(x>n) return false;\n\
    \tif(x>n*n) return true;\n\treturn false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp4yrt8so.js:37:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpp4yrt8so.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    //\
    \ Your code here\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n\
    \  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\ntrue\n    at test (/tmp/tmpg89voso3.js:26:10)\n \
    \   at Object.<anonymous> (/tmp/tmpg89voso3.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    if(n==0)\
    \ return true;\n    if(n==1) return false;\n    if(n<0) return false;\n    if(x==0)\
    \ return false;\n    if(x==1) return true;\n    if(x<0) return false;\n    if(x>n)\
    \ return false;\n    if(x>n*n) return true;\n    return false;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5j7py42y.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp5j7py42y.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    if\
    \ (n==0) return true;\n    if (n==1) return false;\n    if (x==0) return false;\n\
    \    if (x==1) return true;\n    if (x%n==0) return false;\n    return is_simple_power(x/n,\
    \ n);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n \
    \ assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9gvkfxi5.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp9gvkfxi5.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    if(n==0)\
    \ return false;\n    if(n==1) return true;\n    if(x==0) return false;\n    if(x==1)\
    \ return true;\n    if(x%n==0) return true;\n    return false;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpe0dm_ry1.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpe0dm_ry1.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    if\
    \ (n<=1){\n        return true;\n    }\n    if (n%2==0){\n        return false;\n\
    \    }\n    if (n%3==0){\n        return false;\n    }\n    if (n%5==0){\n   \
    \     return false;\n    }\n    if (n%7==0){\n        return false;\n    }\n \
    \   if (n%11==0){\n        return false;\n    }\n    if (n%13==0){\n        return\
    \ false;\n    }\n    if (n%17==0){\n        return false;\n    }\n    if (n%19==0){\n\
    \        return false;\n    }\n    if (n%23==0){\n        return false;\n    }\n\
    \    if (n%29==0){\n        return false;\n    }\n    if (n%31==0){\n        return\
    \ false;\n    }\n    if (n%37==0){\n        return false;\n    }\n    if (n%41==0){\n\
    \        return false;\n    }\n    if (n%43==0){\n        return false;\n    }\n\
    \    if (n%47==0){\n        return false;\n    }\n    if (n%53==0){\n        return\
    \ false;\n    }\n    if (n%59==0){\n        return false;\n    }\n    if (n%61==0){\n\
    \        return false;\n    }\n    if (n%67==0){\n        return false;\n    }\n\
    \    if (n%71==0){\n        return false;\n    }\n    if (n%73==0){\n        return\
    \ false;\n    }\n    if (n%79==0){\n        return false;\n    }\n    if (n%83==0){\n\
    \        return false;\n    }\n    if (n%89==0){\n        return false;\n    }\n\
    \    if (n%97==0){\n        return false;\n    }\n    if (n%103==0){\n       \
    \ return false;\n    }\n    if (n%107==0){\n        return false;\n    }\n   \
    \ if (n%113==0){\n        return false;\n    }\n    if (n%119==0){\n        return\
    \ false;\n    }\n    if (n%127==0){\n        return false;\n    }\n    if (n%131==0){\n\
    \        return false;\n    }\n    if (n%137==0){\n        return false;\n   \
    \ }\n    if (n%141==0){\n        return false;\n    }\n    if (n%147==0){\n  \
    \      return false;\n    }\n    if (n%151==0){\n        return false;\n    }\n\
    \    if (n%157==0){\n        return false;\n    }\n    if (n%161==0){\n      \
    \  return false;\n    }\n    if (n%167==0){\n        return false;\n    }\n  \
    \  if (n%171==0){\n        return false;\n    }\n    if (n%177==0){\n        return\
    \ false;\n    }\n    if (n%181==0){\n        return false;\n    }\n    if (n%187\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_simple_power;\n  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpupaso5e5.js:145\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    if(n==0)\
    \ return true;\n    if(n==1) return false;\n    if(n==2) return x==1;\n    if(n<0)\
    \ return false;\n    if(x==1) return false;\n    if(x==0) return true;\n    if(x==-1)\
    \ return false;\n    if(x==-2) return false;\n    if(x==-3) return false;\n  \
    \  if(x==-4) return false;\n    if(x==-5) return false;\n    if(x==-6) return\
    \ false;\n    if(x==-7) return false;\n    if(x==-8) return false;\n    if(x==-9)\
    \ return false;\n    if(x==-10) return false;\n    if(x==-11) return false;\n\
    \    if(x==-12) return false;\n    if(x==-13) return false;\n    if(x==-14) return\
    \ false;\n    if(x==-15) return false;\n    if(x==-16) return false;\n    if(x==-17)\
    \ return false;\n    if(x==-18) return false;\n    if(x==-19) return false;\n\
    \    if(x==-20) return false;\n    if(x==-21) return false;\n    if(x==-22) return\
    \ false;\n    if(x==-23) return false;\n    if(x==-24) return false;\n    if(x==-25)\
    \ return false;\n    if(x==-26) return false;\n    if(x==-27) return false;\n\
    \    if(x==-28) return false;\n    if(x==-29) return false;\n    if(x==-30) return\
    \ false;\n    if(x==-31) return false;\n    if(x==-32) return false;\n    if(x==-33)\
    \ return false;\n    if(x==-34) return false;\n    if(x==-35) return false;\n\
    \    if(x==-36) return false;\n    if(x==-37) return false;\n    if(x==-38) return\
    \ false;\n    if(x==-39) return false;\n    if(x==-40) return false;\n    if(x==-41)\
    \ return false;\n    if(x==-42) return false;\n    if(x==-43) return false;\n\
    \    if(x==-44) return false;\n    if(x==-45) return false;\n    if(x==-46) return\
    \ false;\n    if(x==-47) return false;\n    if(x==-48) return false;\n    if(x==-49)\
    \ return false;\n    if(x==-50) return false;\n    if(x==-51) return false;\n\
    \    if(x==-52) return false;\n    if(x==-53) return false;\n    if(x==-54) return\
    \ false;\n    if(x==-55) return false;\n    if(x==-56) return false;\n    if(x==-57)\
    \ return false;\n    if(x==-58) return false;\n    if(x==-59) return false;\n\
    \    if(x==-60) return false;\n    if(x==-61) return false;\n    if(x==-62) return\
    \ false;\n    if(x==-63) return false;\n    if(x==-64) return false;\n    if(x==-65)\
    \ return false;\n    if(x==-66) return false;\n    if(x==-67) return false;\n\
    \    if(x==-68) return false;\n    if(x==-69) return false;\n    if(x==\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_simple_power;\n\
    \  assert.deepEqual(candidate(16, 2),true);\n  assert.deepEqual(candidate(143214,\
    \ 16),false);\n  assert.deepEqual(candidate(4, 2),true);\n  assert.deepEqual(candidate(9,\
    \ 3),true);\n  assert.deepEqual(candidate(16, 4),true);\n  assert.deepEqual(candidate(24,\
    \ 2),false);\n  assert.deepEqual(candidate(128, 4),false);\n  assert.deepEqual(candidate(12,\
    \ 6),false);\n  assert.deepEqual(candidate(1, 1),true);\n  assert.deepEqual(candidate(1,\
    \ 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp93aagweo.js:94\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Your task is to write a function that returns true if a number x is\
    \ a simple\n// power of n and false in other cases.\n// x is a simple power of\
    \ n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n// >>>\
    \ is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n// >>>\
    \ is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n//\
    \ >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power(x, n){\n    for(var\
    \ i=0;i<n;i++){\n        if(x%n!==0){\n            return false;\n        }\n\
    \        x=x/n;\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
    \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
    \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
    \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
    \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
    \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1uhbx8qi.js:35:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp1uhbx8qi.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

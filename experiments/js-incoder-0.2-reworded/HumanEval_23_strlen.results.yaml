name: HumanEval_23_strlen
language: js
results:
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

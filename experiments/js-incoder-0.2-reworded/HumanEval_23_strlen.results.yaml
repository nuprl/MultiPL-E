language: js
name: HumanEval_23_strlen
results:
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746956
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    for(var i=0;i<string.length;i++){\n\
    \        len+=string.charCodeAt(i);\n    }\n    return len;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpfs2496hf.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfs2496hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746956
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    for(var i = 0; i\
    \ < string.length; i++){\n        len += string.charCodeAt(i);\n    }\n    return\
    \ len;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmp6mcme7xx.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6mcme7xx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746956
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    for(var i = 0; i\
    \ < string.length; i++){\n        len += string.charCodeAt(i);\n    }\n    return\
    \ len;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmp6mcme7xx.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6mcme7xx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746956
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    for(var i = 0; i\
    \ < string.length; i++){\n        len += string.charCodeAt(i);\n    }\n    return\
    \ len;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmp6mcme7xx.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6mcme7xx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746956
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    for(var i = 0; i\
    \ < string.length; i++){\n        len += string.charCodeAt(i);\n    }\n    return\
    \ len;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmp6mcme7xx.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6mcme7xx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746956
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    for(var i=0;i<string.length;i++){\n\
    \        len+=string[i].length;\n    }\n    return len;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746956
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string == null ? '' : (string.length\
    \ || (string.split && string.split('').length));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746956
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746956
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string == null ? '' : (string.length\
    \ || (string.split && string.split('').length));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746956
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''

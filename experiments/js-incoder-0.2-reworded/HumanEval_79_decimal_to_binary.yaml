name: HumanEval_79_decimal_to_binary
language: js
prompt: "//You will be given a number in decimal form and your task is to convert\
  \ it to\n// binary format. The function should return a string, with each character\
  \ representing a binary\n// number. Each character in the string will be '0' or\
  \ '1'.\n// There will be an extra couple of characters 'db' at the beginning and\
  \ at the end of the string.\n// The extra characters are there to help with the\
  \ format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"db1111db\"\n// >>> decimal_to_binary(32)\n\
  // \"db100000db\"\nfunction decimal_to_binary(decimal){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = decimal_to_binary;\n  assert.deepEqual(candidate(0),\"db0db\");\n  assert.deepEqual(candidate(32),\"\
  db100000db\");\n  assert.deepEqual(candidate(103),\"db1100111db\");\n  assert.deepEqual(candidate(15),\"\
  db1111db\");\n}\n\ntest();"
completions: ["    var binary = '';\n    while(decimal > 0){\n        binary = binary\
    \ + '1';\n        decimal = decimal - 1;\n    }\n    binary = binary + '0';\n\
    \    return binary;\n}\n", "    var binary = '';\n    while(decimal > 0){\n  \
    \      binary = binary + '1';\n        decimal = decimal - 1;\n    }\n    while(binary.length\
    \ < 32){\n        binary = '0' + binary;\n    }\n    return binary;\n}\n", " \
    \   let binary = '';\n    while(decimal > 0){\n        binary = binary + '1';\n\
    \        decimal = decimal - 1;\n    }\n    binary = binary + '0';\n    return\
    \ binary;\n}\n", "    let binary = '';\n    while(decimal > 0){\n        binary\
    \ = binary + '1';\n        decimal = decimal - 1;\n    }\n    binary = binary\
    \ + '0';\n    return binary;\n}\n", "    var binary = '';\n    var decimal = decimal;\n\
    \    var decimalString = decimal.toString();\n    var decimalLength = decimalString.length;\n\
    \    var decimalDigits = decimalString.split('');\n    var decimalDigitsLength\
    \ = decimalDigits.length;\n    var binaryDigits = '';\n    var binaryDigitsLength\
    \ = 0;\n    var binaryDigit;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitString;\n    var binaryDigitStringLength;\n    var binaryDigitString;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitString;\n    var binaryDigitStringLength;\n    var binaryDigitString;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitString;\n    var binaryDigitStringLength;\n    var binaryDigitString;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitString;\n    var binaryDigitStringLength;\n    var binaryDigitString;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitString;\n    var binaryDigitStringLength;\n    var binaryDigitString;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitString;\n    var binaryDigitStringLength;\n    var binaryDigitString;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitString;\n    var binaryDigitStringLength;\n    var binaryDigitString;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitString;\n    var binaryDigitStringLength;\n    var binaryDigitString;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitString;\n    var binaryDigitStringLength;\n    var binaryDigitString;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitString;\n    var binaryDigitStringLength;\n    var binaryDigitString;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitString;\n    var binaryDigitStringLength;\n    var binaryDigitString;\n\
    \    var binaryDigitStringLength;\n    var binaryDigitString;\n    var binaryDigitStringLength;\n\
    \    var binaryDigitString;\n    var ", "    var binary = '';\n    var decimal\
    \ = decimal.toString();\n    decimal = decimal.split('');\n    decimal.forEach(function(item,\
    \ index){\n        if(index === 0){\n            binary += '0';\n        }else\
    \ if(index === decimal.length - 1){\n            binary += '1';\n        }else{\n\
    \            binary += '0';\n        }\n    });\n    return binary;\n}\n", " \
    \   var binary = '';\n    var decimal = decimal;\n    while(decimal > 0){\n  \
    \      binary = binary + '1';\n        decimal = decimal - 1;\n    }\n    binary\
    \ = binary + 'db';\n    return binary;\n}\n", "    var binary = '';\n    var decimal\
    \ = decimal.toString(2);\n    var length = decimal.length;\n    var decimalLength\
    \ = decimal.length;\n    var decimalDigits = decimalLength - 1;\n    var binaryDigits\
    \ = length - decimalLength;\n    var binaryDigit = 0;\n    \n    while(decimal.length){\n\
    \        binary += decimal.charAt(decimalDigits);\n        decimalDigits--;\n\
    \        decimalDigits += decimalLength;\n    }\n    \n    while(binaryDigits){\n\
    \        binary += '1';\n        binaryDigits--;\n    }\n    \n    return binary\
    \ + 'db';\n}\n", "  let binary = \"\";\n  while(decimal > 0){\n    binary += \"\
    0\";\n    decimal -= 1;\n  }\n  while(decimal > 0){\n    binary += \"1\";\n  \
    \  decimal -= 1;\n  }\n  return binary;\n}\n", "  let binary = '';\n  while(decimal\
    \ > 0){\n    binary = binary + '1';\n    decimal = decimal - 1;\n  }\n  binary\
    \ = binary + '0';\n  return binary;\n}\n", "    let binary = '';\n    while(decimal\
    \ > 0){\n        binary += '1';\n        decimal -= 1;\n    }\n    while(decimal){\n\
    \        binary += '0';\n        decimal -= 1;\n    }\n    return binary;\n}\n",
  "    var binary = '';\n    while(decimal > 0){\n        binary = binary + '0';\n\
    \        decimal = decimal - 1;\n    }\n    while(decimal>0){\n        binary\
    \ = binary + '1';\n        decimal = decimal - 1;\n    }\n    binary = binary\
    \ + 'db';\n    return binary;\n}\n", "    let binary = '';\n    let decimal =\
    \ decimal.toString();\n    decimal = decimal.split('');\n    decimal.forEach((digit,\
    \ index) => {\n        if(index === 0){\n            binary += digit;\n      \
    \  }\n        else if(digit === '1'){\n            binary += '1';\n        }\n\
    \        else{\n            binary += '0';\n        }\n    });\n    return binary;\n\
    }\n", "    var binary = '';\n    var decimal = decimal;\n    var power = 1;\n\
    \    var decimalLength = decimal.length;\n    while(decimal > 0){\n        binary\
    \ = binary + String.fromCharCode(decimal % 2);\n        decimal = decimal / 2;\n\
    \        power = power * 2;\n    }\n    binary = binary + String.fromCharCode(power);\n\
    \    binary = binary + 'db';\n    return binary;\n}\n", "    var binary = '';\n\
    \    while(decimal > 0){\n        binary = binary + (decimal % 2) + '0';\n   \
    \     decimal = parseInt(decimal/2);\n    }\n    return binary;\n}\n", "    var\
    \ binary = '';\n    while(decimal > 0){\n        binary = binary + '0';\n    \
    \    decimal = decimal - 1;\n    }\n    while(decimal < 0){\n        binary =\
    \ binary + '1';\n        decimal = decimal + 1;\n    }\n    binary = binary +\
    \ 'db';\n    return binary;\n}\n", "    var binary = '';\n    while(decimal >\
    \ 0){\n        binary = binary + '0';\n        decimal = decimal - 1;\n    }\n\
    \    binary = binary + '1';\n    return binary;\n}\n", "    var binary = '';\n\
    \    while(decimal > 0){\n        binary = binary + '1';\n        decimal = decimal\
    \ - 1;\n    }\n    while(decimal>0){\n        binary = binary + '0';\n       \
    \ decimal = decimal - 1;\n    }\n    binary = binary + 'db';\n    return binary;\n\
    }\n", "    var binary = '';\n    var decimal = decimal.toString(2);\n    decimal\
    \ = decimal.split('');\n    decimal.forEach(function(character){\n        if(character\
    \ == '1'){\n            binary += '1';\n        }else{\n            binary +=\
    \ '0';\n        }\n    });\n    binary = 'db' + binary + 'db';\n    return binary;\n\
    }\n", "    var binary = \"\";\n    while(decimal > 0){\n        binary = binary\
    \ + (decimal % 2) + 'b';\n        decimal = decimal / 2;\n    }\n    binary =\
    \ binary + 'db';\n    return binary;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_155_even_odd_count
language: ts
prompt: "//Given an integer. return a tuple that has the number of even and odd digits\
  \ respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
  \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
  \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
  \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
  \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
  \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
completions: ["    let even_count = 0;\n    let odd_count = 0;\n    Math.abs(num).toString().split('').forEach(i\
    \ => {\n        if (parseInt(i) % 2 == 0) {\n            even_count++;\n     \
    \   } else {\n            odd_count++;\n        }\n    });\n    return [even_count,\
    \ odd_count];\n}\n\nconsole.log(even_odd_count(-12));", "  const absNum = Math.abs(num);\n\
    \  let evens = 0;\n  let odds = 0;\n  while (absNum > 0) {\n    const digit =\
    \ absNum % 10;\n    if (digit % 2 === 0) {\n      evens++;\n    } else {\n   \
    \   odds++;\n    }\n    absNum = Math.floor(absNum / 10);\n  }\n  return [evens,\
    \ odds];\n}\n", "  let even = 0;\n  let odd = 0;\n  for (let i = 0; i < String(num).length;\
    \ i++) {\n    if (Math.abs(parseInt(String(num)[i])) % 2 === 0) {\n      even++;\n\
    \    } else {\n      odd++;\n    }\n  }\n  return [even, odd];\n}\n\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  return [0, 0];\n}\n", "    let even =\
    \ 0;\n    let odd = 0;\n    let numCopy = num;\n    while (numCopy > 0) {\n  \
    \      const digit = numCopy % 10;\n        if (digit % 2 === 0) {\n         \
    \   even++;\n        } else {\n            odd++;\n        }\n        numCopy\
    \ = Math.floor(numCopy / 10);\n    }\n    return [even, odd];\n}\n", "    let\
    \ even_count = 0, odd_count = 0;\n    let string_num = num.toString();\n    for\
    \ (let i = 0; i < string_num.length; i++) {\n        if (parseInt(string_num[i])\
    \ % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n\
    \        }\n    }\n    return [even_count, odd_count];\n}\n", "  const lst = num.toString().split(\"\
    \");\n  const even = lst.filter((el) => +el % 2 === 0).length;\n  const odd =\
    \ lst.filter((el) => +el % 2 === 1).length;\n  return [even, odd];\n}\n", "  \
    \  let even = 0;\n    let odd = 0;\n    let numToString = num.toString();\n  \
    \  for (let i = 0; i < numToString.length; i++) {\n        let char = parseInt(numToString[i]);\n\
    \        if (char % 2 === 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  let odd_count = 0;\n  let even_count\
    \ = 0;\n  let tmp = Math.abs(num);\n  while (tmp > 0) {\n    if (tmp % 2 === 0)\
    \ {\n      even_count++;\n    } else {\n      odd_count++;\n    }\n    tmp = Math.floor(tmp\
    \ / 10);\n  }\n  return [even_count, odd_count];\n}\n", "    //add your code here\n\
    \n    return null;\n}\n", "    let evenCount = 0, oddCount = 0;\n    num = Math.abs(num);\n\
    \    while (num > 0) {\n        if (num % 2 == 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return [evenCount, oddCount];\n}\n", "    const str: string\
    \ = num.toString();\n    let evenCount: number = 0;\n    let oddCount: number\
    \ = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        const int:\
    \ number = parseInt(str[i]);\n        if (int % 2 === 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "  let evenCount = 0;\n  let oddCount = 0;\n  let numString\
    \ = num.toString();\n  let numStringLength = numString.length;\n  let i;\n  for\
    \ (i = 0; i < numStringLength; i++) {\n    if (i % 2 === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n\
    }\n", "    var even = 0;\n    var odd = 0;\n    num = Math.abs(num);\n    while\
    \ (num > 0) {\n        if (num % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num = Math.floor(num / 10);\n    }\n\
    \    return [even, odd];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    let evenCount = 0;\n    let oddCount = 0;\n    let evenOddArr = [];\n    let\
    \ stringified = String(num);\n    let numArr = stringified.split('');\n    for\
    \ (let num of numArr) {\n        if (Number(num) % 2 === 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n    }\n    evenOddArr.push(evenCount,\
    \ oddCount);\n    return evenOddArr;\n}\n", "  let even = 0;\n  let odd = 0;\n\
    \  for (let str of num.toString()) {\n    let x = parseInt(str);\n    if (x %\
    \ 2 == 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "    let even = 0;\n    let odd = 0;\n    let count = 0;\n    let\
    \ arr = [];\n    let res = [even, odd];\n    while (num !== 0) {\n        count\
    \ = Math.floor(num % 10);\n        arr.push(count);\n        num = Math.floor(num\
    \ / 10);\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ % 2 === 0) {\n            even++;\n        } else {\n            odd++;\n  \
    \      }\n    }\n    return res;\n}", "  const even = (num.toString().match(/[24680]/g)\
    \ || []).length;\n  const odd = (num.toString().match(/[13579]/g) || []).length;\n\
    \  return [even, odd];\n}\n", "    let even = 0;\n    let odd = 0;\n    let i\
    \ = Math.abs(num);\n    while (i > 0) {\n        if (i % 2 == 0) {\n         \
    \   even++;\n        } else {\n            odd++;\n        }\n        i = Math.floor(i\
    \ / 10);\n    }\n    return [even, odd];\n}\n", "    let even = 0;\n    let odd\
    \ = 0;\n    let isNegative = false;\n    if (num < 0) {\n        isNegative =\
    \ true;\n        num = Math.abs(num);\n    }\n    let str = num.toString();\n\
    \    for (let i = 0; i < str.length; i++) {\n        let digit = Number(str[i]);\n\
    \        if (digit % 2 === 0) {\n            even++;\n        } else {\n     \
    \       odd++;\n        }\n    }\n    if (isNegative) {\n        return [odd,\
    \ even];\n    }\n    return [even, odd];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

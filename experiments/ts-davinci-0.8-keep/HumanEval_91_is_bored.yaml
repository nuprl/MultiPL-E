name: HumanEval_91_is_bored
language: ts
prompt: "//You'll be given a string of words, and your task is to count the number\n\
  // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
  \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\"\
  )\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
  )\n// 1\nfunction is_bored(S: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
  ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
  I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
  I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
  You and I are going for a walk\"),0);\n}\n\ntest();"
completions: ["    let count: number = 0;\n    let splitted: string[] = S.split(/[!.?]/);\n\
    \    splitted.forEach(element => {\n        if (element.split(' ')[0] === 'I')\
    \ {\n            count++;\n        }\n    });\n    return count;\n}\n", "    let\
    \ n = 0;\n    for (let i = 0; i < S.length; i++) {\n        if (S[i] === 'I')\
    \ {\n            n += 1;\n        }\n    }\n    return n;\n}\n", "    const arr\
    \ = S.split('.')\n    return arr.filter(e => e.startsWith('I')).length\n}\n",
  "    return (S.match(/I/gi) || []).length;\n}\n\n", "  return S.split(/(!|\\?|\\\
    .)/).filter(w => w.indexOf('I') == 0).length;\n}\n", "  let count = 0;\n  for\
    \ (let i = 0; i < S.length; i++) {\n    if (S[i] === \"I\") {\n      count++;\n\
    \    }\n  }\n  return count;\n}\n", "    let Boredoms = 0;\n    S = S.replace(/\\\
    W/g, ' ').toUpperCase();\n    for (let i = 0; i < S.length; i++) {\n        if\
    \ (S[i] === 'I' && S[i + 1] === ' ') {\n            Boredoms++;\n        }\n \
    \   }\n    return Boredoms;\n}\n", "    let is_bored_counter = 0;\n    const tmp_arr\
    \ = S.split('.');\n    tmp_arr.forEach(element => {\n        let tmp_str = element.replace(/\\\
    ?/g, '');\n        tmp_str = tmp_str.replace(/\\!/g, '');\n        const tmp_arr_2\
    \ = tmp_str.split(' ');\n        if (tmp_arr_2[0] === 'I') {\n            is_bored_counter++;\n\
    \        }\n    });\n    return is_bored_counter;\n}\n", "    let n = 0;\n   \
    \ let W = S.split(/\\.|\\?|!/);\n    for (let i = 0; i < W.length; i++) {\n  \
    \      if (W[i].trim().startsWith(\"I\")) {\n            n++;\n        }\n   \
    \ }\n    return n;\n}", "    return S.split(/[.?!]/).filter(sen => sen.trim().startsWith('I')).length;\n\
    }\n\nconsole.log(is_bored(\"Hello world\"));\nconsole.log(is_bored(\"The sky is\
    \ blue. The sun is shining. I love this weather\"));", "  return S.split(\" \"\
    ).filter(x => x == \"I\").length;\n}\n", "    let result = 0;\n    for (let i\
    \ = 0; i < S.length; i++) {\n        if (S[i] === 'I') {\n            for (let\
    \ j = i; j < S.length; j++) {\n                if (S[j] === '.' || S[j] === '?'\
    \ || S[j] === '!') {\n                    result++;\n                    break;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\n",
  "  let x = 0;\n  let res = 0;\n  for (let i = 0; i < S.length; i++) {\n    if (S[i]\
    \ === \".\") {\n      x = i + 1;\n    }\n    if (S[i] === \"?\") {\n      x =\
    \ i + 1;\n    }\n    if (S[i] === \"!\") {\n      x = i + 1;\n    }\n    if (S[x]\
    \ === \"I\") {\n      res += 1;\n    }\n  }\n  return res;\n}\n", "    let boredoms\
    \ = 0;\n    const sentences = S.split(/[.!?]/);\n    sentences.forEach(sentence\
    \ => {\n        const words = sentence.split(\" \");\n        if (words[0] ===\
    \ \"I\") {\n            boredoms++;\n        }\n    });\n    return boredoms;\n\
    }\n\nexport function main(): void {\n    console.log(is_bored(\"Hello world\"\
    ));\n    console.log(is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\"));\n}", "  // Your code here\n  let arr = S.split(\".\");\n  let boredoms\
    \ = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].indexOf(\"I\"\
    ) === 0) {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    let\
    \ sentences = S.split(/[.!?]/);\n    return sentences.filter(sentence => sentence.trim().startsWith(\"\
    I\")).length;\n}\n", "  const sentences = S.split(/[!.?]/g);\n  let boredoms =\
    \ 0;\n  for (let sentence of sentences) {\n    if (sentence.startsWith(\"I\"))\
    \ {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    let S_arr =\
    \ S.split(\" \");\n    let boredoms = 0;\n    for (let i = 0; i < S_arr.length;\
    \ i++) {\n        if (S_arr[i] === \"I\") {\n            boredoms++;\n       \
    \ }\n    }\n    return boredoms;\n}\n", "    return S.split(/[.?!]/).reduce((acc,\
    \ curr) => {\n        return acc + (curr.trim().startsWith('I') ? 1 : 0);\n  \
    \  }, 0);\n}\n", "  let boredoms = 0;\n  const sentences = S.split(/[.?!]/);\n\
    \  for (let sentence of sentences) {\n    if (sentence.trim().startsWith(\"I\"\
    )) {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

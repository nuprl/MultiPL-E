name: HumanEval_163_generate_integers
language: ts
prompt: "//Given two positive integers a and b, return the even digits between a\n\
  // and b, in ascending order.\n// For example:\n// generate_integers(2, 8) => [2,\
  \ 4, 6, 8]\n// generate_integers(8, 2) => [2, 4, 6, 8]\n// generate_integers(10,\
  \ 14) => []\nfunction generate_integers(a: number, b: number): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = generate_integers;\n  assert.deepEqual(candidate(2,\
  \ 10),[2, 4, 6, 8]);\n  assert.deepEqual(candidate(10, 2),[2, 4, 6, 8]);\n  assert.deepEqual(candidate(132,\
  \ 2),[2, 4, 6, 8]);\n  assert.deepEqual(candidate(17, 89),[]);\n}\n\ntest();"
completions: ["    let res: number[] = [];\n    if (a === b) {\n        if (a % 2\
    \ === 0) {\n            res.push(a);\n        }\n    } else if (a < b) {\n   \
    \     for (let i = a; i <= b; i++) {\n            if (i % 2 === 0) {\n       \
    \         res.push(i);\n            }\n        }\n    } else {\n        for (let\
    \ i = b; i <= a; i++) {\n            if (i % 2 === 0) {\n                res.push(i);\n\
    \            }\n        }\n    }\n    return res;\n}\n", "  let numbers: number[]\
    \ = [];\n  let max = Math.max(a, b);\n  let min = Math.min(a, b);\n  for (let\
    \ i = min; i <= max; i++) {\n    if (i % 2 === 0) {\n      numbers.push(i);\n\
    \    }\n  }\n  return numbers;\n}\n", "  let result: number[] = [];\n  let min\
    \ = Math.min(a, b);\n  let max = Math.max(a, b);\n  while (min <= max) {\n   \
    \ if (min % 2 === 0) {\n      result.push(min);\n    }\n    min++;\n  }\n  return\
    \ result;\n}\n", "  // Handle order of a, b\n  if (a > b) {\n    const temp =\
    \ a;\n    a = b;\n    b = temp;\n  }\n\n  // Return even digits between a and\
    \ b, in ascending order\n  return [...Array(b - a + 1).keys()].map(v => a + v).filter(v\
    \ => v % 2 === 0);\n}\n\nconsole.log(generate_integers(8, 2));\nconsole.log(generate_integers(2,\
    \ 8));\nconsole.log(generate_integers(10, 14));", "  // write your code here\n\
    \  const result: number[] = [];\n  if (a < b) {\n    for (let i = a; i <= b; i++)\
    \ {\n      if (i % 2 === 0) {\n        result.push(i);\n      }\n    }\n  } else\
    \ {\n    for (let i = b; i <= a; i++) {\n      if (i % 2 === 0) {\n        result.push(i);\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  let arr: number[] = [];\n  while\
    \ (a <= b) {\n    if (a % 2 === 0) {\n      arr.push(a);\n    }\n    a++;\n  }\n\
    \  return arr;\n}\nconsole.log(generate_integers(8, 2));\nconsole.log(generate_integers(2,\
    \ 8));\nconsole.log(generate_integers(10, 14));\n", "  let sol: number[] = [];\n\
    \  let start: number = Math.min(a, b);\n  let end: number = Math.max(a, b);\n\
    \  for (let i = start; i <= end; i++) {\n    if (i % 2 === 0) {\n      sol.push(i);\n\
    \    }\n  }\n  return sol;\n}\n\nconsole.log(generate_integers(2, 8));\nconsole.log(generate_integers(8,\
    \ 2));\nconsole.log(generate_integers(10, 14));\n", "  let evens: number[] = [];\n\
    \  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n  for (let i = min;\
    \ i <= max; i++) {\n    if (i % 2 === 0) {\n      evens.push(i);\n    }\n  }\n\
    \  return evens;\n}\n", "  if (a > b) {\n    [a, b] = [b, a];\n  }\n  let res:\
    \ number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (i % 2 === 0) {\n \
    \     res.push(i);\n    }\n  }\n  return res;\n}\nconsole.log(generate_integers(8,\
    \ 2));", "  let arr: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if\
    \ (i % 2 === 0) {\n      arr.push(i);\n    }\n  }\n  return arr;\n}\n", "  let\
    \ start: number;\n  let end: number;\n  if (a > b) {\n    start = b;\n    end\
    \ = a;\n  } else {\n    start = a;\n    end = b;\n  }\n  let result: number[]\
    \ = [];\n  for (let i = start; i <= end; i++) {\n    if (i % 2 === 0) {\n    \
    \  result.push(i);\n    }\n  }\n  return result;\n}\n", "    const ascending:\
    \ number[] = [];\n    let low = Math.min(a, b);\n    let high = Math.max(a, b);\n\
    \    for (let i = low; i <= high; i++) {\n        if (i % 2 === 0) {\n       \
    \     ascending.push(i);\n        }\n    }\n    return ascending;\n}\n", "   \
    \ return new Array(a, b);\n}\n", "  let arr: number[] = [];\n  let min = Math.min(a,\
    \ b);\n  let max = Math.max(a, b);\n  for (let i = min; i <= max; i++) {\n   \
    \ if (i % 2 === 0) {\n      arr.push(i);\n    }\n  }\n  return arr;\n}\n", " \
    \   let min: number = Math.min(a, b);\n    let max: number = Math.max(a, b);\n\
    \    let result: number[] = [];\n    for (let i: number = min; i <= max; i++)\
    \ {\n        if (i % 2 === 0) {\n            result.push(i);\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(generate_integers(2, 8));\nconsole.log(generate_integers(8,\
    \ 2));\nconsole.log(generate_integers(10, 14));", "    let result: number[] =\
    \ [];\n    let result2: number[] = [];\n    let result3: number[] = [];\n    let\
    \ result4: number[] = [];\n    if (a < b) {\n        for (let i = a; i <= b; i++)\
    \ {\n            if (i % 2 === 0) {\n                result.push(i);\n       \
    \     }\n        }\n        return result;\n    } else if (a > b) {\n        for\
    \ (let i = b; i <= a; i++) {\n            if (i % 2 === 0) {\n               \
    \ result2.push(i);\n            }\n        }\n        return result2;\n    } else\
    \ if (a == b) {\n        if (a % 2 === 0) {\n            result3.push(a);\n  \
    \          return result3;\n        } else {\n            return result4;\n  \
    \      }\n    }\n}\nconsole.log(generate_integers(2, 8));\nconsole.log(generate_integers(8,\
    \ 2));\nconsole.log(generate_integers(10, 14));", "  let result: number[] = [];\n\
    \  for (let i = a; i <= b; i++) {\n    if (i % 2 === 0) {\n      result.push(i);\n\
    \    }\n  }\n  return result;\n}\n", "  const min = Math.min(a, b);\n  const max\
    \ = Math.max(a, b);\n  const result = [];\n  for (let i = min; i <= max; i++)\
    \ {\n    if (i % 2 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n\
    }\n", "  let arr: number[] = [];\n  if (a < b) {\n    for (let i = a; i <= b;\
    \ i++) {\n      if (i % 2 === 0) {\n        arr.push(i);\n      }\n    }\n  }\
    \ else {\n    for (let i = b; i <= a; i++) {\n      if (i % 2 === 0) {\n     \
    \   arr.push(i);\n      }\n    }\n  }\n  return arr;\n}\n\nconsole.log(generate_integers(2,\
    \ 8)); // => [2, 4, 6, 8]\nconsole.log(generate_integers(8, 2)); // => [2, 4,\
    \ 6, 8]\nconsole.log(generate_integers(10, 14)); // => []\n", "  const min = Math.min(a,\
    \ b);\n  const max = Math.max(a, b);\n  const output: number[] = [];\n  for (let\
    \ i = min; i <= max; i++) {\n    if (i % 2 === 0) {\n      output.push(i);\n \
    \   }\n  }\n  return output;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

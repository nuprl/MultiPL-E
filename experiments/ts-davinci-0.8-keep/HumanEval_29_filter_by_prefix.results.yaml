language: ts
name: HumanEval_29_filter_by_prefix
results:
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter( (s) => { return\
    \ s.startsWith(prefix); } );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphy69u_2r.ts(7,46): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj8l_k3b2.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj8l_k3b2.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(function(x:\
    \ string) {\n        return x.startsWith(prefix);\n    });\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbr4l14e0.ts(8,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpacs6gszn.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(str => str.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdor60f_l.ts(7,36): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 0
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    // YOUR CODE HERE\n    let re = new\
    \ RegExp(prefix + \".*\", \"g\");\n    let found = strings.filter(function(string)\
    \ {\n        return string.match(re);\n    });\n    return found;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([], \"\
    john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821671
- exit_code: 0
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    var result: string[] = []\n    for\
    \ (var i = 0; i < strings.length; i++) {\n        var string = strings[i]\n  \
    \      if (string.indexOf(prefix) == 0) {\n            result.push(string)\n \
    \       }\n    }\n    return result\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_by_prefix;\n\
    \  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821671
- exit_code: 0
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    let ret: string[] = [];\n    for\
    \ (let s of strings) {\n        if (prefix.length > s.length) {\n            continue;\n\
    \        }\n        if (s.slice(0, prefix.length) == prefix) {\n            ret.push(s);\n\
    \        }\n    }\n    return ret;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_by_prefix;\n\
    \  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(function(string)\
    \ {\n        return string.startsWith(prefix);\n    });\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt9qp9j7p.ts(8,23): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(str => str.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvfj4zuv3.ts(7,38): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpacs6gszn.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(value => value.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpndqkdg9l.ts(7,42): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 0
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    let prefix_length = prefix.length;\n\
    \    return strings.filter(s => s.substring(0, prefix_length) === prefix);\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj8l_k3b2.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    let result: string[] = [];\n    for\
    \ (let value of strings) {\n        if (value.startsWith(prefix)) {\n        \
    \    result.push(value);\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"\
    ),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb6ct8_ph.ts(9,19): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    //TODO: Function body\n    return\
    \ strings.filter(s => s.startsWith(prefix));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_by_prefix;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\"\
    , \"xxxAAA\", \"xxx\"]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpun3s9y2u.ts(8,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n  return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj8l_k3b2.ts(7,32): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671
- exit_code: 0
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    var ret = [];\n    for (var i = 0;\
    \ i < strings.length; i++) {\n        if (strings[i].substring(0, prefix.length)\
    \ == prefix) {\n            ret.push(strings[i]);\n        }\n    }\n    return\
    \ ret;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821671
- exit_code: 2
  program: "//Filter an input list of strings only for ones that start with a given\
    \ prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix(strings:\
    \ string[], prefix: string): string[] {\n    return strings.filter(s => s.startsWith(prefix));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_by_prefix;\n  assert.deepEqual(candidate([],\
    \ \"john\"),[]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"xxy\", \"\
    john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"xxx\"]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpacs6gszn.ts(7,34): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821671

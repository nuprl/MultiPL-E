language: ts
name: HumanEval_23_strlen
results:
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n    let i = 0;\n    for (i; string[i]\
    \ !== undefined; i++);\n    return i;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 2
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n    let result = 0;\n    for\
    \ (let _ of string) {\n        result += 1;\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_famviho.ts(8,19): error TS2494: Using a string in
    a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659821504
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n    let l = 0;\n    while (string[l]\
    \ !== undefined) l++;\n    return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  let len = 0;\n  while (string[len]\
    \ !== undefined) {\n    len++;\n  }\n  return len;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  return string.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n    let count = 0;\n    for (let\
    \ i = 0; i < string.length; i++) {\n        count++;\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n    return string.length;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  let len = 0;\n  while (string[len]\
    \ !== undefined) {\n    len++;\n  }\n  return len;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n    return string.length;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n    // TODO: Your code here\n\
    \    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        count++;\n\
    \    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n    return string.length;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n    // TODO\n    let length =\
    \ 0;\n    let i = 0;\n    while (i < string.length) {\n        length++;\n   \
    \     i++;\n    }\n    return length;\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n    return string.length;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n  let len = 0;\n  while (string[len]\
    \ !== undefined) {\n    len++;\n  }\n  return len;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n    return string.length;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505
- exit_code: 0
  program: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
    // 3\nfunction strlen(string: string): number {\n    return string.length;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
    ),9);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821505

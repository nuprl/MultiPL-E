name: HumanEval_97_multiply
language: ts
prompt: "//Complete the function that takes two integers and returns \n// the product\
  \ of their unit digits.\n// Assume the input is always valid.\n// Examples:\n//\
  \ multiply(148, 412) should return 16.\n// multiply(19, 28) should return 72.\n\
  // multiply(2020, 1851) should return 0.\n// multiply(14,-15) should return 20.\n\
  function multiply(a: number, b: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n\
  \  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n\
  \  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n\
  \  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n\
  \  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();"
completions: ["    let aNum = a.toString().split('');\n    let bNum = b.toString().split('');\n\
    \    let aUnit = aNum[aNum.length - 1];\n    let bUnit = bNum[bNum.length - 1];\n\
    \    return Number(aUnit) * Number(bUnit);\n}\n", "  if (a < 0) {\n    a = -a;\n\
    \  }\n  if (b < 0) {\n    b = -b;\n  }\n  return (a % 10) * (b % 10);\n}\n", " \
    \ // TODO\n  let c = 0;\n  let d = 0;\n  let total = 0;\n  c = a % 10;\n  d =\
    \ b % 10;\n  total = c * d;\n  return total;\n}\n", "    const aUnits = Math.abs(a\
    \ % 10);\n    const bUnits = Math.abs(b % 10);\n    return aUnits * bUnits;\n\
    }\nconsole.log(multiply(14, -15)); // 20\nconsole.log(multiply(19, 28)); // 72\n\
    console.log(multiply(148, 412)); // 16\nconsole.log(multiply(2020, 1851)); //\
    \ 0", "  const numToString = a.toString();\n  const numToString2 = b.toString();\n\
    \  const lastNum = numToString.slice(-1);\n  const lastNum2 = numToString2.slice(-1);\n\
    \  const product = parseInt(lastNum) * parseInt(lastNum2);\n  return product;\n\
    }\n", "  if (a < 0) {\n    a = -a;\n  }\n  if (b < 0) {\n    b = -b;\n  }\n  return\
    \ (a % 10) * (b % 10);\n}\n", "    return (a * b) % 10;\n}\nconsole.log(multiply(14,\
    \ -15));\n", "  return ((a * b) % 10) * ((a * b) % 100 / 10);\n}\n\nconsole.log(multiply(1,\
    \ 1));\nconsole.log(multiply(10, 10));\nconsole.log(multiply(100, 100));\nconsole.log(multiply(1000,\
    \ 1000));\nconsole.log(multiply(10001, 10001));\nconsole.log(multiply(10010, 10010));\n\
    console.log(multiply(10101, 10101));\nconsole.log(multiply(10110, 10110));\nconsole.log(multiply(11111,\
    \ 11111));\nconsole.log(multiply(12121, 12121));\nconsole.log(multiply(12212,\
    \ 12212));\nconsole.log(multiply(12321, 12321));\nconsole.log(multiply(13131,\
    \ 13131));\nconsole.log(multiply(13213, 13213));\nconsole.log(multiply(21313,\
    \ 21313));\nconsole.log(multiply(213213, 213213));\nconsole.log(multiply(2132213,\
    \ 2132213));\nconsole.log(multiply(123123123, 123123123));\nconsole.log(multiply(12312312,\
    \ 12312312));\nconsole.log(multiply(1231231231, 1231231231));\nconsole.log(multiply(123123321,\
    \ 123123321));\nconsole.log(multiply(1231233213, 1231233213));\nconsole.log(multiply(12312332131,\
    \ 12312332131));\nconsole.log(multiply(123123321312, 123123321312));\nconsole.log(multiply(12312332131232,\
    \ 12312332131232));\nconsole.log(multiply(123123321312323, 123123321312323));\n\
    console.log(multiply(12312332131232312, 12312332131232312));\nconsole.log(multiply(1231233213123231233,\
    \ 1231233213123231233));\nconsole.log(multip", "  return (a % 10) * (b % 10);\n\
    }\nconsole.log(multiply(148, 412));", "    return Number(`${a}`.slice(-1)) * Number(`${b}`.slice(-1));\n\
    }\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));\nconsole.log(multiply(0, 0));", " \
    \ return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));", "  return (a % 10) * (b % 10);\n\
    }\n\nconsole.log(multiply(19, 28));", "  return Math.floor(a / 10) * Math.floor(b\
    \ / 10);\n}\n\nconsole.log(multiply(12345, 67890));", "    return parseInt(a.toString().slice(-1))\
    \ * parseInt(b.toString().slice(-1));\n}\n\nconsole.log(multiply(148, 412));\n\
    console.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14,\
    \ -15));", "    return a % 10 * b % 10;\n}", "  return (a % 10) * (b % 10);\n\
    }\n\nconsole.log(multiply(148, 412));", "  let i1 = a % 10;\n  let i2 = b % 10;\n\
    \  return i1 * i2;\n}\n", "  const strA = a.toString();\n  const strB = b.toString();\n\
    \  const product = parseInt(strA[strA.length - 1]) * parseInt(strB[strB.length\
    \ - 1]);\n  return product;\n}\n\nconsole.log(multiply(19, 28));\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "  return Math.floor(a / 10) * (a % 10) * Math.floor(b / 10) * (b % 10);\n}\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));\n", "    if (a < 0) {\n        a = a * -1;\n \
    \   }\n    if (b < 0) {\n        b = b * -1;\n    }\n    return (a % 10) * (b\
    \ % 10);\n}\nconsole.log(multiply(14, -15));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

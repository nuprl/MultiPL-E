name: HumanEval_77_iscube
language: ts
prompt: "//Write a function that takes an integer a and returns True \n// if this\
  \ ingeger is a cube of some integer number.\n// Note: you may assume the input is\
  \ always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n//\
  \ iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
  \ ==> False\nfunction iscube(a: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
  \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
  \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
  \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
  \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
completions: ["    return Number.isInteger(Math.cbrt(a));\n}\n", "    if (a < 0) {\n\
    \        a = -a;\n    }\n    if (a === 0) {\n        return true;\n    }\n   \
    \ for (let i = 1; i <= a; i++) {\n        if (i ** 3 === a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n", "    let result = false;\n\
    \    for (let i = 0; i <= a; i++) {\n        let power3 = Math.pow(i, 3);\n  \
    \      if (power3 === a) {\n            result = true;\n        }\n    }\n   \
    \ return result;\n}\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));",
  "\tfor (let i = 0; i <= a; i++) {\n\t\tif (Math.pow(i, 3) === a) {\n\t\t\treturn\
    \ true;\n\t\t}\n\t}\n\treturn false;\n}\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\n\
    console.log(iscube(-1));\nconsole.log(iscube(64));\nconsole.log(iscube(0));\n\
    console.log(iscube(180));\n", "    return a >= 0 && Math.pow(Math.floor(Math.pow(a,\
    \ 1 / 3)), 3) === a;\n}\n", "    let result: boolean = false;\n    let arr: number[]\
    \ = [];\n    for (let i = 0; i <= a; i++) {\n        arr.push(i);\n    }\n   \
    \ for (let i = 0; i < arr.length; i++) {\n        if (a === arr[i] * arr[i] *\
    \ arr[i]) {\n            result = true;\n        }\n    }\n    return result;\n\
    }\nconsole.log(iscube(0));\nconsole.log(iscube(1));\nconsole.log(iscube(2));\n\
    console.log(iscube(3));\nconsole.log(iscube(4));\nconsole.log(iscube(8));\nconsole.log(iscube(27));\n\
    console.log(iscube(64));\nconsole.log(iscube(65));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125));\nconsole.log(iscube(125));\nconsole.log(iscube(125));\n\
    console.log(iscube(125", "    for (let i = 0; i < a; i++) {\n        if (i * i\
    \ * i === a) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n", "    let result: boolean = false;\n    if (a == 0) {\n        result = true;\n\
    \    } else if (a < 0) {\n        result = true;\n    } else {\n        for (let\
    \ i = 1; i < a; i++) {\n            if (i * i * i == a) {\n                result\
    \ = true;\n            }\n        }\n    }\n    return result;\n}", "  return\
    \ a === Math.pow(Math.round(Math.pow(a, 1 / 3)), 3);\n}\n", "  return Math.cbrt(a)\
    \ === Math.floor(Math.cbrt(a));\n}\nconsole.log(iscube(1));\nconsole.log(iscube(2));\n\
    console.log(iscube(-1));\nconsole.log(iscube(64));\nconsole.log(iscube(0));\n\
    console.log(iscube(180));\n", "  return Number.isInteger(Math.cbrt(a));\n}\n\n\
    console.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));\n", "  if (a >= 0) {\n    return\
    \ true;\n  } else if (a < 0) {\n    return false;\n  }\n}\nconsole.log(iscube(1));\n\
    console.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));", "  if (a === 0) {\n    return\
    \ true;\n  }\n  return a > 0 && Number.isInteger(Math.cbrt(a));\n}\n\nconsole.log(iscube(1));\n\
    console.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));", "    for (let i = 0; i <=\
    \ a; i++) {\n        if (i ** 3 === a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nconsole.log(iscube(64));\nconsole.log(iscube(180));\n",
  "    if (Math.sign(a) === -1) {\n        a = Math.abs(a);\n    }\n    return (Math.pow(Math.round(Math.pow(a,\
    \ 1 / 3)), 3) === a);\n}\n", "    let root: number = Math.floor(Math.sqrt(a));\n\
    \    return (root * root * root === a);\n}\nconsole.log(iscube(1));\nconsole.log(iscube(2));\n\
    console.log(iscube(-1));\nconsole.log(iscube(64));\nconsole.log(iscube(0));\n\
    console.log(iscube(180));\n", "  return Number.isInteger(Math.cbrt(a));\n}\n",
  "  return Number.isInteger(Math.cbrt(a));\n}\n\nconsole.log(iscube(27));\nconsole.log(iscube(256));\n\
    console.log(iscube(1));\nconsole.log(iscube(4));\nconsole.log(iscube(0));\nconsole.log(iscube(7));\n\
    console.log(iscube(8));\nconsole.log(iscube(10));\nconsole.log(iscube(63));\n\
    console.log(iscube(60));\nconsole.log(iscube(64));\nconsole.log(iscube(180));\n\
    console.log(iscube(256));\nconsole.log(iscube(125));\nconsole.log(iscube(250));\n\
    console.log(iscube(1000));\nconsole.log(iscube(8192));\nconsole.log(iscube(1000000));\n\
    console.log(iscube(7200));\nconsole.log(iscube(6780));\nconsole.log(iscube(65536));\n\
    console.log(iscube(1365));\nconsole.log(iscube(2500));\nconsole.log(iscube(6400));\n\
    console.log(iscube(324632));\nconsole.log(iscube(3080));\nconsole.log(iscube(2401));\n\
    console.log(iscube(3125));\nconsole.log(iscube(2048));\nconsole.log(iscube(248832));\n\
    console.log(iscube(279936));\nconsole.log(iscube(1679616));\nconsole.log(iscube(4096));\n\
    console.log(iscube(10077696));\nconsole.log(iscube(59049));\nconsole.log(iscube(15625));\n\
    console.log(iscube(27000));\nconsole.log(iscube(150994944));\nconsole.log(iscube(6198));\n\
    console.log(iscube(366325));\nconsole.log(iscube(17496));\nconsole.log(iscube(4180));\n\
    console.log(iscube(1296));\nconsole.log(iscube(387420489));\nconsole.log(iscube(100000000));\n\
    console.log(", "    return Math.pow(Math.round(Math.pow(a, 1 / 3)), 3) === a;\n\
    }\n\nconsole.log(iscube(64));\n\n", "    return (Math.cbrt(a) % 1 === 0);\n}\n\
    \nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_104_unique_digits
language: ts
prompt: "//Given a list of positive integers x. return a sorted list of all \n// elements\
  \ that hasn't any even digit.\n// Note: Returned list should be sorted in increasing\
  \ order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n\
  // >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x: number[]):\
  \ number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
  \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
  \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
  \ 103, 31]),[31, 135]);\n}\n\ntest();"
completions: ["  let result: number[] = [];\n  x.forEach(num => {\n    if (num.toString().split('').every(n\
    \ => n % 2 != 0)) {\n      result.push(num);\n    }\n  });\n  return result.sort((a,\
    \ b) => a - b);\n}\n", "\tconst uniq: number[] = [];\n\tfor (let i = 0; i < x.length;\
    \ i++) {\n\t\tif (x[i].toString().split('').every(str => str % 2 !== 0)) {\n\t\
    \t\tuniq.push(x[i]);\n\t\t}\n\t}\n\treturn uniq.sort((a, b) => a - b);\n}\n\n\
    console.log(unique_digits([15, 33, 1422, 1]));\nconsole.log(unique_digits([152,\
    \ 323, 1422, 10]));", "    let ret: number[] = [];\n    for (let i: number = 0;\
    \ i < x.length; i++) {\n        let xstring: string = String(x[i]);\n        let\
    \ isOdd: boolean = true;\n        for (let j: number = 0; j < xstring.length;\
    \ j++) {\n            if (xstring[j] % 2 == 0) {\n                isOdd = false;\n\
    \                break;\n            }\n        }\n        if (isOdd) {\n    \
    \        ret.push(x[i]);\n        }\n    }\n    ret.sort(function (a, b) { return\
    \ a - b });\n    return ret;\n}\n", "    let result: number[] = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let number: number = x[i];\n        let\
    \ hasEven: boolean = false;\n        do {\n            let digit: number = number\
    \ % 10;\n            number = (number - digit) / 10;\n            if (digit %\
    \ 2 == 0) {\n                hasEven = true;\n                break;\n       \
    \     }\n        } while (number > 0);\n        if (!hasEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort();\n}\n\n", "    let result: number[]\
    \ = [];\n    let i: number = 0;\n    while (i < x.length) {\n        // console.log(\"\
    Number is \" + x[i]);\n        if (x[i] < 0) {\n            // console.log(\"\
    Number is negative\");\n            i++;\n            continue;\n        }\n \
    \       if (x[i] < 10) {\n            // console.log(\"Number is single digit\"\
    );\n            result.push(x[i]);\n            i++;\n            continue;\n\
    \        }\n        let digits: number[] = [];\n        while (x[i] >= 10) {\n\
    \            let mod: number = x[i] % 10;\n            // console.log(\"Modulus\
    \ is \" + mod);\n            digits.push(mod);\n            x[i] = x[i] / 10;\n\
    \        }\n        digits.push(x[i]);\n        let isEven: boolean = false;\n\
    \        for (let j: number = 0; j < digits.length; j++) {\n            if (digits[j]\
    \ % 2 == 0) {\n                isEven = true;\n                break;\n      \
    \      }\n        }\n        if (!isEven) {\n            result.push(digits.reverse().join(\"\
    \"));\n        }\n        i++;\n    }\n    return result.sort((a, b) => a - b);\n\
    }\n", "  const even = [2, 4, 6, 8, 0];\n  const results: number[] = [];\n  for\
    \ (let i = 0; i < x.length; i++) {\n    if (even.indexOf(x[i] % 10) === -1) {\n\
    \      results.push(x[i]);\n    }\n  }\n  return results;\n}\n", "    return x.filter(x\
    \ => {\n        let hasEvenDigit = false;\n        while (x > 0) {\n         \
    \   if (x % 2 === 0) {\n                hasEvenDigit = true;\n               \
    \ break;\n            }\n            x = Math.floor(x / 10);\n        }\n    \
    \    return !hasEvenDigit;\n    }).sort((a, b) => a - b);\n}\n", "\treturn [];\n\
    }\n", "    let result: number[] = [];\n    for (let i = 0; i < x.length; i++)\
    \ {\n        let num: number = x[i];\n        if (isEven(num)) {\n           \
    \ continue;\n        }\n        result.push(num);\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n", "    return x.filter(x => x.toString().split('').filter(x\
    \ => x % 2 == 0).length == 0).sort();\n}\n", "    var y: number[] = [];\n    for\
    \ (var i = 0; i < x.length; i++) {\n        if (x[i] % 2 != 0) {\n           \
    \ y.push(x[i]);\n        }\n    }\n    y.sort();\n    return y;\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n", "   \
    \ var unique: number[] = [];\n    for (var i = 0; i < x.length; i++) {\n     \
    \   if (unique_digit(x[i])) {\n            unique.push(x[i]);\n        }\n   \
    \ }\n    return unique;\n}\n", "  let result = [];\n  for (let item of x) {\n\
    \    if (item.toString().includes(\"2\") || item.toString().includes(\"4\") ||\
    \ item.toString().includes(\"6\") || item.toString().includes(\"8\") || item.toString().includes(\"\
    0\")) {\n      continue;\n    } else {\n      result.push(item);\n    }\n  }\n\
    \  return result;\n}\n", "    let n: number[] = [];\n    for (let i: number =\
    \ 0; i < x.length; i++) {\n        let isEven: boolean = false;\n        let digits:\
    \ number[] = x[i].toString().split('').map(Number);\n        for (let j: number\
    \ = 0; j < digits.length; j++) {\n            if (digits[j] % 2 === 0) {\n   \
    \             isEven = true;\n            }\n        }\n        if (!isEven) {\n\
    \            n.push(x[i]);\n        }\n    }\n    return n.sort((a, b) => a -\
    \ b);\n}\n", "    let unique = [];\n    for (let i = 0; i < x.length; i++) {\n\
    \        if (x[i].toString().split('').every(y => parseInt(y) % 2 === 1)) {\n\
    \            unique.push(x[i]);\n        }\n    }\n    return unique.sort((a,\
    \ b) => a - b);\n}\n", "  let ans: number[] = [];\n  for (let i = 0; i < x.length;\
    \ i++) {\n    if (String(x[i]).split(\"\").every(char => Number(char) % 2 ===\
    \ 1)) {\n      ans.push(x[i]);\n    }\n  }\n  return ans.sort((a, b) => a - b);\n\
    }\n", "  let result: number[] = [];\n  for (let i = 0; i < x.length; i++) {\n\
    \    if (x[i].toString().indexOf(\"2\") === -1 &&\n      x[i].toString().indexOf(\"\
    4\") === -1 &&\n      x[i].toString().indexOf(\"6\") === -1 &&\n      x[i].toString().indexOf(\"\
    8\") === -1 &&\n      x[i].toString().indexOf(\"0\") === -1) {\n      result.push(x[i]);\n\
    \    }\n  }\n  return result.sort(function (a, b) { return a - b });\n}\n\n",
  "    var uniqueArray: number[] = [];\n    x.forEach(e => {\n        if (e % 2 ==\
    \ 1) {\n            uniqueArray.push(e);\n        }\n    });\n    return uniqueArray;\n\
    }", "\tlet array: number[] = [];\n\tlet unique: boolean = true;\n\tx.forEach(num\
    \ => {\n\t\tlet digits: string[] = num.toString().split('');\n\t\tdigits.forEach(digit\
    \ => {\n\t\t\tif(parseInt(digit) % 2 === 0) unique = false;\n\t\t});\n\t\tif(unique)\
    \ array.push(num);\n\t\tunique = true;\n\t});\n\treturn array;\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));", "    let\
    \ result: number[] = [];\n    x.forEach(\n        (num) => {\n            if (num\
    \ % 2 === 1) {\n                result.push(num);\n            }\n        }\n\
    \    );\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

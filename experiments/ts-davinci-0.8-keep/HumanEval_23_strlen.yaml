name: HumanEval_23_strlen
language: ts
prompt: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
  // 3\nfunction strlen(string: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
  \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
  ),9);\n}\n\ntest();"
completions: ["    let i = 0;\n    for (i; string[i] !== undefined; i++);\n    return\
    \ i;\n}\n", "  return string.length;\n}\n", "  return string.length;\n}\n", " \
    \   let result = 0;\n    for (let _ of string) {\n        result += 1;\n    }\n\
    \    return result;\n}\n", "    let l = 0;\n    while (string[l] !== undefined)\
    \ l++;\n    return l;\n}\n", "  let len = 0;\n  while (string[len] !== undefined)\
    \ {\n    len++;\n  }\n  return len;\n}\n", "  return string.length;\n}\n", " \
    \ return string.length;\n}\n", "  return string.length;\n}\n", "    let count\
    \ = 0;\n    for (let i = 0; i < string.length; i++) {\n        count++;\n    }\n\
    \    return count;\n}\n", "    return string.length;\n}\n", "  let len = 0;\n\
    \  while (string[len] !== undefined) {\n    len++;\n  }\n  return len;\n}\n",
  "    return string.length;\n}\n", "    // TODO: Your code here\n    let count =\
    \ 0;\n    for (let i = 0; i < string.length; i++) {\n        count++;\n    }\n\
    \    return count;\n}\n", "    return string.length;\n}\n", "    // TODO\n   \
    \ let length = 0;\n    let i = 0;\n    while (i < string.length) {\n        length++;\n\
    \        i++;\n    }\n    return length;\n}", "    return string.length;\n}\n",
  "  let len = 0;\n  while (string[len] !== undefined) {\n    len++;\n  }\n  return\
    \ len;\n}\n", "    return string.length;\n}\n", "    return string.length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

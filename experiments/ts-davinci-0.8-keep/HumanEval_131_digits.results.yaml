language: ts
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n    let array\
    \ = n.toString().split('');\n    let res = array.filter(el => {\n        return\
    \ parseInt(el) % 2 !== 0;\n    });\n    let result = res.reduce((acc, cV) => {\n\
    \        return acc * parseInt(cV);\n    }, 1);\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmplc_scz3m.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplc_scz3m.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822155
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n    const\
    \ nStr: string = n.toString();\n    let res: number = 1;\n    for (let i: number\
    \ = 0; i < nStr.length; i++) {\n        const tmp: number = +nStr[i];\n      \
    \  if (tmp % 2 !== 0) {\n            res *= tmp;\n        }\n    }\n    return\
    \ res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmptao2vp9d.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptao2vp9d.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 2
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n  return\
    \ n.toString().split('').reduce((acc, n) => {\n    n = Number(n);\n    return\
    \ n % 2 !== 0 ? acc * n : acc;\n  }, 1);\n}\n\nconsole.log(digits(1)); // 1\n\
    console.log(digits(4)); // 0\nconsole.log(digits(235)); // 15\nconsole.log(digits(6249));\
    \ // 75\nconsole.log(digits(999)); // 729\nconsole.log(digits(1305)); // 15\n\
    console.log(digits(1676)); // 168\nconsole.log(digits(2825)); // 0\nconsole.log(digits(890));\
    \ // 0\nconsole.log(digits(3572)); // 0\nconsole.log(digits(128)); // 0\nconsole.log(digits(64));\
    \ // 0\nconsole.log(digits(0)); // 0\nconsole.log(digits(24)); // 0\nconsole.log(digits(25));\
    \ // 5\nconsole.log(digits(123)); // 6\nconsole.log(digits(86)); // 0\nconsole.log(digits(35));\
    \ // 5\nconsole.log(digits(22)); // 0\nconsole.log(digits(13)); // 1\nconsole.log(digits(62));\
    \ // 0\nconsole.log(digits(471678)); // 105\nconsole.log(digits(471679)); // 15\n\
    console.log(digits(471680)); // 0\nconsole.log(digits(471681)); // 63\nconsole.log(digits(471682));\
    \ // 0\nconsole.log(digits(471683)); // 105\nconsole.log(digits(471684)); // 0\n\
    console.log(digits(471685)); // 105\nconsole.log(digits(471686)); // 0\nconsole.log(digits(471687));\
    \ // 105\nconsole.log(digits(471688)); // 0\nconsole.log(digits(471689)); // 105\n\
    console.log(digits(471690)); // 0\nconsole.log(digits(471691)); // 105\nconsole.log\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj4349ai6.ts(9,5): error TS2322: Type ''number'' is
    not assignable to type ''string''.

    ../../../../../tmp/tmpj4349ai6.ts(10,12): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpj4349ai6.ts(10,32): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659822155
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n  let result\
    \ = 1;\n  while (n !== 0) {\n    const digit = n % 10;\n    if (digit % 2 !==\
    \ 0) {\n      result *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgb0ujj19.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgb0ujj19.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822155
- exit_code: 2
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n  const nString\
    \ = n.toString();\n  let oddNumbers: string[] = [];\n  for (let i = 0; i < nString.length;\
    \ i++) {\n    if (nString[i] % 2 !== 0) {\n      oddNumbers.push(nString[i]);\n\
    \    }\n  }\n  if (oddNumbers.length === 0) {\n    return 0;\n  }\n  let numbers:\
    \ number[] = [];\n  for (let i = 0; i < oddNumbers.length; i++) {\n    numbers.push(parseInt(oddNumbers[i]));\n\
    \  }\n  let sum = 1;\n  for (let i = 0; i < numbers.length; i++) {\n    sum *=\
    \ numbers[i];\n  }\n  return sum;\n}\nconsole.log(digits(123));\nconsole.log(digits(4));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0yp0vkbc.ts(11,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1659822155
- exit_code: 2
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n  return\
    \ Array.from(String(n))\n    .map(Number)\n    .filter(isOdd)\n    .reduce((prod,\
    \ val) => prod * val, 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbot9ahnq.ts(8,16): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpbot9ahnq.ts(10,13): error TS2304: Cannot find name ''isOdd''.

    '
  timestamp: 1659822155
- exit_code: 2
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n    //return\
    \ n.toString().split('').map(Number).filter(x => x % 2 === 1).reduce((x, y) =>\
    \ x * y, 1);\n    return n.toString().split('').reduce((x, y) => y % 2 === \"\
    1\" ? x * +y : x, 1);\n}\n\nexport function runTests(): void {\n    const ts:\
    \ number[] = [\n        1,\n        4,\n        235\n    ];\n    const as: number[]\
    \ = [\n        1,\n        0,\n        15\n    ];\n\n    for (let i: number =\
    \ 0; i < ts.length; i++) {\n        const r: number = digits(ts[i]);\n       \
    \ console.log(`${r} == ${as[i]}`);\n    }\n}\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj5uljsdu.ts(9,52): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpj5uljsdu.ts(9,52): error TS2367: This condition will always
    return ''false'' since the types ''number'' and ''"1"'' have no overlap.

    '
  timestamp: 1659822155
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n  const arr:\
    \ number[] = n.toString().split('').map(Number);\n  let result: number = 1;\n\
    \  for (let i: number = 0; i < arr.length; i++) {\n    if (arr[i] % 2 !== 0) {\n\
    \      result *= arr[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(digits(235));\n\
    console.log(digits(4));\nconsole.log(digits(1));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpcn80e8sd.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcn80e8sd.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '15

    1

    1

    '
  timestamp: 1659822156
- exit_code: 2
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n    let nString:\
    \ string = n.toString();\n    let finalInt: number = 1;\n    for (let i: number\
    \ = 0; i < nString.length; i++) {\n        if (nString[i] % 2 !== 0) {\n     \
    \       finalInt *= Number(nString[i]);\n        }\n    }\n    return finalInt;\n\
    }\n\nconsole.log(digits(235));\nconsole.log(digits(4));\nconsole.log(digits(1));\n\
    console.log(digits(0));\nconsole.log(digits(8));\nconsole.log(digits(123456));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfv3p7s0b.ts(11,13): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1659822155
- exit_code: 2
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n  let nums\
    \ = n.toString().split('');\n  let result = 1;\n  for (let i = 0; i < nums.length;\
    \ i++) {\n    if (nums[i] % 2 === 1) {\n      result *= Number(nums[i]);\n   \
    \ }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp030jnvqn.ts(11,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1659822155
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n    let k\
    \ = 0;\n    let s = String(n);\n    for (let i = 0; i < s.length; i++) {\n   \
    \     let c = Number(s[i]);\n        if (c % 2 === 1) {\n            k *= c;\n\
    \        }\n    }\n    return k;\n}\n\nexport default digits;\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpcdmfaf5v.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcdmfaf5v.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n  return\
    \ n\n    .toString()\n    .split(\"\")\n    .map(x => parseInt(x))\n    .filter(x\
    \ => x % 2 !== 0)\n    .reduce((x, y) => x * y, 1);\n}\n\nconsole.log(digits(435));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpr2v8kk50.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr2v8kk50.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '15

    '
  timestamp: 1659822155
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n    //stringy\n\
    \    // let numbers: string = n.toString();\n    // let output: number = 1;\n\
    \    // for (let i: number = 0; i < numbers.length; i++) {\n    //     if (Number(numbers[i])\
    \ % 2 === 1) {\n    //         output *= Number(numbers[i]);\n    //     }\n \
    \   // }\n    // return output;\n\n    //numbery\n    if (n === 0) {\n       \
    \ return 0;\n    } else if (n % 2 === 1) {\n        return n % 10 * digits(Math.floor(n\
    \ / 10));\n    } else {\n        return digits(Math.floor(n / 10));\n    }\n}\n\
    \nconsole.log(digits(15));\nconsole.log(digits(123456789));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp8v896zym.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8v896zym.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    0

    '
  timestamp: 1659822156
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n    const\
    \ number = n.toString().split('');\n    let product = 1;\n    for (let i = 0;\
    \ i < number.length; i++) {\n        if (parseInt(number[i]) % 2 == 1) {\n   \
    \         product *= parseInt(number[i]);\n        }\n    }\n    return product;\n\
    }\nconsole.log(digits(234));\nconsole.log(digits(6789));\nconsole.log(digits(123456789));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp_6n3wceo.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_6n3wceo.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '3

    63

    945

    '
  timestamp: 1659822156
- exit_code: 0
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n  const numbers:\
    \ number[] = n.toString().split('').map(e => Number(e));\n  const result: number[]\
    \ = numbers.filter(e => e % 2 !== 0);\n  return (result.length === 0) ? 0 : result.reduce((acc,\
    \ cur) => acc * cur);\n}\n\nexport default digits;\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 2
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n    const\
    \ numArr = String(n).split('');\n    const oddNumArr = numArr.filter(i => i %\
    \ 2 !== 0);\n    const final = oddNumArr.reduce((acc, curr) => acc * curr, 1);\n\
    \    return final;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmb9p6q6b.ts(9,42): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpmb9p6q6b.ts(10,57): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659822155
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n    const\
    \ allDigits = n.toString().split('').map(Number);\n    return allDigits.reduce((sum,\
    \ current) => current % 2 !== 0 ? sum * current : sum, 1);\n}\n\nconsole.log(digits(1));\n\
    console.log(digits(4));\nconsole.log(digits(235));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp20q6nt_y.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp20q6nt_y.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    15

    '
  timestamp: 1659822155
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n    const\
    \ str = n.toString();\n    const arr = str.split('');\n    let result = 0;\n \
    \   for (let i = 0; i < arr.length; i++) {\n        let int = parseInt(arr[i]);\n\
    \        if (int % 2 === 1) {\n            result += int;\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(digits(12345));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpgtzu46ml.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgtzu46ml.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '9

    '
  timestamp: 1659822156
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n    return\
    \ parseInt(n.toString().split('').filter(x => +x % 2).join(''), 10) || 0;\n}\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n51\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpqyvxnsmn.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqyvxnsmn.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 51,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits(n: number): number {\n  let arr\
    \ = n.toString().split('').map(num => Number(num));\n  let oddNums = arr.filter(num\
    \ => num % 2 != 0);\n  let product = oddNums.reduce((acc, curr) => acc * curr,\
    \ 1);\n  return product;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpc2qk4d15.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc2qk4d15.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156

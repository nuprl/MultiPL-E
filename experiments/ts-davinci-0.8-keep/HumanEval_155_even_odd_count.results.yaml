language: ts
name: HumanEval_155_even_odd_count
results:
- exit_code: 0
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n    let\
    \ even_count = 0;\n    let odd_count = 0;\n    Math.abs(num).toString().split('').forEach(i\
    \ => {\n        if (parseInt(i) % 2 == 0) {\n            even_count++;\n     \
    \   } else {\n            odd_count++;\n        }\n    });\n    return [even_count,\
    \ odd_count];\n}\n\nconsole.log(even_odd_count(-12));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 1 ]

    '
  timestamp: 1659822050
- exit_code: 2
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n  const\
    \ absNum = Math.abs(num);\n  let evens = 0;\n  let odds = 0;\n  while (absNum\
    \ > 0) {\n    const digit = absNum % 10;\n    if (digit % 2 === 0) {\n      evens++;\n\
    \    } else {\n      odds++;\n    }\n    absNum = Math.floor(absNum / 10);\n \
    \ }\n  return [evens, odds];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptvviltri.ts(16,5): error TS2588: Cannot assign to
    ''absNum'' because it is a constant.

    '
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n  let\
    \ even = 0;\n  let odd = 0;\n  for (let i = 0; i < String(num).length; i++) {\n\
    \    if (Math.abs(parseInt(String(num)[i])) % 2 === 0) {\n      even++;\n    }\
    \ else {\n      odd++;\n    }\n  }\n  return [even, odd];\n}\n\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp3rkn863v.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3rkn863v.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2 ]

    [ 1, 2 ]

    '
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n  return\
    \ [0, 0];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpnczhowa9.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnczhowa9.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n    let\
    \ even = 0;\n    let odd = 0;\n    let numCopy = num;\n    while (numCopy > 0)\
    \ {\n        const digit = numCopy % 10;\n        if (digit % 2 === 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        numCopy\
    \ = Math.floor(numCopy / 10);\n    }\n    return [even, odd];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpcx4fz6lk.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpcx4fz6lk.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n    let\
    \ even_count = 0, odd_count = 0;\n    let string_num = num.toString();\n    for\
    \ (let i = 0; i < string_num.length; i++) {\n        if (parseInt(string_num[i])\
    \ % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n\
    \        }\n    }\n    return [even_count, odd_count];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmptrrq18gz.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmptrrq18gz.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822050
- exit_code: 0
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n  const\
    \ lst = num.toString().split(\"\");\n  const even = lst.filter((el) => +el % 2\
    \ === 0).length;\n  const odd = lst.filter((el) => +el % 2 === 1).length;\n  return\
    \ [even, odd];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n    let\
    \ even = 0;\n    let odd = 0;\n    let numToString = num.toString();\n    for\
    \ (let i = 0; i < numToString.length; i++) {\n        let char = parseInt(numToString[i]);\n\
    \        if (char % 2 === 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpc6t_30pr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpc6t_30pr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2 ]

    [ 1, 2 ]

    '
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n  let\
    \ odd_count = 0;\n  let even_count = 0;\n  let tmp = Math.abs(num);\n  while (tmp\
    \ > 0) {\n    if (tmp % 2 === 0) {\n      even_count++;\n    } else {\n      odd_count++;\n\
    \    }\n    tmp = Math.floor(tmp / 10);\n  }\n  return [even_count, odd_count];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  0\n]\n    at test (/tmp/tmpmbvk33ln.js:30:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmbvk33ln.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 0 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n    //add\
    \ your code here\n\n    return null;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould\
    \ loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmppgy5x82f.js:12:12)\n\
    \    at Object.<anonymous> (/tmp/tmppgy5x82f.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected:\
    \ [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n    let\
    \ evenCount = 0, oddCount = 0;\n    num = Math.abs(num);\n    while (num > 0)\
    \ {\n        if (num % 2 == 0) {\n            evenCount++;\n        } else {\n\
    \            oddCount++;\n        }\n        num = Math.floor(num / 10);\n   \
    \ }\n    return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  0\n]\n    at test (/tmp/tmp92clv17p.js:29:12)\n\
    \    at Object.<anonymous> (/tmp/tmp92clv17p.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 0 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n    const\
    \ str: string = num.toString();\n    let evenCount: number = 0;\n    let oddCount:\
    \ number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        const\
    \ int: number = parseInt(str[i]);\n        if (int % 2 === 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n    }\n    return [evenCount,\
    \ oddCount];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpnhac6mr2.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnhac6mr2.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n  let\
    \ evenCount = 0;\n  let oddCount = 0;\n  let numString = num.toString();\n  let\
    \ numStringLength = numString.length;\n  let i;\n  for (i = 0; i < numStringLength;\
    \ i++) {\n    if (i % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp3hpmbp8z.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3hpmbp8z.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n    var\
    \ even = 0;\n    var odd = 0;\n    num = Math.abs(num);\n    while (num > 0) {\n\
    \        if (num % 2 == 0) {\n            even++;\n        } else {\n        \
    \    odd++;\n        }\n        num = Math.floor(num / 10);\n    }\n    return\
    \ [even, odd];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  0\n]\n    at test (/tmp/tmpfyxiziac.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfyxiziac.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 0 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 1 ]

    [ 1, 2 ]

    '
  timestamp: 1659822051
- exit_code: 2
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n    let\
    \ evenCount = 0;\n    let oddCount = 0;\n    let evenOddArr = [];\n    let stringified\
    \ = String(num);\n    let numArr = stringified.split('');\n    for (let num of\
    \ numArr) {\n        if (Number(num) % 2 === 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n    }\n    evenOddArr.push(evenCount,\
    \ oddCount);\n    return evenOddArr;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_e5w482a.ts(19,5): error TS2739: Type ''any[]'' is
    missing the following properties from type ''[number, number]'': 0, 1

    '
  timestamp: 1659822050
- exit_code: 2
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n  let\
    \ even = 0;\n  let odd = 0;\n  for (let str of num.toString()) {\n    let x =\
    \ parseInt(str);\n    if (x % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpiwpuev48.ts(8,19): error TS2494: Using a string in
    a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659822050
- exit_code: 2
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n    let\
    \ even = 0;\n    let odd = 0;\n    let count = 0;\n    let arr = [];\n    let\
    \ res = [even, odd];\n    while (num !== 0) {\n        count = Math.floor(num\
    \ % 10);\n        arr.push(count);\n        num = Math.floor(num / 10);\n    }\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n\
    \            even++;\n        } else {\n            odd++;\n        }\n    }\n\
    \    return res;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprmweswke.ts(23,5): error TS2739: Type ''number[]''
    is missing the following properties from type ''[number, number]'': 0, 1

    '
  timestamp: 1659822050
- exit_code: 0
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n  const\
    \ even = (num.toString().match(/[24680]/g) || []).length;\n  const odd = (num.toString().match(/[13579]/g)\
    \ || []).length;\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n    let\
    \ even = 0;\n    let odd = 0;\n    let i = Math.abs(num);\n    while (i > 0) {\n\
    \        if (i % 2 == 0) {\n            even++;\n        } else {\n          \
    \  odd++;\n        }\n        i = Math.floor(i / 10);\n    }\n    return [even,\
    \ odd];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  0\n]\n    at test (/tmp/tmpjiz_25o8.js:30:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjiz_25o8.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 0 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822050
- exit_code: 1
  program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n    let\
    \ even = 0;\n    let odd = 0;\n    let isNegative = false;\n    if (num < 0) {\n\
    \        isNegative = true;\n        num = Math.abs(num);\n    }\n    let str\
    \ = num.toString();\n    for (let i = 0; i < str.length; i++) {\n        let digit\
    \ = Number(str[i]);\n        if (digit % 2 === 0) {\n            even++;\n   \
    \     } else {\n            odd++;\n        }\n    }\n    if (isNegative) {\n\
    \        return [odd, even];\n    }\n    return [even, odd];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  0\n]\n    at test (/tmp/tmps6ebryhq.js:36:12)\n\
    \    at Object.<anonymous> (/tmp/tmps6ebryhq.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1 ],\n\
    \  expected: [ 1, 0 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822050

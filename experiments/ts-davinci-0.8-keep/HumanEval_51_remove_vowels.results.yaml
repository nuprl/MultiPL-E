language: ts
name: HumanEval_51_remove_vowels
results:
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  if (text.length == 0) {\n    return '';\n  }\n  let first_char\
    \ = text[0];\n  let sub_text = text.slice(1);\n  if ('aeiouAEIOU'.indexOf(first_char)\
    \ != -1) {\n    return remove_vowels(sub_text);\n  }\n  return first_char + remove_vowels(sub_text);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    if (text.length == 0) {\n        return text;\n    }\n\
    \    else {\n        var vowels = 'aeiouAEIOU';\n        var first: string = text[0];\n\
    \        if (vowels.indexOf(first) == -1) {\n            return first + remove_vowels(text.slice(1));\n\
    \        }\n        else {\n            return remove_vowels(text.slice(1));\n\
    \        }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  let outputText = '';\n  for (let i = 0; i < text.length;\
    \ i++) {\n    if (text[i] === 'a' || text[i] === 'e' || text[i] === 'i' || text[i]\
    \ === 'o' || text[i] === 'u') {\n      continue;\n    }\n    outputText += text[i];\n\
    \  }\n  return outputText;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmplxqws9g8.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplxqws9g8.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\nconsole.log(remove_vowels('zbcd'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'zbcd

    '
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] != 'a' && text[i] != 'A' && text[i] != 'e' && text[i]\
    \ != 'E' && text[i] != 'i' && text[i] != 'I' && text[i] != 'o' && text[i] != 'O'\
    \ && text[i] != 'u' && text[i] != 'U') {\n            result += text[i];\n   \
    \     }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/ig, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let new_string: string = '';\n    for (let index = 0;\
    \ index < text.length; index++) {\n        if (text[index] != 'a' && text[index]\
    \ != 'e' && text[index] != 'i' && text[index] != 'o' && text[index] != 'u') {\n\
    \            new_string += text[index];\n        }\n    }\n    return new_string;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpk4a5r_rm.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpk4a5r_rm.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821611
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    var vowels = \"aeiou\"\n    var new_text = \"\"\n   \
    \ var i: number\n    var vowels_length = vowels.length\n    for (i = 0; i < text.length;\
    \ i++){\n        var letter = text[i]\n        var j: number\n        var found_vowel\
    \ = false\n        for (j = 0; j < vowels_length; j++){\n            if (letter\
    \ == vowels[j]){\n                found_vowel = true\n                break\n\
    \            }\n        }\n        if (!found_vowel){\n            new_text +=\
    \ letter\n        }\n    }\n    return new_text\n}\nconsole.log(remove_vowels(\"\
    \"))\nconsole.log(remove_vowels(\"abcdef\"))\nconsole.log(remove_vowels(\"aaaaa\"\
    ))\nconsole.log(remove_vowels(\"aaBAA\"))\nconsole.log(remove_vowels(\"zbcd\"\
    ))\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpsbbbl4nm.js:45:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsbbbl4nm.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '

    bcdf


    BAA

    zbcd

    '
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let temp: string = \"\";\n    let vowels: string = \"\
    aeiouAEIOU\";\n    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            temp += text[i];\n        }\n    }\n    return temp;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiouAEIOU]/g, '');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 2
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        let c: string = text[i];\n        if (!is_vowel(c)) {\n    \
    \        result += c;\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd2qm5wrt.ts(16,14): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i]\
    \ != 'o' && text[i] != 'u') {\n            result += text[i];\n        }\n   \
    \ }\n    return result;\n}\nconsole.log(remove_vowels('zbcd'));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpvfxcc72l.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfxcc72l.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'zbcd

    '
  timestamp: 1659821611
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821611

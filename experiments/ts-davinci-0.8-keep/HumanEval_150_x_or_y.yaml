name: HumanEval_150_x_or_y
language: ts
prompt: "//A simple program which should return the value of x if n is \n// a prime\
  \ number and should return the value of y otherwise.\n// Examples:\n// for x_or_y(7,\
  \ 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y(n: number, x: number,\
  \ y: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = x_or_y;\n  assert.deepEqual(candidate(7, 34, 12),34);\n\
  \  assert.deepEqual(candidate(15, 8, 5),5);\n  assert.deepEqual(candidate(3, 33,\
  \ 5212),33);\n  assert.deepEqual(candidate(1259, 3, 52),3);\n  assert.deepEqual(candidate(7919,\
  \ -1, 12),-1);\n  assert.deepEqual(candidate(3609, 1245, 583),583);\n  assert.deepEqual(candidate(91,\
  \ 56, 129),129);\n  assert.deepEqual(candidate(6, 34, 1234),1234);\n  assert.deepEqual(candidate(1,\
  \ 2, 0),0);\n  assert.deepEqual(candidate(2, 2, 0),2);\n}\n\ntest();"
completions: ["    if (isPrime(n)) {\n        return x;\n    }\n    return y;\n}\n",
  "    for (let i = 2; i < n; i++) {\n        if (n % i === 0) {\n            return\
    \ y;\n        }\n    }\n    return x;\n}\n\nconsole.log(x_or_y(7, 34, 12));\n\
    console.log(x_or_y(15, 8, 5));", "  // add code here\n  return 0;\n}\n", "   \
    \ if (isPrime(n)) {\n        return x;\n    } else {\n        return y;\n    }\n\
    }\n", "  let result: number;\n  if (isPrime(n)) {\n    result = x;\n  } else {\n\
    \    result = y;\n  }\n  return result;\n}\n", "    return isPrime(n) ? x : y;\n\
    }\n", "  let isPrime = true;\n  let result = x;\n  for (let i = 2; i < n / 2;\
    \ i++) {\n    if (n % i === 0) {\n      isPrime = false;\n      result = y;\n\
    \      break;\n    }\n  }\n  return result;\n}", "  if (n > 1) {\n    for (let\
    \ i = 2; i < n; i++) {\n      if (n % i === 0) {\n        return y;\n      }\n\
    \    }\n    return x;\n  }\n  return y;\n}\n", "\tfor (let i = 2; i < n; i++)\
    \ {\n\t\tif (n % i === 0) {\n\t\t\treturn y;\n\t\t}\n\t}\n\treturn x;\n}\n", " \
    \ if (isPrime(n)) return x;\n  return y;\n}\n", "    return (isPrime(n)) ? x :\
    \ y;\n}", "    let isPrime: boolean = true;\n    for (let i = 2; i < n; i++) {\n\
    \        if (n % i == 0) {\n            isPrime = false;\n            break;\n\
    \        }\n    }\n    if (isPrime)\n        return x;\n    else\n        return\
    \ y;\n}\n", "    return (isPrime(n)) ? x : y;\n}\n", "    return isPrime(n) ?\
    \ x : y;\n}\n", "    if (n < 2) return y;\n    if (n % 2 == 0) return y;\n   \
    \ for (let i = 3; i < n; i += 2) {\n        if (n % i == 0) {\n            return\
    \ y;\n        }\n    }\n    return x;\n}\n", "  if (n % 2 == 0) {\n    return\
    \ x;\n  } else {\n    return y;\n  }\n}\n", "    for (let i = 2; i < n; i++) {\n\
    \        if (n % i === 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\n", "    return (n % 2 == 0) ? y : x;\n}\n\nconsole.log(x_or_y(7, 34,\
    \ 12));\nconsole.log(x_or_y(15, 8, 5));", "    for (let i = 2; i < n; i++) {\n\
    \        if (n % i === 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\n", "  return n % 2 === 0 ? y : x;\n}\n\nconsole.log(x_or_y(7, 34, 12));\n\
    console.log(x_or_y(15, 8, 5));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

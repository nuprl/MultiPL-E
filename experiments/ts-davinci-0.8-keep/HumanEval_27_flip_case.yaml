name: HumanEval_27_flip_case
language: ts
prompt: "//For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string:\
  \ string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\"\
  );\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
  These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\");\n}\n\ntest();"
completions: ["    // Write code here\n    var newString: string = \"\";\n    for\
    \ (var i = 0; i < string.length; i++) {\n        if (string[i] === string[i].toUpperCase())\
    \ {\n            newString += string[i].toLowerCase();\n        } else {\n   \
    \         newString += string[i].toUpperCase();\n        }\n    }\n    return\
    \ newString;\n}\n", "    return string.split('').map(char => {\n        if (char\
    \ === char.toUpperCase()) {\n            return char.toLowerCase();\n        }\
    \ else {\n            return char.toUpperCase();\n        }\n    }).join('');\n\
    }\n", "    let result = '';\n    for (let i = 0; i < string.length; i++) {\n \
    \       if (string[i] === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\nconsole.log(flip_case('Hello'));\n\n", "  let\
    \ result = '';\n  for (let i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      result += string[i].toLowerCase();\n \
    \   } else {\n      result += string[i].toUpperCase();\n    }\n  }\n  return result;\n\
    }\n", "  return string.split('').map(char => char.toUpperCase() == char ? char.toLowerCase()\
    \ : char.toUpperCase()).join('');\n}\n", "  const res = [];\n  for (let i = 0;\
    \ i < string.length; i++) {\n    if (string[i] === string[i].toUpperCase()) {\n\
    \      res.push(string[i].toLowerCase());\n    } else {\n      res.push(string[i].toUpperCase());\n\
    \    }\n  }\n  return res.join(\"\");\n}\n", "    let flipped: string = \"\";\n\
    \    for (let letter of string) {\n        if (letter === letter.toUpperCase())\
    \ {\n            flipped += letter.toLowerCase();\n        } else {\n        \
    \    flipped += letter.toUpperCase();\n        }\n    }\n    return flipped;\n\
    }\n", "  return string.split('').map(char => {\n    return char.toUpperCase()\
    \ === char ? char.toLowerCase() : char.toUpperCase();\n  }).join('');\n}\n", " \
    \   var result = \"\";\n    for (var i = 0; i < string.length; i++) {\n      \
    \  if (string[i] == string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n", "    return string.split('').map(char => {\n\
    \        if (char.toLowerCase() === char) {\n            return char.toUpperCase();\n\
    \        } else {\n            return char.toLowerCase();\n        }\n    }).join('');\n\
    }\nconsole.log(flip_case('Hello'));\n\n", "    const chars: string[] = string.split('');\n\
    \    let flippedString: string = '';\n    chars.forEach(function (char: string)\
    \ {\n        if (char === char.toUpperCase()) {\n            flippedString +=\
    \ char.toLowerCase();\n        } else {\n            flippedString += char.toUpperCase();\n\
    \        }\n    });\n    return flippedString;\n}\n", "  let response = '';\n\
    \  for (let i = 0; i < string.length; i++) {\n    let char = string[i];\n    response\
    \ += char === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase();\n\
    \  }\n  return response;\n}\n", "    var length = string.length;\n    var output\
    \ = '';\n    for (var i = 0; i < length; i++) {\n        if (string[i] === string[i].toUpperCase())\
    \ {\n            output += string[i].toLowerCase();\n        } else {\n      \
    \      output += string[i].toUpperCase();\n        }\n    }\n    return output;\n\
    }\n", "  return string.split('').map(char => {\n    if(char === char.toUpperCase())\
    \ {\n      return char.toLowerCase();\n    }\n    return char.toUpperCase();\n\
    \  }).join('');\n}\n", "  let newStr = '';\n  for (let char of string) {\n   \
    \ if (char == char.toUpperCase()) {\n      newStr += char.toLowerCase();\n   \
    \ } else {\n      newStr += char.toUpperCase();\n    }\n  }\n  return newStr;\n\
    }\nconsole.log(flip_case('Hello'));\n", "    return string.split('').map(item\
    \ => {\n        if (item.toLowerCase() === item) {\n            return item.toUpperCase();\n\
    \        } else {\n            return item.toLowerCase();\n        }\n    }).join('');\n\
    }\n", "    // split the string\n    let arr = string.split('');\n    let res =\
    \ '';\n    // check character\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      if (arr[i] == arr[i].toUpperCase()) {\n            res += arr[i].toLowerCase();\n\
    \        } else {\n            res += arr[i].toUpperCase();\n        }\n    }\n\
    \    return res;\n}\n", "    var newString = '';\n    for (var i = 0; i < string.length;\
    \ i++) {\n        var c = string[i];\n        if (c === c.toUpperCase()) {\n \
    \           newString += c.toLowerCase();\n        } else {\n            newString\
    \ += c.toUpperCase();\n        }\n    }\n    return newString;\n}\n", "    let\
    \ result = '';\n    for (let i=0; i<string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n", "    return string.split('').map(letter => letter.toUpperCase()\
    \ == letter ? letter.toLowerCase() : letter.toUpperCase()).join('');\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

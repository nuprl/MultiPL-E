name: HumanEval_102_choose_num
language: ts
prompt: "//This function takes two positive numbers x and y and returns the\n// biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n// there's no\
  \ such number, then the function should return -1.\n// For example:\n// choose_num(12,\
  \ 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num(x: number, y: number):\
  \ number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = choose_num;\n  assert.deepEqual(candidate(12, 15),14);\n\
  \  assert.deepEqual(candidate(13, 12),-1);\n  assert.deepEqual(candidate(33, 12354),12354);\n\
  \  assert.deepEqual(candidate(5234, 5233),-1);\n  assert.deepEqual(candidate(6,\
  \ 29),28);\n  assert.deepEqual(candidate(27, 10),-1);\n  assert.deepEqual(candidate(7,\
  \ 7),-1);\n  assert.deepEqual(candidate(546, 546),546);\n}\n\ntest();"
completions: ["\t// Your code here\n}\n", "    if (x % 2 === 0 && y % 2 === 0) {\n\
    \        return y;\n    } else if (x % 2 !== 0 && y % 2 !== 0) {\n        return\
    \ y - 1;\n    } else if (x % 2 === 0 && y % 2 !== 0) {\n        return x;\n  \
    \  } else {\n        return -1;\n    }\n}\n", "    let num = -1;\n    for (let\
    \ i = y; i >= x; i--) {\n        if (i % 2 === 0) {\n            num = i;\n  \
    \          break;\n        }\n    }\n    return num;\n}\n", "  let n = Math.max(x,\
    \ y);\n  let m = Math.min(x, y);\n  if (n % 2 !== 0) {\n    n--;\n  }\n  while\
    \ (n >= m) {\n    if (n % 2 === 0) {\n      return n;\n    }\n    n--;\n  }\n\
    \  return -1;\n}\nconsole.log(choose_num(12, 15));\nconsole.log(choose_num(13,\
    \ 12));\n", "    // PLACE YOUR CODE BETWEEN THESE LINES //\n    // ----------------------\
    \ //\n    let c = -1;\n    if (x > y) {\n        c = -1;\n    } else {\n     \
    \   for (x; x <= y; x++) {\n            if (x % 2 == 0) {\n                c =\
    \ x;\n            }\n        }\n    }\n    return c;\n    // ----------------------\
    \ //\n}\nconsole.log(choose_num(12, 15));\n", "    let z: number = 0;\n    if\
    \ (x % 2 == 0) {\n        z = x;\n    } else {\n        z = x + 1;\n    }\n  \
    \  while (z <= y) {\n        if (z % 2 == 0) {\n            return z;\n      \
    \  }\n        z += 2;\n    }\n    return -1;\n}\n", "    let bigEven: number =\
    \ 0;\n    if (x >= y) {\n        return -1;\n    }\n    else {\n        for (let\
    \ i: number = x; i <= y; i++) {\n            if (i % 2 == 0) {\n             \
    \   bigEven = i;\n            }\n        }\n        return bigEven;\n    }\n}\n\
    \nlet res: number = choose_num(12, 15);\nconsole.log(res);", "  let a: number\
    \ = x;\n  let b: number = y;\n  if (a > b) {\n    a = y;\n    b = x;\n  }\n  let\
    \ result: number = -1;\n  for (let i: number = a; i <= b; i++) {\n    if (i %\
    \ 2 === 0) {\n      result = i;\n    }\n  }\n  return result;\n}\n", "    let\
    \ biggestNum: number = -1;\n    if (x % 2 == 0) {\n        biggestNum = x;\n \
    \   } else {\n        biggestNum = x + 1;\n    }\n    for (let i = x + 2; i <=\
    \ y; i += 2) {\n        if (i % 2 == 0) {\n            biggestNum = i;\n     \
    \   }\n    }\n    return biggestNum;\n}\nconsole.log(choose_num(12, 15));\nconsole.log(choose_num(13,\
    \ 12));\nconsole.log(choose_num(22, 22));\n", "    let biggest = -1;\n    if (x\
    \ > y) {\n        biggest = -1;\n    } else {\n        for (let i = x; i <= y;\
    \ i++) {\n            if (i % 2 === 0) {\n                biggest = i;\n     \
    \       }\n        }\n    }\n    return biggest;\n}\n", "    let result: number\
    \ = -1;\n    if (x > y) {\n        return result;\n    }\n    let newX: number\
    \ = x % 2 === 0 ? x : x + 1;\n    result = newX <= y ? newX : result;\n    return\
    \ result;\n}\nconsole.log(choose_num(12, 15)); // = 14\nconsole.log(choose_num(13,\
    \ 12)); // = -1\n", "  if (x % 2 !== 0) {\n    x += 1;\n  }\n  for (; x <= y;\
    \ x++) {\n    if (x % 2 === 0) {\n      return x;\n    }\n  }\n  return -1;\n\
    }\n", "  let r = -1;\n  for (let i = y; i >= x; i--) {\n    if (i % 2 === 0) {\n\
    \      r = i;\n      break;\n    }\n  }\n  return r;\n}\n", "    for (let i =\
    \ y; i >= x; i--) {\n        if (i % 2 === 0) {\n            return i;\n     \
    \   }\n    }\n    return -1;\n}\n", "    let i = 0;\n    let largest: number =\
    \ -1;\n    if (x > y) {\n        for (i = y; i <= x; i++) {\n            if (i\
    \ % 2 == 0) {\n                largest = i;\n            }\n        }\n    } else\
    \ {\n        for (i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n     \
    \           largest = i;\n            }\n        }\n    }\n    return largest;\n\
    }\nconsole.log(choose_num(12, 15));\nconsole.log(choose_num(13, 12));\n", "  \
    \  // Your code goes here\n    return -1;\n}\n", "  //if (x < 0 || y < 0) {\n\
    \    //throw new Error('Arguments must be positive');\n  //}\n  if (x > y) {\n\
    \    //throw new Error('x must be smaller than y');\n    return -1;\n  }\n  let\
    \ answer = -1;\n  for (let i = x; i <= y; i++) {\n    if (i % 2 === 0) {\n   \
    \   answer = i;\n    }\n  }\n  return answer;\n}\n", "    let number: number =\
    \ -1;\n    if (x % 2 === 0) {\n        number = x;\n    } else {\n        number\
    \ = x + 1;\n    }\n    if (number > y) {\n        return -1;\n    }\n    return\
    \ number;\n}\n", "    if (x % 2 == 0) {\n        return x > y ? x : y;\n    }\n\
    \    else {\n        return y > x ? y : x;\n    }\n}\n", "    var max: number\
    \ = Math.max(x, y);\n    var min: number = Math.min(x, y);\n    for (var i = max;\
    \ i >= min; i--) {\n        if (i % 2 == 0) {\n            return i;\n       \
    \ }\n    }\n    return -1;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_66_digitSum
language: ts
prompt: "//Task\n// Write a function that takes a string as input and returns the\
  \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
  \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
  helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\n\
  function digitSum(s: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
  \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"\
  ),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
  woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
  \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
  }\n\ntest();"
completions: ["    // return s.split('').reduce((total, current) => total + (current.toUpperCase()\
    \ === current ? current.charCodeAt(0) : 0), 0);\n    let total = 0;\n    for (let\
    \ i = 0; i < s.length; i++) {\n        total += s[i].toUpperCase() === s[i] ?\
    \ s[i].charCodeAt(0) : 0;\n    }\n    return total;\n}\n\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));", "  return s.split('').reduce((acc, curr) => {\n    return curr.charCodeAt(0)\
    \ >= 65 && curr.charCodeAt(0) <= 90\n      ? acc + curr.charCodeAt(0)\n      :\
    \ acc;\n  }, 0);\n}\n\nconsole.log(digitSum('abcCd'));\nconsole.log(digitSum('abAB'));\n\
    console.log(digitSum('woArBld'));\nconsole.log(digitSum('aAaaaXa'));", "    //\
    \ first way is using ASCII values and ternary statement\n    // return s.split('').reduce((acc,\
    \ val) => acc + (val.charCodeAt(0) > 64 && val.charCodeAt(0) < 91 ? val.charCodeAt(0)\
    \ : 0), 0);\n    // second way is using regex\n    // return s.split('').reduce((acc,\
    \ val) => acc + (val.match(/[A-Z]/) ? val.charCodeAt(0) : 0), 0);\n    // third\
    \ way is using regex and replace method\n    return s.replace(/[^A-Z]/g, '').split('').reduce((acc,\
    \ val) => acc + val.charCodeAt(0), 0);\n}\n", "  let res = 0;\n  for (let i =\
    \ 0; i < s.length; i++) {\n    let code = s.charCodeAt(i);\n    if (code > 64\
    \ && code < 91) {\n      res += code;\n    }\n  }\n  return res;\n}\n", "    //\
    \ let charArr = s.split('')\n    // let result = 0;\n    // for (let i = 0; i\
    \ < charArr.length; i++) {\n    //     if (charArr[i] === charArr[i].toUpperCase())\
    \ {\n    //         result += charArr[i].charCodeAt(0)\n    //     }\n    // }\n\
    \    // return result;\n    return s.split('').reduce((result, val) => {\n   \
    \     if (val === val.toUpperCase()) {\n            result += val.charCodeAt(0)\n\
    \        }\n        return result;\n    }, 0)\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) > 90) {\n      continue;\n\
    \    }\n    sum += s.charCodeAt(i);\n  }\n  return sum;\n}\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n",
  "    const sum: number = s.split('').reduce((acc, cur) => {\n        if (cur ===\
    \ cur.toUpperCase()) {\n            acc += cur.charCodeAt(0);\n        }\n   \
    \     return acc;\n    }, 0);\n    return sum;\n}\n\nexport { digitSum };", " \
    \ let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    let char = s.charCodeAt(i);\n\
    \    if (char >= 65 && char <= 90) {\n      sum += char;\n    }\n  }\n  return\
    \ sum;\n}\n", "    let sum: number = 0;\n    s.split('').forEach(item => {\n \
    \       if (item.charCodeAt(0) < 97) {\n            sum += item.charCodeAt(0);\n\
    \        }\n    });\n    return sum;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < s.length; i++) {\n    let code = s.charCodeAt(i);\n    if (code >= 65 &&\
    \ code <= 90) {\n      sum += code;\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));",
  "  const sum = (a: number, b: number) => a + b;\n  return s.split('').map(x => x.charCodeAt(0)).filter(x\
    \ => x < 91 && x > 64).reduce(sum, 0);\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));",
  "  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i)\
    \ >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n\
    \  return sum;\n}\nconsole.log(digitSum(\"woArBld\"));\n", "    let sum = 0;\n\
    \    s.split('').forEach(char => {\n        if (char.charCodeAt(0) >= 65 && char.charCodeAt(0)\
    \ <= 90) {\n            sum += char.charCodeAt(0);\n        }\n    });\n    return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\")); // 0\nconsole.log(digitSum(\"abAB\"\
    )); // 131\nconsole.log(digitSum(\"abcCd\")); // 67\nconsole.log(digitSum(\"helloE\"\
    )); // 69\nconsole.log(digitSum(\"woArBld\")); // 131\nconsole.log(digitSum(\"\
    aAaaaXa\")); // 153", "    let total: number = 0;\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        total += s.charCodeAt(i);\n        }\n    }\n    return total;\n}\n\n\
    console.log(digitSum('abAB'));\nconsole.log(digitSum('abcCd'));\nconsole.log(digitSum('helloE'));\n\
    console.log(digitSum('woArBld'));\nconsole.log(digitSum('aAaaaXa'));\nconsole.log(digitSum('BBBBB'));\n\
    console.log(digitSum('BBBBBy'));\nconsole.log(digitSum('BBBBBzz'));\nconsole.log(digitSum('BBBBBzzz'));\n\
    console.log(digitSum('BBBBBzzzz'));\nconsole.log(digitSum('BBBBBzzzzz'));\nconsole.log(digitSum('BBBBBzzzzzz'));\n\
    console.log(digitSum('BBBBBzzzzzzz'));\nconsole.log(digitSum('BBBBBzzzzzzzz'));\n\
    console.log(digitSum('BBBBBzzzzzzzzz'));\nconsole.log(digitSum('BBBBBzzzzzzzzzz'));\n\
    console.log(digitSum('BBBBBzzzzzzzzzzz'));\nconsole.log(digitSum('BBBBBzzzzzzzzzzzz'));\n\
    console.log(digitSum('BBBBBzzzzzzzzzzzzz'));\nconsole.log(digitSum('BBBBBzzzzzzzzzzzzzz'));\n\
    console.log(digitSum('BBBBBzzzzzzzzzzzzzzz'));\nconsole.log(digitSum('BBBBBzzzzzzzzzzzzzzzz'));\n\
    console.log(digitSum('BBBBBzzzzzzzzzzzzzzzzz'));\nconsole.log(digitSum('BBBBBzzzzzzzzzzzzzzzzzz'));\n\
    console.log(digitSum('BBBBBzzzzzzzzzzzzzzzzzzz'));\nconsole.log(digitSum", " \
    \ const string = s.split('');\n  let total = 0;\n  for (let i = 0; i < string.length;\
    \ i++) {\n    let code = string[i].charCodeAt(0);\n    if (code >= 65 && code\
    \ <= 90) {\n      total += code;\n    }\n  }\n  return total;\n}\nconsole.log(digitSum(\"\
    aAaaaXa\"));", "  return s.split('').reduce((a, b) => a + (b.charCodeAt(0) >=\
    \ 'A'.charCodeAt(0) && b.charCodeAt(0) <= 'Z'.charCodeAt(0) ? b.charCodeAt(0)\
    \ : 0), 0);\n}\n\nexport default digitSum;", "    const asc: number[] = [];\n\
    \    const arr = s.split('').map(s => s.charCodeAt(0));\n    const numArr = arr.filter(num\
    \ => {\n        if (num >= 65 && num <= 90) {\n            asc.push(num);\n  \
    \      }\n    });\n    return asc.reduce((a, b) => a + b, 0);\n}\nconsole.log(digitSum('abAB'));\n\
    console.log(digitSum('woArBld'));\nconsole.log(digitSum('aAaaaXa'));\n", "   \
    \ let sum = 0;\n    s.split('').forEach(el => {\n        if (el === el.toUpperCase())\
    \ {\n            sum += el.charCodeAt(0);\n        }\n    });\n    return sum;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const ascii\
    \ = s.charCodeAt(i);\n    if (ascii > 64 && ascii < 91) {\n      sum += ascii;\n\
    \    }\n  }\n  return sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));",
  "  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i)\
    \ >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n\
    \  return sum;\n}\nconsole.log(digitSum(\"woArBld\"));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

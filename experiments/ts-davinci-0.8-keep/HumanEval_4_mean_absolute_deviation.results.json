{
  "language": "ts",
  "name": "HumanEval_4_mean_absolute_deviation",
  "results": [
    {
      "exit_code": 0,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n  if (numbers.length === 0) {\n    return 0;\n  }\n  const average = (numbers.reduce((x, y) => x + y) / numbers.length);\n  const dev = numbers.map(x => x - average);\n  const absDev = dev.map(x => Math.abs(x));\n  return absDev.reduce((x, y) => x + y) / absDev.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n  var mean = mean_(numbers),\n    deviations = numbers.map(function(x) {\n      return Math.abs(x - mean);\n    });\n  return mean_(deviations);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpyigvfi2l.ts(9,14): error TS2552: Cannot find name 'mean_'. Did you mean 'mean'?\n../../../../tmp/tmpyigvfi2l.ts(13,10): error TS2552: Cannot find name 'mean_'. Did you mean 'mean'?\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n  //Calculate mean\n  const mean = mean_arithmetic(numbers);\n  const absolute_differences = [];\n  //Calculate absolute difference for each number and mean\n  for (let i = 0; i < numbers.length; i++) {\n    absolute_differences.push(Math.abs(numbers[i] - mean));\n  }\n  //Return average absolute difference\n  return sum(absolute_differences) / absolute_differences.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp83nojdkh.ts(10,16): error TS2304: Cannot find name 'mean_arithmetic'.\n../../../../tmp/tmp83nojdkh.ts(17,10): error TS2304: Cannot find name 'sum'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n  return mean(numbers.map(x => Math.abs(x - mean(numbers))));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpgq14x_lw.ts(9,10): error TS2304: Cannot find name 'mean'.\n../../../../tmp/tmpgq14x_lw.ts(9,45): error TS2304: Cannot find name 'mean'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n  var size = numbers.length;\n  var xbar = mean(numbers);\n  var deviation_sum = 0;\n  var abs = Math.abs;\n  for (var i = 0; i < size; i++) {\n    deviation_sum += abs(numbers[i] - xbar);\n  }\n  return deviation_sum / size;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpfaup482o.ts(10,14): error TS2304: Cannot find name 'mean'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n  let mean = mean_(numbers);\n  return mean_(numbers.map(n => Math.abs(n - mean)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpnkdulf4t.ts(9,14): error TS2552: Cannot find name 'mean_'. Did you mean 'mean'?\n../../../../tmp/tmpnkdulf4t.ts(10,10): error TS2552: Cannot find name 'mean_'. Did you mean 'mean'?\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n    let sum = 0;\n    const mean = arithmetic_mean(numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        sum += Math.abs(numbers[i] - mean);\n    }\n    return sum / numbers.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpq0j2wbtp.ts(10,18): error TS2304: Cannot find name 'arithmetic_mean'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n  let sum: number = 0;\n  let mean: number = 0;\n  let count: number = 0;\n  let mean_abs_dev: number = 0;\n  //console.log(numbers);\n  //Console.error(\"in mean absolute deviation\");\n  if (numbers.length > 0) {\n    //console.log(numbers);\n    //mean = numbers.reduce((previous, current) => current += previous);\n    mean = sum_elements(numbers);\n    //console.log(mean);\n    mean = mean / numbers.length;\n    //console.log(mean);\n    for (let i = 0; i < numbers.length; i++) {\n      sum += Math.abs(numbers[i] - mean);\n      count++;\n    }\n    mean_abs_dev = sum / count;\n  }\n  return mean_abs_dev;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmptnhp4dv9.ts(18,12): error TS2304: Cannot find name 'sum_elements'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n    var nums = numbers.length;\n    var sum = 0;\n    for (var i = 0; i < nums; i++) {\n        sum += numbers[i];\n    }\n    var mean = sum / nums;\n    var abs_diffs = new Array(nums);\n    for (var i = 0; i < nums; i++) {\n        abs_diffs[i] = Math.abs(numbers[i] - mean);\n    }\n    return arithmetic_mean(abs_diffs);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpx2885xct.ts(19,12): error TS2304: Cannot find name 'arithmetic_mean'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n    let mean = mean_average(numbers);\n    return sum(numbers.map(x => Math.abs(x - mean))) / numbers.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmplix73vo9.ts(9,16): error TS2304: Cannot find name 'mean_average'.\n../../../../tmp/tmplix73vo9.ts(10,12): error TS2304: Cannot find name 'sum'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n  let mean = mean_of_numbers(numbers);\n  return mean_of_numbers(numbers.map(val => Math.abs(val - mean)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpeeehnjwo.ts(9,14): error TS2304: Cannot find name 'mean_of_numbers'.\n../../../../tmp/tmpeeehnjwo.ts(10,10): error TS2304: Cannot find name 'mean_of_numbers'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 0,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n    // Average of a list of numbers\n    const mean = numbers.reduce((a, b) => a + b, 0) / numbers.length;\n    // Difference of numbers from the mean\n    const dev_numbers = numbers.map(number => Math.abs(number - mean));\n    // Average difference of numbers from the mean\n    return dev_numbers.reduce((a, b) => a + b, 0) / dev_numbers.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n    return mean(numbers.map(function(num) {\n        return Math.abs(num - mean(numbers));\n    }));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpm1j4l_ip.ts(9,12): error TS2304: Cannot find name 'mean'.\n../../../../tmp/tmpm1j4l_ip.ts(10,31): error TS2304: Cannot find name 'mean'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n  const average = mean(numbers);\n  return average_deviation(numbers, average);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp_yxt99mx.ts(9,19): error TS2304: Cannot find name 'mean'.\n../../../../tmp/tmp_yxt99mx.ts(10,10): error TS2304: Cannot find name 'average_deviation'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n    var mean = mean_arithmetic(numbers);\n    var abs_deviations = numbers.map(function (num) {\n        return Math.abs(num - mean);\n    });\n    return mean_arithmetic(abs_deviations);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpa68pzaek.ts(9,16): error TS2304: Cannot find name 'mean_arithmetic'.\n../../../../tmp/tmpa68pzaek.ts(13,12): error TS2304: Cannot find name 'mean_arithmetic'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n  if (numbers.length === 0) {\n    return 0;\n  }\n  const mean = mean_simple(numbers);\n  return sum(numbers.map(x => Math.abs(x - mean))) / numbers.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpfw89r45r.ts(12,16): error TS2304: Cannot find name 'mean_simple'.\n../../../../tmp/tmpfw89r45r.ts(13,10): error TS2304: Cannot find name 'sum'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 0,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n  const n = numbers.length;\n  let sum = 0;\n  let mean = 0;\n  for (let i = 0; i < n; i++) {\n    sum += numbers[i];\n  }\n  mean = sum / n;\n  sum = 0;\n  for (let i = 0; i < n; i++) {\n    sum += Math.abs(numbers[i] - mean);\n  }\n  return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333654
    },
    {
      "exit_code": 0,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n  const mean: number = numbers.reduce((acc, number) => {\n    return acc + number;\n  }, 0) / numbers.length;\n\n  const absolute_deviations: number[] = numbers.map(number => {\n    return Math.abs(number - mean);\n  });\n\n  return absolute_deviations.reduce((acc, number) => {\n    return acc + number;\n  }, 0) / absolute_deviations.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333654
    },
    {
      "exit_code": 2,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n    var mean = mean_numbers(numbers);\n    var deviations = [];\n    for (var i = 0; i < numbers.length; i++) {\n        deviations.push(Math.abs(numbers[i] - mean));\n    }\n    return mean_numbers(deviations);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpk51g0ek3.ts(9,16): error TS2304: Cannot find name 'mean_numbers'.\n../../../../tmp/tmpk51g0ek3.ts(14,12): error TS2304: Cannot find name 'mean_numbers'.\n",
      "timestamp": 1660333654
    },
    {
      "exit_code": 1,
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n    var mean = mean(numbers);\n    return mean(numbers.map(function (x) { return Math.abs(x - mean); }));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();",
      "status": "Exception",
      "stderr": "/tmp/tmp48lpk86v.js:9\n    var mean = mean(numbers);\n               ^\n\nTypeError: mean is not a function\n    at mean_absolute_deviation (/tmp/tmp48lpk86v.js:9:16)\n    at test (/tmp/tmp48lpk86v.js:15:22)\n    at Object.<anonymous> (/tmp/tmp48lpk86v.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333654
    }
  ]
}
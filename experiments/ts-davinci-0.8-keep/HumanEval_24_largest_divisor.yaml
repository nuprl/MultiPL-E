name: HumanEval_24_largest_divisor
language: ts
prompt: "//For a given number n, find the largest number that divides n evenly, smaller\
  \ than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n: number):\
  \ number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
  \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
  \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
completions: ["    //your code here\n    let res: number = 1;\n    let numDiv: number\
    \ = 0;\n    while (numDiv !== 1) {\n        numDiv = n / (res += 1);\n    }\n\
    \    return res;\n}\n", "    let divisor = n;\n    while (divisor > 0) {\n   \
    \     if (n % divisor === 0) {\n            return divisor;\n        }\n     \
    \   divisor--;\n    }\n    return divisor;\n}\n", "  for (let i = n - 1; i > 0;\
    \ i--) {\n    if (n % i === 0) {\n      return i;\n    }\n  }\n  return -1;\n\
    }\n", "  for (let i = n - 1; i > 0; i--) {\n    if (n % i === 0) {\n      return\
    \ i;\n    }\n  }\n  return 1;\n}\n", "  let i = n - 1;\n  while (i > 0) {\n  \
    \  if (n % i === 0) {\n      return i;\n    }\n    i--;\n  }\n  return i;\n}\n",
  "    let largest_divisor: number = 1;\n    for (let i = 2; i < n; i++) {\n     \
    \   if (n % i === 0) {\n            largest_divisor = i;\n        }\n    }\n \
    \   return largest_divisor;\n}", "  for (let i = n - 1; i > 0; i--) {\n    if\
    \ (n % i === 0) {\n      return i;\n    }\n  }\n  return n;\n}\n\nconsole.log(largest_divisor(15));",
  "    let max = Math.floor(n / 2);\n    for (let i = 2; i <= max; i++) {\n      \
    \  if (n % i === 0) {\n            return n / i;\n        }\n    }\n    return\
    \ 1;\n}\n", "    let largest: number = 0;\n    for (let x = 1; x < n; x++) {\n\
    \        if (n % x === 0) {\n            largest = x;\n        }\n    }\n    return\
    \ largest;\n}\n", "    let divisor = n - 1;\n    while (n % divisor !== 0) {\n\
    \        divisor--;\n    }\n    return divisor;\n}\n", "  return 0;\n}\n", " \
    \ let largestDivisor = 1;\n  for (let i = 1; i < n; i++) {\n    if (n % i ===\
    \ 0) {\n      largestDivisor = i;\n    }\n  }\n  return largestDivisor;\n}\n",
  "    let i = 1;\n    while (i < n) {\n        if (n % i === 0) {\n            let\
    \ largest_divisor = i;\n            i++;\n        } else {\n            i++;\n\
    \        }\n    }\n    return largest_divisor;\n}\nconsole.log(largest_divisor(15));\n",
  "  for (let i = n - 1; i > 0; i--) {\n    if (n % i === 0) {\n      return i;\n\
    \    }\n  }\n  return 1;\n}\n", "  let divisor = Math.floor(n / 2);\n  while (n\
    \ % divisor !== 0) {\n    divisor--;\n  }\n  return divisor;\n}\n", "    for (let\
    \ i = n - 1; i > 0; i--) {\n        if (n % i === 0) {\n            return i;\n\
    \        }\n    }\n    return 1;\n}\n", "    let divisor = 2;\n    while (n >\
    \ divisor) {\n        if (n % divisor == 0) {\n            n = n / divisor;\n\
    \            divisor = 2;\n        } else {\n            divisor += 1;\n     \
    \   }\n    }\n    return divisor;\n}\n", "    for (let i = n - 1; i > 0; i--)\
    \ {\n        if (n % i === 0) {\n            return i;\n        }\n    }\n   \
    \ return 1;\n}\n", "    // first check the number is valid, if not then return\
    \ -1\n    if (n <= 0) {\n        return -1;\n    }\n    let result = 1;\n    for\
    \ (let i = 2; i < n; i++) {\n        if (n % i === 0) {\n            result =\
    \ i;\n        }\n    }\n    return result;\n}\n", "    for (let i = n - 1; i >\
    \ 0; i--) {\n        if (n % i === 0) {\n            return i;\n        }\n  \
    \  }\n    return n;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

language: ts
name: HumanEval_60_sum_to_n
results:
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n    //\
    \ Your code here\n    return n * (n + 1) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n  return\
    \ n*(n+1)/2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n  return\
    \ n * (n + 1) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n  //\
    \  your code goes here\n  // return 0;\n  let sum = 0;\n  for (let i = 0; i <=\
    \ n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n    if\
    \ (n === 1) {\n        return 1;\n    } else {\n        return n + sum_to_n(n\
    \ - 1);\n    }\n}\n\nconsole.log(sum_to_n(1));\nconsole.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\n\
    console.log(sum_to_n(30));\nconsole.log(sum_to_n(100));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    15

    55

    465

    5050

    '
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n    let\
    \ sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n   \
    \ return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n  let\
    \ total: number = 0;\n  for (let i: number = 1; i <= n; i++) {\n    total += i;\n\
    \  }\n  return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n    return\
    \ n * (n + 1) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821488
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n    let\
    \ sum = 0;\n    let i = 1;\n    while (i <= n) {\n        sum = sum + i;\n   \
    \     i = i + 1;\n    }\n    return sum;\n}\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n  return\
    \ n * (n + 1) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n  if\
    \ (n == 1) {\n    return 1;\n  }\n  return n + sum_to_n(n - 1);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n    let\
    \ sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n   \
    \ return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821490
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n  //\
    \ TODO: You should implement sum_to_n\n  return 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpuiev_ljs.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuiev_ljs.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n  return\
    \ (n*(n+1))/2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821488
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n    return\
    \ (n * (n + 1)) / 2;\n}\nconsole.log(sum_to_n(30));\nconsole.log(sum_to_n(100));\n\
    console.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\nconsole.log(sum_to_n(1));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '465

    5050

    15

    55

    1

    '
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n  let\
    \ sum: number = 0;\n  for (let i: number = 1; i <= n; i++) {\n    sum += i;\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821488
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n    return\
    \ n * (n + 1) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821488
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n    if\
    \ (n == 1) {\n        return 1;\n    }\n    else {\n        return n + sum_to_n(n\
    \ - 1);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n    let\
    \ sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n   \
    \ return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821490
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n    return\
    \ n * (n + 1) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821488

name: HumanEval_60_sum_to_n
language: ts
prompt: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
  // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
  // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n \
  \ assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
  \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
completions: ["    // Your code here\n    return n * (n + 1) / 2;\n}\n", "  return\
    \ n*(n+1)/2;\n}\n", "  return n * (n + 1) / 2;\n}\n", "  //  your code goes here\n\
    \  // return 0;\n  let sum = 0;\n  for (let i = 0; i <= n; i++) {\n    sum +=\
    \ i;\n  }\n  return sum;\n}\n", "    if (n === 1) {\n        return 1;\n    }\
    \ else {\n        return n + sum_to_n(n - 1);\n    }\n}\n\nconsole.log(sum_to_n(1));\n\
    console.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\nconsole.log(sum_to_n(30));\n\
    console.log(sum_to_n(100));\n", "    let sum = 0;\n    for (let i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\n", "  let total: number\
    \ = 0;\n  for (let i: number = 1; i <= n; i++) {\n    total += i;\n  }\n  return\
    \ total;\n}\n", "    return n * (n + 1) / 2;\n}\n", "    let sum = 0;\n    let\
    \ i = 1;\n    while (i <= n) {\n        sum = sum + i;\n        i = i + 1;\n \
    \   }\n    return sum;\n}", "  return n * (n + 1) / 2;\n}\n", "  if (n == 1) {\n\
    \    return 1;\n  }\n  return n + sum_to_n(n - 1);\n}\n", "    let sum = 0;\n\
    \    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n\
    }\n", "  // TODO: You should implement sum_to_n\n  return 0;\n}\n", "  return\
    \ (n*(n+1))/2;\n}\n", "    return (n * (n + 1)) / 2;\n}\nconsole.log(sum_to_n(30));\n\
    console.log(sum_to_n(100));\nconsole.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\n\
    console.log(sum_to_n(1));\n", "  let sum: number = 0;\n  for (let i: number =\
    \ 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n", "    return n *\
    \ (n + 1) / 2;\n}\n", "    if (n == 1) {\n        return 1;\n    }\n    else {\n\
    \        return n + sum_to_n(n - 1);\n    }\n}\n", "    let sum = 0;\n    for\
    \ (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
  "    return n * (n + 1) / 2;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

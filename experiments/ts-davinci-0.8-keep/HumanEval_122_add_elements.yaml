name: HumanEval_122_add_elements
language: ts
prompt: "//Given a non-empty array of integers arr and an integer k, return\n// the\
  \ sum of the elements with at most two digits from the first k elements of arr.\n\
  // Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output: 24 # sum\
  \ of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
  function add_elements(arr: number[], k: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = add_elements;\n  assert.deepEqual(candidate([1, -2,\
  \ -3, 41, 57, 76, 87, 88, 99], 3),-4);\n  assert.deepEqual(candidate([111, 121,\
  \ 3, 4000, 5, 6], 2),0);\n  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7,\
  \ 8, 9], 4),125);\n  assert.deepEqual(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
  \ 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n}\n\ntest();"
completions: ["    let sum = 0;\n    if (arr.length === 0) {\n        return sum;\n\
    \    }\n    for (let i = 0; i < k; i++) {\n        if (arr[i] < 10) {\n      \
    \      sum += arr[i];\n        } else if (arr[i] < 100) {\n            sum +=\
    \ arr[i];\n        }\n    }\n    return sum;\n}\n", "  let result = 0;\n  for\
    \ (let i = 0; i < k; i++) {\n    const num = arr[i];\n    // O(n)\n    if (num\
    \ < 100) {\n      result += num;\n    }\n  }\n  return result;\n}\n\nconsole.log(add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4));", "  return arr.slice(0, k).filter(num =>\
    \ num <= 99).reduce((total, curr) => total + curr, 0);\n}\nconsole.log(add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4));\n", "    let sum = 0;\n    for (let i = 0;\
    \ i < k; i++) {\n        let num = arr[i];\n        if (num < 10) {\n        \
    \    sum += num;\n        } else if (num < 100) {\n            sum += num;\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(add_elements([111, 21, 3,\
    \ 4000, 5, 6, 7, 8, 9], 4));", "    let sum = 0;\n    for (let i = 0; i < k; i++)\
    \ {\n        let item = arr[i];\n        if (item >= 10 && item < 100) {\n   \
    \         sum += item;\n        }\n    }\n    return sum;\n}\n\nconsole.log(add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4));", "  let sum = 0;\n  let count = 0;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (count < k) {\n      if (arr[i] <\
    \ 10) {\n        sum += arr[i];\n        count++;\n      } else if (arr[i] < 100)\
    \ {\n        sum += arr[i];\n        count++;\n      }\n    }\n  }\n  return sum;\n\
    }\nconsole.log(add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4));", "    let\
    \ retVal: number = 0;\n    let count: number = 0;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (count === k) {\n            break;\n        }\n        if\
    \ (arr[i] < 100) {\n            retVal += arr[i];\n            count++;\n    \
    \    }\n    }\n    return retVal;\n}\n", "    // sum\n    let sum = 0;\n    //\
    \ add numbers with two digits or less\n    for (let i = 0; i < k; i++) {\n   \
    \     if (arr[i] < 100) {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}\n\nconsole.log(add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4));",
  "    if (arr.length == 0) {\n        return 0;\n    }\n    let i = 0;\n    let count\
    \ = 0;\n    let sum = 0;\n    while (count < k) {\n        if (arr[i] < 100) {\n\
    \            sum += arr[i];\n            count++;\n        }\n        i++;\n \
    \   }\n    return sum;\n}\n\nconsole.log(add_elements([111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4));\n", "  // create array of digits\n  const digits = arr.map(num\
    \ => Array.from(String(num), Number));\n  // initialize sum\n  let sum = 0;\n\
    \  // loop through first k elements of digits\n  for (let i = 0; i < k; i++) {\n\
    \    // if length of number is greater than 2\n    if (digits[i].length > 2) {\n\
    \      // then take first 2 digits\n      sum += Number(digits[i].slice(0, 2).join(\"\
    \"));\n    } else {\n      // else add the number\n      sum += digits[i].join(\"\
    \");\n    }\n  }\n  return sum;\n}\nconsole.log(add_elements([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4));\n", "    let sum = 0;\n    const length = arr.length;\n\
    \    for (let i = 0; i < length; i++) {\n        if (i < k) {\n            const\
    \ element = arr[i];\n            if (element > 9 && element < 100) {\n       \
    \         sum += element;\n            }\n        }\n    }\n    return sum;\n\
    }\nconsole.log(add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4));\nconsole.log(add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4));\n", "    // Your code here\n    let result\
    \ = 0;\n    for (let i = 0; i < k; i++) {\n        if (arr[i] < 100) {\n     \
    \       result += arr[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4));", "    return arr.slice(0, k).filter(a =>\
    \ a < 100).reduce((sum, n) => sum + n, 0);\n}\n", "  return arr.reduce((acc, curr,\
    \ index) => {\n    if (index === k) return acc;\n    if (curr < 100) {\n     \
    \ return acc + curr;\n    }\n    return acc;\n  }, 0);\n}\n", "  const result:\
    \ number[] = [];\n  for (let i = 0; i < k; i++) {\n    if (arr[i] < 10) {\n  \
    \    result.push(arr[i]);\n    } else if (arr[i] < 100) {\n      result.push(arr[i]);\n\
    \    }\n  }\n  let sum = 0;\n  for (let j = 0; j < result.length; j++) {\n   \
    \ sum += result[j];\n  }\n  return sum;\n}\nconsole.log(add_elements([111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 4));", "  let sum = 0;\n  for (let i = 0; i < k; i++)\
    \ {\n    if (arr[i] < 100) {\n      sum += arr[i];\n    }\n  }\n  return sum;\n\
    }\n", "    let sum = 0;\n    for (let i = 0; i < k; i++) {\n        if (arr[i]\
    \ < 10) {\n            sum += arr[i];\n        } else if (arr[i] < 100) {\n  \
    \          sum += arr[i];\n        }\n    }\n    return sum;\n}\n", "    let result\
    \ = 0;\n    const arrLength = arr.length;\n    for (let i = 0; i < arrLength;\
    \ i++) {\n        if (i < k) {\n            if (arr[i] < 100) {\n            \
    \    result += arr[i];\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4));\nconsole.log(add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 5));\n", "  let sum = 0;\n  let counter = 0;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    let elem = arr[i];\n    if (elem\
    \ < 10) {\n      sum += elem;\n      counter++;\n    } else if (elem < 100) {\n\
    \      sum += elem;\n      counter++;\n    }\n    if (counter === k) break;\n\
    \  }\n  return sum;\n}\n\nconsole.log(add_elements([111, 21, 3, 4000, 5, 6, 7,\
    \ 8, 9], 4));", "    return arr.slice(0, k).filter(n => (n < 100)).reduce((acc,\
    \ n) => acc + n, 0);\n}\n\nconsole.log(add_elements([111, 21, 3, 4000, 5, 6, 7,\
    \ 8, 9], 4));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_72_will_it_fly
language: ts
prompt: "//Write a function that returns True if the object q will fly, and False\
  \ otherwise.\n// The object q will fly if it's balanced (it is a palindromic list)\
  \ and the sum of its elements is less than or equal the maximum possible weight\
  \ w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is less than\
  \ the maximum possible weight, but it's unbalanced.\n// will_it_fly([3, 2, 3], 1)\
  \ \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum possible\
  \ weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less than the\
  \ maximum possible weight, and it's balanced.\n// will_it_fly([3], 5) \u279E True\n\
  // # 3 is less than the maximum possible weight, and it's balanced.\nfunction will_it_fly(q:\
  \ number[], w: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = will_it_fly;\n  assert.deepEqual(candidate([3, 2,\
  \ 3], 9),true);\n  assert.deepEqual(candidate([1, 2], 5),false);\n  assert.deepEqual(candidate([3],\
  \ 5),true);\n  assert.deepEqual(candidate([3, 2, 3], 1),false);\n  assert.deepEqual(candidate([1,\
  \ 2, 3], 6),false);\n  assert.deepEqual(candidate([5], 5),true);\n}\n\ntest();"
completions: []
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_82_prime_length
language: ts
prompt: "//Write a function that takes a string and returns True if the string\n//\
  \ length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
  \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
  // prime_length('orange') == False\nfunction prime_length(string: string): boolean\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = prime_length;\n  assert.deepEqual(candidate(\"Hello\"\
  ),true);\n  assert.deepEqual(candidate(\"abcdcba\"),true);\n  assert.deepEqual(candidate(\"\
  kittens\"),true);\n  assert.deepEqual(candidate(\"orange\"),false);\n  assert.deepEqual(candidate(\"\
  wow\"),true);\n  assert.deepEqual(candidate(\"world\"),true);\n  assert.deepEqual(candidate(\"\
  MadaM\"),true);\n  assert.deepEqual(candidate(\"Wow\"),true);\n  assert.deepEqual(candidate(\"\
  \"),false);\n  assert.deepEqual(candidate(\"HI\"),true);\n  assert.deepEqual(candidate(\"\
  go\"),true);\n  assert.deepEqual(candidate(\"gogo\"),false);\n  assert.deepEqual(candidate(\"\
  aaaaaaaaaaaaaaa\"),false);\n  assert.deepEqual(candidate(\"Madam\"),true);\n  assert.deepEqual(candidate(\"\
  M\"),false);\n  assert.deepEqual(candidate(\"0\"),false);\n}\n\ntest();"
completions: ["    return isPrime(string.length);\n}\n", "  const length = string.length;\n\
    \  const primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97];\n  return primes.includes(length);\n}\n",
  "    const primes = [1, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101];\n    if (primes.includes(string.length))\
    \ {\n        return true;\n    }\n    return false;\n}\nconsole.log(prime_length('Hello'));\n\
    console.log(prime_length('abcdcba'));\nconsole.log(prime_length('kittens'));\n\
    console.log(prime_length('orange'));\n", "  return \"\";\n}\n", "    const prime_numbers\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199];\n    if (prime_numbers.includes(string.length))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n", " \
    \   let strLength = string.length;\n    let isPrime = true;\n    if (strLength\
    \ === 0 || strLength === 1) {\n        isPrime = false;\n    } else {\n      \
    \  for (let i = 2; i < strLength; i++) {\n            if (strLength % i === 0)\
    \ {\n                isPrime = false;\n                break;\n            }\n\
    \        }\n    }\n    return isPrime;\n}\n", "  const length = string.length;\n\
    \  const is_prime = length === 2 || length === 3 || length === 5 || length ===\
    \ 7;\n  return is_prime;\n}\n", "    //\n    // Your code here\n    //\n}\n\n\
    export {\n    fibonacci,\n    reverse,\n    is_palindrome,\n    prime_length\n\
    }", "  return isPrime(string.length);\n}\n", "  if (is_prime(string.length)) {\n\
    \    return true;\n  } else {\n    return false;\n  }\n}\n", "  return true;\n\
    }\n", "  // TODO: Implement this function.\n  return true;\n}\n", "    if (string.length\
    \ < 2) {\n        return false;\n    }\n    for (let i = 2; i < string.length;\
    \ i++) {\n        if (string.length % i === 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\nconsole.log(prime_length('Hello'));\n\
    console.log(prime_length('abcdcba'));\nconsole.log(prime_length('kittens'));\n\
    console.log(prime_length('orange'));\n", "    return isPrime(string.length);\n\
    }\n", "    let isPrime: boolean = true;\n    for (let i = 2; i < string.length;\
    \ i++) {\n        if (string.length % i === 0) {\n            isPrime = false;\n\
    \            break;\n        }\n    }\n    return isPrime;\n}\n\nconsole.log(prime_length('Hello'));\n\
    console.log(prime_length('abcdcba'));\nconsole.log(prime_length('kittens'));\n\
    console.log(prime_length('orange'));\n", "    if (string.length < 2) {\n     \
    \   return false;\n    }\n    for (let i = 2; i < string.length; i++) {\n    \
    \    if (string.length % i === 0) {\n            return false;\n        }\n  \
    \  }\n    return true;\n}\n", "    // Prime numbers 1 is not considered prime\n\
    \    const primeArray = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    const stringLength = string.length;\n\
    \    let primeStatus = false;\n    for (let i = 0; i < primeArray.length; i++)\
    \ {\n        if (stringLength === primeArray[i]) {\n            primeStatus =\
    \ true;\n        }\n    }\n    return primeStatus;\n}\nconsole.log(prime_length('Hello'));\n\
    console.log(prime_length('abcdcba'));\nconsole.log(prime_length('kittens'));\n\
    console.log(prime_length('orange'));\n", "  return isPrime(string.length);\n}\n\
    \nconsole.log(prime_length(\"Hello\"));\nconsole.log(prime_length(\"abcdcba\"\
    ));\nconsole.log(prime_length(\"kittens\"));\nconsole.log(prime_length(\"orange\"\
    ));\n", "  if (string.length === 2) {\n    return true;\n  } else if (string.length\
    \ <= 1) {\n    return false;\n  }\n  for (let i = 2; i < string.length; i++) {\n\
    \    if (string.length % i === 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "    if (string.length <= 1) {\n        return false;\n    }\n\n\
    \    let isPrime = true;\n    for (let i = 2; i < string.length; i++) {\n    \
    \    if (string.length % i === 0) {\n            isPrime = false;\n          \
    \  break;\n        }\n    }\n\n    return isPrime;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

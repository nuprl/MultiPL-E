language: py
name: HumanEval_145_order_by_points
results:
- exit_code: 1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    pass\n</cell>\n<text>\nExercise 4\n\n</text>\n<cell>\ndef\
    \ check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46,\
    \ 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n  \
    \  assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\
    \ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpfmvq8qi5.py\", line 15\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    nums_copy = list(nums)\n    sum_nums = 0\n    for num in\
    \ nums_copy:\n        sum_nums += num\n        nums_copy.remove(num)\n    nums_copy.sort(reverse=True)\n\
    \    nums_copy = [num for num in nums_copy if num != 0]\n    return nums_copy\
    \ + nums_copy[::-1]\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp050ive0c.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp050ive0c.py\", line 33,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp050ive0c.py\", line\
    \ 25, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    if not nums:\n        return []\n    nums_sum = [sum(i)\
    \ for i in nums]\n    nums_sum.sort()\n    nums.reverse()\n    return nums + nums_sum\n\
    \ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46,\
    \ 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n  \
    \  assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\
    \ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv928hd44.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpv928hd44.py\", line 30,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpv928hd44.py\", line\
    \ 22, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\n  File \"/tmp/tmpv928hd44.py\", line 16, in order_by_points\n    nums_sum\
    \ = [sum(i) for i in nums]\n  File \"/tmp/tmpv928hd44.py\", line 16, in <listcomp>\n\
    \    nums_sum = [sum(i) for i in nums]\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    # write your code here\n    result = []\n    sum_of_digits\
    \ = sum(nums)\n    sorted_by_sum = [num for num in nums if num+sum_of_digits >\
    \ 0]\n    sorted_by_sum.sort()\n    for num in sorted_by_sum:\n        result.append(num)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg_pb1mcy.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpg_pb1mcy.py\", line 32,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpg_pb1mcy.py\", line\
    \ 24, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: 1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    nums = sorted(nums)\n    digits = []\n    for i, n in enumerate(nums):\n\
    \        digits.append(int(str(n)[::-1]))\n    return sorted(nums, key=lambda\
    \ x: digits.index(x))\n\nnums = [1, 4, 3, -5, 7, 9, 6, 3, -4, 4]\norder_by_points(nums)\n\
    </cell>\n<text>\n2. Implement a function that can compute difference between any\
    \ two given numbers. That is, given two integers, find out how much one integer\
    \ is lesser than the other.\n\nExample 1:\n\nInput: num1 = 1, num2 = 6\nOutput:\
    \ 2\nExplanation: 6 is lesser than 1, because 6 has only one digit, and 1 has\
    \ none.\nExample 2:\n\nInput: num1 = 123, num2 = -2\nOutput: 32\nExplanation:\
    \ 123 is lesser than -2 because 123 has two digits, and -2 has none.\nNote:\n\n\
    Assume we are dealing with an environment which could only hold integers within\
    \ the 32-bit signed integer range: [\u2212231,  231 \u2212 1]. For the purpose\
    \ of this problem, assume that your function returns 0 when the two given integers\
    \ compare equal, and 1 when the first integer is greater, and \u22121 when the\
    \ second integer is greater.\nMake sure your function does not return garbage\
    \ values for the two given integers being compared unequal and not between different\
    \ numbers within the 32-bit signed integer range.\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp3ypmge1f.py\", line 38\n    Assume we are dealing with\
    \ an environment which could only hold integers within the 32-bit signed integer\
    \ range: [\u2212231,  231 \u2212 1]. For the purpose of this problem, assume that\
    \ your function returns 0 when the two given integers compare equal, and 1 when\
    \ the first integer is greater, and \u22121 when the second integer is greater.\n\
    \                                                                            \
    \                                          ^\nSyntaxError: invalid character '\u2212\
    ' (U+2212)\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpskmokxt_.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpskmokxt_.py\", line 25,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpskmokxt_.py\", line\
    \ 17, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    result = []\n    sum_of_digits = defaultdict(int)\n    for\
    \ i in nums:\n        sum_of_digits[i] += 1\n    sorted_list = sorted(nums, key=lambda\
    \ i: sum_of_digits[i])\n    for i,val in enumerate(nums):\n        if sum_of_digits[val]\
    \ == len(sum_of_digits):\n            result.append(val)\n        elif sum_of_digits[val]\
    \ == len(sum_of_digits) - 1:\n            insert_point = sorted_list.index(i)\n\
    \            insert_val = sorted_list[insert_point]\n            result.append(insert_val)\n\
    \        else:\n            insert_point = sum_of_digits[val]\n            insert_val\
    \ = sorted_list[insert_point]\n            result.append(insert_val)\n       \
    \     insert_point = sum_of_digits[insert_val]\n            insert_val = sorted_list[insert_point]\n\
    \            result.append(insert_val)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn1eo9jqi.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpn1eo9jqi.py\", line 44,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpn1eo9jqi.py\", line\
    \ 36, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\n  File \"/tmp/tmpn1eo9jqi.py\", line 15, in order_by_points\n    sum_of_digits\
    \ = defaultdict(int)\nNameError: name 'defaultdict' is not defined\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    nums = sorted(nums, key=lambda x: (sum(int(d) for d in str(x)),x))\n\
    \    return nums\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi2vj7rdp.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpi2vj7rdp.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpi2vj7rdp.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\n  File \"/tmp/tmpi2vj7rdp.py\", line 14, in order_by_points\n    nums =\
    \ sorted(nums, key=lambda x: (sum(int(d) for d in str(x)),x))\n  File \"/tmp/tmpi2vj7rdp.py\"\
    , line 14, in <lambda>\n    nums = sorted(nums, key=lambda x: (sum(int(d) for\
    \ d in str(x)),x))\n  File \"/tmp/tmpi2vj7rdp.py\", line 14, in <genexpr>\n  \
    \  nums = sorted(nums, key=lambda x: (sum(int(d) for d in str(x)),x))\nValueError:\
    \ invalid literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    result = []\n    sum_of_digits = [0] * 10\n    for i, num\
    \ in enumerate(nums):\n        sum_of_digits = [sum(i) for i in zip(sum_of_digits,\
    \ list(str(num))) if i != 0]\n        result.append(sum_of_digits.index(max(sum_of_digits))\
    \ + i)\n    return result\n\ndef check(candidate):\n    assert candidate([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n   \
    \ assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23,\
    \ 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj3755ize.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpj3755ize.py\", line 30,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpj3755ize.py\", line\
    \ 22, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\n  File \"/tmp/tmpj3755ize.py\", line 17, in order_by_points\n    sum_of_digits\
    \ = [sum(i) for i in zip(sum_of_digits, list(str(num))) if i != 0]\n  File \"\
    /tmp/tmpj3755ize.py\", line 17, in <listcomp>\n    sum_of_digits = [sum(i) for\
    \ i in zip(sum_of_digits, list(str(num))) if i != 0]\nTypeError: unsupported operand\
    \ type(s) for +: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    ...\n\ndef check(candidate):\n    assert candidate([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n   \
    \ assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23,\
    \ 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd5ivyffh.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpd5ivyffh.py\", line 25,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpd5ivyffh.py\", line\
    \ 17, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpskmokxt_.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpskmokxt_.py\", line 25,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpskmokxt_.py\", line\
    \ 17, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    from collections import defaultdict\n\n    points: List[int]\
    \ = defaultdict(int)\n    for num in nums:\n        points[num] += 1\n\n    result:\
    \ List[int] = []\n    for i, num in enumerate(nums):\n        result.append(num)\n\
    \        result.append(i)\n    return sorted(result, key=lambda i: points[i])\n\
    \ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46,\
    \ 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n  \
    \  assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\
    \ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpljf24n2k.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpljf24n2k.py\", line 35,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpljf24n2k.py\", line\
    \ 27, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    sum_nums = sum(nums)\n    res = []\n    index = 0\n    i\
    \ = 0\n    for num in nums:\n        sum_nums += num\n        res.append(sum_nums)\n\
    \        if sum_nums > 100:\n            sum_nums = 0\n            i += 1\n  \
    \      elif sum_nums < 100:\n            index -= 1\n            sum_nums = 0\n\
    \    res.insert(index, i)\n    return res\n\ndef check(candidate):\n    assert\
    \ candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([])\
    \ == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32,\
    \ -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6,\
    \ -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7b1sqziz.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp7b1sqziz.py\", line 39,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp7b1sqziz.py\", line\
    \ 31, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    if len(nums) == 0:\n        return []\n    nums = sorted(nums)\n\
    \    tot = 0\n    for n in nums:\n        tot += n\n    return nums if tot ==\
    \ 0 else nums\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpirobdpok.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpirobdpok.py\", line 31,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpirobdpok.py\", line\
    \ 23, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: 1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    \n    sum_digits = []\n    numbers = []\n    for num in\
    \ nums:\n        sum_digits.append(num % 10)\n        numbers.append(num)\n  \
    \  \n    sorted_numbers = numbers + sorted(sum_digits)\n    sorted_numbers = [num\
    \ for num in sorted_numbers if num > 0]\n    sorted_numbers.sort()\n    \n   \
    \ return sorted_numbers\n</cell>\n<cell>\nassert order_by_points([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\nassert order_by_points([]) == []\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns a list of all even numbers in\
    \ the given list.\n\nFor example:\n>>> even_numbers([1, 10, 2, 3, 4]) ==  [2,\
    \ 4, 6]\n\n</text>\n<cell>\ndef check(candidate):\n    assert candidate([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n   \
    \ assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23,\
    \ 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpr6gm3rjn.py\", line 26\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    def sort_digits(digits, index, result=[]):\n        if index\
    \ >= len(nums):\n            return result\n        digit = nums[index]\n    \
    \    tmp = sort_digits(digits, index + 1, result)\n        if digit not in tmp:\n\
    \            result.append(digit)\n        else:\n            tmp.insert(tmp.index(digit),\
    \ digit)\n        return result\n\n    return sort_digits([], 0)\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_hpg94pj.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp_hpg94pj.py\", line 36,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp_hpg94pj.py\", line\
    \ 28, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    nums_sorted = sorted(nums, reverse=True, key=lambda x: sum(map(int,str(x))))\n\
    \    return nums_sorted\n\ndef check(candidate):\n    assert candidate([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n   \
    \ assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23,\
    \ 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsb8pn7zv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpsb8pn7zv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpsb8pn7zv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\n  File \"/tmp/tmpsb8pn7zv.py\", line 14, in order_by_points\n    nums_sorted\
    \ = sorted(nums, reverse=True, key=lambda x: sum(map(int,str(x))))\n  File \"\
    /tmp/tmpsb8pn7zv.py\", line 14, in <lambda>\n    nums_sorted = sorted(nums, reverse=True,\
    \ key=lambda x: sum(map(int,str(x))))\nValueError: invalid literal for int() with\
    \ base 10: '-'\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    return sorted(nums, key=sum)\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz8mgicnq.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpz8mgicnq.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpz8mgicnq.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\n  File \"/tmp/tmpz8mgicnq.py\", line 14, in order_by_points\n    return\
    \ sorted(nums, key=sum)\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    nums = sorted(nums, reverse=True)\n    sums = [0]\n    for\
    \ num in nums:\n        sums.append(sums[-1] + num)\n    nums = [num for num,\
    \ sum in zip(nums, sums)]\n    return nums\n\ndef check(candidate):\n    assert\
    \ candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([])\
    \ == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32,\
    \ -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6,\
    \ -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyy3b2qi6.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpyy3b2qi6.py\", line 30,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpyy3b2qi6.py\", line\
    \ 22, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823405
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) ==\
    \ []\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpskmokxt_.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpskmokxt_.py\", line 25,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpskmokxt_.py\", line\
    \ 17, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823405

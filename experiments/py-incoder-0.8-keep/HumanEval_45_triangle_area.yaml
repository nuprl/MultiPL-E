name: HumanEval_45_triangle_area
language: py
prompt: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of a\
  \ side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n\
  \    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
  \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
  \ntest_check()\n"
completions: ["    area = (a ** 2 + h ** 2) ** 0.5\n    return area\n\n", "    return\
    \ a * (a * h / 2)\n\n", "    return float(a**2 - h**2)\n", "    return (a ** 2)\
    \ * h\n\n", "    return a * (1 - math.sqrt(h / a)) / 2\n\n", "    s = (a + h)\
    \ / 2\n    return math.sqrt(s * (s - a) * (s - h))\n\n", "    area_of_triangle_side\
    \ = (sqrt(a * a + h * h) - a) / 2\n    return area_of_triangle_side * area_of_triangle_side\n\
    \n", "    return a * h / 2\n", "    return abs(a * h / 2)\n\n", "    return a\
    \ * h / 2\n\n", "    return a * (a + h) * (a + h - 2)\n", "    return float(a\
    \ * h) / 2\n\n", "    return a * (a + h) * (1 + 2 * h)\n\n", "    return a * (a\
    \ + h) * 0.5\n\n", "    return a * (b - a) / 2 + h * a * b / 2\n\n", "    area_triangle\
    \ = 0.5 * triangle_side_length(a, h)  # 0.5 because length of a side of triangle\
    \ is half of high\n    return area_triangle\n\n", "    area: float = (float(h)\
    \ * float(a * 2) ** 2) / (4 * a)\n    return area\n\n", "    sides = a + h\n \
    \   return sides * (sides - 1) // 2\n\n", "    return a * (b - a) * (c - a) *\
    \ (d - b)\n\n", "    return a * (math.pi / 2)\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

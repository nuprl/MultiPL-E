name: HumanEval_101_words_string
language: py
results:
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.strip().replace(', ', ',').split()\n\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp116ne46d.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp116ne46d.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp116ne46d.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    return s.split(', ')\n</cell>\n<cell>\nwords_string('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\nwords_string('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    </cell>\n<text>\nList Comprehension\nThe second thing you will learn in this lab\
    \ is list comprehension, a way to perform list transformations quickly. This is\
    \ an important skill in Python that will greatly help you write better programs.\n\
    \nA list comprehension is very similar syntax to a for loop: it is a way to create\
    \ and filter lists. For example:\n\n\n</text>\n<cell>\nnums = [0, 1, 2, 3, 4]\n\
    even_num_to_square = [num**2 for num in nums]\nprint(even_num_to_square)\n</cell>\n\
    <cell>\nnums = [0, 1, 2, 3, 4]\neven_num_to_square = [num**2 for num in nums if\
    \ num % 2 == 0]\nprint(even_num_to_square)\n</cell>\n<text>\nList comprehensions\
    \ can be complex, but we will cover them in a future lab.\n\n\n</text>\n<text>\n\
    Nested List Comprehensions\nList comprehensions can also contain other list comprehensions\
    \ to create nested lists.\n\nFor example:\n\n\n</text>\n<cell>\nnums = [0, 1,\
    \ 2, 3, 4]\n[num**2 for num in nums]\n</cell>\n<cell>\n[x for x in range(10) if\
    \ x % 2 == 0]\n</cell>\n<cell>\neven_num_to_square = [num**2 for num in nums]\n\
    even_num_to_square = [num**2 for num in nums if num % 2 == 0]\nprint(even_num_to_square)\n\
    </cell>\n<text>\nTuples\nIf you need to pass more than one value to your function,\
    \ it is often a good idea to define a tuple:\n\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp13tudluc.py\", line 14\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Split the string into words\n    words = s.strip().split(\"\
    ,\")\n    # Return the words\n    return [word.strip() for word in words]\n\n\
    def check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi', 'my',\
    \ 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five, six')\
    \ == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwi7wnomd.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpwi7wnomd.py\", line 26,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpwi7wnomd.py\", line\
    \ 18, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # split the string into a list of words\n    # explode splits\
    \ words based on any whitespace\n    # split splits based on a pattern\n    #\
    \ strip is used to strip whitespace from the beginning and end of a string\n \
    \   # map maps functions to apply to each element of a list\n    # list creates\
    \ a list\n    return [word.strip() for word in s.split(',') if word != \"\"]\n\
    \ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl806uo0j.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpl806uo0j.py\", line 29,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpl806uo0j.py\", line\
    \ 21, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi4o7jn05.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpi4o7jn05.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpi4o7jn05.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.lower().replace(\" \",\"\").split(\",\")\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7wfisq6c.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp7wfisq6c.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp7wfisq6c.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Split the string into an array of words\n    return s.split()\n\
    \n\ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9vyg45zy.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp9vyg45zy.py\", line 25,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp9vyg45zy.py\", line\
    \ 17, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return [s.strip() for s in s.split(',') if s.strip()]\n\ndef\
    \ check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi', 'my',\
    \ 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five, six')\
    \ == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmj7w4d6q.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmj7w4d6q.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpmj7w4d6q.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(',', ' ').split()\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\",\")\n    return words\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7d7vwx1x.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp7d7vwx1x.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp7d7vwx1x.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Convert input to list.\n    a_list = list(s)\n\n    # Add\
    \ spaces to make strings into lists.\n    a_list = [a_list + \" \"]\n\n    # Remove\
    \ spaces from each element.\n    a_list = [a_list[:-1]]\n\n    # Return list.\n\
    \    return a_list\n</cell>\n<text>\nRun the following cell to test your code:\n\
    \n\n</text>\n<cell>\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp35pma_2y.py\", line 23\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\",\")\n    words = [word.strip() for word\
    \ in words]\n    return words\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp32ooubbc.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp32ooubbc.py\", line 25,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp32ooubbc.py\", line\
    \ 17, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.replace(' ', '').split(',')\n    return [word.strip()\
    \ for word in words]\n    \n    \n</cell>\n<cell>\nwords_string(\"Hi, my name\
    \ is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nwords_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpa4vc4e3u.py\", line 16\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate('Hi, my\
    \ name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8wyiqyai.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp8wyiqyai.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp8wyiqyai.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp97dqp6pz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp97dqp6pz.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp97dqp6pz.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy_11_0my.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpy_11_0my.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpy_11_0my.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    words_list = s.split(\",\")\n    \n    return words_list\n\
    \ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpurl3w_72.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpurl3w_72.py\", line 26,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpurl3w_72.py\", line\
    \ 18, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.replace(',', ' ').replace(';', ' ').replace('.',\
    \ ' ').replace('!', ' ').replace('?', '').replace(':', ' ').replace(';', ' ').replace('?',\
    \ ' ').replace('!', ' ').replace(':', ' ').replace('.', ' ').replace(',', ' ').replace(':',\
    \ ' ').replace(';', ' ').replace('?', '').replace('!', ' ').replace('.', '').replace('?',\
    \ '').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace(':', ' ').replace('?',\
    \ '').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace('?', ' ').replace(',',\
    \ '').replace('?', '').replace('!', ' ').replace(';', ' ').replace('.', '').replace(':',\
    \ ' ').replace('.', '').replace(';', ' ').replace(':', ' ').replace('?', ' ').replace('!',\
    \ ' ').replace(',', ' ').replace(':', ' ').replace(';', ' ').replace('?', ' ').replace('!',\
    \ ' ').replace(',', ' ').replace(':', ' ').replace(';', ' ').replace('!', ' ').replace(':',\
    \ ' ').replace(';', ' ').replace('.', '').replace(':', ' ').replace('?', ' ').replace(',',\
    \ ' ').replace('?', ' ').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace(',',\
    \ ' ').replace('?', ' ').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace(',',\
    \ ' ').replace('!', ' ').replace(':', ' ').replace('.', '').replace('?', '').replace(';',\
    \ ' ').replace('!', ' ').replace(',', ' ').replace('.', '').replace('.', '').replace(';',\
    \ ' ').replace(':', ' ').replace('.', '').replace(';', ' ').replace(':', ' ').replace('?',\
    \ ' ').replace('.', '').replace(',', ' ').replace(':', ' ').replace(';', ' ').replace(',',\
    \ ' ').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace('!', ' ').replace(':',\
    \ ' ').replace(';', ' ').replace(',', ' ').replace('?', ' ').replace('!', ' ').replace(':',\
    \ ' ').replace(';', ' ').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace(',',\
    \ ' ').replace('?', ' ').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace('!',\
    \ ' ').replace(':', ' ').replace(';', ' ').replace(',', ' ').replace('?', ' ').replace('!',\
    \ ' ').replace(':', ' ').replace(';', ' ').replace('!', ' ').replace(':', ' ').replace(';',\
    \ ' ').replace(',', ' ').replace('?', ' ').replace('!', ' ').replace(':', ' ').replace(';',\
    \ ' ').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace(',', ' ').replace('?',\
    \ ' ').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace('!', ' ').replace(':',\
    \ ' ').replace(';', ' ').replace(',', ' ').replace('?', ' ').replace('!', ' ').replace(':',\
    \ ' ').replace(';', ' ').replace('!', '\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpw30t8beq.py\", line 12\n    words = s.replace(',', ' ').replace(';',\
    \ ' ').replace('.', ' ').replace('!', ' ').replace('?', '').replace(':', ' ').replace(';',\
    \ ' ').replace('?', ' ').replace('!', ' ').replace(':', ' ').replace('.', ' ').replace(',',\
    \ ' ').replace(':', ' ').replace(';', ' ').replace('?', '').replace('!', ' ').replace('.',\
    \ '').replace('?', '').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace(':',\
    \ ' ').replace('?', '').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace('?',\
    \ ' ').replace(',', '').replace('?', '').replace('!', ' ').replace(';', ' ').replace('.',\
    \ '').replace(':', ' ').replace('.', '').replace(';', ' ').replace(':', ' ').replace('?',\
    \ ' ').replace('!', ' ').replace(',', ' ').replace(':', ' ').replace(';', ' ').replace('?',\
    \ ' ').replace('!', ' ').replace(',', ' ').replace(':', ' ').replace(';', ' ').replace('!',\
    \ ' ').replace(':', ' ').replace(';', ' ').replace('.', '').replace(':', ' ').replace('?',\
    \ ' ').replace(',', ' ').replace('?', ' ').replace('!', ' ').replace(':', ' ').replace(';',\
    \ ' ').replace(',', ' ').replace('?', ' ').replace('!', ' ').replace(':', ' ').replace(';',\
    \ ' ').replace(',', ' ').replace('!', ' ').replace(':', ' ').replace('.', '').replace('?',\
    \ '').replace(';', ' ').replace('!', ' ').replace(',', ' ').replace('.', '').replace('.',\
    \ '').replace(';', ' ').replace(':', ' ').replace('.', '').replace(';', ' ').replace(':',\
    \ ' ').replace('?', ' ').replace('.', '').replace(',', ' ').replace(':', ' ').replace(';',\
    \ ' ').replace(',', ' ').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace('!',\
    \ ' ').replace(':', ' ').replace(';', ' ').replace(',', ' ').replace('?', ' ').replace('!',\
    \ ' ').replace(':', ' ').replace(';', ' ').replace('!', ' ').replace(':', ' ').replace(';',\
    \ ' ').replace(',', ' ').replace('?', ' ').replace('!', ' ').replace(':', ' ').replace(';',\
    \ ' ').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace(',', ' ').replace('?',\
    \ ' ').replace('!', ' ').replace(':', ' ').replace(';', ' ').replace('!', ' ').replace(':',\
    \ '"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\",\")\n    # TODO 2a: Your code here\n   \
    \ return words\n\nassert words_string(\"Hi, my name is John\") == [\"Hi\", \"\
    my\", \"name\", \"is\", \"John\"]\nassert words_string(\"One, two, three, four,\
    \ five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\
    </cell>\n<text>\nTask 2b\nDefine a function called split_string which has the\
    \ following signature:\n\n\n</text>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp832mx9bt.py\", line 18\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # TODO: Write code here\n    return s.replace(' ','').split(',')\n\
    \ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpom8w6unz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpom8w6unz.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpom8w6unz.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    l = s.split(', ')\n    l = [s.strip() for s in l]\n    l =\
    \ [s.lower() for s in l]\n    return l\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpdis1u_sg.py\", line 16\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(',')\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptye803uo.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptye803uo.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmptye803uo.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    return s.strip().replace(\",\", \" \").split()\n\ndef\
    \ check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi', 'my',\
    \ 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five, six')\
    \ == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\",\")\n    words = [w.strip() for w in words]\n\
    \    return words\n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyg342wf8.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpyg342wf8.py\", line 25,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpyg342wf8.py\", line\
    \ 17, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx160cf9n.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpx160cf9n.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpx160cf9n.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    s = s.lower()\n    s = s.replace(',','')\n    s = s.replace('\
    \ ','')\n    s = s.split(',')\n    return s\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuar1h2do.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpuar1h2do.py\", line 27,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpuar1h2do.py\", line\
    \ 19, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.strip().split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpalqwom7k.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpalqwom7k.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpalqwom7k.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return [word for word in s.replace(\",\",\"\").split(\" \"\
    ) if word]\n\ndef check(candidate):\n    assert candidate('Hi, my name is John')\
    \ == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three,\
    \ four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert\
    \ candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.strip().split(',')\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpwsooa9pc.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = []\n    \n    # TODO Complete the function\n    for\
    \ word in s.split(','):\n        word = word.strip()\n        words.append(word)\n\
    \    return words\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp4td6fn62.py\", line 19\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkepzru5d.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpkepzru5d.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpkepzru5d.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.strip().replace(',', ' ').split()\n\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.strip().replace(',', ' ').split()\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return list(map(lambda x: x.strip(), s.strip().split(', ')))\n\
    \ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1_skv3ma.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp1_skv3ma.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp1_skv3ma.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(', ')\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfp4blmin.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfp4blmin.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpfp4blmin.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    lst = s.split(\",\")\n    \n    lst2 = []\n    for i in lst:\n\
    \        lst2.append(i.strip())\n    return lst2\n\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp03vlh8v1.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp03vlh8v1.py\", line 29,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp03vlh8v1.py\", line\
    \ 21, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.strip().replace(' ', ',').split(',')\n</cell>\n<cell>\n\
    assert len(words_string(\"Hi, my name is John\")) == 6\nassert len(words_string(\"\
    One, two, three, four, five, six\")) == 6\n</cell>\n<text>\nPractice\nCreate a\
    \ string with 11 random words. \nSplit the string into a list of words and capitalize\
    \ the first letter of each word.\nAppend the capitalized word list to the empty\
    \ list below called words.\nPrint the list out.\n\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp29qcvxbk.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(sep=\",\")\n    return words\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8j705exu.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp8j705exu.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp8j705exu.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # split string into words by commas\n    # word_list = s.split(',')\n\
    \    word_list = s.split(' ')\n    \n    return word_list\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppmq51mob.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmppmq51mob.py\", line 27,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmppmq51mob.py\", line\
    \ 19, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split()\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7510kpub.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp7510kpub.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp7510kpub.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    splits = s.split(\",\")\n    words = [s.strip() for s in splits]\n\
    \    return words\n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj7tr_ha4.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpj7tr_ha4.py\", line 25,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpj7tr_ha4.py\", line\
    \ 17, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Split the string by spaces.\n    s = s.replace(',', ' ')\n\
    \    words = s.split()\n    \n    return words\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Add your code here\n    s = s.replace(\",\",\" \")\n    words\
    \ = s.split(\" \")\n    return words\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp742ezw2p.py\", line 16\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate('Hi, my\
    \ name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfcl6x6up.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfcl6x6up.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpfcl6x6up.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    # Your code here\n    \n    return word_list.split(',')\n\
    \n\ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo08548_x.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpo08548_x.py\", line 27,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpo08548_x.py\", line\
    \ 19, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\n  File \"/tmp/tmpo08548_x.py\", line 15, in words_string\n  \
    \  return word_list.split(',')\nNameError: name 'word_list' is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(', ')\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpab5e9cso.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpab5e9cso.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpab5e9cso.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6ktze4n4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6ktze4n4.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp6ktze4n4.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.replace(',', ' ').split()\n    return words\n\ndef\
    \ check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi', 'my',\
    \ 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five, six')\
    \ == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(',', ' ').split()\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp1tr1_90j.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Add your code here\n    pass\n</cell>\n<text>\nPractice Test\
    \ Cases\nWhen you run the tests below, what do you think will happen when you\
    \ call words_string on different inputs?\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmphz6o8ue6.py\", line 14\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.strip().replace(\",\", \" \").split()\n    return\
    \ words\n\ndef check(candidate):\n    assert candidate('Hi, my name is John')\
    \ == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three,\
    \ four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert\
    \ candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\",\")\n    return words\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcndob7ss.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpcndob7ss.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpcndob7ss.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    # Your code here\n    words = s.replace(',', ' ').replace('.',\
    \ ' ').replace(';', ' ').replace(':', ' ').replace(';', '').replace('-', ' ').replace('-',\
    \ '').replace('-', ' ').replace('-', ' ').replace('-', '').replace('.', '').replace(',',\
    \ ' ').replace(' ', '').split(' ')\n    \n    return words\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkk9bjl0d.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpkk9bjl0d.py\", line 27,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpkk9bjl0d.py\", line\
    \ 19, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(sep=',')\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp78hrythr.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp78hrythr.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp78hrythr.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    ## TODO: convert the input string into a list of words\n  \
    \  pass\n\n\ndef check(candidate):\n    assert candidate('Hi, my name is John')\
    \ == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three,\
    \ four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert\
    \ candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8zm0_r8y.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp8zm0_r8y.py\", line 25,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp8zm0_r8y.py\", line\
    \ 17, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    return list(map(lambda x: x.split(','), s.split(',')))\n\
    \ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3uw1nk5o.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3uw1nk5o.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp3uw1nk5o.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split()\n\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0m5robr1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp0m5robr1.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp0m5robr1.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.replace(\",\", \" \").replace(\",\", \" \").split()\n\
    \    return words\n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    return s.split(\",\")\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2b7n0y6v.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp2b7n0y6v.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp2b7n0y6v.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Write your code here\n    return s.split(\",\")\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4wnf03ce.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp4wnf03ce.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp4wnf03ce.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.replace(\",\", \" \").replace(\"\\n\", \" \").split(\"\
    \ \")\n    words.sort()\n    return words\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4j72bh77.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp4j72bh77.py\", line 25,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp4j72bh77.py\", line\
    \ 17, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # BEGIN Practice implementation, do not modify.\n    return\
    \ s.replace(' ', '').split(',')\n    # END Practice implementation.\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiu4n8obd.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpiu4n8obd.py\", line 25,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpiu4n8obd.py\", line\
    \ 17, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\" \")\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxozm8vub.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpxozm8vub.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpxozm8vub.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Split the string by the delimiter\n    words = s.split()\n\
    \    return words\n\nassert words_string(\"Hi, my name is John\") == [\"Hi\",\
    \ \"my\", \"name\", \"is\", \"John\"]\nassert words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n\ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_shzqfgo.py\", line\
    \ 16, in <module>\n    assert words_string(\"Hi, my name is John\") == [\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    if s == \"\" or s is None: \n        return []\n\n    words=s.split(\"\
    ,\")\n\n    return words\n\ndef check(candidate):\n    assert candidate('Hi, my\
    \ name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp84kpo23h.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp84kpo23h.py\", line 28,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp84kpo23h.py\", line\
    \ 20, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(',')\n    return words\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpurbhk092.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpurbhk092.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpurbhk092.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\",\")\n    words_array = []\n    for word\
    \ in words:\n        words_array.append(word.strip().lower())\n    return words_array\n\
    \n\ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf_jmlymk.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpf_jmlymk.py\", line 28,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpf_jmlymk.py\", line\
    \ 20, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Your code here\n    return [word.strip() for word in s.split(',')]\n\
    \    \n\ndef check(candidate):\n    assert candidate('Hi, my name is John') ==\
    \ ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four,\
    \ five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc7amuzdr.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpc7amuzdr.py\", line 25,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpc7amuzdr.py\", line\
    \ 17, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(sep)\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbt4ok7cj.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpbt4ok7cj.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpbt4ok7cj.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\n  File \"/tmp/tmpbt4ok7cj.py\", line 12, in words_string\n  \
    \  return s.split(sep)\nNameError: name 'sep' is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # implement this function\n    \n    return []\n</cell>\n<cell>\n\
    assert words_string(\"Hello, World!\")==['Hello','World!']\nassert words_string(\"\
    Hello\") == []\nassert words_string(\"\") == []\n</cell>\n<text>\nIf you have\
    \ implemented the words_string function correctly, then your program should produce\
    \ the output:\n\n['Hello', 'World!']\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpvhwczkcp.py\", line 15\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.strip().split(',')\n    return [w for w in words]\n\
    \ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnlv8d4i2.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnlv8d4i2.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpnlv8d4i2.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return list(filter(None, re.split('[^a-zA-Z]+', s)))\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate('Hi, my name is John') ==\
    \ ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four,\
    \ five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpwuesltlu.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = []\n    for word in s.replace(',', '').split():\n \
    \       words.append(word.strip())\n    return words\n\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Your code here\n    return s.replace(' ', '').split(',')\n\
    \ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpml1ydlnz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpml1ydlnz.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpml1ydlnz.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    words = s.split(\" \")\n    \n    return words\n    \n\
    print(words_string(\"Hi, my name is John\"))\nprint(words_string(\"One, two, three,\
    \ four, five, six\"))\n</cell>\n<text>\nFinally write a function that can take\
    \ a word, and return its length.\n\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpwe_1ek6s.py\", line 19\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(' ')\n    \ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4a8ig7ps.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4a8ig7ps.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp4a8ig7ps.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(',')\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6mn41mu1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6mn41mu1.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp6mn41mu1.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(',')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_zdfyrb0.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_zdfyrb0.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp_zdfyrb0.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    l = s.split(\",\")\n    for i in range(len(l)):\n        if\
    \ l[i] == \"[\" or l[i] == \"]\":\n            l.insert(i,\"\")\n    return l\n\
    </cell>\n<cell>\ndef check(candidate):\n    assert candidate('Hi, my name is John')\
    \ == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three,\
    \ four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert\
    \ candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpxu55c8f7.py\", line 17\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(',')\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvijcq3bn.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpvijcq3bn.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpvijcq3bn.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\nassert words_string(\"Hi, my name\
    \ is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nassert words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp60tkcr7a.py\", line 16\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    # Split the string by space\n    words = s.split()\n\
    \    \n    # Turn the words into lower case\n    words = [word.lower() for word\
    \ in words]\n    \n    # Remove the commas and convert to lower case\n    words\
    \ = [word.lower() for word in words]\n    \n    # Remove the spaces from the start\
    \ and end of the list\n    words = [word.strip(\" \") for word in words]\n   \
    \ \n    return words\n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8msxpcwb.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp8msxpcwb.py\", line 36,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp8msxpcwb.py\", line\
    \ 28, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\nassert words_string(\"Hi, my name\
    \ is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nassert words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpst2soyj_.py\", line 16\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(',')\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxdyxl0wh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpxdyxl0wh.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpxdyxl0wh.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(',')\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7fxi1oij.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp7fxi1oij.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp7fxi1oij.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate('Hi, my\
    \ name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi0mqjc63.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpi0mqjc63.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpi0mqjc63.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(',')\n    if len(words) == 0 or len(words)\
    \ > 7:\n        return []\n    else:\n        return words\n    \ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfd0qhzkr.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpfd0qhzkr.py\", line 27,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpfd0qhzkr.py\", line\
    \ 19, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.strip().replace(\",\", \"\").split()\n    return\
    \ words\n\ndef check(candidate):\n    assert candidate('Hi, my name is John')\
    \ == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three,\
    \ four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert\
    \ candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    word_list = s.strip().split(',')\n    return word_list\n\n\
    def check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi', 'my',\
    \ 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five, six')\
    \ == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi664c7bp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpi664c7bp.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpi664c7bp.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(',', ' ').split()\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return [x for x in s.split(',')]\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2mh3w80.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmph2mh3w80.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmph2mh3w80.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\",\")\n    words = [x for x in words if x\
    \ != '']\n    return words\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa03ui3rb.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpa03ui3rb.py\", line 25,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpa03ui3rb.py\", line\
    \ 17, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words_list = s.strip().split(\",\")\n    return [word.strip()\
    \ for word in words_list]\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpad43qb6q.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpad43qb6q.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpad43qb6q.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    # Your code goes here\n    \n    # return sorted(s.lower().split(','))\n\
    \    \n    return sorted(s.split(','))\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpmswpg_fl.py\", line 18\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    if s == ',':\n        return []\n    else:\n        s = s.split()\n\
    \        return s\n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe0vw59ac.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpe0vw59ac.py\", line 27,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpe0vw59ac.py\", line\
    \ 19, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6a825lif.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp6a825lif.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp6a825lif.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\" \")\n    return words\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzpeqxygd.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpzpeqxygd.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpzpeqxygd.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return [x.strip() for x in s.split(',')]\n\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfc1v3bm_.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpfc1v3bm_.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpfc1v3bm_.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate('Hi, my\
    \ name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6ed90zuu.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6ed90zuu.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp6ed90zuu.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(',')\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8_yihzzk.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp8_yihzzk.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp8_yihzzk.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    pass\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmprduc3azq.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(' ','').split(',')\n\n\n\"\"\"\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp81cfc7dv.py\", line 29\n    test_check()\n           \
    \    ^\nSyntaxError: EOF while scanning triple-quoted string literal\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    if type(s) == str:\n        words = s.replace(\",\", \"\").replace(\"\
    \ \",\"\").split(\",\")\n        words = list(map(lambda x: x.strip(), words))\n\
    \        return words\n    else:\n        print(\"The given input is not a string\"\
    )\n        return []\n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp67_c617_.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp67_c617_.py\", line 29,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp67_c617_.py\", line\
    \ 21, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp40m79ilr.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp40m79ilr.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp40m79ilr.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(' ,', ',').split(',')\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj8q9op9q.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpj8q9op9q.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpj8q9op9q.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    words = s.split(',')\n    words = [w.strip() for w in\
    \ words]\n    return words\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7w9msnmj.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp7w9msnmj.py\", line 26,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp7w9msnmj.py\", line\
    \ 18, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split()\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp__3xtmwo.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp__3xtmwo.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp__3xtmwo.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd8hamhn4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpd8hamhn4.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpd8hamhn4.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.lower().strip().replace(',', ' ').split(' ')\n  \
    \  \n    return words\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpaokuiqu2.py\", line 15\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.strip().split(',')\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpakv66l_i.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpakv66l_i.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpakv66l_i.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    lst = s.split(\",\")\n    lst = [x.strip() for x in lst]\n\
    \    lst = [x for x in lst if x != \"\"]\n    return lst\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuoomf3gz.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpuoomf3gz.py\", line 26,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpuoomf3gz.py\", line\
    \ 18, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(sep=\",\")\n\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpih9cebty.py\", line 14\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    return s.split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfy0fqzy6.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpfy0fqzy6.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpfy0fqzy6.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words_list = s.split(\",\")\n    word_list = []\n    for i\
    \ in words_list:\n        word_list += i.split()\n    return word_list\n</cell>\n\
    <cell>\nwords_list = words_string(\"Hi, my name is John\")\nprint(words_list)\n\
    </cell>\n<cell>\ndef check(candidate):\n    assert candidate('Hi, my name is John')\
    \ == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three,\
    \ four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert\
    \ candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpg4sg0uy3.py\", line 17\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(\",\", \" \").split()\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpnkuk0cg5.py\", line 14\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.strip().split(\",\")\n</cell>\n<text>\nRun the cell\
    \ below to test your code.\n\n\n</text>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp2zi3hc1r.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(\",\", \" \").split()\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    my_list = s.split(\",\")\n    return my_list\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptl2mkmpm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptl2mkmpm.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmptl2mkmpm.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    return s.replace(' ', '').split(',')\n\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk5gu3l1j.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpk5gu3l1j.py\", line 25,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpk5gu3l1j.py\", line\
    \ 17, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate('Hi, my\
    \ name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptb30iv65.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptb30iv65.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmptb30iv65.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = []\n    \n    #Add your code\n    return words\n\n\
    def check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi', 'my',\
    \ 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five, six')\
    \ == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp68bz6o3g.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp68bz6o3g.py\", line 26,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp68bz6o3g.py\", line\
    \ 18, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph9phwlv0.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmph9phwlv0.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmph9phwlv0.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    words = [word for word in s.replace(' ', '').split(',')]\n\
    \    return words\n</cell>\n<text>\nRun the following cell to test your code.\
    \ Pay attention to the output in second box (if provided).\n\n\n</text>\n<cell>\n\
    tmp_words = words_string(\"Hello, my name is John\")\ntmp_words[:3]\n</cell>\n\
    <cell>\ntmp_words = words_string(\"Hello, my name is John\")\ntmp_words[:]\n</cell>\n\
    <cell>\ntmp_words = words_string(\"Hello, my name is John\")\ntmp_words[:]\n</cell>\n\
    <text>\nExpected Output:\n\n['Hello', ',', 'my', 'name', 'is', 'John']\n\n</text>\n\
    <text>\nDefine split_to_sentences function\nGiven an input string, you need to\
    \ write a function that returns a list of strings. The sentence splitter should\
    \ split a string into a list of words. Use Python's split() function. To split\
    \ it correctly, you will have to specify the sep argument.\n\n\n</text>\n<cell>\n\
    def check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi', 'my',\
    \ 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five, six')\
    \ == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpse9ms811.py\", line 15\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(\",\", \" \").split()\n</cell>\n<cell>\nassert\
    \ words_string(\"Hi\") == [\"Hi\"]\nassert words_string(\"Hi my name is\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\"]\nassert words_string(\"One, two, three four\"\
    ) == [\"One\", \"two\", \"three\", \"four\"]\nassert words_string(\"One, two,\
    \ three four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nassert words_string(\"One, two, three four, five, six, \") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\"]\n</cell>\n<cell>\n\
    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"\
    John\"]\n</cell>\n<text>\nC. count_words\n\n</text>\n<text>\nQuestion 3: Write\
    \ a function that returns the number of words in a string.\n\nHINT: Use a dictionary.\
    \ Think of how a dictionary would work:\nd = {'word': 1, ',': 1, 'my': 1, 'name':1,\
    \ 'is': 1, 'John': 1}\n\n\n</text>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpv15c5qhi.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    s = s.replace(' ', '')\n    s = s.split(',')\n    return s\n\
    </code>\n<|/ a dscore=0 |>\n<| a |>\nYou can use regular expressions to split\
    \ your string into separate words\n<code>\nimport re\nre.split('[,;]',str)\n</code>\n\
    This returns a list of words so you might want to filter out empty words.\n<code>\n\
    import re\nre.split('[,;]',str).filter( lambda x:x!='')\n</code>\n<|/ a tags=python\
    \ dscore=0 |>\n<| c |>\nYour regex does not remove a comma in quotes.\n<|/ c |>\n\
    <| c |>\nYou are right this regular expression does no check for a comma in quotes\
    \ ... the OP didn't specify this as a requirement but it is an issue in this code\n\
    <|/ c |>\n<| a dscore=0 |>\nThe first thing you need to do is split the string\
    \ on commas. You can do this with str.split().\nThen you can filter out the empty\
    \ entries. You can do this by converting your list to a set and then back to a\
    \ list: set(a).\n<code>\nwords = list(filter(None, s.split(',')))\n</code>\n<|/\
    \ a tags=python |>\n<| c |>\nThis does not work because a comma inside of quotes\
    \ still constitutes a separator.\n<|/ c |>\n<| a dscore=0 |>\nOne way using regex:\n\
    <code>\n>>> import re\n>>> s = \"one,two,three,four,five,six,seven,eight\"\n>>>\
    \ re.findall(\"\\w+|\\B\\'\\w+\\'\\B|\\B\\\"\\w+\\\"\\B|\\B\\'\\w+|\\\"\\w+\\\
    '|\\'\\w+|\\\"\\w+|\\'\\w*\", s)\n['one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight']\n</code>\n<|/ a tags=python |>\n<| a tags=python |>\n<code>\n\
    import re\n\ns = 'one,two,three,four,five,six,seven,eight'\nprint([i for i in\
    \ re.split(\"[,]+\", s) if i != ''])\n</code>\noutput\n<code>\n['one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight']\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\nTry this:\n<code>\ns = 'one,two,three,four,five,six,seven,eight'\na =\
    \ s.split(',')\nprint([x for x in a if x != ''])\n</code>\n<|/ a dscore=0 tags=python\
    \ |>\n<| c |>\nWhile this code may \ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpb0ql5rgo.py\", line 15\n    </code>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4gw_76pr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp4gw_76pr.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp4gw_76pr.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaigawbv9.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpaigawbv9.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpaigawbv9.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    return s.split(',')\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz9o4jfso.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz9o4jfso.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpz9o4jfso.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.strip().replace(\",\", \" \").split()\n</cell>\n<cell>\n\
    \"\"\"\nDON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE\n\"\"\"\ntests.test_words_string(words_string)\n\
    </cell>\n<text>\nTranslate\nThe translate function allows you to take in a string\
    \ of text and return the sentence with the words reversed.\n\nMore specifically,\
    \ you will be given a string of words, and you must return the sentence with the\
    \ words reversed.\n\nTranslate\nGiven a string, sentence, return a sentence with\
    \ the words reversed.\n\nFor example, \n\n\"Give me your dog\" should return \"\
    si va met, mei va ma\".\n\n\nYou will have to include the following functions:\n\
    \nFind and eliminate non-alpha characters\nFind and eliminate numbers in order\n\
    Return a list of words\n\n\n</text>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpar8n5smc.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    words = s.split(\",\")\n    words = [x.strip() for x\
    \ in words]\n    return words\n\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplafb1_qo.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmplafb1_qo.py\", line 27,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmplafb1_qo.py\", line\
    \ 19, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjr_cuzsd.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjr_cuzsd.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpjr_cuzsd.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpot7nbkrq.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpot7nbkrq.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpot7nbkrq.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Split string into list of words\n    return s.lower().split(',\
    \ ') if s else []\n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkjsaof1b.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpkjsaof1b.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpkjsaof1b.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Split string into list of words\n    return s.replace(',',\
    \ ' ').split()\n\n\ndef check(candidate):\n    assert candidate('Hi, my name is\
    \ John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two,\
    \ three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(',', ' ').split()\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.strip().lower().split(\",\")\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2gpgimnj.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2gpgimnj.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp2gpgimnj.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate('Hi, my\
    \ name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9f5fo780.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp9f5fo780.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp9f5fo780.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate('Hi, my\
    \ name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph962fbfm.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmph962fbfm.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmph962fbfm.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = []\n    for word in s.split(\",\"):\n        words.append(word.strip())\n\
    \    return words\n</cell>\n<text>\nExercise 05\nTest your words_string function\
    \ with the following cases:\n\n\n</text>\n<cell>\nprint(words_string(\"\"))\n\
    print(words_string(\" \"))\nprint(words_string(\"Hi, my name is John\"))\nprint(words_string(\"\
    One, two, three, four, five, six\"))\nprint(words_string(\"Hi, my name is  John\"\
    ))\n</cell>\n<text>\nThe last one should not have a comma after \"is\". Make sure\
    \ it prints an empty list [].\n\n\n</text>\n<text>\nExercise 06\nCreate a function\
    \ called translate that takes a list of words as a parameter and returns the same\
    \ list but with the words reversed.\n\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp94le1i_x.py\", line 16\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(', ')\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp07lxrgvs.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp07lxrgvs.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp07lxrgvs.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    my_list = s.split(', ')\n    \n    return my_list\n\n\
    print(words_string('Hi, my name is John'))\nprint(words_string('One, two, three,\
    \ four, five, six'))\n</cell>\n<text>\nExpected Output\n['Hi', 'my', 'name', 'is',\
    \ 'John']\n['One', 'two', 'three', 'four', 'five', 'six']\n\n</text>\n<text>\n\
    Task 4\nWrite a program that accepts a string of words, and returns the longest\
    \ word in that string.\n\nIf the string doesn't contain any words, it should return\
    \ an empty string.\n\nFor example words_string(\"Hello, World!\") should return\
    \ \"Hello\".\n\nIf there are several words with the same length, then you should\
    \ return the one that comes first.\n\nFor example words_string(\"Hello, World!\"\
    ) should return \"World\".\n\nwords_string(\"\") should return an empty string.\n\
    \nHint: Use a for loop.\n\n\n</text>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpq7frzn1u.py\", line 19\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return [w for w in s.split(',') if w.strip()]\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg4wd6ydo.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpg4wd6ydo.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpg4wd6ydo.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(' ')\n    return [word for word in words]\n\
    \ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm69xhmnx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpm69xhmnx.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpm69xhmnx.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6pshdhwp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp6pshdhwp.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp6pshdhwp.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(',')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyep5zm2x.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyep5zm2x.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpyep5zm2x.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Split string into a list of words\n    words = s.replace(',',\
    \ ' ').split()\n    # Remove empty elements from list\n    words = [x for x in\
    \ words if len(x) > 0]\n    return words\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.replace(',', '').split()\n    return words\n\ndef\
    \ check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi', 'my',\
    \ 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five, six')\
    \ == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\" \")\n    words_array = []\n    for word\
    \ in words:\n        words_array.append(word)\n    return words_array\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxn8y17h2.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpxn8y17h2.py\", line 27,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpxn8y17h2.py\", line\
    \ 19, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0nqy8vhy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp0nqy8vhy.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp0nqy8vhy.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.strip().split(', ')\n    return [w.strip() for w\
    \ in words]\n\ndef check(candidate):\n    assert candidate('Hi, my name is John')\
    \ == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three,\
    \ four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert\
    \ candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz_m8nk_6.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz_m8nk_6.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpz_m8nk_6.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    #<Your code here>\n    return list(map(lambda x: x.split(','),\
    \ s.split()))\n\ndef check(candidate):\n    assert candidate('Hi, my name is John')\
    \ == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three,\
    \ four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert\
    \ candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq786zb6u.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpq786zb6u.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpq786zb6u.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\",\")\n    words_list = []\n    for word in\
    \ words:\n        words_list.append(word)\n    return words_list\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsjhjp8sm.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpsjhjp8sm.py\", line 27,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpsjhjp8sm.py\", line\
    \ 19, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplmo3r_29.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplmo3r_29.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmplmo3r_29.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\nassert words_string(\"Hi, my name\
    \ is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nassert words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n</cell>\n<text>\nOnce you have implemented the words_string\
    \ function, run the cell below to test your solution.\n\n\n</text>\n<cell>\ndef\
    \ check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi', 'my',\
    \ 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five, six')\
    \ == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpy0kyji7w.py\", line 16\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    return s.split(\",\")\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1zx86k89.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp1zx86k89.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp1zx86k89.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # TODO: Write your code here\n    return s.split(\",\")\n\n\
    def check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi', 'my',\
    \ 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five, six')\
    \ == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8cizlnbf.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp8cizlnbf.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp8cizlnbf.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Your code here\n    return s.split(',')\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzy3m7rpi.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpzy3m7rpi.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpzy3m7rpi.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(',', ' ').split()\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return list(filter(None, s.split(\",\")))\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp61l8yrk.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpp61l8yrk.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpp61l8yrk.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.strip().lower().split(\",\")\n</cell>\n<cell>\nassert\
    \ words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\",\
    \ \"John\"]\nassert words_string(\"One, two, three, four, five, six\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n</cell>\n<text>\nSentence\
    \ -> Words\nIt is common to separate text into sentences, and then split the sentence\
    \ into words. You'll be given a sentence as a string and your task is to separate\
    \ it into words.\n\nThe sentence needs to be split at the occurrence of punctuations,\
    \ so that \"it's\" and \"and \"its\" both become [\"it\", \"'s\"]. In addition,\
    \ single letters should be treated as distinct words.\n\nYou will do this using\
    \ the functions split_sentence and split_words.\n\nWrite a split_sentence function\
    \ that takes in a string and returns a list of strings. The sentence needs to\
    \ be split at the occurrence of punctuations, so that \"it's\" and \"and \"and\
    \ \"its\" both become [\"it\", \"'s\"]. Single letters should not be split into\
    \ multiple words.\n\n\n</text>\n<cell>\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp4ulmnrwh.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(',')\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpci0no72l.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpci0no72l.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpci0no72l.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(',')\n</cell>\n<cell>\nwords_string(words_string(words_string(words_string(\"\
    Hi, my name is John\"))))\n</cell>\n<text>\nCall the words_string function on\
    \ some different arguments.\n\n\n</text>\n<cell>\nwords_string(\"Hi, my name is\
    \ John\")\n</cell>\n<cell>\nwords_string(\"One, two, three, four, five, six\"\
    )\n</cell>\n<text>\nWrite the function count_words below so that it returns the\
    \ number of words in the provided string.\n\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp7wttqvr1.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    return s.replace(',', ' ').split()\n</cell>\n<cell>\n\
    def check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi', 'my',\
    \ 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five, six')\
    \ == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpauieohak.py\", line 14\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return [s for s in s.split(',')]\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd085nmhy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpd085nmhy.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpd085nmhy.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(',')\n\nassert words_string(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nassert words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprsiorh72.py\", line\
    \ 14, in <module>\n    assert words_string(\"Hi, my name is John\") == [\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate('Hi, my\
    \ name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwzdf9dx.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpxwzdf9dx.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpxwzdf9dx.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(',')\n    return [s.strip() for s in words]\n\
    \ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnzrzz71t.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnzrzz71t.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpnzrzz71t.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Split the string into a list of words\n    return s.replace(',',\
    \ ' ').split()\n\ndef check(candidate):\n    assert candidate('Hi, my name is\
    \ John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two,\
    \ three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    lst = []\n    for x in s.split(','):\n        if x.strip()\
    \ != '':\n            lst.append(x.strip())\n    return lst\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnbjnagw.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpdnbjnagw.py\", line 27,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpdnbjnagw.py\", line\
    \ 19, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    # Your code here\n    \n    return [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"]\n\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpdv435ic_.py\", line 17\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(',')\n    return [word.strip() for word in\
    \ words]\n\ndef check(candidate):\n    assert candidate('Hi, my name is John')\
    \ == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three,\
    \ four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert\
    \ candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu09ue8wy.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpu09ue8wy.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpu09ue8wy.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split()\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbzwewoyz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpbzwewoyz.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpbzwewoyz.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    s = s.strip()\n    s = s.replace(\",\", \" \")\n    l = s.split()\n\
    \    \n    if len(l) != 0 and type(l[0]) != bool:\n        raise ValueError(f\"\
    Wrong word(s) format for {s}\")\n    else:\n        return l\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8ufa3aah.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp8ufa3aah.py\", line 30,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp8ufa3aah.py\", line\
    \ 22, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\n  File \"/tmp/tmp8ufa3aah.py\", line 17, in words_string\n  \
    \  raise ValueError(f\"Wrong word(s) format for {s}\")\nValueError: Wrong word(s)\
    \ format for Hi  my name is John\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    return s.split(',')\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpew6wevg0.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpew6wevg0.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpew6wevg0.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvruts10q.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvruts10q.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpvruts10q.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.strip().split(\",\")\n    words = [w.strip() for\
    \ w in words]\n    return words\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdtby1txe.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpdtby1txe.py\", line 25,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpdtby1txe.py\", line\
    \ 17, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(',', ' ').split()\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpsvc8b0fy.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\",\")\n    \n    words_array = []\n    \n\
    \    for word in words:\n        if word != \"\":\n            words_array.append(word)\n\
    \    \n    return words_array\n\n\ndef check(candidate):\n    assert candidate('Hi,\
    \ my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdx46lbv5.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpdx46lbv5.py\", line 32,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpdx46lbv5.py\", line\
    \ 24, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(',', ' ').split()\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return [w.strip() for w in s.split(',')]\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf9ampsur.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpf9ampsur.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpf9ampsur.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Split the string into words\n    return s.strip().lower().split(',')\n\
    \ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo9vfftcs.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpo9vfftcs.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpo9vfftcs.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(sep=',')\n    words.append(sep='')\n    words\
    \ = [w for w in words if w != '']\n    return words\n</cell>\n<cell>\nassert words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nassert\
    \ words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"]\n</cell>\n<text>\nMaking sure the code runs\n\
    Running this file by itself, as you have written it here, will execute all of\
    \ the code in the notebook. Let's break it down. First, we import all the functions\
    \ from our file into a new Python file. We then define an 'assert runs to true/false'\
    \ function that we then use to test our code. Next, we run the function with some\
    \ example strings and assert that the output from the function matches the expected\
    \ output.\n\n\n</text>\n<cell>\n%%writefile test_words.py \n\nfrom problem_02_words\
    \ import words_string\n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpsml07sjg.py\", line 16\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.split(\",\")\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe0607f_k.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpe0607f_k.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpe0607f_k.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\",\")\n    return words\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6oq9lif1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp6oq9lif1.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp6oq9lif1.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return list(map(lambda s: s.strip(), s.strip().replace(\",\"\
    , \"\").split(' ')))\n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp17632_1h.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp17632_1h.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp17632_1h.py\", line\
    \ 19, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return [word.strip() for word in s.split(',')]\n\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplvs_u8rs.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmplvs_u8rs.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmplvs_u8rs.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = [s.strip() for s in s.split(\",\") if s.strip()]\n\
    \    return words\n\ndef check(candidate):\n    assert candidate('Hi, my name\
    \ is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw_c2b_q2.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpw_c2b_q2.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpw_c2b_q2.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.strip().split()\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpma78zucu.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpma78zucu.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpma78zucu.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(\",\")\n    words = [w.strip() for w in words]\n\
    \    \n    return words\n</cell>\n<cell>\nassert words_string(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nassert words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n</cell>\n<text>\nC) Exercise\nWrite a program to read a\
    \ file called words.txt and print out each word on a separate line.\nThen, write\
    \ a program to read a file called words.txt and print out the number of times\
    \ each word appears in the file.\n\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpa3kx13oh.py\", line 16\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Split the string into an array using the separator ',' or\
    \ ' '\n    words = s.replace(',', ' ').split(' ')\n    \n    return words\n\n\
    def check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi', 'my',\
    \ 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five, six')\
    \ == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt9v_s7_0.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpt9v_s7_0.py\", line 26,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpt9v_s7_0.py\", line\
    \ 18, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # Split words from text into a list\n    s_list = s.replace(\"\
    ,\",\" \").split()\n    \n    # Return list\n    return s_list\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate('Hi, my\
    \ name is John') == ['Hi', 'my', 'name', 'is', 'John']\n    assert candidate('One,\
    \ two, three, four, five, six') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('Hi, my name') == ['Hi', 'my', 'name']\n    assert candidate('One,,\
    \ two, three, four, five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n\
    \    assert candidate('') == []\n    assert candidate('ahmed     , gamal') ==\
    \ ['ahmed', 'gamal']\n\ndef test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptzky_0lz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptzky_0lz.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmptzky_0lz.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.lower().strip().replace(' ,', ',').lower().split(',')\n\
    \ndef check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
    \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
    \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
    \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
    \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
    \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
    \ test_check():\n    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw548cwon.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpw548cwon.py\", line 23,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpw548cwon.py\", line\
    \ 15, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    return s.replace(',', '').split()\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    splits = s.split(',')\n    splits2 = s.split(' ')\n \
    \   \n    return list(filter(lambda s: s != '', splits))\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpazvpgiqa.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpazvpgiqa.py\", line 27,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpazvpgiqa.py\", line\
    \ 19, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    # convert string to list, remove extra spaces and commas\n\
    \    return list(s.replace(\", \", \",\").split())\n\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6lqkb90i.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp6lqkb90i.py\", line 24,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmp6lqkb90i.py\", line\
    \ 16, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    \n    return s.split(',')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n   \
    \ assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk07q8451.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpk07q8451.py\", line 25,\
    \ in test_check\n    check(words_string)\n  File \"/tmp/tmpk07q8451.py\", line\
    \ 17, in check\n    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name',\
    \ 'is', 'John']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(',')\n    words = [word for word in words]\n\
    \    return words\n\nassert words_string(\"Hi, my name is John\") == [\"Hi\",\
    \ \"my\", \"name\", \"is\", \"John\"]\nassert words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n</cell>\n<text>\nC) A helper function that takes an array of strings and returns\
    \ an array where each word\nhas exactly the same count as in the given string\
    \ array.\nFor example:\n[\n    \"Hi, my name is John\", \n    \"One, two, three,\
    \ four, five, six\"\n]\nbecomes\n[\n    \"Hi\", \n    \"my\", \n    \"name\",\
    \ \n    \"is\", \n    \"John\", \n    \"One\", \n    \"two\", \n    \"three\"\
    , \n    \"four\", \n    \"five\", \n    \"six\"\n]\nThe function should return\
    \ the given array if you pass a single string, or an array of strings \ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpkey5jh6l.py\", line 18\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n  \
    \  \"\"\"\n    You will be given a string of words separated by commas or spaces.\
    \ Your task is\n    to split the string into words and return an array of the\
    \ words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") ==\
    \ [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n    \"\"\"\n    words = s.split(',')\n    return words\n\nassert words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nassert\
    \ words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"]\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('Hi, my name is John') == ['Hi', 'my', 'name', 'is', 'John']\n\
    \    assert candidate('One, two, three, four, five, six') == ['One', 'two', 'three',\
    \ 'four', 'five', 'six']\n    assert candidate('Hi, my name') == ['Hi', 'my',\
    \ 'name']\n    assert candidate('One,, two, three, four, five, six,') == ['One',\
    \ 'two', 'three', 'four', 'five', 'six']\n    assert candidate('') == []\n   \
    \ assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef test_check():\n\
    \    check(words_string)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmphw0ser1t.py\", line 17\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError

language: py
name: HumanEval_31_is_prime
results:
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    return n % 2\
    \ == 0 or n <= 3\n\n\ndef check(candidate):\n    assert candidate(6) == False\n\
    \    assert candidate(101) == True\n    assert candidate(11) == True\n    assert\
    \ candidate(13441) == True\n    assert candidate(61) == True\n    assert candidate(4)\
    \ == False\n    assert candidate(1) == False\n    assert candidate(5) == True\n\
    \    assert candidate(11) == True\n    assert candidate(17) == True\n    assert\
    \ candidate(85) == False\n    assert candidate(77) == False\n    assert candidate(255379)\
    \ == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5gn7hcm.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpe5gn7hcm.py\", line 39,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpe5gn7hcm.py\", line 24,\
    \ in check\n    assert candidate(6) == False\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n == 2:\n        return True\n    if n < 2 or n\
    \ % 2 == 0:\n        return False\n    return all(n % i == 0 for i in range(3,\
    \ int(math.sqrt(n)) + 1, 2))\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphbhts0lx.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmphbhts0lx.py\", line 41,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmphbhts0lx.py\", line 27,\
    \ in check\n    assert candidate(101) == True\n  File \"/tmp/tmphbhts0lx.py\"\
    , line 22, in is_prime\n    return all(n % i == 0 for i in range(3, int(math.sqrt(n))\
    \ + 1, 2))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    for i in range(2,\
    \ n):\n        if n % i == 0:\n            return False\n    return True\n\n\n\
    def check(candidate):\n    assert candidate(6) == False\n    assert candidate(101)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(13441) == True\n\
    \    assert candidate(61) == True\n    assert candidate(4) == False\n    assert\
    \ candidate(1) == False\n    assert candidate(5) == True\n    assert candidate(11)\
    \ == True\n    assert candidate(17) == True\n    assert candidate(85) == False\n\
    \    assert candidate(77) == False\n    assert candidate(255379) == False\n\n\
    def test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823297
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n == 1:\n        return True\n    if n % 2 == 0:\n\
    \        return False\n    if not isprime(n):\n        return False\n    for i\
    \ in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return\
    \ False\n    return True\n\n\ndef check(candidate):\n    assert candidate(6) ==\
    \ False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2nq73alu.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmp2nq73alu.py\", line 46,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmp2nq73alu.py\", line 32,\
    \ in check\n    assert candidate(101) == True\n  File \"/tmp/tmp2nq73alu.py\"\
    , line 22, in is_prime\n    if not isprime(n):\nNameError: name 'isprime' is not\
    \ defined. Did you mean: 'is_prime'?\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n\n    if n in (2,\
    \ 3, 5, 7):\n        return True\n\n    if n % 2 == 0:\n        return is_prime(n\
    \ / 2)\n\n    sqrt_n = int(_math.sqrt(n))\n    for i in range(3, sqrt_n + 1, 2):\n\
    \        if n % i == 0:\n            return False\n\n    return True\n\n\ndef\
    \ check(candidate):\n    assert candidate(6) == False\n    assert candidate(101)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(13441) == True\n\
    \    assert candidate(61) == True\n    assert candidate(4) == False\n    assert\
    \ candidate(1) == False\n    assert candidate(5) == True\n    assert candidate(11)\
    \ == True\n    assert candidate(17) == True\n    assert candidate(85) == False\n\
    \    assert candidate(77) == False\n    assert candidate(255379) == False\n\n\
    def test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsym55z1m.py\", line\
    \ 53, in <module>\n    test_check()\n  File \"/tmp/tmpsym55z1m.py\", line 51,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpsym55z1m.py\", line 36,\
    \ in check\n    assert candidate(6) == False\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    # check if n is prime\n    if n < 2:\n        return\
    \ False\n\n    # check if n is even with known factors starting from 2\n    if\
    \ not n % 2:\n        for i in range(2, int(n ** 0.5) + 1):\n            if n\
    \ % i == 0:\n                return False\n        return True\n\n    # check\
    \ if the number n is prime with known factor trailer\n    # based on https://www.geeksforgeeks.org/python-program-for-prime-number/\n\
    \    # modified by Ming-zhong Wu\n    # with slight modifications by Zhiheng Cheng\n\
    \    # to handle up to 2^64 bit integers\n    n = int('0x' + n)\n    if n <= 0xffffffffffffffff:\n\
    \        # no bit twidling, just an isprime\n        if n == 2:\n            return\
    \ True\n        else:\n            for i in range(3, n + 1, 2):\n            \
    \    if n % i == 0:\n                    return False\n            return True\n\
    \    else:\n        # bittwidling\n        if n == 2:\n            return True\n\
    \        else:\n            m, r = divmod(n, 2)\n            for i in range(3,\
    \ m + 1, 2):\n                if r == 0 and n % i == 0:\n                    return\
    \ False\n                r, m = divmod(m, i)\n            return True\n\n\ndef\
    \ check(candidate):\n    assert candidate(6) == False\n    assert candidate(101)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(13441) == True\n\
    \    assert candidate(61) == True\n    assert candidate(4) == False\n    assert\
    \ candidate(1) == False\n    assert candidate(5) == True\n    assert candidate(11)\
    \ == True\n    assert candidate(17) == True\n    assert candidate(85) == False\n\
    \    assert candidate(77) == False\n    assert candidate(255379) == False\n\n\
    def test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjs98ormo.py\", line\
    \ 75, in <module>\n    test_check()\n  File \"/tmp/tmpjs98ormo.py\", line 73,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpjs98ormo.py\", line 59,\
    \ in check\n    assert candidate(101) == True\n  File \"/tmp/tmpjs98ormo.py\"\
    , line 34, in is_prime\n    n = int('0x' + n)\nTypeError: can only concatenate\
    \ str (not \"int\") to str\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n % 2 == 0:\n        return False\n    if n < 2:\n\
    \        return False\n    k = n\n    while k*k <= n:\n        if n % k == 0:\n\
    \            return False\n        k += n // k\n    return True\n\n\ndef check(candidate):\n\
    \    assert candidate(6) == False\n    assert candidate(101) == True\n    assert\
    \ candidate(11) == True\n    assert candidate(13441) == True\n    assert candidate(61)\
    \ == True\n    assert candidate(4) == False\n    assert candidate(1) == False\n\
    \    assert candidate(5) == True\n    assert candidate(11) == True\n    assert\
    \ candidate(17) == True\n    assert candidate(85) == False\n    assert candidate(77)\
    \ == False\n    assert candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6npvae2g.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmp6npvae2g.py\", line 46,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmp6npvae2g.py\", line 41,\
    \ in check\n    assert candidate(85) == False\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n % 2 == 0:\n        return False\n    for i in\
    \ range(3, int(sqrt(n)) + 1, 2):\n        if n % i == 0:\n            return False\n\
    \    return True\n\n\ndef check(candidate):\n    assert candidate(6) == False\n\
    \    assert candidate(101) == True\n    assert candidate(11) == True\n    assert\
    \ candidate(13441) == True\n    assert candidate(61) == True\n    assert candidate(4)\
    \ == False\n    assert candidate(1) == False\n    assert candidate(5) == True\n\
    \    assert candidate(11) == True\n    assert candidate(17) == True\n    assert\
    \ candidate(85) == False\n    assert candidate(77) == False\n    assert candidate(255379)\
    \ == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_xzyfj1h.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp_xzyfj1h.py\", line 42,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmp_xzyfj1h.py\", line 28,\
    \ in check\n    assert candidate(101) == True\n  File \"/tmp/tmp_xzyfj1h.py\"\
    , line 20, in is_prime\n    for i in range(3, int(sqrt(n)) + 1, 2):\nNameError:\
    \ name 'sqrt' is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"Parameter must\
    \ be non-negative.\")\n    if n == 1:\n        return True\n    else:\n      \
    \  for i in range(2, n):\n            if n % i == 0:\n                return False\n\
    \        return True\n\n\ndef check(candidate):\n    assert candidate(6) == False\n\
    \    assert candidate(101) == True\n    assert candidate(11) == True\n    assert\
    \ candidate(13441) == True\n    assert candidate(61) == True\n    assert candidate(4)\
    \ == False\n    assert candidate(1) == False\n    assert candidate(5) == True\n\
    \    assert candidate(11) == True\n    assert candidate(17) == True\n    assert\
    \ candidate(85) == False\n    assert candidate(77) == False\n    assert candidate(255379)\
    \ == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzkxmh2ct.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpzkxmh2ct.py\", line 45,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpzkxmh2ct.py\", line 36,\
    \ in check\n    assert candidate(1) == False\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n % 2 == 0:\n        return False\n\n    i = 3\n\
    \    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n         \
    \   return False\n        i = i + 6\n    return True\n\n\ndef check(candidate):\n\
    \    assert candidate(6) == False\n    assert candidate(101) == True\n    assert\
    \ candidate(11) == True\n    assert candidate(13441) == True\n    assert candidate(61)\
    \ == True\n    assert candidate(4) == False\n    assert candidate(1) == False\n\
    \    assert candidate(5) == True\n    assert candidate(11) == True\n    assert\
    \ candidate(17) == True\n    assert candidate(85) == False\n    assert candidate(77)\
    \ == False\n    assert candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwdbm0_ov.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpwdbm0_ov.py\", line 45,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpwdbm0_ov.py\", line 36,\
    \ in check\n    assert candidate(1) == False\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    elif n & 1 ==\
    \ 0:\n        return n == 2\n    return all(n % d == 0 for d in range(3, int(math.sqrt(n))\
    \ + 1, 2))\n\n\ndef check(candidate):\n    assert candidate(6) == False\n    assert\
    \ candidate(101) == True\n    assert candidate(11) == True\n    assert candidate(13441)\
    \ == True\n    assert candidate(61) == True\n    assert candidate(4) == False\n\
    \    assert candidate(1) == False\n    assert candidate(5) == True\n    assert\
    \ candidate(11) == True\n    assert candidate(17) == True\n    assert candidate(85)\
    \ == False\n    assert candidate(77) == False\n    assert candidate(255379) ==\
    \ False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsrmis64f.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpsrmis64f.py\", line 41,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpsrmis64f.py\", line 27,\
    \ in check\n    assert candidate(101) == True\n  File \"/tmp/tmpsrmis64f.py\"\
    , line 22, in is_prime\n    return all(n % d == 0 for d in range(3, int(math.sqrt(n))\
    \ + 1, 2))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    assert isinstance(n, int)\n    if is_prime_cache.get(n):\n\
    \        return is_prime_cache[n]\n    if n < 2:\n        return False\n    if\
    \ n % 2 == 0:\n        return is_prime_cache[n // 2]\n    for r in range(3, int(n\
    \ ** 0.5) + 1, 2):\n        if n % r == 0:\n            return False\n    return\
    \ True\n\n\n@lru_cache(maxsize=2 ** 16)\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpublobxsj.py\", line\
    \ 31, in <module>\n    @lru_cache(maxsize=2 ** 16)\nNameError: name 'lru_cache'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    # http://primes.utm.edu/lists/small/millions/\n  \
    \  limit = int(n**0.5 + 1) >> 1\n    for i in range(limit, int(n**0.5 + 1), int(n\
    \ / limit)):\n        if n % i == 0:\n            return False\n    return True\n\
    \n\n@njit(fastmath=True)\ndef check(candidate):\n    assert candidate(6) == False\n\
    \    assert candidate(101) == True\n    assert candidate(11) == True\n    assert\
    \ candidate(13441) == True\n    assert candidate(61) == True\n    assert candidate(4)\
    \ == False\n    assert candidate(1) == False\n    assert candidate(5) == True\n\
    \    assert candidate(11) == True\n    assert candidate(17) == True\n    assert\
    \ candidate(85) == False\n    assert candidate(77) == False\n    assert candidate(255379)\
    \ == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdmqpnn3l.py\", line\
    \ 26, in <module>\n    @njit(fastmath=True)\nNameError: name 'njit' is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    if not n % 2\
    \ and not n % 3:\n        return n == 2\n    root = cst_base_prime_int(n)\n  \
    \  return all(x % root == 0 for x in range(1, n - 2))\n\n\ndef check(candidate):\n\
    \    assert candidate(6) == False\n    assert candidate(101) == True\n    assert\
    \ candidate(11) == True\n    assert candidate(13441) == True\n    assert candidate(61)\
    \ == True\n    assert candidate(4) == False\n    assert candidate(1) == False\n\
    \    assert candidate(5) == True\n    assert candidate(11) == True\n    assert\
    \ candidate(17) == True\n    assert candidate(85) == False\n    assert candidate(77)\
    \ == False\n    assert candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5kd1hx5g.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp5kd1hx5g.py\", line 42,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmp5kd1hx5g.py\", line 28,\
    \ in check\n    assert candidate(101) == True\n  File \"/tmp/tmp5kd1hx5g.py\"\
    , line 22, in is_prime\n    root = cst_base_prime_int(n)\nNameError: name 'cst_base_prime_int'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    # Special case 2\n    if n == 2:\n        return True\n\
    \    # Even numbers are composite\n    if n % 2 == 0:\n        return False\n\
    \    # Only odd numbers are composite\n    if n % 2 == 1:\n        for i in range(3,\
    \ int(math.sqrt(n)) + 1, 2):\n            if n % i == 0:\n                return\
    \ False\n        return True\n    # Everything else is not prime\n    return False\n\
    \n\ndef check(candidate):\n    assert candidate(6) == False\n    assert candidate(101)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(13441) == True\n\
    \    assert candidate(61) == True\n    assert candidate(4) == False\n    assert\
    \ candidate(1) == False\n    assert candidate(5) == True\n    assert candidate(11)\
    \ == True\n    assert candidate(17) == True\n    assert candidate(85) == False\n\
    \    assert candidate(77) == False\n    assert candidate(255379) == False\n\n\
    def test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy17ioj2t.py\", line\
    \ 52, in <module>\n    test_check()\n  File \"/tmp/tmpy17ioj2t.py\", line 50,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpy17ioj2t.py\", line 36,\
    \ in check\n    assert candidate(101) == True\n  File \"/tmp/tmpy17ioj2t.py\"\
    , line 26, in is_prime\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n > 1:\n        return is_prime(int(n ** 0.5) +\
    \ 1)\n    if n < 2:\n        return False\n    if n == 2 or n == 3:\n        return\
    \ True\n    if n % 6 == 1 or n % 6 == 3:\n        return False\n    m = n // 6\n\
    \    for x in range(1, m):\n        if n % x == 0 or n % (x + 2) == 0:\n     \
    \       return False\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp42kyxutf.py\", line\
    \ 51, in <module>\n    test_check()\n  File \"/tmp/tmp42kyxutf.py\", line 49,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmp42kyxutf.py\", line 34,\
    \ in check\n    assert candidate(6) == False\n  File \"/tmp/tmp42kyxutf.py\",\
    \ line 19, in is_prime\n    return is_prime(int(n ** 0.5) + 1)\n  File \"/tmp/tmp42kyxutf.py\"\
    , line 19, in is_prime\n    return is_prime(int(n ** 0.5) + 1)\n  File \"/tmp/tmp42kyxutf.py\"\
    , line 19, in is_prime\n    return is_prime(int(n ** 0.5) + 1)\n  [Previous line\
    \ repeated 993 more times]\n  File \"/tmp/tmp42kyxutf.py\", line 18, in is_prime\n\
    \    if n > 1:\nRecursionError: maximum recursion depth exceeded in comparison\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    return factorized_primes(n).__contains__(n)\n\n\n\
    def check(candidate):\n    assert candidate(6) == False\n    assert candidate(101)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(13441) == True\n\
    \    assert candidate(61) == True\n    assert candidate(4) == False\n    assert\
    \ candidate(1) == False\n    assert candidate(5) == True\n    assert candidate(11)\
    \ == True\n    assert candidate(17) == True\n    assert candidate(85) == False\n\
    \    assert candidate(77) == False\n    assert candidate(255379) == False\n\n\
    def test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpek2w3rek.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpek2w3rek.py\", line 37,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpek2w3rek.py\", line 22,\
    \ in check\n    assert candidate(6) == False\n  File \"/tmp/tmpek2w3rek.py\",\
    \ line 18, in is_prime\n    return factorized_primes(n).__contains__(n)\nNameError:\
    \ name 'factorized_primes' is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n\n    test = factorize(n)[1]\n\
    \n    # Sieve of Eratosthenes - http://stackoverflow.com/a/20683709/1019214\n\
    \    prime = [True for i in range(n)]\n    is_p = prime[0]\n\n    for d in range(2,\
    \ int(test**0.5) + 1):\n        if prime[d]:\n            for n in range(d*d,\
    \ n+1, d):\n                is_p *= prime[n]\n    return is_p\n\n\ndef check(candidate):\n\
    \    assert candidate(6) == False\n    assert candidate(101) == True\n    assert\
    \ candidate(11) == True\n    assert candidate(13441) == True\n    assert candidate(61)\
    \ == True\n    assert candidate(4) == False\n    assert candidate(1) == False\n\
    \    assert candidate(5) == True\n    assert candidate(11) == True\n    assert\
    \ candidate(17) == True\n    assert candidate(85) == False\n    assert candidate(77)\
    \ == False\n    assert candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8jawklmy.py\", line\
    \ 52, in <module>\n    test_check()\n  File \"/tmp/tmp8jawklmy.py\", line 50,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmp8jawklmy.py\", line 35,\
    \ in check\n    assert candidate(6) == False\n  File \"/tmp/tmp8jawklmy.py\",\
    \ line 21, in is_prime\n    test = factorize(n)[1]\nNameError: name 'factorize'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if n < 2:\n        return False\n    elif n <= 3:\n\
    \        return n == 1 or n == -1\n    elif n % 2 == 0:\n        return n == 1\n\
    \    for r in range(3, int(n**0.5)//2+1, 2):\n        if n % r == 0:\n       \
    \     return False\n    return True\n\n\ndef check(candidate):\n    assert candidate(6)\
    \ == False\n    assert candidate(101) == True\n    assert candidate(11) == True\n\
    \    assert candidate(13441) == True\n    assert candidate(61) == True\n    assert\
    \ candidate(4) == False\n    assert candidate(1) == False\n    assert candidate(5)\
    \ == True\n    assert candidate(11) == True\n    assert candidate(17) == True\n\
    \    assert candidate(85) == False\n    assert candidate(77) == False\n    assert\
    \ candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbzkl8kl8.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmpbzkl8kl8.py\", line 46,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpbzkl8kl8.py\", line 41,\
    \ in check\n    assert candidate(85) == False\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def is_prime(n: int) -> bool:\n    \"\"\"Return true if a given number\
    \ is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\n    if not isinstance(n, int) or n <= 0:\n        raise\
    \ ValueError('is_prime() expects n > 0')\n\n    if n <= 3:\n        return True\n\
    \n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n     \
    \       return False\n\n    return True\n\n\ndef check(candidate):\n    assert\
    \ candidate(6) == False\n    assert candidate(101) == True\n    assert candidate(11)\
    \ == True\n    assert candidate(13441) == True\n    assert candidate(61) == True\n\
    \    assert candidate(4) == False\n    assert candidate(1) == False\n    assert\
    \ candidate(5) == True\n    assert candidate(11) == True\n    assert candidate(17)\
    \ == True\n    assert candidate(85) == False\n    assert candidate(77) == False\n\
    \    assert candidate(255379) == False\n\ndef test_check():\n    check(is_prime)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpclqc8xcm.py\", line\
    \ 49, in <module>\n    test_check()\n  File \"/tmp/tmpclqc8xcm.py\", line 47,\
    \ in test_check\n    check(is_prime)\n  File \"/tmp/tmpclqc8xcm.py\", line 32,\
    \ in check\n    assert candidate(6) == False\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326

language: py
name: HumanEval_66_digitSum
results:
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    total = 0\n    for c in s:\n        if c.isupper():\n \
    \           total += ord(c)\n    return total\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # write your code here\n    result = 0\n    for i in s:\n\
    \        if i.isupper():\n            result += 1\n    return result\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpha4zpni3.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpha4zpni3.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpha4zpni3.py\", line 24,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    def str_uppercase(s: str) -> int:\n        return sum(ord(c)\
    \ for c in s.upper())\n    return str_uppercase(s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp55d86x9u.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp55d86x9u.py\", line 30,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp55d86x9u.py\", line 21,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    str_len = len(s)\n    sum_ = 0\n    if str_len == 0:\n\
    \        return 0\n    for x in range(str_len):\n        if s[x] >= 'a' and s[x]\
    \ <= 'z':\n            sum_ += (ord(s[x]) - ord('a') + 1) * 26\n        else:\n\
    \            sum_ += ord(s[x])\n    return sum_\n\ndef check(candidate):\n   \
    \ assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj3b0r8t9.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpj3b0r8t9.py\", line 36,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpj3b0r8t9.py\", line 27,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum([ord(i) for i in s])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplru_ybx0.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmplru_ybx0.py\", line 28,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmplru_ybx0.py\", line 19,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    ascii_code = [ord(c) for c in s]\n    ascii_code = [c for\
    \ c in ascii_code if c < ord(\"z\")]\n    return sum(ascii_code)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_3ga_7jp.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp_3ga_7jp.py\", line 30,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp_3ga_7jp.py\", line 21,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvjniy408.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvjniy408.py\", line 28,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpvjniy408.py\", line 18,\
    \ in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    total = 0\n    for letter in s:\n        if letter.isupper():\n\
    \            total += ord(letter)\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum([ord(c) - 96 if c in string.ascii_letters else\
    \ 0 for c in s])\n\n\ndef check(candidate):\n    assert candidate('') == 0\n \
    \   assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n   \
    \ assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n \
    \   assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxc4k3ikh.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpxc4k3ikh.py\", line 28,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpxc4k3ikh.py\", line 19,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpxc4k3ikh.py\"\
    , line 14, in digitSum\n    return sum([ord(c) - 96 if c in string.ascii_letters\
    \ else 0 for c in s])\n  File \"/tmp/tmpxc4k3ikh.py\", line 14, in <listcomp>\n\
    \    return sum([ord(c) - 96 if c in string.ascii_letters else 0 for c in s])\n\
    NameError: name 'string' is not defined\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # Todo\n    pass\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpekppgy8p.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpekppgy8p.py\", line 29,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpekppgy8p.py\", line 19,\
    \ in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, s))\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_mrh_kmn.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp_mrh_kmn.py\", line 28,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp_mrh_kmn.py\", line 19,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    answer = 0\n    for char in s:\n        answer = answer\
    \ + ord(char)\n    return answer\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdp025u06.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpdp025u06.py\", line 31,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpdp025u06.py\", line 22,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    sum = 0\n    for i in s:\n        if i.isupper():\n   \
    \         sum += ord(i)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isupper():\n\
    \            sum += ord(char)\n    return sum\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # Your code here\n\n    return sum(map(ord, list(s)))\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppru78w_7.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmppru78w_7.py\", line 30,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmppru78w_7.py\", line 21,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n   \
    \         sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # Your code here\n    return sum([ord(ch) - 96 for ch in\
    \ s])\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx0_e4_kb.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpx0_e4_kb.py\", line 29,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpx0_e4_kb.py\", line 20,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum([int(c) for c in s])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp11z83s3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpp11z83s3.py\", line 28,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpp11z83s3.py\", line 19,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpp11z83s3.py\"\
    , line 14, in digitSum\n    return sum([int(c) for c in s])\n  File \"/tmp/tmpp11z83s3.py\"\
    , line 14, in <listcomp>\n    return sum([int(c) for c in s])\nValueError: invalid\
    \ literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum([int(c) for c in s])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp11z83s3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpp11z83s3.py\", line 28,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpp11z83s3.py\", line 19,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpp11z83s3.py\"\
    , line 14, in digitSum\n    return sum([int(c) for c in s])\n  File \"/tmp/tmpp11z83s3.py\"\
    , line 14, in <listcomp>\n    return sum([int(c) for c in s])\nValueError: invalid\
    \ literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum([sum(int(c) for c in s[:i]) for i in range(len(s))])\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptba00f1c.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmptba00f1c.py\", line 27,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmptba00f1c.py\", line 18,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmptba00f1c.py\"\
    , line 14, in digitSum\n    return sum([sum(int(c) for c in s[:i]) for i in range(len(s))])\n\
    \  File \"/tmp/tmptba00f1c.py\", line 14, in <listcomp>\n    return sum([sum(int(c)\
    \ for c in s[:i]) for i in range(len(s))])\n  File \"/tmp/tmptba00f1c.py\", line\
    \ 14, in <genexpr>\n    return sum([sum(int(c) for c in s[:i]) for i in range(len(s))])\n\
    ValueError: invalid literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659823352

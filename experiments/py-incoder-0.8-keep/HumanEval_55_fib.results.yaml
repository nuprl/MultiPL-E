language: py
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ else:\n        return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return n\n    return fib(n - 2) + fib(n - 1)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpep5jccj5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpep5jccj5.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpep5jccj5.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n > 0\n    if n == 1:\n        return 1\n    elif n == 2:\n   \
    \     return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\n\n@attr.s(slots=True)\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdwx1iuj1.py\", line\
    \ 19, in <module>\n    @attr.s(slots=True)\nNameError: name 'attr' is not defined.\
    \ Did you mean: 'aiter'?\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_internal(0, n)[1]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi94vhcc4.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpi94vhcc4.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpi94vhcc4.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpi94vhcc4.py\", line 10, in fib\n\
    \    return fib_internal(0, n)[1]\nNameError: name 'fib_internal' is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_rec(n, cache={})\n\n@timed\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6d3pk5h2.py\", line\
    \ 12, in <module>\n    @timed\nNameError: name 'timed' is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n in (0, 1):\n        return n\n    return fib(n-1) + fib(n-2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    @doctest\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplmlog544.py\", line\
    \ 15, in <module>\n    @doctest\nNameError: name 'doctest' is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n</cell>\n\
    <text>\nThe function fib() has four arguments but we only supplied with one. Python\
    \ will implicitly fill the remaining argument with the value of 0. This will cause\
    \ the function to fail with the exception that we defined in the function definition.\
    \ The function fib() in module pycalphad.io.ltx has an argument called n that\
    \ takes n as an argument and we are supplying it with 10. When python executes\
    \ fib(n=10), it automatically fills n with the default value 0. Hence the error.\n\
    \n\n</text>\n<text>\nFixing the issue\nWe will now fix the issue by providing\
    \ the argument n in the function definition.\n\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpm_dbsk7o.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        return fib(-n)\n\n    if n <= 2:\n        return n\n\
    \n    return fib(n - 2) + fib(n - 1)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ie5vr08.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp3ie5vr08.py\", line 27,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp3ie5vr08.py\", line 20, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ else:\n        return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n in (0, 1):\n        return n\n    return fib(n-1) + fib(n-2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # assert n >= 0\n    if n < 2:\n        return n\n    return fib(n-1)\
    \ + fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 0\n    if n <= 1:\n        return 1\n    return fib(n-2) +\
    \ fib(n-1)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpltqkmps9.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpltqkmps9.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpltqkmps9.py\", line 17, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n in {0, 1}:\n        return 1\n    return fib(n-2) + fib(n-1)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbljuki7d.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpbljuki7d.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpbljuki7d.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326

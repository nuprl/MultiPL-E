language: py
name: HumanEval_23_strlen
results:
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: -1
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\n@timed_function\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdgku7dvl.py\", line\
    \ 11, in <module>\n    @timed_function\nNameError: name 'timed_function' is not\
    \ defined\n"
  stdout: ''
  timestamp: 1659823314
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: -1
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\n@decorator\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp05s9u4tb.py\", line\
    \ 11, in <module>\n    @decorator\nNameError: name 'decorator' is not defined\n"
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ sum(len(x) for x in string)\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823314
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823301

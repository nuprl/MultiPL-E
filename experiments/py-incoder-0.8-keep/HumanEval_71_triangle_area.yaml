name: HumanEval_71_triangle_area
language: py
prompt: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
  \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
  \ rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
  \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
  \ is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5)\
  \ == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
  \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2,\
  \ 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7)\
  \ == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) ==\
  \ 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
  \ntest_check()\n"
completions: ["    # write your code here\n\n    if a + b > c and a + c > b and b\
    \ + c > a:\n        area = (a + b + c) / 2\n    elif a + b > c and a + c > b:\n\
    \        area = (a + c) / 2\n    elif a + b > c:\n        area = (b + c) / 2\n\
    \    else:\n        area = (a + b) / 2\n\n    if area > 1000:\n        area =\
    \ round(triangle_area(a, b, c), 2)\n    return area\n", "    a, b, c = float(a),\
    \ float(b), float(c)\n    if a > b+c or a > c or a > b+c:\n        return -1\n\
    \    else: \n        return round(((b+c)*(math.sqrt(1+(pow(b,2)-pow(c,2)))+pow(a,2)-pow(b,2)))\
    \ / (2 * a))\n\n", "    area_a = float(a * (a - b) * (a - c))\n    area_b = float(b\
    \ * (b - c) * (b - a))\n    area_c = float(c * (c - a) * (c - b))\n    if area_a\
    \ + area_b + area_c >= a:\n        return round(area_c / area_a, 2)\n    else:\n\
    \        return -1\n\n", "    if a == c and b == a:\n        return b\n    if\
    \ a == b and c == a:\n        return c\n    if b == c and c == b:\n        return\
    \ a\n    area_a = (b**2) - (4*a*c)\n    area_b = (c**2) - (4*b*a)\n    area_c\
    \ = (a**2) - (4*c*b)\n    \n    if area_a < 0 and area_b < 0 and area_c < 0:\n\
    \        return -1\n    \n    if area_a < 0:\n        area_a = math.ceil(area_a)\n\
    \        area_b = math.ceil(area_b)\n        area_c = math.ceil(area_c)\n    else:\n\
    \        area_a = math.floor(area_a)\n        area_b = math.floor(area_b)\n  \
    \      area_c = math.floor(area_c)\n    \n    area_tri_side = area_a + area_b\
    \ + area_c\n    \n    if area_tri_side == 0:\n        return -1\n    \n    area_tri_side_rounded\
    \ = round(area_tri_side, 2)\n    return area_tri_side_rounded\n</cell>\n<cell>\n\
    triangle_area(3, 4, 5)\n</cell>\n<cell>\ntriangle_area(1, 2, 10)\n</cell>\n<text>\n\
    Great! Now we can begin to improve our triangle function! Let's see if we can\
    \ write a function which checks if a triangle is a valid triangle; one which returns\
    \ \"True\" if it is and \"False\" otherwise.\n\n\n</text>\n<cell>", "    try:\n\
    \        # Try a triangle with sides a and b\n        # Try a triangle with sides\
    \ b and c\n        # Try a triangle with sides c and a\n        return round(side_length(a,\
    \ b) + side_length(b, c)- side_length(c, a))\n    except ZeroDivisionError:\n\
    \        print(\"Not a valid triangle. Returning -1\")\n        return -1\n\n",
  "    if a + b > c:\n        return 0\n    if a + c > b:\n        return 0\n    if\
    \ b + c > a:\n        return 0\n\n    if a + b > c + a:\n        return (a * b\
    \ + b * c) / 2.0\n    if a + c > b + a:\n        return (a * b + c * b) / 2.0\n\
    \    if b + c > a + b:\n        return (a * c + b * c) / 2.0\n    if a + b > c\
    \ + b:\n        return (b * c + c * a ) / 2.0\n    if a + c > b + c:\n       \
    \ return (b * c + a * a ) / 2.0\n\n    return -1\n\n", "    if a < b + c and b\
    \ < a + c and c < a + b:\n        area_of_tri = float(b - a) * (c - b)\n     \
    \   return round(area_of_tri, 2)\n    else:\n        return -1\n", "    return\
    \ -1\n</cell>\n<text>\nProblem 3\nWrite a function that accepts an integer as\
    \ input, calculates the number of digits in the integer, then returns a list of\
    \ that many decimal places in the integer.\n\nThe input parameter can be an integer,\
    \ or a float, or a string. When an integer is passed the output is a list of one\
    \ decimal place. When a float is passed the output is a list of one decimal place\
    \ and one decimal place after the decimal point. When a str is passed the output\
    \ is a list of as many decimal places as the string contains. For example:\n\n\
    decimalPlaces(1) --> ['1']\ndecimalPlaces(1.1) --> ['1', '1.1']\ndecimalPlaces('2.1')\
    \ --> ['2.1']\ndecimalPlaces(2.1) --> ['2.1']\ndecimalPlaces('2.10') --> ['2.1',\
    \ '2.1']\ndecimalPlaces(2.51) --> ['2.51', '2.51']\ndecimalPlaces(2.1) --> ['2.1']\n\
    \n</text>\n<cell>", "    return 0.5 * triangle_perimeter(a) + 0.5 * triangle_perimeter(b)\
    \ + 0.5 * triangle_perimeter(c)\n\n", "    return round(math.hypot(a, b, c), 2)\n\
    \n", "    if a == b == c:\n        return 0\n    if a + b > c:\n        a = b\n\
    \    elif a + c > b:\n        a = c\n    elif b + c > a:\n        b = c\n    area\
    \ = 0.5 * (a + b + c)\n    return round(area, 2)\n\n", "    return round(calc_area(a=a,\
    \ b=b, c=c), 2)\n", "    if a < 0 or b < 0 or c < 0:\n        return -1\n\n  \
    \  if a + b > c and a + c > b and b + c > a:\n        return a * b * c / ((a +\
    \ b + c) * (a + b + c))\n    else:\n        return -1\n", "    area_a = abs((b\
    \ - a) * (c - a))\n    area_b = abs((a * b) - (b * c))\n    area_c = abs((a *\
    \ b) - (a * c))\n    if area_c > area_b:\n        return area_c\n    else:\n \
    \       return area_b\n\n", "    a, b, c = min(a,b), max(a,b), min(c,b)\n    if\
    \ a + b > c or a + c > b or b + c > a:\n        return -1\n    else: \n      \
    \  area_tri = 1/2 * a * b * c \n        area_tri = round(float(area_tri), 2)\n\
    \        return area_tri\n</cell>\n<cell>\ntriangle_area(3,4,5)\n</cell>\n<cell>\n\
    triangle_area(1,2,10)\n</cell>\n<text>\nProblem 2\n\n</text>\n<cell>\n\"\"\"\n\
    Write a function that takes a number from the user and returns the number \nconverted\
    \ to a roman numeral. If the number cannot be converted then \nreturn \"Invalid\
    \ number\"\n\"\"\"", "    if a >= b >= c:\n        area_tri = (a + b + c) / 2\n\
    \        if area_tri < a:\n            area_tri = a\n        elif area_tri > c:\n\
    \            area_tri = c\n        return round(area_tri, 2)\n    else:\n    \
    \    return -1\n\n", "    side1: float\n    side2: float\n    side3: float\n \
    \   \n    if a + b > c or b + c > a or c + a > b:\n        return -1\n    elif\
    \ a + b == c or a == b or b == c:\n        return 1\n    elif a == b or b == c:\n\
    \        return 0.5\n    elif a == c:\n        return 0.5\n    elif b == c:\n\
    \        return 0.5\n    else:\n        side1 = float(math.sqrt(a**2 - b**2))\n\
    \        side2 = float(math.sqrt(a**2 - c**2))\n        side3 = float(math.sqrt(b**2\
    \ - c**2))\n        \n        area1 = side1 * side2\n        area2 = side2 * side3\n\
    \        area3 = side3 * side1\n        \n        return round(area1 + area2 +\
    \ area3, 2)\n", "    s = 0\n    if a + b <= c:\n        s = (a+b+c) / 2\n    elif\
    \ b + c <= a:\n        s = (b+c+a) / 2\n    elif a + c <= b:\n        s = (a +\
    \ c + b) / 2\n    else:\n        s = 0\n    return round(s, 2)\n", "    return\
    \ round(a * b * c / ((a + b + c) ** 0.5), 2)\n", "    if a + b > c and a + c >\
    \ b and b + c > a:\n        area = (a * b + b * c + c * a) / (2 * a)\n       \
    \ return round(area, 2)\n    return -1\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n\
    </cell>\n<text>\nQuestion 2: Determine if any two of the sides of a triangle form\
    \ a right angle\n\n</text>\n<cell>"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

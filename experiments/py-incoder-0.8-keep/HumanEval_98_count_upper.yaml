name: HumanEval_98_count_upper
language: py
prompt: "def count_upper(s: str) -> int:\n    \"\"\"\n    Given a string s, count\
  \ the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf')\
  \ returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns\
  \ 0\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('aBCdEf') == 1\n    assert candidate('abcdefg')\
  \ == 0\n    assert candidate('dBBE') == 0\n    assert candidate('B') == 0\n    assert\
  \ candidate('U') == 1\n    assert candidate('') == 0\n    assert candidate('EEEE')\
  \ == 2\n\ndef test_check():\n    check(count_upper)\n\ntest_check()\n"
completions: ["    vowel = 'AEIOU'\n    count = 0\n    for i in range(len(s)):\n \
    \       if s[i] in vowel and i % 2 == 0:\n            count += 1\n    return count\n",
  "    vowels = 'aeiouAEIOU'\n    return sum(int(s[i - 2] in vowels) for i in range(len(s))\
    \ if i % 2 == 0)\n\n", "    count = 0\n    for i in range(len(s)):\n        if\
    \ s[i] >= 'A' and s[i] <= 'Z':\n            count += 1\n        else:\n      \
    \      count = 0\n        if i % 2 == 0 and count > 0:\n            count += 1\n\
    \    return count\n</cell>\n<cell>", "    i = 0\n    ans = 0\n    while i < len(s):\n\
    \        if s[i:i+2] in VOWELS:\n            ans += 1\n        i += 2\n    return\
    \ ans\n\n", "    counter = 0\n    for i in range(len(s)):\n        if s[i] in\
    \ 'AEIOU':\n            counter += 1\n            if i % 2 == 0:\n           \
    \     counter += 1\n    return counter\n\n", "    count = 0\n    for i in range(len(s)):\n\
    \        if s[i] in 'aeiou':\n            if i % 2 == 0:\n                count\
    \ += 1\n    return count\n\n", "    i = 0\n    while i < len(s):\n        if s[i]\
    \ == 'a' or s[i] == 'e' or s[i] == 'i' or s[i] == 'o' or s[i] == 'u':\n      \
    \      i += 1\n        else:\n            i = 0\n    return i\n</cell>\n<cell>\n\
    count_upper('abc')\n</cell>\n<cell>", "    num_upper = 0\n    \n    for i in range(len(s)):\n\
    \        if s[i].isupper() and i % 2 == 0 and s[i].isalpha():\n            num_upper\
    \ += 1\n    \n    return num_upper\n\n", "    return sum(s[2*i: 2*i+2].isupper()\
    \ for i in range(0, len(s)//2))\n\n", "    vowels = ['a', 'A', 'e', 'E', 'i',\
    \ 'I', 'o', 'O', 'u', 'U']\n    count = 0\n    for i in range(0, len(s)):\n  \
    \      if s[i].upper() in vowels:\n            count += 1\n        else:\n   \
    \         count = 0\n    return count\n", "    count = 0\n    for i in range(len(s)):\n\
    \        \n        if s[i] >= 'A' and s[i] <= 'Z':\n            count += int(s[i]-ord('A'))\n\
    \        \n        elif s[i] >= 'a' and s[i] <= 'z':\n            count += int(s[i]-ord('a')\
    \ + 1)\n    \n    return count\n    \nassert count_upper('aBCdEf') == 1\nassert\
    \ count_upper('abcdefg') == 0\nassert count_upper('dBBE') == 0\n</cell>\n<cell>",
  "    return s.count('AEIOUaeiou')\n\n", "    \n    count = 0\n    \n    for i in\
    \ range(len(s)):\n        if s[i].isupper():\n            if i % 2 == 0:\n   \
    \             count += 1\n                \n    return count\n\n", "    i = 0\n\
    \    count = 0\n    while i < len(s):\n        if s[i] in 'AEIOUaeiou':\n    \
    \        i += 1\n        else:\n            count += (i-(i-1))/2\n           \
    \ i += 1\n    return count\n</cell>\n<cell>", "    counter = 0\n    for index,\
    \ letter in enumerate(s, start=0):\n        if letter == 'a' or letter == 'A':\n\
    \            counter += 1\n        elif letter == 'e' or letter == 'E':\n    \
    \        counter += 1\n        elif letter == 'i' or letter == 'I':\n        \
    \    counter += 1\n        elif letter == 'o' or letter == 'O':\n            counter\
    \ += 1\n        elif letter == 'u' or letter == 'U':\n            counter += 1\n\
    \        elif letter == 'y':\n            counter += 1\n        else:\n      \
    \      continue\n        if index % 2 == 0:\n            counter += count_upper(s[index\
    \ + 1:])\n    return counter\n\n", "    count = 0\n    for i in range(len(s)):\n\
    \        if s[i] in 'AEIOUaeiou':\n            count += int(s[i:i+2])\n    return\
    \ count\n\n", "    return sum(s[i:i+2].isupper() for i in range(0, len(s) - 1,\
    \ 2))\n\n", "    return len([c for c in s if c.isupper() and c[0].islower()])\n\
    \n", "    vowel_chars = [\n        c for c in string.ascii_lowercase\n       \
    \ if c in \"aeiou\"\n    ]\n    count = 0\n    i = 0\n    while i < len(s):\n\
    \        if s[i:i + 2] in vowel_chars:\n            count += int(s[i:i + 2] in\
    \ vowel_chars)\n        i += 2\n    return count\n\n", "    count=0\n    for i\
    \ in range(0,len(s)-1,2):\n        if s[i]=='a' or s[i]=='e' or s[i]=='i' or s[i]=='o'\
    \ or s[i]=='u':\n            count+=1\n        else:\n            break\n    return\
    \ count\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

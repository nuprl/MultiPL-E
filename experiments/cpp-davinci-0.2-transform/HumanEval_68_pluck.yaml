name: HumanEval_68_pluck
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// \"Given an array representing\
  \ a branch of a tree that has non-negative integer nodes\n// your task is to pluck\
  \ one of the nodes and return it.\n// The plucked node should be the node with the\
  \ smallest even value.\n// If multiple nodes with the same smallest even value are\
  \ found return the node that has smallest index.\n// The plucked node should be\
  \ returned in a list, [ smalest_value, its index ],\n// If there are no even values\
  \ or the given array is empty, return [].\n// Example 1:\n// >>> pluck((std::vector<long>({(long)4,\
  \ (long)2, (long)3})))\n// (std::vector<long>({(long)2, (long)1}))\n// Explanation:\
  \ 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n\
  // >>> pluck((std::vector<long>({(long)1, (long)2, (long)3})))\n// (std::vector<long>({(long)2,\
  \ (long)1}))\n// Explanation: 2 has the smallest even value, and 2 has the smallest\
  \ index.\n// Example 3:\n// >>> pluck((std::vector<long>()))\n// (std::vector<long>())\n\
  // Example 4:\n// >>> pluck((std::vector<long>({(long)5, (long)0, (long)3, (long)0,\
  \ (long)4, (long)2})))\n// (std::vector<long>({(long)0, (long)1}))\n// Explanation:\
  \ 0 is the smallest value, but  there are two zeros,\n// so we will choose the first\
  \ zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <=\
  \ 10000\n// * 0 <= node.value\nstd::vector<long> pluck(std::vector<long> arr) {\n"
tests: "}\nint main() {\n    auto candidate = pluck;\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)1})));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3}))) == (std::vector<long>({(long)2, (long)1})));\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)0, (long)3, (long)0, (long)4, (long)2}))) == (std::vector<long>({(long)0,\
  \ (long)1})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
  \ (long)0, (long)5, (long)3}))) == (std::vector<long>({(long)0, (long)3})));\n \
  \   assert(candidate((std::vector<long>({(long)5, (long)4, (long)8, (long)4, (long)8})))\
  \ == (std::vector<long>({(long)4, (long)1})));\n    assert(candidate((std::vector<long>({(long)7,\
  \ (long)6, (long)7, (long)1}))) == (std::vector<long>({(long)6, (long)1})));\n \
  \   assert(candidate((std::vector<long>({(long)7, (long)9, (long)7, (long)1})))\
  \ == (std::vector<long>()));\n}\n"
completions: ["    std::vector<long> result;\n    if (arr.size() == 0) {\n       \
    \ return result;\n    }\n    long min = INT_MAX;\n    int index = 0;\n    for\
    \ (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] <\
    \ min) {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    if (min == INT_MAX) {\n        return result;\n    }\n    result.push_back(min);\n\
    \    result.push_back(index);\n    return result;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min = arr[0];\n\
    \    long min_index = 0;\n    for (long i = 0; i < arr.size(); i++) {\n      \
    \  if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n                min\
    \ = arr[i];\n                min_index = i;\n            }\n        }\n    }\n\
    \    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "  std::vector<long> result;\n  if (arr.size() ==\
    \ 0) {\n    return result;\n  }\n  long min = arr[0];\n  long min_index = 0;\n\
    \  for (int i = 0; i < arr.size(); i++) {\n    if (arr[i] % 2 == 0) {\n      if\
    \ (arr[i] < min) {\n        min = arr[i];\n        min_index = i;\n      }\n \
    \   }\n  }\n  if (min % 2 == 0) {\n    result.push_back(min);\n    result.push_back(min_index);\n\
    \  }\n  return result;", "    std::vector<long> res;\n    if(arr.size() == 0)\n\
    \        return res;\n    long min = arr[0];\n    long min_index = 0;\n    for(int\
    \ i = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0){\n            if(arr[i]\
    \ < min){\n                min = arr[i];\n                min_index = i;\n   \
    \         }\n        }\n    }\n    if(min % 2 == 0){\n        res.push_back(min);\n\
    \        res.push_back(min_index);\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    long min_even = INT_MAX;\n    long min_even_index = INT_MAX;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min_even) {\n            min_even = arr[i];\n            min_even_index =\
    \ i;\n        }\n    }\n    if (min_even == INT_MAX) {\n        return result;\n\
    \    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    long min = INT_MAX;\n\
    \    long index = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    if (index != -1) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min_even = INT_MAX;\n    long min_even_index = -1;\n    for (int i = 0; i <\
    \ arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min_even) {\n  \
    \          min_even = arr[i];\n            min_even_index = i;\n        }\n  \
    \  }\n    if (min_even_index == -1) {\n        return result;\n    }\n    result.push_back(min_even);\n\
    \    result.push_back(min_even_index);\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min_even = INT_MAX;\n  \
    \  long min_even_idx = -1;\n    for(int i = 0; i < arr.size(); i++) {\n      \
    \  if(arr[i] % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n\
    \            min_even_idx = i;\n        }\n    }\n    if(min_even_idx == -1) return\
    \ res;\n    res.push_back(min_even);\n    res.push_back(min_even_idx);\n    return\
    \ res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return\
    \ result;\n    }\n    long min_even = LONG_MAX;\n    long min_even_index = -1;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min_even) {\n            min_even = arr[i];\n            min_even_index =\
    \ i;\n        }\n    }\n    if (min_even_index == -1) {\n        return result;\n\
    \    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    int index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    long min = INT_MAX;\n\
    \    long index = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    if (min == INT_MAX) {\n        return result;\n\
    \    }\n    result.push_back(min);\n    result.push_back(index);\n    return result;",
  "    std::vector<long> res;\n    if(arr.size() == 0) return res;\n    long min =\
    \ INT_MAX;\n    long index = -1;\n    for(int i = 0; i < arr.size(); i++){\n \
    \       if(arr[i] % 2 == 0 && arr[i] < min){\n            min = arr[i];\n    \
    \        index = i;\n        }\n    }\n    if(index == -1) return res;\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "    std::vector<long> res;\n  \
    \  int min = INT_MAX;\n    int index = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (index != -1) {\n        res.push_back(min);\n\
    \        res.push_back(index);\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min = INT_MAX;\n    long\
    \ index = -1;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2\
    \ == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(index == -1) return res;\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min = arr[0];\n\
    \    long min_index = 0;\n    for (long i = 0; i < arr.size(); i++) {\n      \
    \  if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n                min\
    \ = arr[i];\n                min_index = i;\n            }\n        }\n    }\n\
    \    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    bool has_even = false;\n    for (int i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] % 2 == 0) {\n            has_even = true;\n            if\
    \ (arr[i] < min) {\n                min = arr[i];\n                min_index =\
    \ i;\n            }\n        }\n    }\n    if (has_even) {\n        result.push_back(min);\n\
    \        result.push_back(min_index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long min_index = 0;\n    bool found = false;\n    for (long\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n            if\
    \ (!found) {\n                min = arr[i];\n                min_index = i;\n\
    \                found = true;\n            } else {\n                if (arr[i]\
    \ < min) {\n                    min = arr[i];\n                    min_index =\
    \ i;\n                }\n            }\n        }\n    }\n    if (found) {\n \
    \       result.push_back(min);\n        result.push_back(min_index);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    long index = 0;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min_even = INT_MAX;\n    long\
    \ min_index = INT_MAX;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n \
    \           min_index = i;\n        }\n    }\n    if (min_even == INT_MAX) {\n\
    \        return result;\n    }\n    result.push_back(min_even);\n    result.push_back(min_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           min_index = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           min_index = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = INT_MAX;\n    long index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n  \
    \      }\n    }\n    if (min == INT_MAX) {\n        return result;\n    }\n  \
    \  result.push_back(min);\n    result.push_back(index);\n    return result;",
  "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min = INT_MAX;\n    long min_index = INT_MAX;\n    for (int i\
    \ = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n\
    \            min = arr[i];\n            min_index = i;\n        }\n    }\n   \
    \ if (min == INT_MAX) {\n        return result;\n    }\n    result.push_back(min);\n\
    \    result.push_back(min_index);\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = INT_MAX;\n    long index = -1;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (index == -1) {\n        return\
    \ result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n \
    \   return result;", "    std::vector<long> res;\n    if (arr.size() == 0) return\
    \ res;\n    long min = INT_MAX;\n    int index = -1;\n    for (int i = 0; i <\
    \ arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n       \
    \     min = arr[i];\n            index = i;\n        }\n    }\n    if (index ==\
    \ -1) return res;\n    res.push_back(min);\n    res.push_back(index);\n    return\
    \ res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return\
    \ result;\n    }\n    long min_even = INT_MAX;\n    long min_even_index = -1;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min_even) {\n            min_even = arr[i];\n            min_even_index =\
    \ i;\n        }\n    }\n    if (min_even_index == -1) {\n        return result;\n\
    \    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    long min = INT_MAX;\n\
    \    long index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    if (index != -1) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    long min = INT_MAX;\n    long index = -1;\n    for (int i = 0; i <\
    \ arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n       \
    \     min = arr[i];\n            index = i;\n        }\n    }\n    if (index !=\
    \ -1) {\n        res.push_back(min);\n        res.push_back(index);\n    }\n \
    \   return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = arr[0];\n    long min_index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n\
    \            if (arr[i] < min) {\n                min = arr[i];\n            \
    \    min_index = i;\n            }\n        }\n    }\n    if (min % 2 == 0) {\n\
    \        result.push_back(min);\n        result.push_back(min_index);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    long index = 0;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           min_index = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "  std::vector<long> result;\n  if (arr.size() ==\
    \ 0) {\n    return result;\n  }\n  long min = arr[0];\n  long minIndex = 0;\n\
    \  for (int i = 0; i < arr.size(); i++) {\n    if (arr[i] % 2 == 0) {\n      if\
    \ (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n  \
    \  }\n  }\n  if (min % 2 == 0) {\n    result.push_back(min);\n    result.push_back(minIndex);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if (arr.size() ==\
    \ 0) {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    bool is_even = false;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n           \
    \     min = arr[i];\n                min_index = i;\n                is_even =\
    \ true;\n            }\n        }\n    }\n    if (is_even) {\n        result.push_back(min);\n\
    \        result.push_back(min_index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    long min = INT_MAX;\n    int index = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min == INT_MAX) {\n       \
    \ return res;\n    }\n    res.push_back(min);\n    res.push_back(index);\n   \
    \ return res;", "    std::vector<long> result;\n    long min = INT_MAX;\n    long\
    \ index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (index != -1) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long minIndex = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n       \
    \         min = arr[i];\n                minIndex = i;\n            }\n      \
    \  }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n       \
    \ result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if (arr.size() == 0) {\n        return res;\n    }\n    long min =\
    \ arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++) {\n \
    \       if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n  \
    \          index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        res.push_back(min);\n\
    \        res.push_back(index);\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min_even = INT_MAX;\n    long min_even_index = INT_MAX;\n    for (int i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min_even) {\n\
    \            min_even = arr[i];\n            min_even_index = i;\n        }\n\
    \    }\n    if (min_even == INT_MAX) {\n        return result;\n    }\n    result.push_back(min_even);\n\
    \    result.push_back(min_even_index);\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long minIndex = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n       \
    \         min = arr[i];\n                minIndex = i;\n            }\n      \
    \  }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n       \
    \ result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = INT_MAX;\n    long index = -1;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (index == -1) {\n        return\
    \ result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n \
    \   return result;", "    std::vector<long> res;\n    if (arr.size() == 0) {\n\
    \        return res;\n    }\n    long min = arr[0];\n    long index = 0;\n   \
    \ for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        res.push_back(min);\n        res.push_back(index);\n\
    \    }\n    return res;", "    std::vector<long> res;\n    if (arr.size() == 0)\
    \ {\n        return res;\n    }\n    long min = arr[0];\n    int index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        res.push_back(min);\n        res.push_back(index);\n\
    \    }\n    return res;", "    std::vector<long> result;\n    long min = INT_MAX;\n\
    \    long index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    if (index != -1) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if (arr.size() == 0) {\n        return res;\n    }\n    long min =\
    \ INT_MAX;\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n \
    \           index = i;\n        }\n    }\n    if (min == INT_MAX) {\n        return\
    \ res;\n    }\n    res.push_back(min);\n    res.push_back(index);\n    return\
    \ res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return\
    \ result;\n    }\n    long min = arr[0];\n    long minIndex = 0;\n    for (int\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n            if\
    \ (arr[i] < min) {\n                min = arr[i];\n                minIndex =\
    \ i;\n            }\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = INT_MAX;\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min == INT_MAX) {\n       \
    \ return result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n\
    \    return result;", "    std::vector<long> res;\n    if(arr.size() == 0) return\
    \ res;\n    long min = INT_MAX;\n    long index = -1;\n    for(int i = 0; i <\
    \ arr.size(); i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n          \
    \  min = arr[i];\n            index = i;\n        }\n    }\n    if(index == -1)\
    \ return res;\n    res.push_back(min);\n    res.push_back(index);\n    return\
    \ res;", "    std::vector<long> res;\n    if(arr.size() == 0) return res;\n  \
    \  long min = INT_MAX;\n    int index = 0;\n    for(int i = 0; i < arr.size();\
    \ i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if(min == INT_MAX) return res;\n\
    \    res.push_back(min);\n    res.push_back(index);\n    return res;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min = INT_MAX;\n    int\
    \ min_index = -1;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min){\n            min = arr[i];\n            min_index\
    \ = i;\n        }\n    }\n    if(min_index == -1) return res;\n    res.push_back(min);\n\
    \    res.push_back(min_index);\n    return res;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min_even\
    \ = INT_MAX;\n    long min_even_index = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min_even) {\n            min_even\
    \ = arr[i];\n            min_even_index = i;\n        }\n    }\n    if (min_even_index\
    \ == -1) {\n        return result;\n    }\n    result.push_back(min_even);\n \
    \   result.push_back(min_even_index);\n    return result;", "    std::vector<long>\
    \ result;\n    long min = INT_MAX;\n    long index = -1;\n    for (int i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n   \
    \         min = arr[i];\n            index = i;\n        }\n    }\n    if (index\
    \ != -1) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min_even = LONG_MAX;\n    long\
    \ min_even_index = LONG_MAX;\n    for (long i = 0; i < arr.size(); i++) {\n  \
    \      if (arr[i] % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n\
    \            min_even_index = i;\n        }\n    }\n    if (min_even == LONG_MAX)\
    \ {\n        return result;\n    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           min_index = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n  \
    \      }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n   \
    \     result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    int min_even = INT_MAX;\n   \
    \ int min_even_idx = -1;\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n         \
    \   min_even_idx = i;\n        }\n    }\n    if(min_even_idx == -1) return res;\n\
    \    res.push_back(min_even);\n    res.push_back(min_even_idx);\n    return res;",
  "    std::vector<long> result;\n    long min = INT_MAX;\n    long min_index = INT_MAX;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            min_index = i;\n        }\n\
    \    }\n    if (min != INT_MAX) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n  \
    \      }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n   \
    \     result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long min = INT_MAX;\n    int index = -1;\n    for(int i = 0; i\
    \ < arr.size(); i++) {\n        if(arr[i] % 2 == 0 && arr[i] < min) {\n      \
    \      min = arr[i];\n            index = i;\n        }\n    }\n    if(index !=\
    \ -1) {\n        result.push_back(min);\n        result.push_back(index);\n  \
    \  }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min_even = LONG_MAX;\n    long\
    \ min_index = LONG_MAX;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n \
    \           min_index = i;\n        }\n    }\n    if (min_even == LONG_MAX) {\n\
    \        return result;\n    }\n    result.push_back(min_even);\n    result.push_back(min_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min_even = LONG_MAX;\n    long min_even_index\
    \ = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min_even) {\n            min_even = arr[i];\n            min_even_index\
    \ = i;\n        }\n    }\n    if (min_even_index == -1) {\n        return result;\n\
    \    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> res;\n    if(arr.size() == 0)\n \
    \       return res;\n    long min = INT_MAX;\n    long index = -1;\n    for(int\
    \ i = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n\
    \            min = arr[i];\n            index = i;\n        }\n    }\n    if(index\
    \ == -1)\n        return res;\n    res.push_back(min);\n    res.push_back(index);\n\
    \    return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = INT_MAX;\n    long index = -1;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (index == -1) {\n        return result;\n    }\n    result.push_back(min);\n\
    \    result.push_back(index);\n    return result;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long smallestEven\
    \ = -1;\n    long smallestEvenIndex = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0) {\n            if (smallestEven == -1)\
    \ {\n                smallestEven = arr[i];\n                smallestEvenIndex\
    \ = i;\n            } else if (arr[i] < smallestEven) {\n                smallestEven\
    \ = arr[i];\n                smallestEvenIndex = i;\n            }\n        }\n\
    \    }\n    if (smallestEven == -1) {\n        return result;\n    }\n    result.push_back(smallestEven);\n\
    \    result.push_back(smallestEvenIndex);\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0)\n        return res;\n    long min = INT_MAX;\n\
    \    long min_index = INT_MAX;\n    for(int i = 0; i < arr.size(); i++){\n   \
    \     if(arr[i] % 2 == 0 && arr[i] < min){\n            min = arr[i];\n      \
    \      min_index = i;\n        }\n    }\n    if(min == INT_MAX)\n        return\
    \ res;\n    res.push_back(min);\n    res.push_back(min_index);\n    return res;",
  "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min = arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min_even = -1;\n    long min_even_index = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0) {\n            if (min_even == -1) {\n\
    \                min_even = arr[i];\n                min_even_index = i;\n   \
    \         } else {\n                if (arr[i] < min_even) {\n               \
    \     min_even = arr[i];\n                    min_even_index = i;\n          \
    \      }\n            }\n        }\n    }\n    if (min_even == -1) {\n       \
    \ return result;\n    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min_even = LONG_MAX;\n    long min_even_index\
    \ = LONG_MAX;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n         \
    \   min_even_index = i;\n        }\n    }\n    if (min_even == LONG_MAX) {\n \
    \       return result;\n    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\n\
    \        return result;\n    long min = arr[0];\n    long index = 0;\n    for\
    \ (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] <\
    \ min) {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    if(arr.size() ==\
    \ 0) return res;\n    long min = INT_MAX;\n    long index = -1;\n    for(int i\
    \ = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n \
    \           min = arr[i];\n            index = i;\n        }\n    }\n    if(index\
    \ == -1) return res;\n    res.push_back(min);\n    res.push_back(index);\n   \
    \ return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n \
    \       return result;\n    }\n    long min = arr[0];\n    long minIndex = 0;\n\
    \    bool found = false;\n    for (int i = 0; i < arr.size(); i++) {\n       \
    \ if (arr[i] % 2 == 0) {\n            if (!found) {\n                min = arr[i];\n\
    \                minIndex = i;\n                found = true;\n            } else\
    \ {\n                if (arr[i] < min) {\n                    min = arr[i];\n\
    \                    minIndex = i;\n                }\n            }\n       \
    \ }\n    }\n    if (found) {\n        result.push_back(min);\n        result.push_back(minIndex);\n\
    \    }\n    return result;", "    if(arr.size()==0)\n        return {};\n    long\
    \ min=arr[0];\n    int index=0;\n    for(int i=0;i<arr.size();i++){\n        if(arr[i]%2==0){\n\
    \            if(arr[i]<min){\n                min=arr[i];\n                index=i;\n\
    \            }\n        }\n    }\n    if(min%2==0)\n        return {min,index};\n\
    \    else\n        return {};", "    std::vector<long> res;\n    if (arr.size()\
    \ == 0) {\n        return res;\n    }\n    long min_even = INT_MAX;\n    long\
    \ min_even_idx = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n         \
    \   min_even_idx = i;\n        }\n    }\n    if (min_even_idx == -1) {\n     \
    \   return res;\n    }\n    res.push_back(min_even);\n    res.push_back(min_even_idx);\n\
    \    return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = arr[0];\n    long index = 0;\n\
    \    bool found = false;\n    for (int i = 0; i < arr.size(); i++) {\n       \
    \ if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n                min\
    \ = arr[i];\n                index = i;\n                found = true;\n     \
    \       }\n        }\n    }\n    if (found) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ smallest = arr[0];\n    int index = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < smallest) {\n\
    \                smallest = arr[i];\n                index = i;\n            }\n\
    \        }\n    }\n    if (smallest % 2 == 0) {\n        result.push_back(smallest);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long min = INT_MAX;\n    int index = -1;\n    for (int i = 0; i\
    \ < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n     \
    \       min = arr[i];\n            index = i;\n        }\n    }\n    if (index\
    \ != -1) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    long min = INT_MAX;\n\
    \    long index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    if (index == -1) {\n        return result;\n\
    \    }\n    result.push_back(min);\n    result.push_back(index);\n    return result;",
  "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min = arr[0];\n    long minIndex = 0;\n    for (int i = 0; i\
    \ < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n            if (arr[i]\
    \ < min) {\n                min = arr[i];\n                minIndex = i;\n   \
    \         }\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if (arr.size() == 0) {\n        return res;\n    }\n    long min =\
    \ INT_MAX;\n    int index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n \
    \           index = i;\n        }\n    }\n    if (index == -1) {\n        return\
    \ res;\n    }\n    res.push_back(min);\n    res.push_back(index);\n    return\
    \ res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return\
    \ result;\n    }\n    long min = arr[0];\n    long min_index = 0;\n    for (long\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n            if\
    \ (arr[i] < min) {\n                min = arr[i];\n                min_index =\
    \ i;\n            }\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(min_index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min_even = LONG_MAX;\n    long min_index = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min_even) {\n            min_even\
    \ = arr[i];\n            min_index = i;\n        }\n    }\n    if (min_index ==\
    \ -1) {\n        return result;\n    }\n    result.push_back(min_even);\n    result.push_back(min_index);\n\
    \    return result;", "    std::vector<long> res;\n    long min = INT_MAX;\n \
    \   long min_index = INT_MAX;\n    for (int i = 0; i < arr.size(); i++) {\n  \
    \      if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n   \
    \         min_index = i;\n        }\n    }\n    if (min == INT_MAX) {\n      \
    \  return res;\n    }\n    res.push_back(min);\n    res.push_back(min_index);\n\
    \    return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = arr[0];\n    long min_index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n\
    \            if (arr[i] < min) {\n                min = arr[i];\n            \
    \    min_index = i;\n            }\n        }\n    }\n    if (min % 2 == 0) {\n\
    \        result.push_back(min);\n        result.push_back(min_index);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    long min = INT_MAX;\n\
    \    long index = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    if (min == INT_MAX) {\n        return result;\n\
    \    }\n    result.push_back(min);\n    result.push_back(index);\n    return result;",
  "    std::vector<long> result;\n    int min_even = INT_MAX;\n    int min_even_index\
    \ = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min_even) {\n            min_even = arr[i];\n            min_even_index\
    \ = i;\n        }\n    }\n    if (min_even_index != -1) {\n        result.push_back(min_even);\n\
    \        result.push_back(min_even_index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long minIndex = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n  \
    \              min = arr[i];\n                minIndex = i;\n            }\n \
    \       }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n  \
    \      result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = INT_MAX;\n    long min_index = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            min_index = i;\n        }\n    }\n    if (min_index == -1) {\n  \
    \      return result;\n    }\n    result.push_back(min);\n    result.push_back(min_index);\n\
    \    return result;", "    std::vector<long> res;\n    if(arr.size() == 0) return\
    \ res;\n    long min = INT_MAX;\n    long min_index = INT_MAX;\n    for(int i\
    \ = 0; i < arr.size(); i++){\n        if(arr[i]%2 == 0 && arr[i] < min){\n   \
    \         min = arr[i];\n            min_index = i;\n        }\n    }\n    if(min\
    \ == INT_MAX) return res;\n    res.push_back(min);\n    res.push_back(min_index);\n\
    \    return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = arr[0];\n    long minIndex = 0;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n\
    \            if (arr[i] < min) {\n                min = arr[i];\n            \
    \    minIndex = i;\n            }\n        }\n    }\n    if (min % 2 == 0) {\n\
    \        result.push_back(min);\n        result.push_back(minIndex);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min_even = LONG_MAX;\n    long min_even_index\
    \ = LONG_MAX;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n         \
    \   min_even_index = i;\n        }\n    }\n    if (min_even == LONG_MAX) {\n \
    \       return result;\n    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min_even = INT_MAX;\n    int min_even_index\
    \ = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min_even) {\n            min_even = arr[i];\n            min_even_index\
    \ = i;\n        }\n    }\n    if (min_even_index == -1) {\n        return result;\n\
    \    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min_even = INT_MAX;\n    long min_index\
    \ = INT_MAX;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n         \
    \   min_index = i;\n        }\n    }\n    if (min_even == INT_MAX) {\n       \
    \ return result;\n    }\n    result.push_back(min_even);\n    result.push_back(min_index);\n\
    \    return result;", "    std::vector<long> res;\n    if(arr.size() == 0) return\
    \ res;\n    long min = INT_MAX;\n    int index = 0;\n    for(int i = 0; i < arr.size();\
    \ i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if(min == INT_MAX) return res;\n\
    \    res.push_back(min);\n    res.push_back(index);\n    return res;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min_even = INT_MAX;\n  \
    \  int min_even_index = -1;\n    for(int i = 0; i < arr.size(); i++){\n      \
    \  if(arr[i] % 2 == 0 && arr[i] < min_even){\n            min_even = arr[i];\n\
    \            min_even_index = i;\n        }\n    }\n    if(min_even_index == -1)\
    \ return res;\n    res.push_back(min_even);\n    res.push_back(min_even_index);\n\
    \    return res;", "    std::vector<long> result;\n    long min = INT_MAX;\n \
    \   long index = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    if (index != -1) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if (arr.size() == 0) {\n        return res;\n    }\n    long min =\
    \ arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++) {\n \
    \       if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n  \
    \          index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        res.push_back(min);\n\
    \        res.push_back(index);\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long min_index = 0;\n    bool found = false;\n    for (long\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n            if\
    \ (!found) {\n                min = arr[i];\n                min_index = i;\n\
    \                found = true;\n            } else {\n                if (arr[i]\
    \ < min) {\n                    min = arr[i];\n                    min_index =\
    \ i;\n                }\n            }\n        }\n    }\n    if (found) {\n \
    \       result.push_back(min);\n        result.push_back(min_index);\n    }\n\
    \    return result;", "    std::vector<long> res;\n    if(arr.size() == 0) return\
    \ res;\n    long min = INT_MAX;\n    int index = -1;\n    for(int i = 0; i < arr.size();\
    \ i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if(index == -1) return res;\n \
    \   res.push_back(min);\n    res.push_back(index);\n    return res;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0)\n        return res;\n    long min = INT_MAX;\n\
    \    long index = -1;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(index != -1){\n        res.push_back(min);\n       \
    \ res.push_back(index);\n    }\n    return res;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min_even\
    \ = INT_MAX;\n    long min_index = INT_MAX;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min_even) {\n            min_even\
    \ = arr[i];\n            min_index = i;\n        }\n    }\n    if (min_even ==\
    \ INT_MAX) {\n        return result;\n    }\n    result.push_back(min_even);\n\
    \    result.push_back(min_index);\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long min_even = INT_MAX;\n    long min_even_index = -1;\n    for\
    \ (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n      \
    \      if (arr[i] < min_even) {\n                min_even = arr[i];\n        \
    \        min_even_index = i;\n            }\n        }\n    }\n    if (min_even_index\
    \ == -1) {\n        return result;\n    }\n    result.push_back(min_even);\n \
    \   result.push_back(min_even_index);\n    return result;", "    std::vector<long>\
    \ res;\n    long min = INT_MAX;\n    int index = -1;\n    for(int i = 0; i < arr.size();\
    \ i++) {\n        if(arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if(index == -1) {\n        return\
    \ res;\n    }\n    res.push_back(min);\n    res.push_back(index);\n    return\
    \ res;", "    std::vector<long> res;\n    if(arr.size()==0)\n        return res;\n\
    \    long min=INT_MAX;\n    int index=-1;\n    for(int i=0;i<arr.size();i++){\n\
    \        if(arr[i]%2==0 && arr[i]<min){\n            min=arr[i];\n           \
    \ index=i;\n        }\n    }\n    if(index==-1)\n        return res;\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "    std::vector<long> res;\n  \
    \  if(arr.size() == 0)\n        return res;\n    long min = arr[0];\n    long\
    \ min_index = 0;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min){\n            min = arr[i];\n            min_index\
    \ = i;\n        }\n    }\n    if(min % 2 == 0){\n        res.push_back(min);\n\
    \        res.push_back(min_index);\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long minIndex = 0;\n    bool isEven = false;\n    for (int\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n            isEven\
    \ = true;\n            if (arr[i] < min) {\n                min = arr[i];\n  \
    \              minIndex = i;\n            }\n        }\n    }\n    if (isEven)\
    \ {\n        result.push_back(min);\n        result.push_back(minIndex);\n   \
    \ }\n    return result;", "    std::vector<long> result;\n    if (arr.size() ==\
    \ 0) {\n        return result;\n    }\n    long min = arr[0];\n    long index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n  \
    \      }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n   \
    \     result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min_even = INT_MAX;\n  \
    \  long min_index = INT_MAX;\n    for(int i = 0; i < arr.size(); i++){\n     \
    \   if(arr[i] % 2 == 0 && arr[i] < min_even){\n            min_even = arr[i];\n\
    \            min_index = i;\n        }\n    }\n    if(min_even == INT_MAX) return\
    \ res;\n    res.push_back(min_even);\n    res.push_back(min_index);\n    return\
    \ res;", "    if(arr.size() == 0) return {};\n    long min = INT_MAX;\n    long\
    \ index = -1;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2\
    \ == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(min == INT_MAX) return {};\n    return {min, index};",
  "    std::vector<long> res;\n    if(arr.size() == 0)\n        return res;\n    long\
    \ min = INT_MAX;\n    long index = -1;\n    for(int i = 0; i < arr.size(); i++){\n\
    \        if(arr[i] % 2 == 0 && arr[i] < min){\n            min = arr[i];\n   \
    \         index = i;\n        }\n    }\n    if(index == -1)\n        return res;\n\
    \    res.push_back(min);\n    res.push_back(index);\n    return res;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long minIndex = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n  \
    \              min = arr[i];\n                minIndex = i;\n            }\n \
    \       }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n  \
    \      result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min = arr[0];\n    long\
    \ index = 0;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2\
    \ == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(min % 2 == 0){\n        res.push_back(min);\n      \
    \  res.push_back(index);\n    }\n    return res;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long smallest_even\
    \ = -1;\n    long smallest_even_index = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0) {\n            if (smallest_even == -1)\
    \ {\n                smallest_even = arr[i];\n                smallest_even_index\
    \ = i;\n            } else if (arr[i] < smallest_even) {\n                smallest_even\
    \ = arr[i];\n                smallest_even_index = i;\n            }\n       \
    \ }\n    }\n    if (smallest_even == -1) {\n        return result;\n    }\n  \
    \  result.push_back(smallest_even);\n    result.push_back(smallest_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    long index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    int n = arr.size();\n    int min_even = INT_MAX;\n\
    \    int min_even_index = -1;\n    for(int i = 0; i < n; i++) {\n        if(arr[i]\
    \ % 2 == 0) {\n            if(arr[i] < min_even) {\n                min_even =\
    \ arr[i];\n                min_even_index = i;\n            }\n        }\n   \
    \ }\n    if(min_even_index == -1) {\n        return {};\n    }\n    return {min_even,\
    \ min_even_index};", "    std::vector<long> res;\n    if(arr.size() == 0)\n  \
    \      return res;\n    long min = INT_MAX;\n    long index = -1;\n    for(int\
    \ i = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n\
    \            min = arr[i];\n            index = i;\n        }\n    }\n    if(index\
    \ != -1){\n        res.push_back(min);\n        res.push_back(index);\n    }\n\
    \    return res;", "    std::vector<long> result;\n    long min_even = -1;\n \
    \   long min_even_index = -1;\n    for (long i = 0; i < arr.size(); i++) {\n \
    \       if (arr[i] % 2 == 0) {\n            if (min_even == -1) {\n          \
    \      min_even = arr[i];\n                min_even_index = i;\n            }\
    \ else if (arr[i] < min_even) {\n                min_even = arr[i];\n        \
    \        min_even_index = i;\n            }\n        }\n    }\n    if (min_even\
    \ != -1) {\n        result.push_back(min_even);\n        result.push_back(min_even_index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min_even = INT_MAX;\n    long\
    \ min_even_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n \
    \           min_even_index = i;\n        }\n    }\n    if (min_even_index == -1)\
    \ {\n        return result;\n    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           min_index = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           min_index = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    if(arr.size() ==\
    \ 0) return res;\n    long min = INT_MAX;\n    long index = -1;\n    for(long\
    \ i = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n\
    \            min = arr[i];\n            index = i;\n        }\n    }\n    if(index\
    \ == -1) return res;\n    res.push_back(min);\n    res.push_back(index);\n   \
    \ return res;", "    std::vector<long> result;\n    int min = INT_MAX;\n    int\
    \ index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (index != -1) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min_even = INT_MAX;\n    long min_even_index = INT_MAX;\n    for (int i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min_even) {\n\
    \            min_even = arr[i];\n            min_even_index = i;\n        }\n\
    \    }\n    if (min_even == INT_MAX) {\n        return result;\n    }\n    result.push_back(min_even);\n\
    \    result.push_back(min_even_index);\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min_even = INT_MAX;\n    long min_even_index = -1;\n    for (int i = 0; i <\
    \ arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min_even) {\n  \
    \          min_even = arr[i];\n            min_even_index = i;\n        }\n  \
    \  }\n    if (min_even_index == -1) {\n        return result;\n    }\n    result.push_back(min_even);\n\
    \    result.push_back(min_even_index);\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min = INT_MAX;\n    int\
    \ index = -1;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2\
    \ == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(index == -1) return res;\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "    std::vector<long> result;\n\
    \    long min = INT_MAX;\n    long index = INT_MAX;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min != INT_MAX) {\n       \
    \ result.push_back(min);\n        result.push_back(index);\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    long min = INT_MAX;\n    long\
    \ index = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (min == INT_MAX) {\n        return result;\n  \
    \  }\n    result.push_back(min);\n    result.push_back(index);\n    return result;",
  "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min = arr[0];\n    long min_index = 0;\n    for (long i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n            if (arr[i]\
    \ < min) {\n                min = arr[i];\n                min_index = i;\n  \
    \          }\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(min_index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long minIndex = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n  \
    \              min = arr[i];\n                minIndex = i;\n            }\n \
    \       }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n  \
    \      result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min = arr[0];\n    int index\
    \ = 0;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0 &&\
    \ arr[i] < min){\n            min = arr[i];\n            index = i;\n        }\n\
    \    }\n    if(min % 2 == 0){\n        res.push_back(min);\n        res.push_back(index);\n\
    \    }\n    return res;", "  std::vector<long> result;\n  if (arr.size() == 0)\
    \ {\n    return result;\n  }\n  long min_even = INT_MAX;\n  long min_even_index\
    \ = INT_MAX;\n  for (long i = 0; i < arr.size(); i++) {\n    if (arr[i] % 2 ==\
    \ 0 && arr[i] < min_even) {\n      min_even = arr[i];\n      min_even_index =\
    \ i;\n    }\n  }\n  if (min_even == INT_MAX) {\n    return result;\n  }\n  result.push_back(min_even);\n\
    \  result.push_back(min_even_index);\n  return result;", "  std::vector<long>\
    \ result;\n  if (arr.size() == 0) {\n    return result;\n  }\n  long min_even\
    \ = std::numeric_limits<long>::max();\n  long min_index = 0;\n  for (long i =\
    \ 0; i < arr.size(); i++) {\n    if (arr[i] % 2 == 0 && arr[i] < min_even) {\n\
    \      min_even = arr[i];\n      min_index = i;\n    }\n  }\n  if (min_even ==\
    \ std::numeric_limits<long>::max()) {\n    return result;\n  }\n  result.push_back(min_even);\n\
    \  result.push_back(min_index);\n  return result;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min = INT_MAX;\n\
    \    long index = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    if (min == INT_MAX) {\n        return result;\n\
    \    }\n    result.push_back(min);\n    result.push_back(index);\n    return result;",
  "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min = arr[0];\n    long minIndex = 0;\n    bool found = false;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n\
    \            if (!found) {\n                min = arr[i];\n                minIndex\
    \ = i;\n                found = true;\n            } else {\n                if\
    \ (arr[i] < min) {\n                    min = arr[i];\n                    minIndex\
    \ = i;\n                }\n            }\n        }\n    }\n    if (found) {\n\
    \        result.push_back(min);\n        result.push_back(minIndex);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    int index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    if(arr.size() ==\
    \ 0) return res;\n    long min = INT_MAX;\n    long index = 0;\n    for(int i\
    \ = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n \
    \           min = arr[i];\n            index = i;\n        }\n    }\n    if(min\
    \ == INT_MAX) return res;\n    res.push_back(min);\n    res.push_back(index);\n\
    \    return res;", "    std::vector<long> res;\n    if(arr.size() == 0) return\
    \ res;\n    int min = INT_MAX;\n    int index = -1;\n    for(int i = 0; i < arr.size();\
    \ i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if(index == -1) return res;\n \
    \   res.push_back(min);\n    res.push_back(index);\n    return res;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    int\
    \ min = arr[0];\n    int min_index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n       \
    \         min = arr[i];\n                min_index = i;\n            }\n     \
    \   }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n      \
    \  result.push_back(min_index);\n    }\n    return result;", "  std::vector<long>\
    \ result;\n  if (arr.size() == 0) {\n    return result;\n  }\n  long min = arr[0];\n\
    \  long min_index = 0;\n  for (int i = 0; i < arr.size(); i++) {\n    if (arr[i]\
    \ % 2 == 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n        min_index\
    \ = i;\n      }\n    }\n  }\n  if (min % 2 == 0) {\n    result.push_back(min);\n\
    \    result.push_back(min_index);\n  }\n  return result;", "    std::vector<long>\
    \ result;\n    long min = LONG_MAX;\n    long index = -1;\n    for (int i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n   \
    \         min = arr[i];\n            index = i;\n        }\n    }\n    if (index\
    \ == -1) {\n        return result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\n\
    \        return result;\n    long min = INT_MAX;\n    long index = 0;\n    for\
    \ (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] <\
    \ min) {\n            min = arr[i];\n            index = i;\n        }\n    }\n\
    \    if (min == INT_MAX)\n        return result;\n    result.push_back(min);\n\
    \    result.push_back(index);\n    return result;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min = INT_MAX;\n\
    \    int index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (index == -1) {\n        return result;\n    }\n\
    \    result.push_back(min);\n    result.push_back(index);\n    return result;",
  "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return result;\n\
    \    }\n    long min = INT_MAX;\n    long index = 0;\n    for (int i = 0; i <\
    \ arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n       \
    \     min = arr[i];\n            index = i;\n        }\n    }\n    if (min ==\
    \ INT_MAX) {\n        return result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    long minIndex\
    \ = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           minIndex = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        result.push_back(min);\n        result.push_back(minIndex);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    long min = INT_MAX;\n\
    \    long index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    if (index != -1) {\n        res.push_back(min);\n\
    \        res.push_back(index);\n    }\n    return res;", "    std::vector<long>\
    \ ans;\n    int min = INT_MAX;\n    int index = -1;\n    for(int i = 0; i < arr.size();\
    \ i++) {\n        if(arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if(index == -1) {\n        return\
    \ ans;\n    }\n    ans.push_back(min);\n    ans.push_back(index);\n    return\
    \ ans;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n        return\
    \ result;\n    }\n    long min_value = INT_MAX;\n    long min_index = INT_MAX;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min_value) {\n            min_value = arr[i];\n            min_index = i;\n\
    \        }\n    }\n    if (min_value == INT_MAX) {\n        return result;\n \
    \   }\n    result.push_back(min_value);\n    result.push_back(min_index);\n  \
    \  return result;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min_even = LONG_MAX;\n    long min_even_index\
    \ = LONG_MAX;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n         \
    \   min_even_index = i;\n        }\n    }\n    if (min_even == LONG_MAX) {\n \
    \       return result;\n    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    int index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           min_index = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    int index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            index = i;\n  \
    \      }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n   \
    \     result.push_back(index);\n    }\n    return result;", "  std::vector<long>\
    \ result;\n  if (arr.size() == 0) {\n    return result;\n  }\n  long min = arr[0];\n\
    \  long index = 0;\n  for (long i = 0; i < arr.size(); i++) {\n    if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n      min = arr[i];\n      index = i;\n    }\n\
    \  }\n  if (min % 2 == 0) {\n    result.push_back(min);\n    result.push_back(index);\n\
    \  }\n  return result;", "    std::vector<long> result;\n    if (arr.size() ==\
    \ 0) {\n        return result;\n    }\n    long min = arr[0];\n    int index =\
    \ 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0\
    \ && arr[i] < min) {\n            min = arr[i];\n            index = i;\n    \
    \    }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n     \
    \   result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0)\n        return res;\n    int min = INT_MAX;\n\
    \    int index = -1;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(index == -1)\n        return res;\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min = arr[0];\n\
    \    long index = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long minIndex = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n       \
    \         min = arr[i];\n                minIndex = i;\n            }\n      \
    \  }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n       \
    \ result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0)\n        return res;\n    long min = INT_MAX;\n\
    \    long index = -1;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(index == -1)\n        return res;\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "    std::vector<long> result;\n\
    \    long min = INT_MAX;\n    long index = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min == INT_MAX) {\n       \
    \ return result;\n    }\n    result.push_back(min);\n    result.push_back(index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min_even = -1;\n    long min_even_index\
    \ = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (min_even == -1) {\n                min_even = arr[i];\n\
    \                min_even_index = i;\n            } else {\n                if\
    \ (arr[i] < min_even) {\n                    min_even = arr[i];\n            \
    \        min_even_index = i;\n                }\n            }\n        }\n  \
    \  }\n    if (min_even == -1) {\n        return result;\n    }\n    result.push_back(min_even);\n\
    \    result.push_back(min_even_index);\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0)\n        return res;\n    long min = INT_MAX;\n\
    \    int index = -1;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(index == -1)\n        return res;\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min_even\
    \ = -1;\n    long min_even_index = -1;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0) {\n            if (min_even == -1) {\n     \
    \           min_even = arr[i];\n                min_even_index = i;\n        \
    \    } else {\n                if (arr[i] < min_even) {\n                    min_even\
    \ = arr[i];\n                    min_even_index = i;\n                }\n    \
    \        }\n        }\n    }\n    if (min_even == -1) {\n        return result;\n\
    \    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    long min_index\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0) {\n            if (arr[i] < min) {\n                min = arr[i];\n     \
    \           min_index = i;\n            }\n        }\n    }\n    if (min % 2 ==\
    \ 0) {\n        result.push_back(min);\n        result.push_back(min_index);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    if(arr.size() ==\
    \ 0)\n        return res;\n    long min = arr[0];\n    int index = 0;\n    for(int\
    \ i = 0; i < arr.size(); i++){\n        if(arr[i] < min && arr[i] % 2 == 0){\n\
    \            min = arr[i];\n            index = i;\n        }\n    }\n    if(min\
    \ % 2 == 0){\n        res.push_back(min);\n        res.push_back(index);\n   \
    \ }\n    return res;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    long index = 0;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    if (arr.size()\
    \ == 0) {\n        return result;\n    }\n    long min = arr[0];\n    int minIndex\
    \ = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 ==\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            minIndex = i;\n\
    \        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n \
    \       result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long min = INT_MAX;\n    long index = -1;\n    for (int i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n   \
    \         min = arr[i];\n            index = i;\n        }\n    }\n    if (index\
    \ != -1) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    long min = INT_MAX;\n\
    \    long index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n           \
    \ index = i;\n        }\n    }\n    if (index != -1) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min = INT_MAX;\n    long\
    \ min_index = INT_MAX;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min){\n            min = arr[i];\n            min_index\
    \ = i;\n        }\n    }\n    if(min == INT_MAX) return res;\n    res.push_back(min);\n\
    \    res.push_back(min_index);\n    return res;", "    std::vector<long> res;\n\
    \    if(arr.size() == 0)\n        return res;\n    long min = INT_MAX;\n    long\
    \ index = 0;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2\
    \ == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(min == INT_MAX)\n        return res;\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min = arr[0];\n\
    \    long index = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n            index =\
    \ i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long min_index = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n  \
    \              min = arr[i];\n                min_index = i;\n            }\n\
    \        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n \
    \       result.push_back(min_index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min = INT_MAX;\n    int\
    \ index = -1;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2\
    \ == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(index == -1) return res;\n    res.push_back(min);\n\
    \    res.push_back(index);\n    return res;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min_even\
    \ = INT_MAX;\n    long min_even_index = INT_MAX;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min_even) {\n            min_even\
    \ = arr[i];\n            min_even_index = i;\n        }\n    }\n    if (min_even\
    \ == INT_MAX) {\n        return result;\n    }\n    result.push_back(min_even);\n\
    \    result.push_back(min_even_index);\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long index = 0;\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    long min = INT_MAX;\n    long index = -1;\n    for (int i = 0; i <\
    \ arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n       \
    \     min = arr[i];\n            index = i;\n        }\n    }\n    if (index !=\
    \ -1) {\n        res.push_back(min);\n        res.push_back(index);\n    }\n \
    \   return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = arr[0];\n    int index = 0;\n \
    \   for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    if(arr.size() ==\
    \ 0) return res;\n    long min = LONG_MAX;\n    long index = -1;\n    for(int\
    \ i = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n\
    \            min = arr[i];\n            index = i;\n        }\n    }\n    if(index\
    \ == -1) return res;\n    res.push_back(min);\n    res.push_back(index);\n   \
    \ return res;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n \
    \       return result;\n    }\n    long min = arr[0];\n    int index = 0;\n  \
    \  for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            index = i;\n        }\n   \
    \ }\n    if (min % 2 == 0) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    if(arr.size() ==\
    \ 0) return res;\n    long min = INT_MAX;\n    long min_index = -1;\n    for(int\
    \ i = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n\
    \            min = arr[i];\n            min_index = i;\n        }\n    }\n   \
    \ if(min_index == -1) return res;\n    res.push_back(min);\n    res.push_back(min_index);\n\
    \    return res;", "    std::vector<long> res;\n    if(arr.size() == 0) return\
    \ res;\n    long min = INT_MAX;\n    int index = 0;\n    for(int i = 0; i < arr.size();\
    \ i++){\n        if(arr[i] % 2 == 0 && arr[i] < min){\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if(min == INT_MAX) return res;\n\
    \    res.push_back(min);\n    res.push_back(index);\n    return res;", "    std::vector<long>\
    \ result;\n    long min = INT_MAX;\n    long index = -1;\n    for (int i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n   \
    \         min = arr[i];\n            index = i;\n        }\n    }\n    if (index\
    \ != -1) {\n        result.push_back(min);\n        result.push_back(index);\n\
    \    }\n    return result;", "    // your code here\n    std::vector<long> result;\n\
    \    if(arr.size() == 0)\n        return result;\n    long min = INT_MAX;\n  \
    \  long index = -1;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i]\
    \ % 2 == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(index == -1)\n        return result;\n    result.push_back(min);\n\
    \    result.push_back(index);\n    return result;", "    std::vector<long> result;\n\
    \    if (arr.size() == 0) {\n        return result;\n    }\n    long min_even\
    \ = LONG_MAX;\n    long min_even_index = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0 && arr[i] < min_even) {\n            min_even\
    \ = arr[i];\n            min_even_index = i;\n        }\n    }\n    if (min_even_index\
    \ == -1) {\n        return result;\n    }\n    result.push_back(min_even);\n \
    \   result.push_back(min_even_index);\n    return result;", "    std::vector<long>\
    \ res;\n    if(arr.size() == 0) return res;\n    long min = arr[0];\n    long\
    \ index = 0;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2\
    \ == 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n\
    \        }\n    }\n    if(min % 2 == 0){\n        res.push_back(min);\n      \
    \  res.push_back(index);\n    }\n    return res;", "  std::vector<long> result;\n\
    \  long min_even = INT_MAX;\n  long min_even_index = INT_MAX;\n  for (int i =\
    \ 0; i < arr.size(); i++) {\n    if (arr[i] % 2 == 0 && arr[i] < min_even) {\n\
    \      min_even = arr[i];\n      min_even_index = i;\n    }\n  }\n  if (min_even\
    \ == INT_MAX) {\n    return result;\n  }\n  result.push_back(min_even);\n  result.push_back(min_even_index);\n\
    \  return result;", "    std::vector<long> result;\n    if (arr.size() == 0) {\n\
    \        return result;\n    }\n    long min = arr[0];\n    long minIndex = 0;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0) {\n\
    \            if (arr[i] < min) {\n                min = arr[i];\n            \
    \    minIndex = i;\n            }\n        }\n    }\n    if (min % 2 == 0) {\n\
    \        result.push_back(min);\n        result.push_back(minIndex);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min_even = INT_MAX;\n    long min_even_index\
    \ = INT_MAX;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] %\
    \ 2 == 0 && arr[i] < min_even) {\n            min_even = arr[i];\n           \
    \ min_even_index = i;\n        }\n    }\n    if (min_even == INT_MAX) {\n    \
    \    return result;\n    }\n    result.push_back(min_even);\n    result.push_back(min_even_index);\n\
    \    return result;", "    std::vector<long> result;\n    if (arr.size() == 0)\
    \ {\n        return result;\n    }\n    long min = arr[0];\n    int minIndex =\
    \ 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] % 2 == 0\
    \ && arr[i] < min) {\n            min = arr[i];\n            minIndex = i;\n \
    \       }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n  \
    \      result.push_back(minIndex);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    int index = 0;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] % 2 == 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            index = i;\n        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n\
    \        result.push_back(index);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    if (arr.size() == 0) {\n        return result;\n    }\n    long\
    \ min = arr[0];\n    long min_index = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] % 2 == 0) {\n            if (arr[i] < min) {\n  \
    \              min = arr[i];\n                min_index = i;\n            }\n\
    \        }\n    }\n    if (min % 2 == 0) {\n        result.push_back(min);\n \
    \       result.push_back(min_index);\n    }\n    return result;"]
stop_tokens:
- "\n}"

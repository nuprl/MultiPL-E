language: cpp
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ n : numbers) {\n        if (set.find(n) == set.end()) {\n            result.push_back(n);\n\
    \            set.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi3vfrn8p.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpi3vfrn8p.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpi3vfrn8p.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpi3vfrn8p.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpi3vfrn8p.cpp:10:15: error: 'n' does not name a type\n\
    \     for (auto n : numbers) {\n               ^\n/tmp/tmpi3vfrn8p.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpi3vfrn8p.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpi3vfrn8p.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpi3vfrn8p.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpi3vfrn8p.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpi3vfrn8p.cpp: In function 'int main()':\n/tmp/tmpi3vfrn8p.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi3vfrn8p.cpp:2:\n/tmp/tmpi3vfrn8p.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpi3vfrn8p.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpi3vfrn8p.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \         "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto\
    \ i : numbers) {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo4tjnl7k.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpo4tjnl7k.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpo4tjnl7k.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpo4tjnl7k.cpp:9:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpo4tjnl7k.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpo4tjnl7k.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpo4tjnl7k.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpo4tjnl7k.cpp: In function 'int main()':\n/tmp/tmpo4tjnl7k.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpo4tjnl7k.cpp:2:\n/tmp/tmpo4tjnl7k.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpo4tjnl7k.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpo4tjnl7k.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \             "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7985r2y3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp7985r2y3.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmp7985r2y3.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmp7985r2y3.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmp7985r2y3.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmp7985r2y3.cpp:11:13: error: 'set' was not declared\
    \ in this scope\n         if (set.find(number) == set.end()) {\n             ^\n\
    /tmp/tmp7985r2y3.cpp:11:13: note: suggested alternative:\nIn file included from\
    \ /usr/include/c++/4.8.2/set:61:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp7985r2y3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_set.h:90:11:\
    \ note:   'std::set'\n     class set\n           ^\n/tmp/tmp7985r2y3.cpp: In function\
    \ 'int main()':\n/tmp/tmp7985r2y3.cpp:19:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = remove_duplicates;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7985r2y3.cpp:2:\n/tmp/tmp7985r2y3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp7985r2y3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp7985r2y3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(cand"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto\
    \ n : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9kad_q1c.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp9kad_q1c.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmp9kad_q1c.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmp9kad_q1c.cpp:9:24: error: expected ';'\
    \ before 'long'\n/tmp/tmp9kad_q1c.cpp:10:15: error: 'n' does not name a type\n\
    \     for (auto n : numbers) {\n               ^\n/tmp/tmp9kad_q1c.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmp9kad_q1c.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp9kad_q1c.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp9kad_q1c.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp9kad_q1c.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp9kad_q1c.cpp: In function 'int main()':\n/tmp/tmp9kad_q1c.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9kad_q1c.cpp:2:\n/tmp/tmp9kad_q1c.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9kad_q1c.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp9kad_q1c.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \             "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6avvis7.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpt6avvis7.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpt6avvis7.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpt6avvis7.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpt6avvis7.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpt6avvis7.cpp: In function 'int main()':\n/tmp/tmpt6avvis7.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt6avvis7.cpp:2:\n/tmp/tmpt6avvis7.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpt6avvis7.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpt6avvis7.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7985r2y3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp7985r2y3.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmp7985r2y3.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmp7985r2y3.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmp7985r2y3.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmp7985r2y3.cpp:11:13: error: 'set' was not declared\
    \ in this scope\n         if (set.find(number) == set.end()) {\n             ^\n\
    /tmp/tmp7985r2y3.cpp:11:13: note: suggested alternative:\nIn file included from\
    \ /usr/include/c++/4.8.2/set:61:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp7985r2y3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_set.h:90:11:\
    \ note:   'std::set'\n     class set\n           ^\n/tmp/tmp7985r2y3.cpp: In function\
    \ 'int main()':\n/tmp/tmp7985r2y3.cpp:19:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = remove_duplicates;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7985r2y3.cpp:2:\n/tmp/tmp7985r2y3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp7985r2y3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp7985r2y3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(cand"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ i : numbers) {\n        if (set.find(i) == set.end()) {\n            result.push_back(i);\n\
    \            set.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplw3rdm_h.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmplw3rdm_h.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmplw3rdm_h.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmplw3rdm_h.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmplw3rdm_h.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmplw3rdm_h.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmplw3rdm_h.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmplw3rdm_h.cpp: In function 'int main()':\n/tmp/tmplw3rdm_h.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplw3rdm_h.cpp:2:\n/tmp/tmplw3rdm_h.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmplw3rdm_h.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmplw3rdm_h.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \         "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto\
    \ i : numbers) {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo4tjnl7k.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpo4tjnl7k.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpo4tjnl7k.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpo4tjnl7k.cpp:9:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpo4tjnl7k.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpo4tjnl7k.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpo4tjnl7k.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpo4tjnl7k.cpp: In function 'int main()':\n/tmp/tmpo4tjnl7k.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpo4tjnl7k.cpp:2:\n/tmp/tmpo4tjnl7k.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpo4tjnl7k.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpo4tjnl7k.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \             "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ i : numbers) {\n        if (set.find(i) == set.end()) {\n            result.push_back(i);\n\
    \            set.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplw3rdm_h.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmplw3rdm_h.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmplw3rdm_h.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmplw3rdm_h.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmplw3rdm_h.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmplw3rdm_h.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmplw3rdm_h.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmplw3rdm_h.cpp: In function 'int main()':\n/tmp/tmplw3rdm_h.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplw3rdm_h.cpp:2:\n/tmp/tmplw3rdm_h.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmplw3rdm_h.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmplw3rdm_h.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \         "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo9isio9z.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpo9isio9z.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpo9isio9z.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpo9isio9z.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpo9isio9z.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpo9isio9z.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpo9isio9z.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpo9isio9z.cpp: In function 'int main()':\n/tmp/tmpo9isio9z.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpo9isio9z.cpp:2:\n/tmp/tmpo9isio9z.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpo9isio9z.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpo9isio9z.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpo9isio9z.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpo9isio9z.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6avvis7.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpt6avvis7.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpt6avvis7.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpt6avvis7.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpt6avvis7.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpt6avvis7.cpp: In function 'int main()':\n/tmp/tmpt6avvis7.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt6avvis7.cpp:2:\n/tmp/tmpt6avvis7.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpt6avvis7.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpt6avvis7.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk1x274_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (auto i : numbers)\
    \ {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n         \
    \   result.push_back(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo3ftmf05.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto\
    \ i : numbers) {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo4tjnl7k.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpo4tjnl7k.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpo4tjnl7k.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpo4tjnl7k.cpp:9:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpo4tjnl7k.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpo4tjnl7k.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpo4tjnl7k.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpo4tjnl7k.cpp: In function 'int main()':\n/tmp/tmpo4tjnl7k.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpo4tjnl7k.cpp:2:\n/tmp/tmpo4tjnl7k.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpo4tjnl7k.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpo4tjnl7k.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \             "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxujxolc0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> res;\n    std::unordered_set<long> s;\n    for (auto n\
    \ : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            res.push_back(n);\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpn22hwjml.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8nkadafm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ n : numbers) {\n        if (set.find(n) == set.end()) {\n            result.push_back(n);\n\
    \            set.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi3vfrn8p.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpi3vfrn8p.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpi3vfrn8p.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpi3vfrn8p.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpi3vfrn8p.cpp:10:15: error: 'n' does not name a type\n\
    \     for (auto n : numbers) {\n               ^\n/tmp/tmpi3vfrn8p.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpi3vfrn8p.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpi3vfrn8p.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpi3vfrn8p.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpi3vfrn8p.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpi3vfrn8p.cpp: In function 'int main()':\n/tmp/tmpi3vfrn8p.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi3vfrn8p.cpp:2:\n/tmp/tmpi3vfrn8p.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpi3vfrn8p.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpi3vfrn8p.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \         "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto\
    \ i : numbers) {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo4tjnl7k.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpo4tjnl7k.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpo4tjnl7k.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpo4tjnl7k.cpp:9:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpo4tjnl7k.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpo4tjnl7k.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpo4tjnl7k.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpo4tjnl7k.cpp: In function 'int main()':\n/tmp/tmpo4tjnl7k.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpo4tjnl7k.cpp:2:\n/tmp/tmpo4tjnl7k.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpo4tjnl7k.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpo4tjnl7k.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \             "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  std::vector<long> result;\n  std::unordered_set<long> unique_numbers;\n  for\
    \ (auto number : numbers) {\n    if (unique_numbers.find(number) == unique_numbers.end())\
    \ {\n      unique_numbers.insert(number);\n      result.push_back(number);\n \
    \   }\n  }\n  return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_4z70vmg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s(numbers.begin(), numbers.end());\n\
    \    for (long i : s) {\n        result.push_back(i);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpw4xvs9by.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto\
    \ i : numbers) {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo4tjnl7k.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpo4tjnl7k.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpo4tjnl7k.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpo4tjnl7k.cpp:9:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpo4tjnl7k.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpo4tjnl7k.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpo4tjnl7k.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpo4tjnl7k.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpo4tjnl7k.cpp: In function 'int main()':\n/tmp/tmpo4tjnl7k.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpo4tjnl7k.cpp:2:\n/tmp/tmpo4tjnl7k.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpo4tjnl7k.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpo4tjnl7k.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \             "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (int\
    \ i = 0; i < numbers.size(); i++) {\n        if (set.find(numbers[i]) == set.end())\
    \ {\n            set.insert(numbers[i]);\n            result.push_back(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpdcx98udl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7985r2y3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp7985r2y3.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmp7985r2y3.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmp7985r2y3.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmp7985r2y3.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmp7985r2y3.cpp:11:13: error: 'set' was not declared\
    \ in this scope\n         if (set.find(number) == set.end()) {\n             ^\n\
    /tmp/tmp7985r2y3.cpp:11:13: note: suggested alternative:\nIn file included from\
    \ /usr/include/c++/4.8.2/set:61:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp7985r2y3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_set.h:90:11:\
    \ note:   'std::set'\n     class set\n           ^\n/tmp/tmp7985r2y3.cpp: In function\
    \ 'int main()':\n/tmp/tmp7985r2y3.cpp:19:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = remove_duplicates;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7985r2y3.cpp:2:\n/tmp/tmp7985r2y3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp7985r2y3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp7985r2y3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(cand"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk1x274_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  std::vector<long> result;\n  std::unordered_set<long> seen;\n  for (auto number\
    \ : numbers) {\n    if (seen.find(number) == seen.end()) {\n      result.push_back(number);\n\
    \      seen.insert(number);\n    }\n  }\n  return result;\n}\nint main() {\n \
    \   auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplf3_e_e3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (auto i : numbers)\
    \ {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n         \
    \   result.push_back(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo3ftmf05.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> res;\n    std::unordered_set<long> s;\n    for (int i =\
    \ 0; i < numbers.size(); i++) {\n        if (s.find(numbers[i]) == s.end()) {\n\
    \            s.insert(numbers[i]);\n            res.push_back(numbers[i]);\n \
    \       }\n    }\n    return res;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjgaolsbs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6avvis7.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpt6avvis7.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpt6avvis7.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpt6avvis7.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpt6avvis7.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpt6avvis7.cpp: In function 'int main()':\n/tmp/tmpt6avvis7.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt6avvis7.cpp:2:\n/tmp/tmpt6avvis7.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpt6avvis7.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpt6avvis7.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::map<long, int> m;\n    for (int i = 0;\
    \ i < numbers.size(); i++) {\n        m[numbers[i]]++;\n    }\n    for (int i\
    \ = 0; i < numbers.size(); i++) {\n        if (m[numbers[i]] == 1) {\n       \
    \     result.push_back(numbers[i]);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpftxhzleg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (auto n : numbers)\
    \ {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n         \
    \   result.push_back(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptyhecag1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> res;\n    std::unordered_set<long> s;\n    for (long i\
    \ : numbers) {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n\
    \            res.push_back(i);\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_cer024p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (auto n : numbers)\
    \ {\n        if (s.count(n) == 0) {\n            s.insert(n);\n            result.push_back(n);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpdzner7dn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6avvis7.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpt6avvis7.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpt6avvis7.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpt6avvis7.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpt6avvis7.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpt6avvis7.cpp: In function 'int main()':\n/tmp/tmpt6avvis7.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt6avvis7.cpp:2:\n/tmp/tmpt6avvis7.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpt6avvis7.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpt6avvis7.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (auto n : numbers)\
    \ {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n         \
    \   result.push_back(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptyhecag1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk1x274_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7985r2y3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp7985r2y3.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmp7985r2y3.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmp7985r2y3.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmp7985r2y3.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmp7985r2y3.cpp:11:13: error: 'set' was not declared\
    \ in this scope\n         if (set.find(number) == set.end()) {\n             ^\n\
    /tmp/tmp7985r2y3.cpp:11:13: note: suggested alternative:\nIn file included from\
    \ /usr/include/c++/4.8.2/set:61:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp7985r2y3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_set.h:90:11:\
    \ note:   'std::set'\n     class set\n           ^\n/tmp/tmp7985r2y3.cpp: In function\
    \ 'int main()':\n/tmp/tmp7985r2y3.cpp:19:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = remove_duplicates;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7985r2y3.cpp:2:\n/tmp/tmp7985r2y3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp7985r2y3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp7985r2y3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(cand"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk1x274_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ i : numbers) {\n        if (set.find(i) == set.end()) {\n            result.push_back(i);\n\
    \            set.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplw3rdm_h.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmplw3rdm_h.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmplw3rdm_h.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmplw3rdm_h.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmplw3rdm_h.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmplw3rdm_h.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmplw3rdm_h.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmplw3rdm_h.cpp: In function 'int main()':\n/tmp/tmplw3rdm_h.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplw3rdm_h.cpp:2:\n/tmp/tmplw3rdm_h.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmplw3rdm_h.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmplw3rdm_h.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \         "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto\
    \ it = numbers.begin(); it != numbers.end(); ++it) {\n        if (s.find(*it)\
    \ == s.end()) {\n            s.insert(*it);\n            result.push_back(*it);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo3oswc67.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  std::vector<long> result;\n  std::unordered_set<long> seen;\n  for (auto number\
    \ : numbers) {\n    if (seen.find(number) == seen.end()) {\n      result.push_back(number);\n\
    \      seen.insert(number);\n    }\n  }\n  return result;\n}\nint main() {\n \
    \   auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplf3_e_e3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> res;\n    std::unordered_set<long> s;\n    for (auto n\
    \ : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            res.push_back(n);\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpn22hwjml.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (auto i : numbers)\
    \ {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n         \
    \   result.push_back(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo3ftmf05.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::map<long, int> m;\n    for (auto i :\
    \ numbers) {\n        m[i]++;\n    }\n    for (auto i : numbers) {\n        if\
    \ (m[i] == 1) {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvylcuy7p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk1x274_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ i : numbers) {\n        if (set.find(i) == set.end()) {\n            result.push_back(i);\n\
    \            set.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplw3rdm_h.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmplw3rdm_h.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmplw3rdm_h.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmplw3rdm_h.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmplw3rdm_h.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmplw3rdm_h.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmplw3rdm_h.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmplw3rdm_h.cpp: In function 'int main()':\n/tmp/tmplw3rdm_h.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplw3rdm_h.cpp:2:\n/tmp/tmplw3rdm_h.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmplw3rdm_h.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmplw3rdm_h.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \         "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ num : numbers) {\n        if (set.find(num) == set.end()) {\n            result.push_back(num);\n\
    \            set.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfgvl5_oi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto\
    \ n : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9kad_q1c.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp9kad_q1c.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmp9kad_q1c.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmp9kad_q1c.cpp:9:24: error: expected ';'\
    \ before 'long'\n/tmp/tmp9kad_q1c.cpp:10:15: error: 'n' does not name a type\n\
    \     for (auto n : numbers) {\n               ^\n/tmp/tmp9kad_q1c.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmp9kad_q1c.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp9kad_q1c.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp9kad_q1c.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp9kad_q1c.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp9kad_q1c.cpp: In function 'int main()':\n/tmp/tmp9kad_q1c.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9kad_q1c.cpp:2:\n/tmp/tmp9kad_q1c.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9kad_q1c.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp9kad_q1c.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \             "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> set;\n    for (auto number\
    \ : numbers) {\n        if (set.find(number) == set.end()) {\n            result.push_back(number);\n\
    \            set.insert(number);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpsi8udfm3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ i : numbers) {\n        if (set.find(i) == set.end()) {\n            result.push_back(i);\n\
    \            set.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplw3rdm_h.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmplw3rdm_h.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmplw3rdm_h.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmplw3rdm_h.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmplw3rdm_h.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmplw3rdm_h.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmplw3rdm_h.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmplw3rdm_h.cpp: In function 'int main()':\n/tmp/tmplw3rdm_h.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplw3rdm_h.cpp:2:\n/tmp/tmplw3rdm_h.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmplw3rdm_h.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmplw3rdm_h.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \         "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk1x274_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  std::vector<long> result;\n  std::set<long> s;\n  for (int i = 0; i < numbers.size();\
    \ i++) {\n    if (s.find(numbers[i]) == s.end()) {\n      s.insert(numbers[i]);\n\
    \      result.push_back(numbers[i]);\n    }\n  }\n  return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpc4f9ep02.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \tstd::vector<long> result;\n\tstd::unordered_set<long> seen;\n\tfor (auto n :\
    \ numbers) {\n\t\tif (seen.find(n) == seen.end()) {\n\t\t\tresult.push_back(n);\n\
    \t\t\tseen.insert(n);\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7ob0bvy7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  std::vector<long> result;\n  std::unordered_set<long> seen;\n  for (auto n\
    \ : numbers) {\n    if (seen.find(n) == seen.end()) {\n      result.push_back(n);\n\
    \      seen.insert(n);\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzbhg_o75.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk1x274_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  std::vector<long> result;\n  std::unordered_set<long> seen;\n  for (auto number\
    \ : numbers) {\n    if (seen.find(number) == seen.end()) {\n      result.push_back(number);\n\
    \      seen.insert(number);\n    }\n  }\n  return result;\n}\nint main() {\n \
    \   auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplf3_e_e3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (auto i : numbers)\
    \ {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n         \
    \   result.push_back(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo3ftmf05.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (auto i : numbers)\
    \ {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n         \
    \   result.push_back(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo3ftmf05.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> set;\n    for (auto number\
    \ : numbers) {\n        if (set.find(number) == set.end()) {\n            result.push_back(number);\n\
    \            set.insert(number);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpsi8udfm3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto&\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    set.insert(number);\n            result.push_back(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpx41r8l0c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto\
    \ n : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9kad_q1c.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp9kad_q1c.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmp9kad_q1c.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmp9kad_q1c.cpp:9:24: error: expected ';'\
    \ before 'long'\n/tmp/tmp9kad_q1c.cpp:10:15: error: 'n' does not name a type\n\
    \     for (auto n : numbers) {\n               ^\n/tmp/tmp9kad_q1c.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmp9kad_q1c.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp9kad_q1c.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp9kad_q1c.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp9kad_q1c.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp9kad_q1c.cpp: In function 'int main()':\n/tmp/tmp9kad_q1c.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9kad_q1c.cpp:2:\n/tmp/tmp9kad_q1c.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9kad_q1c.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp9kad_q1c.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \             "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6avvis7.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpt6avvis7.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpt6avvis7.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpt6avvis7.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpt6avvis7.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpt6avvis7.cpp: In function 'int main()':\n/tmp/tmpt6avvis7.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt6avvis7.cpp:2:\n/tmp/tmpt6avvis7.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpt6avvis7.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpt6avvis7.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> res;\n    std::unordered_set<long> s;\n    for (auto num\
    \ : numbers) {\n        if (s.find(num) == s.end()) {\n            s.insert(num);\n\
    \            res.push_back(num);\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpg8creh0u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> unique;\n    for\
    \ (auto number : numbers) {\n        if (unique.find(number) == unique.end())\
    \ {\n            unique.insert(number);\n            result.push_back(number);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpm8_w4ut2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto&\
    \ n : numbers) {\n        if (set.find(n) == set.end()) {\n            result.push_back(n);\n\
    \            set.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpz9zgcznv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ n : numbers) {\n        if (set.find(n) == set.end()) {\n            result.push_back(n);\n\
    \            set.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi3vfrn8p.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpi3vfrn8p.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpi3vfrn8p.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpi3vfrn8p.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpi3vfrn8p.cpp:10:15: error: 'n' does not name a type\n\
    \     for (auto n : numbers) {\n               ^\n/tmp/tmpi3vfrn8p.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpi3vfrn8p.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpi3vfrn8p.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpi3vfrn8p.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpi3vfrn8p.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpi3vfrn8p.cpp: In function 'int main()':\n/tmp/tmpi3vfrn8p.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi3vfrn8p.cpp:2:\n/tmp/tmpi3vfrn8p.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpi3vfrn8p.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpi3vfrn8p.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \         "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ i : numbers) {\n        if (set.find(i) == set.end()) {\n            result.push_back(i);\n\
    \            set.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5l81wi36.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6avvis7.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpt6avvis7.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpt6avvis7.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpt6avvis7.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpt6avvis7.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpt6avvis7.cpp: In function 'int main()':\n/tmp/tmpt6avvis7.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt6avvis7.cpp:2:\n/tmp/tmpt6avvis7.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpt6avvis7.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpt6avvis7.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (auto n : numbers)\
    \ {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n         \
    \   result.push_back(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptyhecag1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  std::vector<long> result;\n  std::unordered_set<long> seen;\n  for (long number\
    \ : numbers) {\n    if (seen.find(number) == seen.end()) {\n      result.push_back(number);\n\
    \      seen.insert(number);\n    }\n  }\n  return result;\n}\nint main() {\n \
    \   auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzvrndc1d.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> s;\n    for (auto\
    \ n : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9kad_q1c.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp9kad_q1c.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmp9kad_q1c.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmp9kad_q1c.cpp:9:24: error: expected ';'\
    \ before 'long'\n/tmp/tmp9kad_q1c.cpp:10:15: error: 'n' does not name a type\n\
    \     for (auto n : numbers) {\n               ^\n/tmp/tmp9kad_q1c.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmp9kad_q1c.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp9kad_q1c.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp9kad_q1c.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp9kad_q1c.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp9kad_q1c.cpp: In function 'int main()':\n/tmp/tmp9kad_q1c.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9kad_q1c.cpp:2:\n/tmp/tmp9kad_q1c.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9kad_q1c.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp9kad_q1c.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \             "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (auto n : numbers)\
    \ {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n         \
    \   result.push_back(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptyhecag1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6avvis7.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpt6avvis7.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpt6avvis7.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpt6avvis7.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpt6avvis7.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpt6avvis7.cpp: In function 'int main()':\n/tmp/tmpt6avvis7.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt6avvis7.cpp:2:\n/tmp/tmpt6avvis7.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpt6avvis7.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpt6avvis7.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (int i = 0; i <\
    \ numbers.size(); i++) {\n        if (s.find(numbers[i]) == s.end()) {\n     \
    \       s.insert(numbers[i]);\n            result.push_back(numbers[i]);\n   \
    \     }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpa6dlsqv1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (auto i : numbers)\
    \ {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n         \
    \   result.push_back(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo3ftmf05.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::unordered_set<long> s;\n    std::vector<long> res;\n    for (auto i\
    \ : numbers) {\n        if (s.find(i) == s.end()) {\n            s.insert(i);\n\
    \            res.push_back(i);\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpd_mmcz54.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6avvis7.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpt6avvis7.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpt6avvis7.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpt6avvis7.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpt6avvis7.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpt6avvis7.cpp: In function 'int main()':\n/tmp/tmpt6avvis7.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt6avvis7.cpp:2:\n/tmp/tmpt6avvis7.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpt6avvis7.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpt6avvis7.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::map<long, int> m;\n    for (long i :\
    \ numbers) {\n        m[i]++;\n    }\n    for (long i : numbers) {\n        if\
    \ (m[i] == 1) {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpz3ql2g8p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> set;\n    for (auto number\
    \ : numbers) {\n        if (set.find(number) == set.end()) {\n            result.push_back(number);\n\
    \            set.insert(number);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpsi8udfm3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6avvis7.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpt6avvis7.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpt6avvis7.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpt6avvis7.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpt6avvis7.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpt6avvis7.cpp: In function 'int main()':\n/tmp/tmpt6avvis7.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt6avvis7.cpp:2:\n/tmp/tmpt6avvis7.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpt6avvis7.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpt6avvis7.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long number\
    \ : numbers) {\n        if (seen.find(number) == seen.end()) {\n            result.push_back(number);\n\
    \            seen.insert(number);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvt2odkjq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0qotm5yj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ num : numbers) {\n        if (set.find(num) == set.end()) {\n            result.push_back(num);\n\
    \            set.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfgvl5_oi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (long\
    \ i : numbers) {\n        if (set.find(i) == set.end()) {\n            result.push_back(i);\n\
    \            set.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5l81wi36.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::unordered_set<long> s;\n    std::vector<long> res;\n    for (auto n\
    \ : numbers) {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n\
    \            res.push_back(n);\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpikxqbei9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk1x274_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk1x274_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \tstd::vector<long> result;\n\tstd::unordered_set<long> seen;\n\tfor (auto number\
    \ : numbers) {\n\t\tif (seen.find(number) == seen.end()) {\n\t\t\tresult.push_back(number);\n\
    \t\t\tseen.insert(number);\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n  \
    \  auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp9yycmjq2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6avvis7.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpt6avvis7.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpt6avvis7.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpt6avvis7.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpt6avvis7.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpt6avvis7.cpp: In function 'int main()':\n/tmp/tmpt6avvis7.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt6avvis7.cpp:2:\n/tmp/tmpt6avvis7.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpt6avvis7.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpt6avvis7.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ i : numbers) {\n        if (set.find(i) == set.end()) {\n            result.push_back(i);\n\
    \            set.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplw3rdm_h.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmplw3rdm_h.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmplw3rdm_h.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmplw3rdm_h.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmplw3rdm_h.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmplw3rdm_h.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmplw3rdm_h.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmplw3rdm_h.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmplw3rdm_h.cpp: In function 'int main()':\n/tmp/tmplw3rdm_h.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplw3rdm_h.cpp:2:\n/tmp/tmplw3rdm_h.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmplw3rdm_h.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmplw3rdm_h.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \         "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk1x274_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk1x274_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  std::vector<long> result;\n  std::set<long> s;\n  for (long i = 0; i < numbers.size();\
    \ i++) {\n    if (s.find(numbers[i]) == s.end()) {\n      s.insert(numbers[i]);\n\
    \      result.push_back(numbers[i]);\n    }\n  }\n  return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp08wbh153.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  std::vector<long> result;\n  std::unordered_set<long> seen;\n  for (auto n\
    \ : numbers) {\n    if (seen.find(n) == seen.end()) {\n      result.push_back(n);\n\
    \      seen.insert(n);\n    }\n  }\n  return result;\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzbhg_o75.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (int i = 0; i <\
    \ numbers.size(); i++) {\n        if (s.find(numbers[i]) == s.end()) {\n     \
    \       s.insert(numbers[i]);\n            result.push_back(numbers[i]);\n   \
    \     }\n    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpa6dlsqv1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747737
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ number : numbers) {\n        if (set.find(number) == set.end()) {\n        \
    \    result.push_back(number);\n            set.insert(number);\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6avvis7.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpt6avvis7.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpt6avvis7.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpt6avvis7.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpt6avvis7.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpt6avvis7.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpt6avvis7.cpp: In function 'int main()':\n/tmp/tmpt6avvis7.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt6avvis7.cpp:2:\n/tmp/tmpt6avvis7.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpt6avvis7.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpt6avvis7.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> s;\n    for (auto n : numbers)\
    \ {\n        if (s.find(n) == s.end()) {\n            s.insert(n);\n         \
    \   result.push_back(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptyhecag1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk1x274_3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long>::iterator it;\n    std::vector<long>::iterator it2;\n \
    \   std::vector<long>::iterator it3;\n    std::vector<long>::iterator it4;\n \
    \   std::vector<long>::iterator it5;\n    std::vector<long>::iterator it6;\n \
    \   std::vector<long>::iterator it7;\n    std::vector<long>::iterator it8;\n \
    \   std::vector<long>::iterator it9;\n    std::vector<long>::iterator it10;\n\
    \    std::vector<long>::iterator it11;\n    std::vector<long>::iterator it12;\n\
    \    std::vector<long>::iterator it13;\n    std::vector<long>::iterator it14;\n\
    \    std::vector<long>::iterator it15;\n    std::vector<long>::iterator it16;\n\
    \    std::vector<long>::iterator it17;\n    std::vector<long>::iterator it18;\n\
    \    std::vector<long>::iterator it19;\n    std::vector<long>::iterator it20;\n\
    \    std::vector<long>::iterator it21;\n    std::vector<long>::iterator it22;\n\
    \    std::vector<long>::iterator it23;\n    std::vector<long>::iterator it24;\n\
    \    std::vector<long>::iterator it25;\n    std::vector<long>::iterator it26;\n\
    \    std::vector<long>::iterator it27;\n    std::vector<long>::iterator it28;\n\
    \    std::vector<long>::iterator it29;\n    std::vector<long>::iterator it30;\n\
    \    std::vector<long>::iterator it31;\n    std::vector<long>::iterator it32;\n\
    \    std::vector<long>::iterator it33;\n    std::vector<long>::iterator it34;\n\
    \    std::vector<long>::iterator it35;\n    std::vector<long>::iterator it36;\n\
    \    std::vector<long>::iterator it37;\n    std::vector<long>::iterator it38;\n\
    \    std::vector<long>::iterator it39;\n    std::vector<\n}\nint main() {\n  \
    \  auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpcuwy6mby.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747736
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqm5mj8r.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpaqm5mj8r.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpaqm5mj8r.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpaqm5mj8r.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpaqm5mj8r.cpp:10:15: error: 'number' does not name\
    \ a type\n     for (auto number : numbers) {\n               ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpaqm5mj8r.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpaqm5mj8r.cpp: In function 'int main()':\n/tmp/tmpaqm5mj8r.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpaqm5mj8r.cpp:2:\n/tmp/tmpaqm5mj8r.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpaqm5mj8r.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpaqm5mj8r.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> set;\n    for (auto\
    \ n : numbers) {\n        if (set.find(n) == set.end()) {\n            result.push_back(n);\n\
    \            set.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi3vfrn8p.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpi3vfrn8p.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> set;\n     ^\n/tmp/tmpi3vfrn8p.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ set;\n                        ^\n/tmp/tmpi3vfrn8p.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpi3vfrn8p.cpp:10:15: error: 'n' does not name a type\n\
    \     for (auto n : numbers) {\n               ^\n/tmp/tmpi3vfrn8p.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpi3vfrn8p.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpi3vfrn8p.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpi3vfrn8p.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpi3vfrn8p.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpi3vfrn8p.cpp: In function 'int main()':\n/tmp/tmpi3vfrn8p.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi3vfrn8p.cpp:2:\n/tmp/tmpi3vfrn8p.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpi3vfrn8p.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpi3vfrn8p.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \         "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ number : numbers) {\n        if (seen.find(number) == seen.end()) {\n      \
    \      result.push_back(number);\n            seen.insert(number);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7ww24yh.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpy7ww24yh.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpy7ww24yh.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpy7ww24yh.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpy7ww24yh.cpp:10:24: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long number : numbers) {\n        \
    \                ^\n/tmp/tmpy7ww24yh.cpp:11:13: error: 'seen' was not declared\
    \ in this scope\n         if (seen.find(number) == seen.end()) {\n           \
    \  ^\n/tmp/tmpy7ww24yh.cpp: In function 'int main()':\n/tmp/tmpy7ww24yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy7ww24yh.cpp:2:\n/tmp/tmpy7ww24yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpy7ww24yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpy7ww24yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled b"
  stdout: ''

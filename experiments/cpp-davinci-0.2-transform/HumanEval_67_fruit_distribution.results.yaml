language: cpp
name: HumanEval_67_fruit_distribution
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(ss >> temp)\
    \ {\n        if(temp == \"apples\") {\n            ss >> apples;\n        } else\
    \ if(temp == \"oranges\") {\n            ss >> oranges;\n        }\n    }\n  \
    \  mangoes = n - (apples + oranges);\n    return mangoes;\n}\nint main() {\n \
    \   auto candidate = fruit_distribution;\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) ==\
    \ (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n  \
    \  assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnpq42vu6.cpp: In function 'int main()':\n/tmp/tmpnpq42vu6.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnpq42vu6.cpp:2:\n/tmp/tmpnpq42vu6.cpp:35:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long apple = 0, orange = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    apples\") {\n            ss >> word;\n            apple = std::stol(word);\n \
    \       }\n        else if(word == \"oranges\") {\n            ss >> word;\n \
    \           orange = std::stol(word);\n        }\n    }\n    return n - (apple\
    \ + orange);\n}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoe6q0jqv.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpoe6q0jqv.cpp:25:21: error: 'stol' is not a member of 'std'\n\
    \             apple = std::stol(word);\n                     ^\n/tmp/tmpoe6q0jqv.cpp:29:22:\
    \ error: 'stol' is not a member of 'std'\n             orange = std::stol(word);\n\
    \                      ^\n/tmp/tmpoe6q0jqv.cpp: In function 'int main()':\n/tmp/tmpoe6q0jqv.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpoe6q0jqv.cpp:2:\n/tmp/tmpoe6q0jqv.cpp:36:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int i = 0;\n    int j = 0;\n    int\
    \ k = 0;\n    int count = 0;\n    int count1 = 0;\n    int count2 = 0;\n    while(s[i]\
    \ != ' '){\n        i++;\n    }\n    while(s[j] != 'a'){\n        j++;\n    }\n\
    \    while(s[k] != 'o'){\n        k++;\n    }\n    for(int l = 0; l < i; l++){\n\
    \        count = count*10 + (s[l] - '0');\n    }\n    for(int l = j-1; l < i;\
    \ l++){\n        count1 = count1*10 + (s[l] - '0');\n    }\n    for(int l = k-1;\
    \ l < i; l++){\n        count2 = count2*10 + (s[l] - '0');\n    }\n    return\
    \ n - (count1 + count2);\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar3z7yl2.cpp: In function 'int main()':\n/tmp/tmpar3z7yl2.cpp:46:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpar3z7yl2.cpp:2:\n/tmp/tmpar3z7yl2.cpp:47:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    std::stringstream ss(s);\n    std::string word;\n    int apples\
    \ = 0;\n    int oranges = 0;\n    while (ss >> word) {\n        if (word == \"\
    apples\") {\n            ss >> word;\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        if (word == \"oranges\") {\n        \
    \    ss >> word;\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - (apples + oranges);\n}\nint main() {\n    auto\
    \ candidate = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) ==\
    \ (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n \
    \   assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples\
    \ and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"\
    ), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp438vrm98.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp438vrm98.cpp:26:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(word);\n                      ^\n/tmp/tmp438vrm98.cpp:31:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(word);\n\
    \                       ^\n/tmp/tmp438vrm98.cpp: In function 'int main()':\n/tmp/tmp438vrm98.cpp:37:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp438vrm98.cpp:2:\n/tmp/tmp438vrm98.cpp:38:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long apples = 0;\n    long oranges\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    std::vector<std::string>\
    \ tokens;\n    while(std::getline(ss, temp, ' ')) {\n        tokens.push_back(temp);\n\
    \    }\n    apples = std::stol(tokens[0]);\n    oranges = std::stol(tokens[2]);\n\
    \    return n - (apples + oranges);\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdyautry_.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpdyautry_.cpp:27:14: error: 'stol' is not a member of 'std'\n\
    \     apples = std::stol(tokens[0]);\n              ^\n/tmp/tmpdyautry_.cpp:28:15:\
    \ error: 'stol' is not a member of 'std'\n     oranges = std::stol(tokens[2]);\n\
    \               ^\n/tmp/tmpdyautry_.cpp: In function 'int main()':\n/tmp/tmpdyautry_.cpp:32:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdyautry_.cpp:2:\n/tmp/tmpdyautry_.cpp:33:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"%d\
    \ apples and %d oranges\",&a,&o);\n    return n-a-o;\n}\nint main() {\n    auto\
    \ candidate = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) ==\
    \ (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n \
    \   assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples\
    \ and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"\
    ), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6b6rorsy.cpp: In function 'int main()':\n/tmp/tmp6b6rorsy.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6b6rorsy.cpp:2:\n/tmp/tmp6b6rorsy.cpp:25:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    long\
    \ a, o;\n    ss >> a >> s >> o >> s;\n    return n - a - o;\n}\nint main() {\n\
    \    auto candidate = fruit_distribution;\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) ==\
    \ (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n  \
    \  assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf64sxr3k.cpp: In function 'int main()':\n/tmp/tmpf64sxr3k.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf64sxr3k.cpp:2:\n/tmp/tmpf64sxr3k.cpp:26:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n\
    \    return n - (apples + oranges);\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp24uz1ukm.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp24uz1ukm.cpp:26:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(word);\n                      ^\n/tmp/tmp24uz1ukm.cpp:30:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(word);\n\
    \                       ^\n/tmp/tmp24uz1ukm.cpp: In function 'int main()':\n/tmp/tmp24uz1ukm.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp24uz1ukm.cpp:2:\n/tmp/tmp24uz1ukm.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    // return 0;\n    long a,o;\n    std::stringstream\
    \ ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;\n}\nint main() {\n    auto candidate\
    \ = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwuxsgdwg.cpp: In function 'int main()':\n/tmp/tmpwuxsgdwg.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwuxsgdwg.cpp:2:\n/tmp/tmpwuxsgdwg.cpp:27:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string token;\n    while(std::getline(ss,\
    \ token, ' ')) {\n        if(token == \"apples\") {\n            apples = std::stol(std::getline(ss,\
    \ token, ' '));\n        } else if(token == \"oranges\") {\n            oranges\
    \ = std::stol(std::getline(ss, token, ' '));\n        }\n    }\n    mangoes =\
    \ n - (apples + oranges);\n    return mangoes;\n}\nint main() {\n    auto candidate\
    \ = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_wr4x3kr.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp_wr4x3kr.cpp:25:22: error: 'stol' is not a member of 'std'\n\
    \             apples = std::stol(std::getline(ss, token, ' '));\n            \
    \          ^\n/tmp/tmp_wr4x3kr.cpp:27:23: error: 'stol' is not a member of 'std'\n\
    \             oranges = std::stol(std::getline(ss, token, ' '));\n           \
    \            ^\n/tmp/tmp_wr4x3kr.cpp: In function 'int main()':\n/tmp/tmp_wr4x3kr.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_wr4x3kr.cpp:2:\n/tmp/tmp_wr4x3kr.cpp:35:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    std::vector<std::string> v;\n    while(ss >> word)\n        v.push_back(word);\n\
    \    int a = std::stoi(v[0]);\n    int o = std::stoi(v[2]);\n    return n - (a\
    \ + o);\n}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvnbqgsip.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpvnbqgsip.cpp:24:13: error: 'stoi' is not a member of 'std'\n\
    \     int a = std::stoi(v[0]);\n             ^\n/tmp/tmpvnbqgsip.cpp:25:13: error:\
    \ 'stoi' is not a member of 'std'\n     int o = std::stoi(v[2]);\n           \
    \  ^\n/tmp/tmpvnbqgsip.cpp: In function 'int main()':\n/tmp/tmpvnbqgsip.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvnbqgsip.cpp:2:\n/tmp/tmpvnbqgsip.cpp:30:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            ss >>\
    \ word;\n            apples = std::stoi(word);\n        }\n        else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            ss >> word;\n      \
    \      oranges = std::stoi(word);\n        }\n    }\n    return n - (apples +\
    \ oranges);\n}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcku9ulkp.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpcku9ulkp.cpp:27:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(word);\n                      ^\n/tmp/tmpcku9ulkp.cpp:32:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(word);\n\
    \                       ^\n/tmp/tmpcku9ulkp.cpp: In function 'int main()':\n/tmp/tmpcku9ulkp.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcku9ulkp.cpp:2:\n/tmp/tmpcku9ulkp.cpp:39:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            ss >>\
    \ word;\n            apples = std::stoi(word);\n        }\n        else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            ss >> word;\n      \
    \      oranges = std::stoi(word);\n        }\n    }\n    return n - (apples +\
    \ oranges);\n}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcku9ulkp.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpcku9ulkp.cpp:27:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(word);\n                      ^\n/tmp/tmpcku9ulkp.cpp:32:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(word);\n\
    \                       ^\n/tmp/tmpcku9ulkp.cpp: In function 'int main()':\n/tmp/tmpcku9ulkp.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcku9ulkp.cpp:2:\n/tmp/tmpcku9ulkp.cpp:39:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long count = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(getline(ss, temp, ' ')){\n        if(temp\
    \ == \"apples\"){\n            getline(ss, temp, ' ');\n            count += std::stol(temp);\n\
    \        }\n        else if(temp == \"oranges\"){\n            getline(ss, temp,\
    \ ' ');\n            count += std::stol(temp);\n        }\n    }\n    return n\
    \ - count;\n}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptubinn9g.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmptubinn9g.cpp:25:22: error: 'stol' is not a member of 'std'\n\
    \             count += std::stol(temp);\n                      ^\n/tmp/tmptubinn9g.cpp:29:22:\
    \ error: 'stol' is not a member of 'std'\n             count += std::stol(temp);\n\
    \                      ^\n/tmp/tmptubinn9g.cpp: In function 'int main()':\n/tmp/tmptubinn9g.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptubinn9g.cpp:2:\n/tmp/tmptubinn9g.cpp:36:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long apples = 0;\n    long oranges\
    \ = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while(ss >> word){\n        if(word == \"apples\"){\n            ss >> word;\n\
    \            apples = std::stol(word);\n        }\n        else if(word == \"\
    oranges\"){\n            ss >> word;\n            oranges = std::stol(word);\n\
    \        }\n    }\n    mangoes = n - apples - oranges;\n    return mangoes;\n\
    }\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpukccgrde.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpukccgrde.cpp:27:22: error: 'stol' is not a member of 'std'\n\
    \             apples = std::stol(word);\n                      ^\n/tmp/tmpukccgrde.cpp:31:23:\
    \ error: 'stol' is not a member of 'std'\n             oranges = std::stol(word);\n\
    \                       ^\n/tmp/tmpukccgrde.cpp: In function 'int main()':\n/tmp/tmpukccgrde.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpukccgrde.cpp:2:\n/tmp/tmpukccgrde.cpp:39:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    long apple = 0;\n    long orange = 0;\n    while(ss >> word){\n \
    \       if(word == \"apples\"){\n            ss >> word;\n            apple =\
    \ std::stol(word);\n        }\n        else if(word == \"oranges\"){\n       \
    \     ss >> word;\n            orange = std::stol(word);\n        }\n    }\n \
    \   return n - (apple + orange);\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0_qslc2h.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp0_qslc2h.cpp:26:21: error: 'stol' is not a member of 'std'\n\
    \             apple = std::stol(word);\n                     ^\n/tmp/tmp0_qslc2h.cpp:30:22:\
    \ error: 'stol' is not a member of 'std'\n             orange = std::stol(word);\n\
    \                      ^\n/tmp/tmp0_qslc2h.cpp: In function 'int main()':\n/tmp/tmp0_qslc2h.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0_qslc2h.cpp:2:\n/tmp/tmp0_qslc2h.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long num_apples = 0;\n    long num_oranges\
    \ = 0;\n    long num_mangoes = 0;\n    long i = 0;\n    while(s[i] != ' '){\n\
    \        num_apples = num_apples * 10 + (s[i] - '0');\n        i++;\n    }\n \
    \   i = i + 5;\n    while(s[i] != ' '){\n        num_oranges = num_oranges * 10\
    \ + (s[i] - '0');\n        i++;\n    }\n    num_mangoes = n - num_apples - num_oranges;\n\
    \    return num_mangoes;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa8hq3g_6.cpp: In function 'int main()':\n/tmp/tmpa8hq3g_6.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpa8hq3g_6.cpp:2:\n/tmp/tmpa8hq3g_6.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string>\
    \ words;\n    while (ss >> word)\n        words.push_back(word);\n    long num_apples\
    \ = std::stol(words[0]);\n    long num_oranges = std::stol(words[3]);\n    return\
    \ n - num_apples - num_oranges;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7xu2o0bt.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp7xu2o0bt.cpp:23:23: error: 'stol' is not a member of 'std'\n\
    \     long num_apples = std::stol(words[0]);\n                       ^\n/tmp/tmp7xu2o0bt.cpp:24:24:\
    \ error: 'stol' is not a member of 'std'\n     long num_oranges = std::stol(words[3]);\n\
    \                        ^\n/tmp/tmp7xu2o0bt.cpp: In function 'int main()':\n\
    /tmp/tmp7xu2o0bt.cpp:28:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = fruit_distribution;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7xu2o0bt.cpp:2:\n/tmp/tmp7xu2o0bt.cpp:29:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::string temp = \"\";\n    for(int i = 0; i < s.length(); i++){\n\
    \        if(s[i] == ' '){\n            if(temp == \"apples\"){\n             \
    \   apples = std::stol(s.substr(0, i));\n            }\n            else if(temp\
    \ == \"oranges\"){\n                oranges = std::stol(s.substr(0, i));\n   \
    \         }\n            s = s.substr(i+1, s.length() - i);\n            i = 0;\n\
    \            temp = \"\";\n        }\n        else{\n            temp += s[i];\n\
    \        }\n    }\n    oranges = std::stol(s);\n    mangoes = n - (apples + oranges);\n\
    \    return mangoes;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdy_ilcj_.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpdy_ilcj_.cpp:25:26: error: 'stol' is not a member of 'std'\n\
    \                 apples = std::stol(s.substr(0, i));\n                      \
    \    ^\n/tmp/tmpdy_ilcj_.cpp:28:27: error: 'stol' is not a member of 'std'\n \
    \                oranges = std::stol(s.substr(0, i));\n                      \
    \     ^\n/tmp/tmpdy_ilcj_.cpp:38:15: error: 'stol' is not a member of 'std'\n\
    \     oranges = std::stol(s);\n               ^\n/tmp/tmpdy_ilcj_.cpp: In function\
    \ 'int main()':\n/tmp/tmpdy_ilcj_.cpp:43:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = fruit_distribution;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdy_ilcj_.cpp:2:\n/tmp/tmpdy_ilcj_.cpp:44:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long num_apples = 0;\n    long num_oranges\
    \ = 0;\n    long num_mangoes = 0;\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    std::vector<std::string> tokens;\n    while(std::getline(ss, temp,\
    \ ' ')){\n        tokens.push_back(temp);\n    }\n    num_apples = std::stol(tokens[0]);\n\
    \    num_oranges = std::stol(tokens[3]);\n    num_mangoes = n - (num_apples +\
    \ num_oranges);\n    return num_mangoes;\n}\nint main() {\n    auto candidate\
    \ = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1mitwhcs.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp1mitwhcs.cpp:28:18: error: 'stol' is not a member of 'std'\n\
    \     num_apples = std::stol(tokens[0]);\n                  ^\n/tmp/tmp1mitwhcs.cpp:29:19:\
    \ error: 'stol' is not a member of 'std'\n     num_oranges = std::stol(tokens[3]);\n\
    \                   ^\n/tmp/tmp1mitwhcs.cpp: In function 'int main()':\n/tmp/tmp1mitwhcs.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1mitwhcs.cpp:2:\n/tmp/tmp1mitwhcs.cpp:35:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''

language: cpp
name: HumanEval_62_derivative
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n\tstd::vector<long> result;\n\tfor (int i = 1; i < xs.size(); i++) {\n\
    \t\tresult.push_back(xs[i] * i);\n\t}\n\treturn result;\n}\nint main() {\n   \
    \ auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwg36r572.cpp: In function 'int main()':\n/tmp/tmpwg36r572.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwg36r572.cpp:2:\n/tmp/tmpwg36r572.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpwg36r572.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpwg36r572.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpwg36r572.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpwg36r572.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpwg36r572.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> result;\n    for (int i = 1; i < xs.size(); i++)\
    \ {\n        result.push_back(xs[i] * i);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bbw48rx.cpp: In function 'int main()':\n/tmp/tmp5bbw48rx.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/tmp/tmp5bbw48rx.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5bbw48rx.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5bbw48rx.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ans;\n    for (int i = 1; i < xs.size(); i++) {\n\
    \        ans.push_back(xs[i] * i);\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdmo9m2_m.cpp: In function 'int main()':\n/tmp/tmpdmo9m2_m.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdmo9m2_m.cpp:2:\n/tmp/tmpdmo9m2_m.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpdmo9m2_m.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpdmo9m2_m.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpdmo9m2_m.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpdmo9m2_m.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdmo9m2_m.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> result;\n    for (int i = 1; i < xs.size(); i++)\
    \ {\n        result.push_back(xs[i] * i);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bbw48rx.cpp: In function 'int main()':\n/tmp/tmp5bbw48rx.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/tmp/tmp5bbw48rx.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5bbw48rx.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5bbw48rx.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ans;\n    for (int i = 1; i < xs.size(); i++) {\n\
    \        ans.push_back(xs[i] * i);\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdmo9m2_m.cpp: In function 'int main()':\n/tmp/tmpdmo9m2_m.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdmo9m2_m.cpp:2:\n/tmp/tmpdmo9m2_m.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpdmo9m2_m.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpdmo9m2_m.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpdmo9m2_m.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpdmo9m2_m.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdmo9m2_m.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> result;\n    for (int i = 1; i < xs.size(); i++)\
    \ {\n        result.push_back(xs[i] * i);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bbw48rx.cpp: In function 'int main()':\n/tmp/tmp5bbw48rx.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/tmp/tmp5bbw48rx.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5bbw48rx.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5bbw48rx.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ans;\n    for (int i = 1; i < xs.size(); i++) {\n\
    \        ans.push_back(xs[i] * i);\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdmo9m2_m.cpp: In function 'int main()':\n/tmp/tmpdmo9m2_m.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdmo9m2_m.cpp:2:\n/tmp/tmpdmo9m2_m.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpdmo9m2_m.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpdmo9m2_m.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpdmo9m2_m.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpdmo9m2_m.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdmo9m2_m.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> result;\n    for (int i = 1; i < xs.size(); i++)\
    \ {\n        result.push_back(xs[i] * i);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bbw48rx.cpp: In function 'int main()':\n/tmp/tmp5bbw48rx.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/tmp/tmp5bbw48rx.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5bbw48rx.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5bbw48rx.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ans;\n    for (int i = 1; i < xs.size(); i++) {\n\
    \        ans.push_back(xs[i] * i);\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdmo9m2_m.cpp: In function 'int main()':\n/tmp/tmpdmo9m2_m.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdmo9m2_m.cpp:2:\n/tmp/tmpdmo9m2_m.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpdmo9m2_m.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpdmo9m2_m.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpdmo9m2_m.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpdmo9m2_m.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdmo9m2_m.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> result;\n    for (int i = 1; i < xs.size(); i++)\
    \ {\n        result.push_back(xs[i] * i);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bbw48rx.cpp: In function 'int main()':\n/tmp/tmp5bbw48rx.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/tmp/tmp5bbw48rx.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5bbw48rx.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5bbw48rx.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> result;\n    for (int i = 1; i < xs.size(); i++)\
    \ {\n        result.push_back(xs[i] * i);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bbw48rx.cpp: In function 'int main()':\n/tmp/tmp5bbw48rx.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/tmp/tmp5bbw48rx.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5bbw48rx.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5bbw48rx.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> result;\n    for (int i = 1; i < xs.size(); i++)\
    \ {\n        result.push_back(xs[i] * i);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bbw48rx.cpp: In function 'int main()':\n/tmp/tmp5bbw48rx.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/tmp/tmp5bbw48rx.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5bbw48rx.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5bbw48rx.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> result;\n    for (int i = 1; i < xs.size(); i++)\
    \ {\n        result.push_back(xs[i] * i);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bbw48rx.cpp: In function 'int main()':\n/tmp/tmp5bbw48rx.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/tmp/tmp5bbw48rx.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5bbw48rx.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5bbw48rx.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> res;\n    for (int i = 1; i < xs.size(); i++) {\n\
    \        res.push_back(xs[i] * i);\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbh27o2tg.cpp: In function 'int main()':\n/tmp/tmpbh27o2tg.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbh27o2tg.cpp:2:\n/tmp/tmpbh27o2tg.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpbh27o2tg.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpbh27o2tg.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbh27o2tg.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbh27o2tg.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbh27o2tg.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> res;\n    for (int i = 1; i < xs.size(); i++) {\n\
    \        res.push_back(xs[i] * i);\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbh27o2tg.cpp: In function 'int main()':\n/tmp/tmpbh27o2tg.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbh27o2tg.cpp:2:\n/tmp/tmpbh27o2tg.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpbh27o2tg.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpbh27o2tg.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbh27o2tg.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbh27o2tg.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbh27o2tg.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> ans;\n    for (int i = 1; i < xs.size(); i++) {\n\
    \        ans.push_back(xs[i] * i);\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdmo9m2_m.cpp: In function 'int main()':\n/tmp/tmpdmo9m2_m.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdmo9m2_m.cpp:2:\n/tmp/tmpdmo9m2_m.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpdmo9m2_m.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpdmo9m2_m.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpdmo9m2_m.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpdmo9m2_m.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdmo9m2_m.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> result;\n    for (int i = 1; i < xs.size(); i++)\
    \ {\n        result.push_back(xs[i] * i);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bbw48rx.cpp: In function 'int main()':\n/tmp/tmp5bbw48rx.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/tmp/tmp5bbw48rx.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5bbw48rx.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5bbw48rx.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> result;\n    for (int i = 1; i < xs.size(); i++)\
    \ {\n        result.push_back(xs[i] * i);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bbw48rx.cpp: In function 'int main()':\n/tmp/tmp5bbw48rx.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/tmp/tmp5bbw48rx.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5bbw48rx.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5bbw48rx.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> result;\n    for (int i = 1; i < xs.size(); i++)\
    \ {\n        result.push_back(xs[i] * i);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bbw48rx.cpp: In function 'int main()':\n/tmp/tmp5bbw48rx.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/tmp/tmp5bbw48rx.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmp5bbw48rx.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp5bbw48rx.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp5bbw48rx.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp5bbw48rx.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// xs represent coefficients\
    \ of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative\
    \ of this polynomial in the same form.\n// >>> derivative((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n// (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20}))\n// >>> derivative((std::vector<long>({(long)1, (long)2,\
    \ (long)3})))\n// (std::vector<long>({(long)2, (long)6}))\nstd::vector<long> derivative(std::vector<long>\
    \ xs) {\n    std::vector<long> res;\n    for (int i = 1; i < xs.size(); i++) {\n\
    \        res.push_back(xs[i] * i);\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = derivative;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)12, (long)20})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3}))) == (std::vector<long>({(long)2, (long)6})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)2, (long)2})));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1, (long)0, (long)4}))) == (std::vector<long>({(long)2, (long)2,\
    \ (long)0, (long)16})));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (std::vector<long>()));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbh27o2tg.cpp: In function 'int main()':\n/tmp/tmpbh27o2tg.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = derivative;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbh27o2tg.cpp:2:\n/tmp/tmpbh27o2tg.cpp:19:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                        ^\n/tmp/tmpbh27o2tg.cpp:19:86: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (std::vector<long>({(long)1, (long)4, (long)12, (long)20})));\n\
    \                                                                            \
    \          ^\n/tmp/tmpbh27o2tg.cpp:19:86: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbh27o2tg.cpp:19:86:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbh27o2tg.cpp:19:86: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbh27o2tg.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /u"
  stdout: ''

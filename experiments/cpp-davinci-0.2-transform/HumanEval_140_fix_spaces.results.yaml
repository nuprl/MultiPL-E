language: cpp
name: HumanEval_140_fix_spaces
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = \"\";\n    int count = 0;\n    for (int i = 0; i\
    \ < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu6c9lzf8.cpp: In function 'int main()':\n/tmp/tmpu6c9lzf8.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpu6c9lzf8.cpp:2:\n/tmp/tmpu6c9lzf8.cpp:39:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // Write your code here\n    int count = 0;\n    for(int i = 0; i < text.length();\
    \ i++){\n        if(text[i] == ' '){\n            count++;\n        }\n      \
    \  else{\n            count = 0;\n        }\n        if(count == 2){\n       \
    \     text[i] = '-';\n        }\n        else if(count > 2){\n            text[i]\
    \ = '-';\n        }\n        else{\n            text[i] = text[i];\n        }\n\
    \    }\n    for(int i = 0; i < text.length(); i++){\n        if(text[i] == ' '){\n\
    \            text[i] = '_';\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfjzjaiup.cpp: In function 'int main()':\n/tmp/tmpfjzjaiup.cpp:42:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpfjzjaiup.cpp:2:\n/tmp/tmpfjzjaiup.cpp:43:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            count = 0;\n        }\n        if (count == 1) {\n          \
    \  result += '_';\n        } else if (count > 2) {\n            result += '-';\n\
    \        } else {\n            result += text[i];\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5nrwaet3.cpp: In function 'int main()':\n/tmp/tmp5nrwaet3.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5nrwaet3.cpp:2:\n/tmp/tmp5nrwaet3.cpp:35:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            if (count == 1) {\n                result += '_';\n         \
    \   } else if (count > 2) {\n                result += '-';\n            }\n \
    \           result += text[i];\n            count = 0;\n        }\n    }\n   \
    \ if (count == 1) {\n        result += '_';\n    } else if (count > 2) {\n   \
    \     result += '-';\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2s443iup.cpp: In function 'int main()':\n/tmp/tmp2s443iup.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2s443iup.cpp:2:\n/tmp/tmp2s443iup.cpp:39:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n     \
    \   if (text[i] == ' ') {\n            count++;\n        }\n        else {\n \
    \           count = 0;\n        }\n        if (count == 1) {\n            text[i]\
    \ = '_';\n        }\n        else if (count > 2) {\n            text[i] = '-';\n\
    \        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpggza54vq.cpp: In function 'int main()':\n/tmp/tmpggza54vq.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpggza54vq.cpp:2:\n/tmp/tmpggza54vq.cpp:34:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            count = 0;\n        }\n        if (count == 1) {\n          \
    \  result += '_';\n        } else if (count > 2) {\n            result += '-';\n\
    \        } else {\n            result += text[i];\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5nrwaet3.cpp: In function 'int main()':\n/tmp/tmp5nrwaet3.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5nrwaet3.cpp:2:\n/tmp/tmp5nrwaet3.cpp:35:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n     \
    \   if (text[i] == ' ') {\n            count++;\n        }\n        else {\n \
    \           count = 0;\n        }\n        if (count > 2) {\n            text[i]\
    \ = '-';\n        }\n        else if (count == 1) {\n            text[i] = '_';\n\
    \        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl2yw08ar.cpp: In function 'int main()':\n/tmp/tmpl2yw08ar.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl2yw08ar.cpp:2:\n/tmp/tmpl2yw08ar.cpp:34:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int count = 0;\n    std::string result = \"\";\n    for (int i = 0; i\
    \ < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \            if (count == 1) {\n                result += '_';\n            }\n\
    \            else if (count == 2) {\n                result += '_';\n        \
    \    }\n            else if (count > 2) {\n                result += '-';\n  \
    \          }\n        }\n        else {\n            result += text[i];\n    \
    \        count = 0;\n        }\n    }\n    return result;\n}\nint main() {\n \
    \   auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi6fth8w_.cpp: In function 'int main()':\n/tmp/tmpi6fth8w_.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi6fth8w_.cpp:2:\n/tmp/tmpi6fth8w_.cpp:39:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = \"\";\n    int count = 0;\n    for (int i = 0; i\
    \ < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \            if (count == 1) {\n                result += '_';\n            }\n\
    \            else if (count == 2) {\n                result += '_';\n        \
    \    }\n            else if (count > 2) {\n                result += '-';\n  \
    \          }\n        }\n        else {\n            count = 0;\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphbxkrjlb.cpp: In function 'int main()':\n/tmp/tmphbxkrjlb.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphbxkrjlb.cpp:2:\n/tmp/tmphbxkrjlb.cpp:39:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            count = 0;\n        }\n        if (count == 1) {\n          \
    \  result += '_';\n        } else if (count == 2) {\n            result += '-';\n\
    \        } else if (count > 2) {\n            continue;\n        } else {\n  \
    \          result += text[i];\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpev4u18_c.cpp: In function 'int main()':\n/tmp/tmpev4u18_c.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpev4u18_c.cpp:2:\n/tmp/tmpev4u18_c.cpp:37:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n     \
    \   if (text[i] == ' ') {\n            count++;\n        }\n        else {\n \
    \           count = 0;\n        }\n        if (count > 2) {\n            text[i]\
    \ = '-';\n        }\n        else if (count == 1) {\n            text[i] = '_';\n\
    \        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl2yw08ar.cpp: In function 'int main()':\n/tmp/tmpl2yw08ar.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl2yw08ar.cpp:2:\n/tmp/tmpl2yw08ar.cpp:34:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int count = 0;\n    std::string result;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n            if\
    \ (count == 1) {\n                result.push_back('_');\n            }\n    \
    \        else if (count == 2) {\n                result.push_back('_');\n    \
    \        }\n            else if (count > 2) {\n                result.push_back('-');\n\
    \            }\n        }\n        else {\n            count = 0;\n          \
    \  result.push_back(text[i]);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf172655a.cpp: In function 'int main()':\n/tmp/tmpf172655a.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf172655a.cpp:2:\n/tmp/tmpf172655a.cpp:39:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            if (count > 2) {\n                result += '-';\n          \
    \  } else if (count == 1) {\n                result += '_';\n            }\n \
    \           result += text[i];\n            count = 0;\n        }\n    }\n   \
    \ return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpehk56d44.cpp: In function 'int main()':\n/tmp/tmpehk56d44.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpehk56d44.cpp:2:\n/tmp/tmpehk56d44.cpp:34:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // Write your code here\n    std::string result;\n    int count = 0;\n\
    \    for(int i = 0; i < text.length(); i++){\n        if(text[i] == ' '){\n  \
    \          count++;\n            if(count > 2){\n                result += '-';\n\
    \            }\n            else{\n                result += '_';\n          \
    \  }\n        }\n        else{\n            count = 0;\n            result +=\
    \ text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9uf758zh.cpp: In function 'int main()':\n/tmp/tmp9uf758zh.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9uf758zh.cpp:2:\n/tmp/tmp9uf758zh.cpp:37:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = \"\";\n    int count = 0;\n    for (int i = 0; i\
    \ < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \            if (count == 1) {\n                result += '_';\n            }\n\
    \            else if (count == 2) {\n                result += '_';\n        \
    \    }\n            else if (count > 2) {\n                result += '-';\n  \
    \          }\n        }\n        else {\n            count = 0;\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphbxkrjlb.cpp: In function 'int main()':\n/tmp/tmphbxkrjlb.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphbxkrjlb.cpp:2:\n/tmp/tmphbxkrjlb.cpp:39:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            count = 0;\n        }\n        if (count == 1) {\n          \
    \  result += '_';\n        } else if (count == 2) {\n            result += '-';\n\
    \        } else if (count > 2) {\n            continue;\n        } else {\n  \
    \          result += text[i];\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpev4u18_c.cpp: In function 'int main()':\n/tmp/tmpev4u18_c.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpev4u18_c.cpp:2:\n/tmp/tmpev4u18_c.cpp:37:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            count = 0;\n        }\n        if (count == 1) {\n          \
    \  result += '_';\n        } else if (count > 2) {\n            result += '-';\n\
    \        } else {\n            result += text[i];\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5nrwaet3.cpp: In function 'int main()':\n/tmp/tmp5nrwaet3.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5nrwaet3.cpp:2:\n/tmp/tmp5nrwaet3.cpp:35:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = \"\";\n    int count = 0;\n    for (int i = 0; i\
    \ < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += '_';\n\
    \            } else if (count > 1) {\n                result += '-';\n       \
    \     }\n            result += text[i];\n            count = 0;\n        }\n \
    \   }\n    if (count == 1) {\n        result += '_';\n    } else if (count > 1)\
    \ {\n        result += '-';\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu6c9lzf8.cpp: In function 'int main()':\n/tmp/tmpu6c9lzf8.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpu6c9lzf8.cpp:2:\n/tmp/tmpu6c9lzf8.cpp:39:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            count = 0;\n        }\n        if (count == 1) {\n          \
    \  result += '_';\n        } else if (count == 2) {\n            result += '-';\n\
    \        } else if (count > 2) {\n            continue;\n        } else {\n  \
    \          result += text[i];\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpev4u18_c.cpp: In function 'int main()':\n/tmp/tmpev4u18_c.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpev4u18_c.cpp:2:\n/tmp/tmpev4u18_c.cpp:37:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = \"\";\n    int count = 0;\n    for (int i = 0; i\
    \ < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            count = 0;\n        }\n        if (count > 2) {\n\
    \            result += '-';\n        } else if (count == 1) {\n            result\
    \ += '_';\n        } else {\n            result += text[i];\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo2fa7857.cpp: In function 'int main()':\n/tmp/tmpo2fa7857.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fix_spaces;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpo2fa7857.cpp:2:\n/tmp/tmpo2fa7857.cpp:35:33: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"Example\"\
    )) == (\"Example\"));\n                                 ^\n"
  stdout: ''

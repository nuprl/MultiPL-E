language: cpp
name: HumanEval_12_longest
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (const auto& string : strings) {\n        if (string.size() > longest.size())\
    \ {\n            longest = string;\n        }\n    }\n    return longest;\n}\n\
    int main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa0h458f2.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpa0h458f2.cpp: In function 'int main()':\n/tmp/tmpa0h458f2.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpa0h458f2.cpp:2:\n/tmp/tmpa0h458f2.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpa0h458f2.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpa0h458f2.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpa0h458f2.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpa0h458f2.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpa0h458f2.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpa0h458f2.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::sort(strings.begin(), strings.end(),\
    \ [](const std::string& a, const std::string& b) {\n        return a.size() >\
    \ b.size();\n    });\n    return strings[0];\n}\nint main() {\n    auto candidate\
    \ = longest;\n    assert(candidate((std::vector<std::string>())) == std::nullopt);\n\
    \    assert(candidate((std::vector<std::string>({(std::string)\"x\", (std::string)\"\
    y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp76xouul6.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp76xouul6.cpp: In function 'int main()':\n/tmp/tmp76xouul6.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp76xouul6.cpp:2:\n/tmp/tmp76xouul6.cpp:22:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp76xouul6.cpp:22:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp76xouul6.cpp:23:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp76xouul6.cpp:23:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp76xouul6.cpp:23:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp76xouul6.cpp:23:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp76xouul6.cpp:23:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string str : strings) {\n        if (str.length() > longest.length())\
    \ {\n            longest = str;\n        }\n    }\n    return longest;\n}\nint\
    \ main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvp4x3t1a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpvp4x3t1a.cpp: In function 'int main()':\n/tmp/tmpvp4x3t1a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvp4x3t1a.cpp:2:\n/tmp/tmpvp4x3t1a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpvp4x3t1a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpvp4x3t1a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpvp4x3t1a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpvp4x3t1a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpvp4x3t1a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpvp4x3t1a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto& s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_838m5q.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpm_838m5q.cpp: In function 'int main()':\n/tmp/tmpm_838m5q.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm_838m5q.cpp:2:\n/tmp/tmpm_838m5q.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpm_838m5q.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpm_838m5q.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (int i = 1; i < strings.size(); i++) {\n        if (strings[i].size()\
    \ > longest_string.size()) {\n            longest_string = strings[i];\n     \
    \   }\n    }\n    return longest_string;\n}\nint main() {\n    auto candidate\
    \ = longest;\n    assert(candidate((std::vector<std::string>())) == std::nullopt);\n\
    \    assert(candidate((std::vector<std::string>({(std::string)\"x\", (std::string)\"\
    y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcraqx452.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpcraqx452.cpp: In function 'int main()':\n/tmp/tmpcraqx452.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcraqx452.cpp:2:\n/tmp/tmpcraqx452.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpcraqx452.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpcraqx452.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpcraqx452.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpcraqx452.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpcraqx452.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpcraqx452.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  if (strings.empty()) {\n    return\
    \ std::nullopt;\n  }\n  std::string longest_string = strings[0];\n  for (auto&\
    \ s : strings) {\n    if (s.size() > longest_string.size()) {\n      longest_string\
    \ = s;\n    }\n  }\n  return longest_string;\n}\nint main() {\n    auto candidate\
    \ = longest;\n    assert(candidate((std::vector<std::string>())) == std::nullopt);\n\
    \    assert(candidate((std::vector<std::string>({(std::string)\"x\", (std::string)\"\
    y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp48wha635.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp48wha635.cpp: In function 'int main()':\n/tmp/tmp48wha635.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp48wha635.cpp:2:\n/tmp/tmp48wha635.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp48wha635.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp48wha635.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp48wha635.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp48wha635.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp48wha635.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp48wha635.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''

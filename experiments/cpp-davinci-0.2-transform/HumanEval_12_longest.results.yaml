language: cpp
name: HumanEval_12_longest
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (const auto& string : strings) {\n        if (string.size() > longest.size())\
    \ {\n            longest = string;\n        }\n    }\n    return longest;\n}\n\
    int main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa0h458f2.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpa0h458f2.cpp: In function 'int main()':\n/tmp/tmpa0h458f2.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpa0h458f2.cpp:2:\n/tmp/tmpa0h458f2.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpa0h458f2.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpa0h458f2.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpa0h458f2.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpa0h458f2.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpa0h458f2.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpa0h458f2.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::sort(strings.begin(), strings.end(),\
    \ [](const std::string& a, const std::string& b) {\n        return a.size() >\
    \ b.size();\n    });\n    return strings[0];\n}\nint main() {\n    auto candidate\
    \ = longest;\n    assert(candidate((std::vector<std::string>())) == std::nullopt);\n\
    \    assert(candidate((std::vector<std::string>({(std::string)\"x\", (std::string)\"\
    y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp76xouul6.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp76xouul6.cpp: In function 'int main()':\n/tmp/tmp76xouul6.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp76xouul6.cpp:2:\n/tmp/tmp76xouul6.cpp:22:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp76xouul6.cpp:22:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp76xouul6.cpp:23:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp76xouul6.cpp:23:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp76xouul6.cpp:23:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp76xouul6.cpp:23:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp76xouul6.cpp:23:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string str : strings) {\n        if (str.length() > longest.length())\
    \ {\n            longest = str;\n        }\n    }\n    return longest;\n}\nint\
    \ main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvp4x3t1a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpvp4x3t1a.cpp: In function 'int main()':\n/tmp/tmpvp4x3t1a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvp4x3t1a.cpp:2:\n/tmp/tmpvp4x3t1a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpvp4x3t1a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpvp4x3t1a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpvp4x3t1a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpvp4x3t1a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpvp4x3t1a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpvp4x3t1a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto& s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_838m5q.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpm_838m5q.cpp: In function 'int main()':\n/tmp/tmpm_838m5q.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm_838m5q.cpp:2:\n/tmp/tmpm_838m5q.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpm_838m5q.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpm_838m5q.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (int i = 1; i < strings.size(); i++) {\n        if (strings[i].size()\
    \ > longest_string.size()) {\n            longest_string = strings[i];\n     \
    \   }\n    }\n    return longest_string;\n}\nint main() {\n    auto candidate\
    \ = longest;\n    assert(candidate((std::vector<std::string>())) == std::nullopt);\n\
    \    assert(candidate((std::vector<std::string>({(std::string)\"x\", (std::string)\"\
    y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcraqx452.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpcraqx452.cpp: In function 'int main()':\n/tmp/tmpcraqx452.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcraqx452.cpp:2:\n/tmp/tmpcraqx452.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpcraqx452.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpcraqx452.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpcraqx452.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpcraqx452.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpcraqx452.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpcraqx452.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  if (strings.empty()) {\n    return\
    \ std::nullopt;\n  }\n  std::string longest_string = strings[0];\n  for (auto&\
    \ s : strings) {\n    if (s.size() > longest_string.size()) {\n      longest_string\
    \ = s;\n    }\n  }\n  return longest_string;\n}\nint main() {\n    auto candidate\
    \ = longest;\n    assert(candidate((std::vector<std::string>())) == std::nullopt);\n\
    \    assert(candidate((std::vector<std::string>({(std::string)\"x\", (std::string)\"\
    y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp48wha635.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp48wha635.cpp: In function 'int main()':\n/tmp/tmp48wha635.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp48wha635.cpp:2:\n/tmp/tmp48wha635.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp48wha635.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp48wha635.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp48wha635.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp48wha635.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp48wha635.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp48wha635.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (const auto& string : strings) {\n        if (string.size() > longest_string.size())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpras_m_zd.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpras_m_zd.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpras_m_zd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpras_m_zd.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpras_m_zd.cpp:2:\n/tmp/tmpras_m_zd.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  if (strings.empty()) {\n    return\
    \ std::nullopt;\n  }\n  std::string longest_string = strings[0];\n  for (auto&\
    \ s : strings) {\n    if (s.size() > longest_string.size()) {\n      longest_string\
    \ = s;\n    }\n  }\n  return longest_string;\n}\nint main() {\n    auto candidate\
    \ = longest;\n    assert(candidate((std::vector<std::string>())) == std::nullopt);\n\
    \    assert(candidate((std::vector<std::string>({(std::string)\"x\", (std::string)\"\
    y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp48wha635.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp48wha635.cpp: In function 'int main()':\n/tmp/tmp48wha635.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp48wha635.cpp:2:\n/tmp/tmp48wha635.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp48wha635.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp48wha635.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp48wha635.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp48wha635.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp48wha635.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp48wha635.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  if (strings.empty()) {\n    return\
    \ std::nullopt;\n  }\n  std::string longest = strings[0];\n  for (auto str : strings)\
    \ {\n    if (str.length() > longest.length()) {\n      longest = str;\n    }\n\
    \  }\n  return longest;\n}\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph4xukfiz.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmph4xukfiz.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmph4xukfiz.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmph4xukfiz.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph4xukfiz.cpp:2:\n/tmp/tmph4xukfiz.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto string : strings) {\n        if (string.length() > longest.length())\
    \ {\n            longest = string;\n        }\n    }\n    return longest;\n}\n\
    int main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqzi6xdi0.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpqzi6xdi0.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpqzi6xdi0.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpqzi6xdi0.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqzi6xdi0.cpp:2:\n/tmp/tmpqzi6xdi0.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  if (strings.empty()) {\n    return\
    \ std::nullopt;\n  }\n  std::string longest_string = strings[0];\n  for (std::string\
    \ s : strings) {\n    if (s.length() > longest_string.length()) {\n      longest_string\
    \ = s;\n    }\n  }\n  return longest_string;\n}\nint main() {\n    auto candidate\
    \ = longest;\n    assert(candidate((std::vector<std::string>())) == std::nullopt);\n\
    \    assert(candidate((std::vector<std::string>({(std::string)\"x\", (std::string)\"\
    y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwctrte86.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpwctrte86.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpwctrte86.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpwctrte86.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwctrte86.cpp:2:\n/tmp/tmpwctrte86.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf78crl3w.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpf78crl3w.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpf78crl3w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf78crl3w.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf78crl3w.cpp:2:\n/tmp/tmpf78crl3w.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) return\
    \ std::nullopt;\n    std::string longest = strings[0];\n    for (auto s : strings)\
    \ {\n        if (s.size() > longest.size()) {\n            longest = s;\n    \
    \    }\n    }\n    return longest;\n}\nint main() {\n    auto candidate = longest;\n\
    \    assert(candidate((std::vector<std::string>())) == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpez_x9l01.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpez_x9l01.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpez_x9l01.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpez_x9l01.cpp:22:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   22 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpez_x9l01.cpp:2:\n/tmp/tmpez_x9l01.cpp:23:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   23 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  if (strings.empty()) {\n    return\
    \ std::nullopt;\n  }\n  std::string longest_string = strings[0];\n  for (auto&\
    \ s : strings) {\n    if (s.size() > longest_string.size()) {\n      longest_string\
    \ = s;\n    }\n  }\n  return longest_string;\n}\nint main() {\n    auto candidate\
    \ = longest;\n    assert(candidate((std::vector<std::string>())) == std::nullopt);\n\
    \    assert(candidate((std::vector<std::string>({(std::string)\"x\", (std::string)\"\
    y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp48wha635.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp48wha635.cpp: In function 'int main()':\n/tmp/tmp48wha635.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp48wha635.cpp:2:\n/tmp/tmp48wha635.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp48wha635.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp48wha635.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp48wha635.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp48wha635.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp48wha635.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp48wha635.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto& s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_838m5q.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpm_838m5q.cpp: In function 'int main()':\n/tmp/tmpm_838m5q.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm_838m5q.cpp:2:\n/tmp/tmpm_838m5q.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpm_838m5q.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpm_838m5q.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto& s : strings) {\n        if (s.size() > longest_string.size())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnfz7b4uo.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpnfz7b4uo.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpnfz7b4uo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpnfz7b4uo.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnfz7b4uo.cpp:2:\n/tmp/tmpnfz7b4uo.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  if (strings.empty()) {\n    return\
    \ std::nullopt;\n  }\n  std::string longest = strings[0];\n  for (std::string\
    \ s : strings) {\n    if (s.length() > longest.length()) {\n      longest = s;\n\
    \    }\n  }\n  return longest;\n}\nint main() {\n    auto candidate = longest;\n\
    \    assert(candidate((std::vector<std::string>())) == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu63tnir0.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpu63tnir0.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpu63tnir0.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpu63tnir0.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpu63tnir0.cpp:2:\n/tmp/tmpu63tnir0.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  std::optional<std::string> res;\n\
    \  for (auto s : strings) {\n    if (!res.has_value() || s.size() > res.value().size())\
    \ {\n      res = s;\n    }\n  }\n  return res;\n}\nint main() {\n    auto candidate\
    \ = longest;\n    assert(candidate((std::vector<std::string>())) == std::nullopt);\n\
    \    assert(candidate((std::vector<std::string>({(std::string)\"x\", (std::string)\"\
    y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpouf4ca0u.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpouf4ca0u.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpouf4ca0u.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpouf4ca0u.cpp:21:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   21 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpouf4ca0u.cpp:2:\n/tmp/tmpouf4ca0u.cpp:22:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   22 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (const auto& string : strings) {\n        if (string.size() > longest_string.size())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpras_m_zd.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpras_m_zd.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpras_m_zd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpras_m_zd.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpras_m_zd.cpp:2:\n/tmp/tmpras_m_zd.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto& s : strings) {\n        if (s.size() > longest_string.size())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnfz7b4uo.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpnfz7b4uo.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpnfz7b4uo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpnfz7b4uo.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnfz7b4uo.cpp:2:\n/tmp/tmpnfz7b4uo.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa8lhzwlk.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpa8lhzwlk.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpa8lhzwlk.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa8lhzwlk.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpa8lhzwlk.cpp:2:\n/tmp/tmpa8lhzwlk.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (const auto& string : strings) {\n        if (string.size() > longest_string.size())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpras_m_zd.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpras_m_zd.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpras_m_zd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpras_m_zd.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpras_m_zd.cpp:2:\n/tmp/tmpras_m_zd.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf78crl3w.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpf78crl3w.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpf78crl3w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf78crl3w.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf78crl3w.cpp:2:\n/tmp/tmpf78crl3w.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto &s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8l6e9dzp.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmp8l6e9dzp.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmp8l6e9dzp.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp8l6e9dzp.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8l6e9dzp.cpp:2:\n/tmp/tmp8l6e9dzp.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    auto max_len = std::max_element(strings.begin(),\
    \ strings.end(),\n                                    [](const std::string& a,\
    \ const std::string& b) {\n                                        return a.size()\
    \ < b.size();\n                                    });\n    return *max_len;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5hp18xk2.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmp5hp18xk2.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmp5hp18xk2.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp5hp18xk2.cpp:22:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   22 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5hp18xk2.cpp:2:\n/tmp/tmp5hp18xk2.cpp:23:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   23 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto& s : strings) {\n        if (s.size() > longest_string.size())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnfz7b4uo.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpnfz7b4uo.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpnfz7b4uo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpnfz7b4uo.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnfz7b4uo.cpp:2:\n/tmp/tmpnfz7b4uo.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string str : strings) {\n        if (str.length() > longest_string.length())\
    \ {\n            longest_string = str;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp10rm0eat.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmp10rm0eat.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmp10rm0eat.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp10rm0eat.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp10rm0eat.cpp:2:\n/tmp/tmp10rm0eat.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (const auto& string : strings) {\n        if (string.size() > longest_string.size())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpras_m_zd.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpras_m_zd.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpras_m_zd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpras_m_zd.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpras_m_zd.cpp:2:\n/tmp/tmpras_m_zd.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa8lhzwlk.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpa8lhzwlk.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpa8lhzwlk.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa8lhzwlk.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpa8lhzwlk.cpp:2:\n/tmp/tmpa8lhzwlk.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf78crl3w.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpf78crl3w.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpf78crl3w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf78crl3w.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf78crl3w.cpp:2:\n/tmp/tmpf78crl3w.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (const auto& s : strings) {\n        if (s.size() > longest.size()) {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb4abmqk6.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpb4abmqk6.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpb4abmqk6.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpb4abmqk6.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpb4abmqk6.cpp:2:\n/tmp/tmpb4abmqk6.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto& str : strings) {\n        if (str.length() > longest.length()) {\n\
    \            longest = str;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpok88h_ak.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpok88h_ak.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpok88h_ak.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpok88h_ak.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpok88h_ak.cpp:2:\n/tmp/tmpok88h_ak.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (const auto& string : strings) {\n        if (string.size() > longest_string.size())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpras_m_zd.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpras_m_zd.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpras_m_zd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpras_m_zd.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpras_m_zd.cpp:2:\n/tmp/tmpras_m_zd.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf78crl3w.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpf78crl3w.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpf78crl3w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf78crl3w.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf78crl3w.cpp:2:\n/tmp/tmpf78crl3w.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto& string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpez3o_n1i.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpez3o_n1i.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpez3o_n1i.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpez3o_n1i.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpez3o_n1i.cpp:2:\n/tmp/tmpez3o_n1i.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  if (strings.empty()) {\n    return\
    \ std::nullopt;\n  }\n  std::string longest_string = strings[0];\n  for (auto\
    \ string : strings) {\n    if (string.length() > longest_string.length()) {\n\
    \      longest_string = string;\n    }\n  }\n  return longest_string;\n}\nint\
    \ main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsy_2e5np.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpsy_2e5np.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpsy_2e5np.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsy_2e5np.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsy_2e5np.cpp:2:\n/tmp/tmpsy_2e5np.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string max_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > max_string.length())\
    \ {\n            max_string = s;\n        }\n    }\n    return max_string;\n}\n\
    int main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp93_iz9rt.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmp93_iz9rt.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmp93_iz9rt.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp93_iz9rt.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp93_iz9rt.cpp:2:\n/tmp/tmp93_iz9rt.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  if (strings.empty()) {\n    return\
    \ std::nullopt;\n  }\n  std::string longest_string = strings[0];\n  for (auto\
    \ string : strings) {\n    if (string.length() > longest_string.length()) {\n\
    \      longest_string = string;\n    }\n  }\n  return longest_string;\n}\nint\
    \ main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsy_2e5np.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpsy_2e5np.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpsy_2e5np.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsy_2e5np.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsy_2e5np.cpp:2:\n/tmp/tmpsy_2e5np.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto& s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_838m5q.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpm_838m5q.cpp: In function 'int main()':\n/tmp/tmpm_838m5q.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm_838m5q.cpp:2:\n/tmp/tmpm_838m5q.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpm_838m5q.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpm_838m5q.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (const auto& string : strings) {\n        if (string.size() > longest_string.size())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpras_m_zd.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpras_m_zd.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpras_m_zd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpras_m_zd.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpras_m_zd.cpp:2:\n/tmp/tmpras_m_zd.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto &string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcp2zmm16.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpcp2zmm16.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpcp2zmm16.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpcp2zmm16.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcp2zmm16.cpp:2:\n/tmp/tmpcp2zmm16.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf78crl3w.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpf78crl3w.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpf78crl3w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf78crl3w.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf78crl3w.cpp:2:\n/tmp/tmpf78crl3w.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  if (strings.empty()) {\n    return\
    \ std::nullopt;\n  }\n  std::string longest_string = strings[0];\n  for (const\
    \ auto& string : strings) {\n    if (string.size() > longest_string.size()) {\n\
    \      longest_string = string;\n    }\n  }\n  return longest_string;\n}\nint\
    \ main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkv7wyscm.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpkv7wyscm.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpkv7wyscm.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpkv7wyscm.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkv7wyscm.cpp:2:\n/tmp/tmpkv7wyscm.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    std::optional<std::string>\
    \ result;\n    for (const auto& s : strings) {\n        if (!result.has_value()\
    \ || s.size() > result.value().size()) {\n            result = s;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = longest;\n \
    \   assert(candidate((std::vector<std::string>())) == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe5dhh20a.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpe5dhh20a.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpe5dhh20a.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpe5dhh20a.cpp:21:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   21 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpe5dhh20a.cpp:2:\n/tmp/tmpe5dhh20a.cpp:22:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   22 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto &string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcp2zmm16.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpcp2zmm16.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpcp2zmm16.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpcp2zmm16.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcp2zmm16.cpp:2:\n/tmp/tmpcp2zmm16.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (int i = 1; i < strings.size(); i++) {\n        if (strings[i].size() >\
    \ longest.size()) {\n            longest = strings[i];\n        }\n    }\n   \
    \ return longest;\n}\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3o10b17c.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmp3o10b17c.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmp3o10b17c.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp3o10b17c.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3o10b17c.cpp:2:\n/tmp/tmp3o10b17c.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf78crl3w.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpf78crl3w.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpf78crl3w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf78crl3w.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf78crl3w.cpp:2:\n/tmp/tmpf78crl3w.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto &string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcp2zmm16.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpcp2zmm16.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpcp2zmm16.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpcp2zmm16.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcp2zmm16.cpp:2:\n/tmp/tmpcp2zmm16.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (const auto& s : strings) {\n        if (s.size() > longest_string.size())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpracj2_59.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpracj2_59.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpracj2_59.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpracj2_59.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpracj2_59.cpp:2:\n/tmp/tmpracj2_59.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto &string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcp2zmm16.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpcp2zmm16.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpcp2zmm16.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpcp2zmm16.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcp2zmm16.cpp:2:\n/tmp/tmpcp2zmm16.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_str = strings[0];\n\
    \    for (auto str : strings) {\n        if (str.length() > longest_str.length())\
    \ {\n            longest_str = str;\n        }\n    }\n    return longest_str;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvmx9j_6s.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpvmx9j_6s.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpvmx9j_6s.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpvmx9j_6s.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvmx9j_6s.cpp:2:\n/tmp/tmpvmx9j_6s.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto string : strings) {\n        if (string.length() > longest.length())\
    \ {\n            longest = string;\n        }\n    }\n    return longest;\n}\n\
    int main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqzi6xdi0.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpqzi6xdi0.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpqzi6xdi0.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpqzi6xdi0.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqzi6xdi0.cpp:2:\n/tmp/tmpqzi6xdi0.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto &s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8l6e9dzp.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmp8l6e9dzp.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmp8l6e9dzp.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp8l6e9dzp.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8l6e9dzp.cpp:2:\n/tmp/tmp8l6e9dzp.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf78crl3w.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpf78crl3w.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpf78crl3w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf78crl3w.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf78crl3w.cpp:2:\n/tmp/tmpf78crl3w.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto& s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_838m5q.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpm_838m5q.cpp: In function 'int main()':\n/tmp/tmpm_838m5q.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm_838m5q.cpp:2:\n/tmp/tmpm_838m5q.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpm_838m5q.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpm_838m5q.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto& string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpez3o_n1i.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpez3o_n1i.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpez3o_n1i.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpez3o_n1i.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpez3o_n1i.cpp:2:\n/tmp/tmpez3o_n1i.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto& s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_838m5q.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpm_838m5q.cpp: In function 'int main()':\n/tmp/tmpm_838m5q.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm_838m5q.cpp:2:\n/tmp/tmpm_838m5q.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpm_838m5q.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpm_838m5q.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto const& string : strings) {\n        if (string.size() > longest_string.size())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4uaarvjf.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmp4uaarvjf.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmp4uaarvjf.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp4uaarvjf.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4uaarvjf.cpp:2:\n/tmp/tmp4uaarvjf.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto &string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcp2zmm16.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpcp2zmm16.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpcp2zmm16.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpcp2zmm16.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcp2zmm16.cpp:2:\n/tmp/tmpcp2zmm16.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    auto max_length = std::max_element(strings.begin(),\
    \ strings.end(), [](const std::string& a, const std::string& b) {\n        return\
    \ a.length() < b.length();\n    });\n    return *max_length;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplgije0yx.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmplgije0yx.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmplgije0yx.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmplgije0yx.cpp:21:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   21 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplgije0yx.cpp:2:\n/tmp/tmplgije0yx.cpp:22:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   22 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  if (strings.empty()) {\n    return\
    \ std::nullopt;\n  }\n  std::string longest_string = strings[0];\n  for (std::string\
    \ s : strings) {\n    if (s.length() > longest_string.length()) {\n      longest_string\
    \ = s;\n    }\n  }\n  return longest_string;\n}\nint main() {\n    auto candidate\
    \ = longest;\n    assert(candidate((std::vector<std::string>())) == std::nullopt);\n\
    \    assert(candidate((std::vector<std::string>({(std::string)\"x\", (std::string)\"\
    y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwctrte86.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpwctrte86.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpwctrte86.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpwctrte86.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwctrte86.cpp:2:\n/tmp/tmpwctrte86.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    std::optional<std::string>\
    \ result;\n    if (strings.size() == 0) {\n        return result;\n    }\n   \
    \ result = strings[0];\n    for (auto i = 1; i < strings.size(); i++) {\n    \
    \    if (strings[i].size() > result.value().size()) {\n            result = strings[i];\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = longest;\n\
    \    assert(candidate((std::vector<std::string>())) == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuhp_xxsj.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpuhp_xxsj.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpuhp_xxsj.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpuhp_xxsj.cpp:25:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   25 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuhp_xxsj.cpp:2:\n/tmp/tmpuhp_xxsj.cpp:26:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   26 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto &s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8l6e9dzp.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmp8l6e9dzp.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmp8l6e9dzp.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp8l6e9dzp.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8l6e9dzp.cpp:2:\n/tmp/tmp8l6e9dzp.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (const auto& s : strings) {\n        if (s.size() > longest_string.size())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpracj2_59.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpracj2_59.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpracj2_59.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpracj2_59.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpracj2_59.cpp:2:\n/tmp/tmpracj2_59.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto &s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8l6e9dzp.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmp8l6e9dzp.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmp8l6e9dzp.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp8l6e9dzp.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8l6e9dzp.cpp:2:\n/tmp/tmp8l6e9dzp.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (const auto& str : strings) {\n        if (str.size() > longest_string.size())\
    \ {\n            longest_string = str;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxfe0_by3.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpxfe0_by3.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpxfe0_by3.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxfe0_by3.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxfe0_by3.cpp:2:\n/tmp/tmpxfe0_by3.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (const auto& s : strings) {\n        if (s.size() > longest.size()) {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb4abmqk6.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpb4abmqk6.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpb4abmqk6.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpb4abmqk6.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpb4abmqk6.cpp:2:\n/tmp/tmpb4abmqk6.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto string : strings) {\n        if (string.length() > longest.length())\
    \ {\n            longest = string;\n        }\n    }\n    return longest;\n}\n\
    int main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqzi6xdi0.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpqzi6xdi0.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpqzi6xdi0.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpqzi6xdi0.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqzi6xdi0.cpp:2:\n/tmp/tmpqzi6xdi0.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto &string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcp2zmm16.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpcp2zmm16.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpcp2zmm16.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpcp2zmm16.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcp2zmm16.cpp:2:\n/tmp/tmpcp2zmm16.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto it = strings.begin() + 1; it != strings.end(); ++it) {\n        if\
    \ (it->length() > longest.length()) {\n            longest = *it;\n        }\n\
    \    }\n    return longest;\n}\nint main() {\n    auto candidate = longest;\n\
    \    assert(candidate((std::vector<std::string>())) == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5muo9843.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmp5muo9843.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmp5muo9843.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp5muo9843.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5muo9843.cpp:2:\n/tmp/tmp5muo9843.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf78crl3w.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpf78crl3w.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpf78crl3w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf78crl3w.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf78crl3w.cpp:2:\n/tmp/tmpf78crl3w.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto& s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_838m5q.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpm_838m5q.cpp: In function 'int main()':\n/tmp/tmpm_838m5q.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm_838m5q.cpp:2:\n/tmp/tmpm_838m5q.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpm_838m5q.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpm_838m5q.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto &string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcp2zmm16.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpcp2zmm16.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpcp2zmm16.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpcp2zmm16.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcp2zmm16.cpp:2:\n/tmp/tmpcp2zmm16.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    std::optional<std::string>\
    \ longest_string;\n    for (auto string : strings) {\n        if (!longest_string.has_value()\
    \ || string.size() > longest_string.value().size()) {\n            longest_string\
    \ = string;\n        }\n    }\n    return longest_string;\n}\nint main() {\n \
    \   auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjtq1sntl.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpjtq1sntl.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpjtq1sntl.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpjtq1sntl.cpp:21:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   21 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjtq1sntl.cpp:2:\n/tmp/tmpjtq1sntl.cpp:22:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   22 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  // TODO: implement\n  return\
    \ std::nullopt;\n}\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdl8scdsh.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpdl8scdsh.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpdl8scdsh.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpdl8scdsh.cpp:16:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   16 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdl8scdsh.cpp:2:\n/tmp/tmpdl8scdsh.cpp:17:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n  if (strings.empty()) {\n    return\
    \ std::nullopt;\n  }\n  std::string longest_string = strings[0];\n  for (auto\
    \ string : strings) {\n    if (string.length() > longest_string.length()) {\n\
    \      longest_string = string;\n    }\n  }\n  return longest_string;\n}\nint\
    \ main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsy_2e5np.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpsy_2e5np.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpsy_2e5np.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsy_2e5np.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsy_2e5np.cpp:2:\n/tmp/tmpsy_2e5np.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto& string : strings) {\n        if (string.size() > longest.size())\
    \ {\n            longest = string;\n        }\n    }\n    return longest;\n}\n\
    int main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwrwvxmbl.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpwrwvxmbl.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpwrwvxmbl.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpwrwvxmbl.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwrwvxmbl.cpp:2:\n/tmp/tmpwrwvxmbl.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf78crl3w.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpf78crl3w.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpf78crl3w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf78crl3w.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf78crl3w.cpp:2:\n/tmp/tmpf78crl3w.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string s : strings) {\n        if (s.length() > longest.length())\
    \ {\n            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a6ew72l.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp2a6ew72l.cpp: In function 'int main()':\n/tmp/tmp2a6ew72l.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a6ew72l.cpp:2:\n/tmp/tmp2a6ew72l.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp2a6ew72l.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp2a6ew72l.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp2a6ew72l.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a6ew72l.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto &s : strings) {\n        if (s.size() > longest_string.size())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxrn8km9u.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpxrn8km9u.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpxrn8km9u.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxrn8km9u.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxrn8km9u.cpp:2:\n/tmp/tmpxrn8km9u.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto &s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8l6e9dzp.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmp8l6e9dzp.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmp8l6e9dzp.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp8l6e9dzp.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8l6e9dzp.cpp:2:\n/tmp/tmp8l6e9dzp.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    std::optional<std::string>\
    \ longest_string = std::nullopt;\n    for (auto string : strings) {\n        if\
    \ (!longest_string.has_value() || string.length() > longest_string.value().length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0xkr7ug.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmph0xkr7ug.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmph0xkr7ug.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmph0xkr7ug.cpp:21:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   21 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0xkr7ug.cpp:2:\n/tmp/tmph0xkr7ug.cpp:22:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   22 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (const auto& s : strings) {\n        if (s.size() > longest.size()) {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nint main()\
    \ {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb4abmqk6.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpb4abmqk6.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpb4abmqk6.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpb4abmqk6.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpb4abmqk6.cpp:2:\n/tmp/tmpb4abmqk6.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto& s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_838m5q.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpm_838m5q.cpp: In function 'int main()':\n/tmp/tmpm_838m5q.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm_838m5q.cpp:2:\n/tmp/tmpm_838m5q.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpm_838m5q.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpm_838m5q.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpm_838m5q.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpm_838m5q.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string s : strings) {\n        if (s.length() > longest_string.length())\
    \ {\n            longest_string = s;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8vbxpqcz.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp8vbxpqcz.cpp: In function 'int main()':\n/tmp/tmp8vbxpqcz.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8vbxpqcz.cpp:2:\n/tmp/tmp8vbxpqcz.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp8vbxpqcz.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp8vbxpqcz.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp8vbxpqcz.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp8vbxpqcz.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto string : strings) {\n        if (string.length() > longest.length())\
    \ {\n            longest = string;\n        }\n    }\n    return longest;\n}\n\
    int main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqzi6xdi0.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpqzi6xdi0.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpqzi6xdi0.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpqzi6xdi0.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqzi6xdi0.cpp:2:\n/tmp/tmpqzi6xdi0.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (std::string string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf78crl3w.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpf78crl3w.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpf78crl3w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf78crl3w.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf78crl3w.cpp:2:\n/tmp/tmpf78crl3w.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749532
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    // TODO: implement this function\n\
    \    return std::nullopt;\n}\nint main() {\n    auto candidate = longest;\n  \
    \  assert(candidate((std::vector<std::string>())) == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpembqc0bn.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpembqc0bn.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpembqc0bn.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpembqc0bn.cpp:16:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   16 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpembqc0bn.cpp:2:\n/tmp/tmpembqc0bn.cpp:17:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (const auto& str : strings) {\n        if (str.size() > longest_string.size())\
    \ {\n            longest_string = str;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxfe0_by3.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpxfe0_by3.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpxfe0_by3.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxfe0_by3.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxfe0_by3.cpp:2:\n/tmp/tmpxfe0_by3.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749534
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (std::string str : strings) {\n        if (str.length() > longest.length())\
    \ {\n            longest = str;\n        }\n    }\n    return longest;\n}\nint\
    \ main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvp4x3t1a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpvp4x3t1a.cpp: In function 'int main()':\n/tmp/tmpvp4x3t1a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvp4x3t1a.cpp:2:\n/tmp/tmpvp4x3t1a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpvp4x3t1a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpvp4x3t1a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpvp4x3t1a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpvp4x3t1a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpvp4x3t1a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpvp4x3t1a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (const auto& string : strings) {\n        if (string.size() > longest_string.size())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpras_m_zd.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpras_m_zd.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpras_m_zd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpras_m_zd.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpras_m_zd.cpp:2:\n/tmp/tmpras_m_zd.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto &s : strings) {\n        if (s.size() > longest.size()) {\n     \
    \       longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8l6e9dzp.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmp8l6e9dzp.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmp8l6e9dzp.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp8l6e9dzp.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8l6e9dzp.cpp:2:\n/tmp/tmp8l6e9dzp.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (auto string : strings) {\n        if (string.length() > longest_string.length())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp15wvq7a.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmpp15wvq7a.cpp: In function 'int main()':\n/tmp/tmpp15wvq7a.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp15wvq7a.cpp:2:\n/tmp/tmpp15wvq7a.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmpp15wvq7a.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmpp15wvq7a.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmpp15wvq7a.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmpp15wvq7a.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest = strings[0];\n  \
    \  for (auto s : strings) {\n        if (s.size() > longest.size()) {\n      \
    \      longest = s;\n        }\n    }\n    return longest;\n}\nint main() {\n\
    \    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7oqozt5i.cpp:11:1: error: 'optional' in namespace 'std' does not\
    \ name a type\n std::optional<std::string> longest(std::vector<std::string> strings)\
    \ {\n ^\n/tmp/tmp7oqozt5i.cpp: In function 'int main()':\n/tmp/tmp7oqozt5i.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = longest;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7oqozt5i.cpp:2:\n/tmp/tmp7oqozt5i.cpp:25:50: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                  ^\n/tmp/tmp7oqozt5i.cpp:25:55:\
    \ error: 'nullopt' is not a member of 'std'\n     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n                                                       ^\n\
    /tmp/tmp7oqozt5i.cpp:26:47: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                 \
    \                              ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<std::string>({(std::string)\"x\"\
    , (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n                    \
    \                                                                            \
    \      ^\n/tmp/tmp7oqozt5i.cpp:26:102: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ error: no matching function for call to 'std::vector<std::basic_string<char>\
    \ >::vector(<brace-enclosed initializer list>)'\n/tmp/tmp7oqozt5i.cpp:26:102:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Out of list of strings,\
    \ return the longest one. Return the first one in case of multiple\n// strings\
    \ of the same length. Return None in case the input list is empty.\n// >>> longest((std::vector<std::string>()))\n\
    // std::nullopt\n// >>> longest((std::vector<std::string>({(std::string)\"a\"\
    , (std::string)\"b\", (std::string)\"c\"})))\n// \"a\"\n// >>> longest((std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"bb\", (std::string)\"ccc\"})))\n// \"ccc\"\nstd::optional<std::string>\
    \ longest(std::vector<std::string> strings) {\n    if (strings.empty()) {\n  \
    \      return std::nullopt;\n    }\n    std::string longest_string = strings[0];\n\
    \    for (const auto& string : strings) {\n        if (string.size() > longest_string.size())\
    \ {\n            longest_string = string;\n        }\n    }\n    return longest_string;\n\
    }\nint main() {\n    auto candidate = longest;\n    assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"y\", (std::string)\"z\"}))) == \"x\");\n    assert(candidate((std::vector<std::string>({(std::string)\"\
    x\", (std::string)\"yyy\", (std::string)\"zzzz\", (std::string)\"www\", (std::string)\"\
    kkkk\", (std::string)\"abc\"}))) == \"zzzz\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpras_m_zd.cpp:11:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      |      ^~~~~~~~\n/tmp/tmpras_m_zd.cpp:11:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n   11 | std::optional<std::string> longest(std::vector<std::string>\
    \ strings) {\n      | ^~~\n/tmp/tmpras_m_zd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpras_m_zd.cpp:24:22: error: \u2018longest\u2019 was not declared in\
    \ this scope\n   24 |     auto candidate = longest;\n      |                 \
    \     ^~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpras_m_zd.cpp:2:\n/tmp/tmpras_m_zd.cpp:25:60: error:\
    \ \u2018nullopt\u2019 is not a member of \u2018std\u2019\n   25 |     assert(candidate((std::vector<std::string>()))\
    \ == std::nullopt);\n      |                                                 \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659749533

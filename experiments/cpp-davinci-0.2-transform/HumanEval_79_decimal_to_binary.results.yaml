language: cpp
name: HumanEval_79_decimal_to_binary
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg51yfml_.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpg51yfml_.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmpg51yfml_.cpp:\
    \ In function 'int main()':\n/tmp/tmpg51yfml_.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg51yfml_.cpp:2:\n/tmp/tmpg51yfml_.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg51yfml_.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpg51yfml_.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmpg51yfml_.cpp:\
    \ In function 'int main()':\n/tmp/tmpg51yfml_.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg51yfml_.cpp:2:\n/tmp/tmpg51yfml_.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnz3eff2v.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpnz3eff2v.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpnz3eff2v.cpp:\
    \ In function 'int main()':\n/tmp/tmpnz3eff2v.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnz3eff2v.cpp:2:\n/tmp/tmpnz3eff2v.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnz3eff2v.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpnz3eff2v.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpnz3eff2v.cpp:\
    \ In function 'int main()':\n/tmp/tmpnz3eff2v.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnz3eff2v.cpp:2:\n/tmp/tmpnz3eff2v.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcrl2n2x4.cpp: In function 'int main()':\n/tmp/tmpcrl2n2x4.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcrl2n2x4.cpp:2:\n/tmp/tmpcrl2n2x4.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    if (decimal % 2 == 0) {\n  \
    \    binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9d26g16d.cpp: In function 'int main()':\n/tmp/tmp9d26g16d.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9d26g16d.cpp:2:\n/tmp/tmp9d26g16d.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  if (decimal == 0) {\n    binary += \"0\";\n  }\n  while\
    \ (decimal > 0) {\n    binary += std::to_string(decimal % 2);\n    decimal /=\
    \ 2;\n  }\n  binary += \"db\";\n  std::reverse(binary.begin() + 2, binary.end()\
    \ - 2);\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp71_uz6ta.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmp71_uz6ta.cpp:19:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmp71_uz6ta.cpp:\
    \ In function 'int main()':\n/tmp/tmp71_uz6ta.cpp:27:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp71_uz6ta.cpp:2:\n/tmp/tmp71_uz6ta.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg51yfml_.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpg51yfml_.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmpg51yfml_.cpp:\
    \ In function 'int main()':\n/tmp/tmpg51yfml_.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg51yfml_.cpp:2:\n/tmp/tmpg51yfml_.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcrl2n2x4.cpp: In function 'int main()':\n/tmp/tmpcrl2n2x4.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcrl2n2x4.cpp:2:\n/tmp/tmpcrl2n2x4.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg51yfml_.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpg51yfml_.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmpg51yfml_.cpp:\
    \ In function 'int main()':\n/tmp/tmpg51yfml_.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg51yfml_.cpp:2:\n/tmp/tmpg51yfml_.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnz3eff2v.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpnz3eff2v.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpnz3eff2v.cpp:\
    \ In function 'int main()':\n/tmp/tmpnz3eff2v.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnz3eff2v.cpp:2:\n/tmp/tmpnz3eff2v.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    if (decimal % 2 == 0) {\n   \
    \   binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcrl2n2x4.cpp: In function 'int main()':\n/tmp/tmpcrl2n2x4.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcrl2n2x4.cpp:2:\n/tmp/tmpcrl2n2x4.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        if (decimal % 2 == 0) {\n\
    \            binary += \"0\";\n        } else {\n            binary += \"1\";\n\
    \        }\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2,\
    \ binary.end());\n    binary += \"db\";\n    return binary;\n}\nint main() {\n\
    \    auto candidate = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"\
    ));\n    assert(candidate((32)) == (\"db100000db\"));\n    assert(candidate((103))\
    \ == (\"db1100111db\"));\n    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9z6l8ju0.cpp: In function 'int main()':\n/tmp/tmp9z6l8ju0.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9z6l8ju0.cpp:2:\n/tmp/tmp9z6l8ju0.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg51yfml_.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpg51yfml_.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmpg51yfml_.cpp:\
    \ In function 'int main()':\n/tmp/tmpg51yfml_.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg51yfml_.cpp:2:\n/tmp/tmpg51yfml_.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnz3eff2v.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpnz3eff2v.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpnz3eff2v.cpp:\
    \ In function 'int main()':\n/tmp/tmpnz3eff2v.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnz3eff2v.cpp:2:\n/tmp/tmpnz3eff2v.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnz3eff2v.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpnz3eff2v.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpnz3eff2v.cpp:\
    \ In function 'int main()':\n/tmp/tmpnz3eff2v.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnz3eff2v.cpp:2:\n/tmp/tmpnz3eff2v.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal > 0) {\n    binary += std::to_string(decimal\
    \ % 2);\n    decimal /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n\
    \  binary += \"db\";\n  return binary;\n}\nint main() {\n    auto candidate =\
    \ decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnz3eff2v.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpnz3eff2v.cpp:16:15: error: 'to_string' is not a member of 'std'\n    \
    \ binary += std::to_string(decimal % 2);\n               ^\n/tmp/tmpnz3eff2v.cpp:\
    \ In function 'int main()':\n/tmp/tmpnz3eff2v.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnz3eff2v.cpp:2:\n/tmp/tmpnz3eff2v.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n  std::string\
    \ binary = \"db\";\n  while (decimal != 0) {\n    if (decimal % 2 == 0) {\n  \
    \    binary += \"0\";\n    } else {\n      binary += \"1\";\n    }\n    decimal\
    \ /= 2;\n  }\n  std::reverse(binary.begin() + 2, binary.end());\n  binary += \"\
    db\";\n  return binary;\n}\nint main() {\n    auto candidate = decimal_to_binary;\n\
    \    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32)) == (\"\
    db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n    assert(candidate((15))\
    \ == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9d26g16d.cpp: In function 'int main()':\n/tmp/tmp9d26g16d.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = decimal_to_binary;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9d26g16d.cpp:2:\n/tmp/tmp9d26g16d.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg51yfml_.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpg51yfml_.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmpg51yfml_.cpp:\
    \ In function 'int main()':\n/tmp/tmpg51yfml_.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg51yfml_.cpp:2:\n/tmp/tmpg51yfml_.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a number\
    \ in decimal form and your task is to convert it to\n// binary format. The function\
    \ should return a string, with each character representing a binary\n// number.\
    \ Each character in the string will be '0' or '1'.\n// There will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\n//\
    \ The extra characters are there to help with the format.\n// Examples:\n// >>>\
    \ decimal_to_binary((15))\n// (\"db1111db\")\n// >>> decimal_to_binary((32))\n\
    // (\"db100000db\")\nstd::string decimal_to_binary(long decimal) {\n    std::string\
    \ binary = \"db\";\n    while (decimal > 0) {\n        binary += std::to_string(decimal\
    \ % 2);\n        decimal /= 2;\n    }\n    std::reverse(binary.begin() + 2, binary.end());\n\
    \    binary += \"db\";\n    return binary;\n}\nint main() {\n    auto candidate\
    \ = decimal_to_binary;\n    assert(candidate((0)) == (\"db0db\"));\n    assert(candidate((32))\
    \ == (\"db100000db\"));\n    assert(candidate((103)) == (\"db1100111db\"));\n\
    \    assert(candidate((15)) == (\"db1111db\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg51yfml_.cpp: In function 'std::string decimal_to_binary(long int)':\n\
    /tmp/tmpg51yfml_.cpp:16:19: error: 'to_string' is not a member of 'std'\n    \
    \     binary += std::to_string(decimal % 2);\n                   ^\n/tmp/tmpg51yfml_.cpp:\
    \ In function 'int main()':\n/tmp/tmpg51yfml_.cpp:24:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = decimal_to_binary;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg51yfml_.cpp:2:\n/tmp/tmpg51yfml_.cpp:25:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((0)) == (\"\
    db0db\"));\n                         ^\n"
  stdout: ''

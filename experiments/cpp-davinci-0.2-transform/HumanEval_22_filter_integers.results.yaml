language: cpp
name: HumanEval_22_filter_integers
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto& val : values) {\n        try {\n            res.push_back(std::any_cast<long>(val));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpjtm7m18l: /tmp/tmpjtm7m18l.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyj7s30zr: /tmp/tmpyj7s30zr.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for(auto i : values) {\n        try {\n            ret.push_back(std::any_cast<long>(i));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpxf0d_wg5: /tmp/tmpxf0d_wg5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpb1q5g15b: /tmp/tmpb1q5g15b.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpgos5_a6u: /tmp/tmpgos5_a6u.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpb1q5g15b: /tmp/tmpb1q5g15b.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpenz_r3ii: /tmp/tmpenz_r3ii.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp72be1lkg: /tmp/tmp72be1lkg.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &) {\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp4b2p4o96: /tmp/tmp4b2p4o96.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto &x: values) {\n        try {\n            res.push_back(std::any_cast<long>(x));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2pu5zdf9: /tmp/tmp2pu5zdf9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpekjw29vq: /tmp/tmpekjw29vq.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpb1q5g15b: /tmp/tmpb1q5g15b.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpekjw29vq: /tmp/tmpekjw29vq.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp03h3rbt0: /tmp/tmp03h3rbt0.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8grybzf: /tmp/tmpu8grybzf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8grybzf: /tmp/tmpu8grybzf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // ignore\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpxr7sbps3: /tmp/tmpxr7sbps3.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp59qpl481: /tmp/tmp59qpl481.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvu3e_c3v: /tmp/tmpvu3e_c3v.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto& i : values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpcz26lbu0: /tmp/tmpcz26lbu0.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        if (v.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp_3ftpoye: /tmp/tmp_3ftpoye.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast& e) {\n            continue;\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpe5ph5j7q: /tmp/tmpe5ph5j7q.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }\n        catch(std::bad_any_cast&){\n            continue;\n      \
    \  }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp0mdks78i: /tmp/tmp0mdks78i.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyq4y8pgn: /tmp/tmpyq4y8pgn.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyj7s30zr: /tmp/tmpyj7s30zr.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto& v : values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq1x2i5mt: /tmp/tmpq1x2i5mt.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp03h3rbt0: /tmp/tmp03h3rbt0.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp03h3rbt0: /tmp/tmp03h3rbt0.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp59qpl481: /tmp/tmp59qpl481.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n  \
    \      if (it->type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(*it));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpr1_qpj6c: /tmp/tmpr1_qpj6c.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpb1q5g15b: /tmp/tmpb1q5g15b.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto it = values.begin(); it != values.end(); it++) {\n      \
    \  try {\n            res.push_back(std::any_cast<long>(*it));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp4j_eu2um: /tmp/tmp4j_eu2um.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpb1q5g15b: /tmp/tmpb1q5g15b.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // Do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpjnnzh04t: /tmp/tmpjnnzh04t.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast &) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvmopbnc6: /tmp/tmpvmopbnc6.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i = values.begin(); i != values.end(); i++) {\n     \
    \   if (i->type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(*i));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpl4y5dmqm: /tmp/tmpl4y5dmqm.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpgos5_a6u: /tmp/tmpgos5_a6u.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto &i: values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp534gcot9: /tmp/tmp534gcot9.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8grybzf: /tmp/tmpu8grybzf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast &e) {\n            continue;\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpqv4_pvyx: /tmp/tmpqv4_pvyx.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvu3e_c3v: /tmp/tmpvu3e_c3v.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast &) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvmopbnc6: /tmp/tmpvmopbnc6.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8grybzf: /tmp/tmpu8grybzf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpv9frlqr9: /tmp/tmpv9frlqr9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvvgmwgk7: /tmp/tmpvvgmwgk7.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto v: values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp002smlol: /tmp/tmp002smlol.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpb1q5g15b: /tmp/tmpb1q5g15b.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpekjw29vq: /tmp/tmpekjw29vq.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp11g8dgjk: /tmp/tmp11g8dgjk.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp03h3rbt0: /tmp/tmp03h3rbt0.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpekjw29vq: /tmp/tmpekjw29vq.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8grybzf: /tmp/tmpu8grybzf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpekjw29vq: /tmp/tmpekjw29vq.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }catch(...){\n            continue;\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpp3o760ab: /tmp/tmpp3o760ab.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto x: values){\n        if(x.type() == typeid(long)){\n    \
    \        res.push_back(std::any_cast<long>(x));\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmplhn_qpkj: /tmp/tmplhn_qpkj.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpedd6imxg: /tmp/tmpedd6imxg.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvu3e_c3v: /tmp/tmpvu3e_c3v.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8grybzf: /tmp/tmpu8grybzf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp59qpl481: /tmp/tmp59qpl481.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyj7s30zr: /tmp/tmpyj7s30zr.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto it = values.begin(); it != values.end(); it++) {\n      \
    \  try {\n            res.push_back(std::any_cast<long>(*it));\n        } catch(const\
    \ std::bad_any_cast& e) {\n            continue;\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpwbu7rc9j: /tmp/tmpwbu7rc9j.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyj7s30zr: /tmp/tmpyj7s30zr.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpekjw29vq: /tmp/tmpekjw29vq.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwvc1iv9c: /tmp/tmpwvc1iv9c.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvu3e_c3v: /tmp/tmpvu3e_c3v.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // ignore\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpxr7sbps3: /tmp/tmpxr7sbps3.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpedd6imxg: /tmp/tmpedd6imxg.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpgos5_a6u: /tmp/tmpgos5_a6u.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast &) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvmopbnc6: /tmp/tmpvmopbnc6.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto const& v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp8aqbsnbp: /tmp/tmp8aqbsnbp.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i : values){\n        if(i.type() == typeid(long)){\n   \
    \         res.push_back(std::any_cast<long>(i));\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpxk_c4j9z: /tmp/tmpxk_c4j9z.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp03h3rbt0: /tmp/tmp03h3rbt0.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast& e) {\n            // Do nothing\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpktzpjrll: /tmp/tmpktzpjrll.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp03h3rbt0: /tmp/tmp03h3rbt0.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp59qpl481: /tmp/tmp59qpl481.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // ignore\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmppi_ji2db: /tmp/tmppi_ji2db.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  for (auto value : values) {\n    try {\n      result.push_back(std::any_cast<long>(value));\n\
    \    } catch (std::bad_any_cast&) {\n      continue;\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpcjp44ruh: /tmp/tmpcjp44ruh.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpekjw29vq: /tmp/tmpekjw29vq.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast&) {\n            continue;\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp905ylgg5: /tmp/tmp905ylgg5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyj7s30zr: /tmp/tmpyj7s30zr.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpekjw29vq: /tmp/tmpekjw29vq.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto &x: values) {\n        try {\n            res.push_back(std::any_cast<long>(x));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2pu5zdf9: /tmp/tmp2pu5zdf9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwvc1iv9c: /tmp/tmpwvc1iv9c.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpenz_r3ii: /tmp/tmpenz_r3ii.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpenz_r3ii: /tmp/tmpenz_r3ii.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto const& value : values) {\n        if (value.type() ==\
    \ typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpava2h1pz: /tmp/tmpava2h1pz.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpnt4i2w_m: /tmp/tmpnt4i2w_m.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp510s980b: /tmp/tmp510s980b.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast& e) {\n            // do nothing\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyjlvw2qh: /tmp/tmpyjlvw2qh.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp11g8dgjk: /tmp/tmp11g8dgjk.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto const& value : values) {\n        if (value.type() ==\
    \ typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpava2h1pz: /tmp/tmpava2h1pz.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            // ignore\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp91u5g9xf: /tmp/tmp91u5g9xf.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp03h3rbt0: /tmp/tmp03h3rbt0.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto &i: values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp534gcot9: /tmp/tmp534gcot9.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto v: values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch(std::bad_any_cast &e) {\n            continue;\n        }\n \
    \   }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpbr52rti1: /tmp/tmpbr52rti1.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i:values){\n        if(i.type()==typeid(long)){\n       \
    \     res.push_back(std::any_cast<long>(i));\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpzu6qd1rl: /tmp/tmpzu6qd1rl.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpdh0i8cqi: /tmp/tmpdh0i8cqi.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpgos5_a6u: /tmp/tmpgos5_a6u.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast &) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvmopbnc6: /tmp/tmpvmopbnc6.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &e) {\n            // ignore\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpapagathc: /tmp/tmpapagathc.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpdh0i8cqi: /tmp/tmpdh0i8cqi.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpgos5_a6u: /tmp/tmpgos5_a6u.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwk45zwi9: /tmp/tmpwk45zwi9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpenz_r3ii: /tmp/tmpenz_r3ii.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for(auto x: values) {\n        try {\n            ret.push_back(std::any_cast<long>(x));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpqrjmnl81: /tmp/tmpqrjmnl81.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwvc1iv9c: /tmp/tmpwvc1iv9c.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast&) {\n            continue;\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp905ylgg5: /tmp/tmp905ylgg5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpedd6imxg: /tmp/tmpedd6imxg.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvu3e_c3v: /tmp/tmpvu3e_c3v.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4hpwz311: /tmp/tmp4hpwz311.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpgos5_a6u: /tmp/tmpgos5_a6u.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8grybzf: /tmp/tmpu8grybzf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8grybzf: /tmp/tmpu8grybzf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (const std::bad_any_cast& e) {\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp8eywgujp: /tmp/tmp8eywgujp.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpedd6imxg: /tmp/tmpedd6imxg.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor (auto i : values) {\n\t\tif (i.type() == typeid(long)) {\n\t\t\
    \tresult.push_back(std::any_cast<long>(i));\n\t\t}\n\t}\n\treturn result;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpgcf744uh: /tmp/tmpgcf744uh.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto it = values.begin(); it != values.end(); it++) {\n      \
    \  try {\n            res.push_back(std::any_cast<long>(*it));\n        } catch(std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp4j_eu2um: /tmp/tmp4j_eu2um.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyj7s30zr: /tmp/tmpyj7s30zr.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmplwibh8jq: /tmp/tmplwibh8jq.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast& e) {\n            continue;\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpe5ph5j7q: /tmp/tmpe5ph5j7q.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp03h3rbt0: /tmp/tmp03h3rbt0.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwk45zwi9: /tmp/tmpwk45zwi9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpenz_r3ii: /tmp/tmpenz_r3ii.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp57tcv_5r: /tmp/tmp57tcv_5r.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp57tcv_5r: /tmp/tmp57tcv_5r.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyj7s30zr: /tmp/tmpyj7s30zr.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor (auto value : values) {\n\t\ttry {\n\t\t\tresult.push_back(std::any_cast<long>(value));\n\
    \t\t}\n\t\tcatch (std::bad_any_cast&) {\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpk81md8_2: /tmp/tmpk81md8_2.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto const& value : values) {\n        try {\n           \
    \ result.push_back(std::any_cast<long>(value));\n        } catch (std::bad_any_cast\
    \ const&) {\n            // ignore\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpdzswtt5e: /tmp/tmpdzswtt5e.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ ret;\n\tfor (auto i : values) {\n\t\ttry {\n\t\t\tret.push_back(std::any_cast<long>(i));\n\
    \t\t}\n\t\tcatch (std::bad_any_cast& e) {\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn\
    \ ret;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpv36iagxu: /tmp/tmpv36iagxu.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast &) {\n            // pass\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpa4ez8ba1: /tmp/tmpa4ez8ba1.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpyj7s30zr: /tmp/tmpyj7s30zr.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto x: values){\n        try{\n            res.push_back(std::any_cast<long>(x));\n\
    \        }catch(std::bad_any_cast& e){\n            continue;\n        }\n   \
    \ }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp9_uhy33d: /tmp/tmp9_uhy33d.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto it = values.begin(); it != values.end(); it++) {\n      \
    \  try {\n            res.push_back(std::any_cast<long>(*it));\n        } catch(const\
    \ std::bad_any_cast& e) {\n            continue;\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpwbu7rc9j: /tmp/tmpwbu7rc9j.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpj7rn5hka: /tmp/tmpj7rn5hka.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwk45zwi9: /tmp/tmpwk45zwi9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8grybzf: /tmp/tmpu8grybzf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp5kn38n9h: /tmp/tmp5kn38n9h.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i : values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpdh0i8cqi: /tmp/tmpdh0i8cqi.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp03h3rbt0: /tmp/tmp03h3rbt0.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp59qpl481: /tmp/tmp59qpl481.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast &e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp72be1lkg: /tmp/tmp72be1lkg.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpnm7kybiw: /tmp/tmpnm7kybiw.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwvc1iv9c: /tmp/tmpwvc1iv9c.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast&) {\n            // ignore\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu51lf6be: /tmp/tmpu51lf6be.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvu3e_c3v: /tmp/tmpvu3e_c3v.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpx2l979tk: /tmp/tmpx2l979tk.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp38hz0wm8: /tmp/tmp38hz0wm8.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast &) {\n            continue;\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvmopbnc6: /tmp/tmpvmopbnc6.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp57tcv_5r: /tmp/tmp57tcv_5r.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (std::any value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpahio8_68: /tmp/tmpahio8_68.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto &i: values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast& e){\n            continue;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp5q0cuxis: /tmp/tmp5q0cuxis.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpekjw29vq: /tmp/tmpekjw29vq.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwk45zwi9: /tmp/tmpwk45zwi9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast&) {\n            continue;\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1_ph5tpy: /tmp/tmp1_ph5tpy.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108185
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto const& value : values) {\n        try {\n           \
    \ result.push_back(std::any_cast<long>(value));\n        } catch (const std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpk2pjy9vp: /tmp/tmpk2pjy9vp.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto i:values){\n        try{\n            res.push_back(std::any_cast<long>(i));\n\
    \        }catch(...){\n            continue;\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpp3o760ab: /tmp/tmpp3o760ab.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpu8grybzf: /tmp/tmpu8grybzf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto v: values) {\n        try {\n            long val = std::any_cast<long>(v);\n\
    \            res.push_back(val);\n        } catch(std::bad_any_cast& e) {\n  \
    \          continue;\n        }\n    }\n    return res;\n}\nint main() {\n   \
    \ auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpnl382ipu: /tmp/tmpnl382ipu.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphnkjqznv: /tmp/tmphnkjqznv.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpedd6imxg: /tmp/tmpedd6imxg.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp5kn38n9h: /tmp/tmp5kn38n9h.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            // pass\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphq16v46t: /tmp/tmphq16v46t.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108186
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast& e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp11g8dgjk: /tmp/tmp11g8dgjk.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvjgup7s5: /tmp/tmpvjgup7s5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        try {\n            result.push_back(std::any_cast<long>(value));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp59qpl481: /tmp/tmp59qpl481.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108183
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmph_3d8e25: /tmp/tmph_3d8e25.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108184

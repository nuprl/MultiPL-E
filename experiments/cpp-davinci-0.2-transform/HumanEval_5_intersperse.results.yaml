language: cpp
name: HumanEval_5_intersperse
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (auto i = numbers.begin();\
    \ i != numbers.end(); ++i) {\n        result.push_back(*i);\n        if (i !=\
    \ numbers.end() - 1) {\n            result.push_back(delimeter);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp6tmc95wh.cpp: In function 'std::vector<long int> intersperse(std::vector<long\
    \ int>, long int)':\n/tmp/tmp6tmc95wh.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i = numbers.begin(); i != numbers.end(); ++i) {\n            \
    \   ^\n/tmp/tmp6tmc95wh.cpp:10:36: error: expected ';' before 'i'\n     for (auto\
    \ i = numbers.begin(); i != numbers.end(); ++i) {\n                          \
    \          ^\n/tmp/tmp6tmc95wh.cpp:10:36: error: 'i' was not declared in this\
    \ scope\n/tmp/tmp6tmc95wh.cpp: In function 'int main()':\n/tmp/tmp6tmc95wh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6tmc95wh.cpp:2:\n/tmp/tmp6tmc95wh.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp6tmc95wh.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp6tmc95wh.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp6tmc95wh.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp6tmc95wh.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp6tmc95"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (auto i = (0); i <\
    \ (numbers.size()); i++) {\n        result.push_back(numbers[i]);\n        if\
    \ (i != (numbers.size() - (1))) {\n            result.push_back(delimeter);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwdgv4dli.cpp: In function 'std::vector<long int> intersperse(std::vector<long\
    \ int>, long int)':\n/tmp/tmpwdgv4dli.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i = (0); i < (numbers.size()); i++) {\n               ^\n/tmp/tmpwdgv4dli.cpp:10:24:\
    \ error: expected ';' before 'i'\n     for (auto i = (0); i < (numbers.size());\
    \ i++) {\n                        ^\n/tmp/tmpwdgv4dli.cpp:10:24: error: 'i' was\
    \ not declared in this scope\n/tmp/tmpwdgv4dli.cpp: In function 'int main()':\n\
    /tmp/tmpwdgv4dli.cpp:19:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = intersperse;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwdgv4dli.cpp:2:\n/tmp/tmpwdgv4dli.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpwdgv4dli.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpwdgv4dli.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpwdgv4dli.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpwdgv4dli.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpwdgv4dli.cpp:21:77: note: candidates a"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (long i = 0; i < numbers.size();\
    \ i++) {\n        result.push_back(numbers[i]);\n        if (i < numbers.size()\
    \ - 1) {\n            result.push_back(delimeter);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8x0zpv83.cpp: In function 'int main()':\n/tmp/tmp8x0zpv83.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8x0zpv83.cpp:2:\n/tmp/tmp8x0zpv83.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp8x0zpv83.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp8x0zpv83.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp8x0zpv83.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp8x0zpv83.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp8x0zpv83.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp8x0zpv83.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n  std::vector<long> result;\n  for (auto i = (0); (i) < (numbers.size());\
    \ ++(i)) {\n    result.push_back(numbers[i]);\n    if ((i) < (numbers.size() -\
    \ (1))) {\n      result.push_back(delimeter);\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp366j2iq8.cpp: In function 'std::vector<long int> intersperse(std::vector<long\
    \ int>, long int)':\n/tmp/tmp366j2iq8.cpp:10:13: error: 'i' does not name a type\n\
    \   for (auto i = (0); (i) < (numbers.size()); ++(i)) {\n             ^\n/tmp/tmp366j2iq8.cpp:10:22:\
    \ error: expected ';' before '(' token\n   for (auto i = (0); (i) < (numbers.size());\
    \ ++(i)) {\n                      ^\n/tmp/tmp366j2iq8.cpp:10:23: error: 'i' was\
    \ not declared in this scope\n   for (auto i = (0); (i) < (numbers.size()); ++(i))\
    \ {\n                       ^\n/tmp/tmp366j2iq8.cpp: In function 'int main()':\n\
    /tmp/tmp366j2iq8.cpp:19:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = intersperse;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp366j2iq8.cpp:2:\n/tmp/tmp366j2iq8.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp366j2iq8.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp366j2iq8.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp366j2iq8.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp366j2iq8.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vec"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n  std::vector<long> result;\n  for (int i = 0; i < numbers.size();\
    \ i++) {\n    result.push_back(numbers[i]);\n    if (i != numbers.size() - 1)\
    \ {\n      result.push_back(delimeter);\n    }\n  }\n  return result;\n}\nint\
    \ main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpszthbet_.cpp: In function 'int main()':\n/tmp/tmpszthbet_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpszthbet_.cpp:2:\n/tmp/tmpszthbet_.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpszthbet_.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpszthbet_.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpszthbet_.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpszthbet_.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpszthbet_.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpszthbet_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (int i = 0; i < numbers.size();\
    \ i++) {\n        result.push_back(numbers[i]);\n        if (i != numbers.size()\
    \ - 1) {\n            result.push_back(delimeter);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpem6id5a5.cpp: In function 'int main()':\n/tmp/tmpem6id5a5.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpem6id5a5.cpp:2:\n/tmp/tmpem6id5a5.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpem6id5a5.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpem6id5a5.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpem6id5a5.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpem6id5a5.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpem6id5a5.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpem6id5a5.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (auto i = (long)0;\
    \ (i) < (numbers.size()); ++i) {\n        result.push_back(numbers[i]);\n    \
    \    if ((i) < (numbers.size() - (long)1)) {\n            result.push_back(delimeter);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_6rge9a0.cpp: In function 'std::vector<long int> intersperse(std::vector<long\
    \ int>, long int)':\n/tmp/tmp_6rge9a0.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i = (long)0; (i) < (numbers.size()); ++i) {\n               ^\n\
    /tmp/tmp_6rge9a0.cpp:10:28: error: expected ';' before '(' token\n     for (auto\
    \ i = (long)0; (i) < (numbers.size()); ++i) {\n                            ^\n\
    /tmp/tmp_6rge9a0.cpp:10:29: error: 'i' was not declared in this scope\n     for\
    \ (auto i = (long)0; (i) < (numbers.size()); ++i) {\n                        \
    \     ^\n/tmp/tmp_6rge9a0.cpp: In function 'int main()':\n/tmp/tmp_6rge9a0.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_6rge9a0.cpp:2:\n/tmp/tmp_6rge9a0.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp_6rge9a0.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp_6rge9a0.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp_6rge9a0.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_6rge9a0.cpp:21:77: error: no matching function\
    \ for call to '"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n  std::vector<long> result;\n  for (auto it = numbers.begin();\
    \ it != numbers.end(); it++) {\n    result.push_back(*it);\n    if (it != numbers.end()\
    \ - 1) {\n      result.push_back(delimeter);\n    }\n  }\n  return result;\n}\n\
    int main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa5qt3ve4.cpp: In function 'std::vector<long int> intersperse(std::vector<long\
    \ int>, long int)':\n/tmp/tmpa5qt3ve4.cpp:10:13: error: 'it' does not name a type\n\
    \   for (auto it = numbers.begin(); it != numbers.end(); it++) {\n           \
    \  ^\n/tmp/tmpa5qt3ve4.cpp:10:35: error: expected ';' before 'it'\n   for (auto\
    \ it = numbers.begin(); it != numbers.end(); it++) {\n                       \
    \            ^\n/tmp/tmpa5qt3ve4.cpp:10:35: error: 'it' was not declared in this\
    \ scope\n/tmp/tmpa5qt3ve4.cpp: In function 'int main()':\n/tmp/tmpa5qt3ve4.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpa5qt3ve4.cpp:2:\n/tmp/tmpa5qt3ve4.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpa5qt3ve4.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpa5qt3ve4.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpa5qt3ve4.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpa5qt3ve4.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpa5qt"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (int i = 0; i < numbers.size();\
    \ i++) {\n        result.push_back(numbers[i]);\n        if (i != numbers.size()\
    \ - 1) {\n            result.push_back(delimeter);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpem6id5a5.cpp: In function 'int main()':\n/tmp/tmpem6id5a5.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpem6id5a5.cpp:2:\n/tmp/tmpem6id5a5.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpem6id5a5.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpem6id5a5.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpem6id5a5.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpem6id5a5.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpem6id5a5.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpem6id5a5.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n  std::vector<long> result;\n  if (numbers.size() == 0) {\n\
    \    return result;\n  }\n  result.push_back(numbers[0]);\n  for (int i = 1; i\
    \ < numbers.size(); i++) {\n    result.push_back(delimeter);\n    result.push_back(numbers[i]);\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = intersperse;\n \
    \   assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp6v54ccks.cpp: In function 'int main()':\n/tmp/tmp6v54ccks.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6v54ccks.cpp:2:\n/tmp/tmp6v54ccks.cpp:22:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp6v54ccks.cpp:23:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp6v54ccks.cpp:23:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp6v54ccks.cpp:23:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp6v54ccks.cpp:23:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp6v54ccks.cpp:23:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp6v54ccks.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (int i = 0; i < numbers.size();\
    \ i++) {\n        result.push_back(numbers[i]);\n        if (i != numbers.size()\
    \ - 1) {\n            result.push_back(delimeter);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpem6id5a5.cpp: In function 'int main()':\n/tmp/tmpem6id5a5.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpem6id5a5.cpp:2:\n/tmp/tmpem6id5a5.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpem6id5a5.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpem6id5a5.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpem6id5a5.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpem6id5a5.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpem6id5a5.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpem6id5a5.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (int i = 0; i < numbers.size();\
    \ i++) {\n        result.push_back(numbers[i]);\n        if (i != numbers.size()\
    \ - 1) {\n            result.push_back(delimeter);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpem6id5a5.cpp: In function 'int main()':\n/tmp/tmpem6id5a5.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpem6id5a5.cpp:2:\n/tmp/tmpem6id5a5.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpem6id5a5.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpem6id5a5.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpem6id5a5.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpem6id5a5.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpem6id5a5.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpem6id5a5.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n  std::vector<long> result;\n  for (int i = 0; i < numbers.size();\
    \ i++) {\n    result.push_back(numbers[i]);\n    if (i != numbers.size() - 1)\
    \ {\n      result.push_back(delimeter);\n    }\n  }\n  return result;\n}\nint\
    \ main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpszthbet_.cpp: In function 'int main()':\n/tmp/tmpszthbet_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpszthbet_.cpp:2:\n/tmp/tmpszthbet_.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpszthbet_.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpszthbet_.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpszthbet_.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpszthbet_.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpszthbet_.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpszthbet_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (auto i = (numbers.begin());\
    \ i != (numbers.end()); ++i) {\n        result.push_back(*i);\n        if (i !=\
    \ (numbers.end()) - (1)) {\n            result.push_back(delimeter);\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpeezf32_c.cpp: In function 'std::vector<long int> intersperse(std::vector<long\
    \ int>, long int)':\n/tmp/tmpeezf32_c.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i = (numbers.begin()); i != (numbers.end()); ++i) {\n        \
    \       ^\n/tmp/tmpeezf32_c.cpp:10:38: error: expected ';' before 'i'\n     for\
    \ (auto i = (numbers.begin()); i != (numbers.end()); ++i) {\n                \
    \                      ^\n/tmp/tmpeezf32_c.cpp:10:38: error: 'i' was not declared\
    \ in this scope\n/tmp/tmpeezf32_c.cpp: In function 'int main()':\n/tmp/tmpeezf32_c.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpeezf32_c.cpp:2:\n/tmp/tmpeezf32_c.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpeezf32_c.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpeezf32_c.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpeezf32_c.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpeezf32_c.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (int i = 0; i < numbers.size();\
    \ i++) {\n        result.push_back(numbers[i]);\n        if (i < numbers.size()\
    \ - 1) {\n            result.push_back(delimeter);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmputzfbpxz.cpp: In function 'int main()':\n/tmp/tmputzfbpxz.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmputzfbpxz.cpp:2:\n/tmp/tmputzfbpxz.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmputzfbpxz.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmputzfbpxz.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmputzfbpxz.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmputzfbpxz.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmputzfbpxz.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmputzfbpxz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    if (numbers.size() ==\
    \ 0) {\n        return result;\n    }\n    result.push_back(numbers[0]);\n   \
    \ for (int i = 1; i < numbers.size(); i++) {\n        result.push_back(delimeter);\n\
    \        result.push_back(numbers[i]);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfugoyo4z.cpp: In function 'int main()':\n/tmp/tmpfugoyo4z.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpfugoyo4z.cpp:2:\n/tmp/tmpfugoyo4z.cpp:22:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpfugoyo4z.cpp:23:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpfugoyo4z.cpp:23:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpfugoyo4z.cpp:23:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpfugoyo4z.cpp:23:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpfugoyo4z.cpp:23:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpfugoyo4z.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n  std::vector<long> result;\n  for (int i = 0; i < numbers.size();\
    \ i++) {\n    result.push_back(numbers[i]);\n    if (i != numbers.size() - 1)\
    \ {\n      result.push_back(delimeter);\n    }\n  }\n  return result;\n}\nint\
    \ main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpszthbet_.cpp: In function 'int main()':\n/tmp/tmpszthbet_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpszthbet_.cpp:2:\n/tmp/tmpszthbet_.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpszthbet_.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpszthbet_.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpszthbet_.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpszthbet_.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpszthbet_.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpszthbet_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (int i = 0; i < numbers.size();\
    \ i++) {\n        result.push_back(numbers[i]);\n        if (i < numbers.size()\
    \ - 1) {\n            result.push_back(delimeter);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmputzfbpxz.cpp: In function 'int main()':\n/tmp/tmputzfbpxz.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmputzfbpxz.cpp:2:\n/tmp/tmputzfbpxz.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmputzfbpxz.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmputzfbpxz.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmputzfbpxz.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmputzfbpxz.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmputzfbpxz.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmputzfbpxz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (long i = 0; i < (long)numbers.size();\
    \ i++) {\n        result.push_back(numbers[i]);\n        if (i != (long)numbers.size()\
    \ - 1) {\n            result.push_back(delimeter);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpggeqzc_j.cpp: In function 'int main()':\n/tmp/tmpggeqzc_j.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpggeqzc_j.cpp:2:\n/tmp/tmpggeqzc_j.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpggeqzc_j.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpggeqzc_j.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpggeqzc_j.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpggeqzc_j.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpggeqzc_j.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpggeqzc_j.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (int i = 0; i < numbers.size();\
    \ i++) {\n        result.push_back(numbers[i]);\n        if (i != numbers.size()\
    \ - 1) {\n            result.push_back(delimeter);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpem6id5a5.cpp: In function 'int main()':\n/tmp/tmpem6id5a5.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpem6id5a5.cpp:2:\n/tmp/tmpem6id5a5.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpem6id5a5.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpem6id5a5.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpem6id5a5.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpem6id5a5.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpem6id5a5.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpem6id5a5.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''

name: HumanEval_67_fruit_distribution
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will be\
  \ given a string that represents a number of apples and oranges \n// that are distributed\
  \ in a basket of fruit this basket contains \n// apples, oranges, and mango fruits.\
  \ Given the string that represents the total number of \n// the oranges and apples\
  \ and an integer that represent the total number of the fruits \n// in the basket\
  \ return the number of the mango fruits in the basket.\n// for examble:\n// >>>\
  \ fruit_distribution((\"5 apples and 6 oranges\"), (19))\n// (8)\n// >>> fruit_distribution((\"\
  0 apples and 1 oranges\"), (3))\n// (2)\n// >>> fruit_distribution((\"2 apples and\
  \ 3 oranges\"), (100))\n// (95)\n// >>> fruit_distribution((\"100 apples and 1 oranges\"\
  ), (120))\n// (19)\nlong fruit_distribution(std::string s, long n) {\n"
tests: "}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
  5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
  \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
  ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
  \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
  2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100\
  \ oranges\"), (120)) == (19));\n}\n"
completions: ["    long apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n\
    \    std::stringstream ss(s);\n    std::string temp;\n    while(ss >> temp) {\n\
    \        if(temp == \"apples\") {\n            ss >> apples;\n        } else if(temp\
    \ == \"oranges\") {\n            ss >> oranges;\n        }\n    }\n    mangoes\
    \ = n - (apples + oranges);\n    return mangoes;", "    // your code here\n  \
    \  long apple = 0, orange = 0;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"apples\") {\n         \
    \   ss >> word;\n            apple = std::stol(word);\n        }\n        else\
    \ if(word == \"oranges\") {\n            ss >> word;\n            orange = std::stol(word);\n\
    \        }\n    }\n    return n - (apple + orange);", "    // your code here\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int count = 0;\n    int count1\
    \ = 0;\n    int count2 = 0;\n    while(s[i] != ' '){\n        i++;\n    }\n  \
    \  while(s[j] != 'a'){\n        j++;\n    }\n    while(s[k] != 'o'){\n       \
    \ k++;\n    }\n    for(int l = 0; l < i; l++){\n        count = count*10 + (s[l]\
    \ - '0');\n    }\n    for(int l = j-1; l < i; l++){\n        count1 = count1*10\
    \ + (s[l] - '0');\n    }\n    for(int l = k-1; l < i; l++){\n        count2 =\
    \ count2*10 + (s[l] - '0');\n    }\n    return n - (count1 + count2);", "    std::stringstream\
    \ ss(s);\n    std::string word;\n    int apples = 0;\n    int oranges = 0;\n \
    \   while (ss >> word) {\n        if (word == \"apples\") {\n            ss >>\
    \ word;\n            ss >> word;\n            apples = std::stoi(word);\n    \
    \    }\n        if (word == \"oranges\") {\n            ss >> word;\n        \
    \    ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n \
    \   return n - (apples + oranges);", "    // your code here\n    long apples =\
    \ 0;\n    long oranges = 0;\n    std::stringstream ss(s);\n    std::string temp;\n\
    \    std::vector<std::string> tokens;\n    while(std::getline(ss, temp, ' '))\
    \ {\n        tokens.push_back(temp);\n    }\n    apples = std::stol(tokens[0]);\n\
    \    oranges = std::stol(tokens[2]);\n    return n - (apples + oranges);", " \
    \   // your code here\n    int a,o;\n    sscanf(s.c_str(),\"%d apples and %d oranges\"\
    ,&a,&o);\n    return n-a-o;", "    // your code here\n    std::stringstream ss(s);\n\
    \    long a, o;\n    ss >> a >> s >> o >> s;\n    return n - a - o;", "    //\
    \ your code here\n    std::stringstream ss(s);\n    std::string word;\n    int\
    \ apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stoi(word);\n        }\n    }\n    return n - (apples\
    \ + oranges);", "    // your code here\n    // return 0;\n    long a,o;\n    std::stringstream\
    \ ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;", "    long apples = 0;\n    long\
    \ oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string\
    \ token;\n    while(std::getline(ss, token, ' ')) {\n        if(token == \"apples\"\
    ) {\n            apples = std::stol(std::getline(ss, token, ' '));\n        }\
    \ else if(token == \"oranges\") {\n            oranges = std::stol(std::getline(ss,\
    \ token, ' '));\n        }\n    }\n    mangoes = n - (apples + oranges);\n   \
    \ return mangoes;", "    // your code here\n    std::stringstream ss(s);\n   \
    \ std::string word;\n    std::vector<std::string> v;\n    while(ss >> word)\n\
    \        v.push_back(word);\n    int a = std::stoi(v[0]);\n    int o = std::stoi(v[2]);\n\
    \    return n - (a + o);", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        ss >> word;\n            apples = std::stoi(word);\n        }\n     \
    \   else if(word == \"oranges\") {\n            ss >> word;\n            ss >>\
    \ word;\n            oranges = std::stoi(word);\n        }\n    }\n    return\
    \ n - (apples + oranges);", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        ss >> word;\n            apples = std::stoi(word);\n        }\n     \
    \   else if(word == \"oranges\") {\n            ss >> word;\n            ss >>\
    \ word;\n            oranges = std::stoi(word);\n        }\n    }\n    return\
    \ n - (apples + oranges);", "    // your code here\n    long count = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(getline(ss, temp, ' ')){\n        if(temp\
    \ == \"apples\"){\n            getline(ss, temp, ' ');\n            count += std::stol(temp);\n\
    \        }\n        else if(temp == \"oranges\"){\n            getline(ss, temp,\
    \ ' ');\n            count += std::stol(temp);\n        }\n    }\n    return n\
    \ - count;", "    // your code here\n    long apples = 0;\n    long oranges =\
    \ 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while(ss >> word){\n        if(word == \"apples\"){\n            ss >> word;\n\
    \            apples = std::stol(word);\n        }\n        else if(word == \"\
    oranges\"){\n            ss >> word;\n            oranges = std::stol(word);\n\
    \        }\n    }\n    mangoes = n - apples - oranges;\n    return mangoes;",
  "    // your code here\n    std::stringstream ss(s);\n    std::string word;\n  \
    \  long apple = 0;\n    long orange = 0;\n    while(ss >> word){\n        if(word\
    \ == \"apples\"){\n            ss >> word;\n            apple = std::stol(word);\n\
    \        }\n        else if(word == \"oranges\"){\n            ss >> word;\n \
    \           orange = std::stol(word);\n        }\n    }\n    return n - (apple\
    \ + orange);", "    // your code here\n    long num_apples = 0;\n    long num_oranges\
    \ = 0;\n    long num_mangoes = 0;\n    long i = 0;\n    while(s[i] != ' '){\n\
    \        num_apples = num_apples * 10 + (s[i] - '0');\n        i++;\n    }\n \
    \   i = i + 5;\n    while(s[i] != ' '){\n        num_oranges = num_oranges * 10\
    \ + (s[i] - '0');\n        i++;\n    }\n    num_mangoes = n - num_apples - num_oranges;\n\
    \    return num_mangoes;", "    std::stringstream ss(s);\n    std::string word;\n\
    \    std::vector<std::string> words;\n    while (ss >> word)\n        words.push_back(word);\n\
    \    long num_apples = std::stol(words[0]);\n    long num_oranges = std::stol(words[3]);\n\
    \    return n - num_apples - num_oranges;", "    long apples = 0;\n    long oranges\
    \ = 0;\n    long mangoes = 0;\n    std::string temp = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++){\n        if(s[i] == ' '){\n            if(temp == \"apples\"\
    ){\n                apples = std::stol(s.substr(0, i));\n            }\n     \
    \       else if(temp == \"oranges\"){\n                oranges = std::stol(s.substr(0,\
    \ i));\n            }\n            s = s.substr(i+1, s.length() - i);\n      \
    \      i = 0;\n            temp = \"\";\n        }\n        else{\n          \
    \  temp += s[i];\n        }\n    }\n    oranges = std::stol(s);\n    mangoes =\
    \ n - (apples + oranges);\n    return mangoes;", "    // your code here\n    long\
    \ num_apples = 0;\n    long num_oranges = 0;\n    long num_mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    std::vector<std::string> tokens;\n    while(std::getline(ss,\
    \ temp, ' ')){\n        tokens.push_back(temp);\n    }\n    num_apples = std::stol(tokens[0]);\n\
    \    num_oranges = std::stol(tokens[3]);\n    num_mangoes = n - (num_apples +\
    \ num_oranges);\n    return num_mangoes;", "    std::stringstream ss;\n    ss\
    \ << s;\n    long a, o;\n    ss >> a >> s >> o >> s;\n    return n - a - o;",
  "    // Your code here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n\
    \    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int\
    \ t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n\
    \    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int\
    \ e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n\
    \    int kk=0;\n    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n \
    \   int qq=0;\n    int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n  \
    \  int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n   \
    \ int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int\
    \ gg=0;\n    int hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int\
    \ lll=0;\n    int mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n   \
    \ int rrr=0;\n    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n\
    \    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n\
    \    int cccc=0;\n   ", "    // your code here\n    long apples = 0;\n    long\
    \ oranges = 0;\n    long mangoes = 0;\n    std::string temp = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++){\n        if(s[i] == ' '){\n            if(temp\
    \ == \"apples\"){\n                apples = std::stol(s.substr(0, i));\n     \
    \           s = s.substr(i+1, s.length()-i);\n                i = 0;\n       \
    \     }\n            else if(temp == \"oranges\"){\n                oranges =\
    \ std::stol(s.substr(0, i));\n                s = s.substr(i+1, s.length()-i);\n\
    \                i = 0;\n            }\n            temp = \"\";\n        }\n\
    \        else{\n            temp += s[i];\n        }\n    }\n    mangoes = n -\
    \ (apples + oranges);\n    return mangoes;", "    std::stringstream ss(s);\n \
    \   std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while (ss\
    \ >> word) {\n        if (word == \"apples\") {\n            ss >> word;\n   \
    \         apples = std::stoi(word);\n        }\n        if (word == \"oranges\"\
    ) {\n            ss >> word;\n            oranges = std::stoi(word);\n       \
    \ }\n    }\n    return n - (apples + oranges);", "    // your code here\n    long\
    \ num_apples = 0;\n    long num_oranges = 0;\n    long num_mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(getline(ss, temp, ' ')){\n        if(temp\
    \ == \"apples\"){\n            num_apples = std::stol(ss.str());\n           \
    \ break;\n        }\n    }\n    ss.clear();\n    ss.str(s);\n    while(getline(ss,\
    \ temp, ' ')){\n        if(temp == \"oranges\"){\n            num_oranges = std::stol(ss.str());\n\
    \            break;\n        }\n    }\n    num_mangoes = n - num_apples - num_oranges;\n\
    \    return num_mangoes;", "    // your code here\n    long a,o;\n    std::stringstream\
    \ ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;", "    long apples = 0;\n    long\
    \ oranges = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    ss >>\
    \ temp;\n    apples = std::stol(temp);\n    ss >> temp;\n    ss >> temp;\n   \
    \ oranges = std::stol(temp);\n    return n - (apples + oranges);", "    // your\
    \ code here\n    long num_apples = 0;\n    long num_oranges = 0;\n    long num_mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(ss >> temp)\
    \ {\n        if(temp == \"apples\") {\n            ss >> temp;\n            num_apples\
    \ = std::stol(temp);\n        }\n        else if(temp == \"oranges\") {\n    \
    \        ss >> temp;\n            num_oranges = std::stol(temp);\n        }\n\
    \    }\n    num_mangoes = n - num_apples - num_oranges;\n    return num_mangoes;",
  "    std::stringstream ss(s);\n    int a, o;\n    char c;\n    ss >> a >> c >> c\
    \ >> c >> c >> c >> o >> c >> c >> c >> c >> c;\n    return n - a - o;", "   \
    \ // your code here\n    long apples = 0;\n    long oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    apples\") {\n            ss >> word;\n            apples = std::stol(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stol(word);\n        }\n    }\n    return n - apples\
    \ - oranges;", "    // Write your code here\n    // To print results to the standard\
    \ output you can use std::cout\n    // Example: std::cout << \"Hello world!\"\
    ;\n    std::stringstream ss(s);\n    std::string word;\n    int a = 0, o = 0;\n\
    \    while(ss >> word) {\n        if(word == \"apples\") {\n            ss >>\
    \ word;\n            ss >> word;\n            a = std::stoi(word);\n        }\n\
    \        else if(word == \"oranges\") {\n            ss >> word;\n           \
    \ ss >> word;\n            o = std::stoi(word);\n        }\n    }\n    return\
    \ n - a - o;", "    // your code here\n    int i = 0;\n    int j = 0;\n    int\
    \ k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n   \
    \ int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n \
    \   int qq = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n\
    \    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int\
    \ ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt\
    \ = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n\
    \    int yyy = 0;\n    int zzz = 0;\n    int aaaa = 0;\n    int bbbb = 0;\n  \
    \  int cccc = 0;\n   ", "    // your code here\n    int a, o;\n    sscanf(s.c_str(),\
    \ \"%d apples and %d oranges\", &a, &o);\n    return n - a - o;", "    // your\
    \ code here\n    long num_apples = 0;\n    long num_oranges = 0;\n    long num_mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(std::getline(ss,\
    \ temp, ' ')) {\n        if(temp == \"apples\") {\n            num_apples = std::stol(std::getline(ss,\
    \ temp, ' '));\n        }\n        else if(temp == \"oranges\") {\n          \
    \  num_oranges = std::stol(std::getline(ss, temp, ' '));\n        }\n    }\n \
    \   num_mangoes = n - num_apples - num_oranges;\n    return num_mangoes;", " \
    \   // Write your code here\n    // To print results to the standard output you\
    \ can use std::cout\n    // Example: std::cout << \"Hello world!\";\n    int i\
    \ = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int\
    \ o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n   \
    \ int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii =\
    \ 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n   \
    \ int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt =\
    \ 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n   \
    \ int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc =\
    \ 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n   \
    \ int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll\
    \ = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n\
    \    int rrr = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int\
    \ www = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int", "    std::stringstream\
    \ ss(s);\n    std::string word;\n    long apples = 0;\n    long oranges = 0;\n\
    \    while (ss >> word) {\n        if (word == \"apples\") {\n            ss >>\
    \ word;\n            apples = std::stol(word);\n        } else if (word == \"\
    oranges\") {\n            ss >> word;\n            oranges = std::stol(word);\n\
    \        }\n    }\n    return n - apples - oranges;", "    // your code here\n\
    \    long apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    long\
    \ i = 0;\n    while(s[i] != ' '){\n        apples = apples * 10 + (s[i] - '0');\n\
    \        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n        oranges =\
    \ oranges * 10 + (s[i] - '0');\n        i++;\n    }\n    mangoes = n - apples\
    \ - oranges;\n    return mangoes;", "    long apples = 0;\n    long oranges =\
    \ 0;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stol(word);\n        } else if (word == \"oranges\") {\n            ss\
    \ >> word;\n            oranges = std::stol(word);\n        }\n    }\n    return\
    \ n - apples - oranges;", "    long apples = 0;\n    long oranges = 0;\n    long\
    \ mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(getline(ss,\
    \ temp, ' ')) {\n        if(temp == \"apples\") {\n            apples = std::stol(ss.str().substr(0,\
    \ ss.str().find(\" \")));\n            break;\n        }\n    }\n    ss.str(ss.str().substr(ss.str().find(\"\
    \ \") + 1));\n    while(getline(ss, temp, ' ')) {\n        if(temp == \"oranges\"\
    ) {\n            oranges = std::stol(ss.str().substr(0, ss.str().find(\" \")));\n\
    \            break;\n        }\n    }\n    mangoes = n - (apples + oranges);\n\
    \    return mangoes;", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    int apples = 0;\n    int oranges = 0;\n    while(std::getline(ss,\
    \ temp, ' ')) {\n        if(temp == \"apples\") {\n            std::getline(ss,\
    \ temp, ' ');\n            apples = std::stoi(temp);\n        }\n        else\
    \ if(temp == \"oranges\") {\n            std::getline(ss, temp, ' ');\n      \
    \      oranges = std::stoi(temp);\n        }\n    }\n    return n - apples - oranges;",
  "    // your code here\n    std::stringstream ss(s);\n    std::string word;\n  \
    \  int apple = 0;\n    int orange = 0;\n    while(ss >> word){\n        if(word\
    \ == \"apples\"){\n            ss >> word;\n            apple = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\"){\n            ss >> word;\n \
    \           orange = std::stoi(word);\n        }\n    }\n    return n - (apple\
    \ + orange);", "    int apples = 0, oranges = 0;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if\
    \ (s[i] == 'o') {\n            oranges++;\n        }\n    }\n    return n - apples\
    \ - oranges;", "    // your code here\n    long a,o;\n    std::stringstream ss(s);\n\
    \    ss>>a>>s>>o;\n    return n-a-o;", "    // your code here\n    int i=0;\n\
    \    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int a=0;\n    int\
    \ b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n\
    \    int h=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int\
    \ u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n\
    \    int o=0;\n    int count=0;\n    int count1=0;\n    int count2=0;\n    int\
    \ count3=0;\n    int count4=0;\n    int count5=0;\n    int count6=0;\n    int\
    \ count7=0;\n    int count8=0;\n    int count9=0;\n    int count10=0;\n    int\
    \ count11=0;\n    int count12=0;\n    int count13=0;\n    int count14=0;\n   \
    \ int count15=0;\n    int count16=0;\n    int count17=0;\n    int count18=0;\n\
    \    int count19=0;\n    int count20=0;\n    int count21=0;\n    int count22=0;\n\
    \    int count23=0;\n    int count24=0;\n    int count25=0;\n    int count26=0;\n\
    \    int count27=0;\n    int count28=0;\n    int count29=0;\n    int count30=0;\n\
    \    int count31=0;\n    int count32=0;\n    int count33=0;\n    int count34=0;\n\
    \    int count35=0;\n    int count36=0;\n    int count37=0;\n    int count38=0;\n\
    \    int count39=0;\n    int count40=0;\n    int count41=0;\n    int", "    //\
    \ your code here\n    long apples, oranges;\n    std::stringstream ss(s);\n  \
    \  ss >> apples >> s >> oranges;\n    return n - apples - oranges;", "    // your\
    \ code here\n    int apples = 0;\n    int oranges = 0;\n    int mango = 0;\n \
    \   int i = 0;\n    while(s[i] != ' '){\n        apples = apples * 10 + s[i] -\
    \ '0';\n        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n        oranges\
    \ = oranges * 10 + s[i] - '0';\n        i++;\n    }\n    mango = n - (apples +\
    \ oranges);\n    return mango;", "    // your code here\n    long a, o;\n    std::stringstream\
    \ ss(s);\n    ss >> a >> s >> o;\n    return n - a - o;", "    // your code here\n\
    \    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int\
    \ o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n\
    \    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int\
    \ a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n\
    \    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n   \
    \ int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n    int\
    \ rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n    int xx=0;\n\
    \    int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n    int cc=0;\n \
    \   int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int hh=0;\n  \
    \  int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int mmm=0;\n\
    \    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n    int ttt=0;\n\
    \    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n    int yyy=0;\n\
    \    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n    int cccc=0;\n   ", "  \
    \  // your code here\n    int apples = 0;\n    int oranges = 0;\n    int mango\
    \ = 0;\n    int i = 0;\n    while(s[i] != ' '){\n        apples = apples * 10\
    \ + s[i] - '0';\n        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n \
    \       oranges = oranges * 10 + s[i] - '0';\n        i++;\n    }\n    mango =\
    \ n - apples - oranges;\n    return mango;", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int apples = 0;\n    int oranges = 0;\n \
    \   while(ss >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n\
    \            ss >> word;\n            apples = std::stoi(word);\n        }\n \
    \       else if(word == \"oranges\") {\n            ss >> word;\n            ss\
    \ >> word;\n            oranges = std::stoi(word);\n        }\n    }\n    return\
    \ n - (apples + oranges);", "    // your code here\n    long apples, oranges;\n\
    \    std::stringstream ss(s);\n    ss >> apples >> oranges;\n    return n - apples\
    \ - oranges;", "    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n\
    \    int l=0;\n    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int\
    \ r=0;\n    int t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n\
    \    int y=0;\n    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int\
    \ d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n\
    \    int jj=0;\n    int kk=0;\n    int ll=0;\n    int mm=0;\n    int nn=0;\n \
    \   int oo=0;\n    int pp=0;\n    int qq=0;\n    int rr=0;\n    int ss=0;\n  \
    \  int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n    int xx=0;\n   \
    \ int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n    int cc=0;\n    int\
    \ dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int hh=0;\n    int iii=0;\n\
    \    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int mmm=0;\n    int nnn=0;\n\
    \    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n    int sss=0;\n\
    \    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n\
    \    int yyy=0;\n    int zzz", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    long apples = 0;\n    long oranges = 0;\n    while (ss >> word) {\n\
    \        if (word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stol(word);\n        } else if (word == \"oranges\") {\n            ss\
    \ >> word;\n            oranges = std::stol(word);\n        }\n    }\n    return\
    \ n - apples - oranges;", "    // your code here\n    long num_apples = 0;\n \
    \   long num_oranges = 0;\n    std::stringstream ss(s);\n    std::string temp;\n\
    \    ss >> temp;\n    num_apples = std::stol(temp);\n    ss >> temp;\n    ss >>\
    \ temp;\n    num_oranges = std::stol(temp);\n    return n - num_apples - num_oranges;",
  "    // your code here\n    std::stringstream ss(s);\n    std::string word;\n  \
    \  int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stoi(word);\n        }\n    }\n    return n - apples\
    \ - oranges;", "    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"apples\") {\n            ss >> word;\n      \
    \      apples = std::stol(word);\n        } else if (word == \"oranges\") {\n\
    \            ss >> word;\n            oranges = std::stol(word);\n        }\n\
    \    }\n    mangoes = n - (apples + oranges);\n    return mangoes;", "    // your\
    \ code here\n    long apples = 0;\n    long oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while (std::getline(ss, temp, ' ')) {\n \
    \       if (temp == \"apples\") {\n            apples = std::stol(std::getline(ss,\
    \ temp, ' '));\n        } else if (temp == \"oranges\") {\n            oranges\
    \ = std::stol(std::getline(ss, temp, ' '));\n        }\n    }\n    return n -\
    \ apples - oranges;", "    // your code here\n    long num_apples = 0;\n    long\
    \ num_oranges = 0;\n    long num_mangoes = 0;\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    while(std::getline(ss, temp, ' ')){\n        if(temp\
    \ == \"apples\"){\n            num_apples = std::stol(std::getline(ss, temp, '\
    \ '));\n        }\n        else if(temp == \"oranges\"){\n            num_oranges\
    \ = std::stol(std::getline(ss, temp, ' '));\n        }\n    }\n    num_mangoes\
    \ = n - num_apples - num_oranges;\n    return num_mangoes;", "    long apples\
    \ = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    long i = 0;\n    while(s[i]\
    \ != ' '){\n        apples = apples * 10 + (s[i] - '0');\n        i++;\n    }\n\
    \    i += 5;\n    while(s[i] != ' '){\n        oranges = oranges * 10 + (s[i]\
    \ - '0');\n        i++;\n    }\n    mangoes = n - (apples + oranges);\n    return\
    \ mangoes;", "    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n \
    \   int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx\
    \ = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n \
    \   int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg\
    \ = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n\
    \    int lll = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int\
    \ qqq = 0;\n    int rrr = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv\
    \ = 0;\n    int www = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n\
    \    int aaaa = 0;\n    int bbbb = 0;\n    int cccc = 0;\n    int dddd = 0", "\t\
    // your code here\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint a = 0;\n\t\
    int o = 0;\n\twhile (s[i] != ' ')\n\t{\n\t\ta = a * 10 + (s[i] - '0');\n\t\ti++;\n\
    \t}\n\ti += 6;\n\twhile (s[i] != ' ')\n\t{\n\t\to = o * 10 + (s[i] - '0');\n\t\
    \ti++;\n\t}\n\treturn n - a - o;", "    // your code here\n    int i = 0;\n  \
    \  std::string temp = \"\";\n    while(s[i] != ' '){\n        temp += s[i];\n\
    \        i++;\n    }\n    int apples = std::stoi(temp);\n    temp = \"\";\n  \
    \  i += 6;\n    while(s[i] != ' '){\n        temp += s[i];\n        i++;\n   \
    \ }\n    int oranges = std::stoi(temp);\n    return n - apples - oranges;", " \
    \   // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n\
    \    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int\
    \ t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n\
    \    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int\
    \ e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n\
    \    int kk=0;\n    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n \
    \   int qq=0;\n    int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n  \
    \  int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n   \
    \ int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int\
    \ gg=0;\n    int hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int\
    \ lll=0;\n    int mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n   \
    \ int rrr=0;\n    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n\
    \    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n\
    \    int cccc=0;\n   ", "    std::stringstream ss(s);\n    std::string word;\n\
    \    int apples = 0;\n    int oranges = 0;\n    while (ss >> word) {\n       \
    \ if (word == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        if (word == \"oranges\") {\n            ss >> word;\n    \
    \        oranges = std::stoi(word);\n        }\n    }\n    return n - (apples\
    \ + oranges);", "    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n\
    \    while(s[i]!=' ')\n    {\n        i++;\n    }\n    while(s[j]!=' ')\n    {\n\
    \        j++;\n    }\n    while(s[k]!=' ')\n    {\n        k++;\n    }\n    int\
    \ a=0;\n    int b=0;\n    int c=0;\n    for(int i=0;i<s.length();i++)\n    {\n\
    \        if(s[i]=='a')\n        {\n            a++;\n        }\n        if(s[i]=='o')\n\
    \        {\n            b++;\n        }\n        if(s[i]=='m')\n        {\n  \
    \          c++;\n        }\n    }\n    int d=a+b+c;\n    int e=n-d;\n    return\
    \ e;", "    // your code here\n    std::stringstream ss(s);\n    std::string temp;\n\
    \    std::vector<std::string> tokens;\n    while(std::getline(ss, temp, ' '))\
    \ {\n        tokens.push_back(temp);\n    }\n    int apples = std::stoi(tokens[0]);\n\
    \    int oranges = std::stoi(tokens[3]);\n    return n - apples - oranges;", " \
    \   long apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    ss >> apples >> oranges;\n    mangoes = n - (apples + oranges);\n\
    \    return mangoes;", "    // your code here\n    int i = 0;\n    int j = 0;\n\
    \    int count = 0;\n    int count1 = 0;\n    int count2 = 0;\n    int count3\
    \ = 0;\n    int count4 = 0;\n    int count5 = 0;\n    int count6 = 0;\n    int\
    \ count7 = 0;\n    int count8 = 0;\n    int count9 = 0;\n    int count10 = 0;\n\
    \    int count11 = 0;\n    int count12 = 0;\n    int count13 = 0;\n    int count14\
    \ = 0;\n    int count15 = 0;\n    int count16 = 0;\n    int count17 = 0;\n   \
    \ int count18 = 0;\n    int count19 = 0;\n    int count20 = 0;\n    int count21\
    \ = 0;\n    int count22 = 0;\n    int count23 = 0;\n    int count24 = 0;\n   \
    \ int count25 = 0;\n    int count26 = 0;\n    int count27 = 0;\n    int count28\
    \ = 0;\n    int count29 = 0;\n    int count30 = 0;\n    int count31 = 0;\n   \
    \ int count32 = 0;\n    int count33 = 0;\n    int count34 = 0;\n    int count35\
    \ = 0;\n    int count36 = 0;\n    int count37 = 0;\n    int count38 = 0;\n   \
    \ int count39 = 0;\n    int count40 = 0;\n    int count41 = 0;\n    int count42\
    \ = 0;\n    int count43 = 0;\n    int count44 = 0;\n    int count45 = 0;\n   \
    \ int count46 = 0;\n    int count47 = 0;\n    int count48 = 0;\n    int count49\
    \ = 0;\n    int count50 = 0;\n    int count51 = 0;\n    int count52 = 0;\n   \
    \ int count53 = 0;\n    int count54 = 0;\n    int count55 = 0;\n    int count56\
    \ = 0;\n    int count57 = 0;\n    int count58 = 0;\n    int count59 = 0;\n   \
    \ int count60 = 0;\n    int count61", "    // your code here\n    int i=0;\n \
    \   int j=0;\n    int k=0;\n    int count=0;\n    int count1=0;\n    int count2=0;\n\
    \    int count3=0;\n    int count4=0;\n    int count5=0;\n    int count6=0;\n\
    \    int count7=0;\n    int count8=0;\n    int count9=0;\n    int count10=0;\n\
    \    int count11=0;\n    int count12=0;\n    int count13=0;\n    int count14=0;\n\
    \    int count15=0;\n    int count16=0;\n    int count17=0;\n    int count18=0;\n\
    \    int count19=0;\n    int count20=0;\n    int count21=0;\n    int count22=0;\n\
    \    int count23=0;\n    int count24=0;\n    int count25=0;\n    int count26=0;\n\
    \    int count27=0;\n    int count28=0;\n    int count29=0;\n    int count30=0;\n\
    \    int count31=0;\n    int count32=0;\n    int count33=0;\n    int count34=0;\n\
    \    int count35=0;\n    int count36=0;\n    int count37=0;\n    int count38=0;\n\
    \    int count39=0;\n    int count40=0;\n    int count41=0;\n    int count42=0;\n\
    \    int count43=0;\n    int count44=0;\n    int count45=0;\n    int count46=0;\n\
    \    int count47=0;\n    int count48=0;\n    int count49=0;\n    int count50=0;\n\
    \    int count51=0;\n    int count52=0;\n    int count53=0;\n    int count54=0;\n\
    \    int count55=0;\n    int count56=0;\n    int count57=0;\n    int count58=0;\n\
    \    int count59=0;\n    int count60=", "    int num_apples = 0;\n    int num_oranges\
    \ = 0;\n    int i = 0;\n    while(s[i] != ' ') {\n        num_apples = num_apples\
    \ * 10 + (s[i] - '0');\n        i++;\n    }\n    i += 6;\n    while(s[i] != '\
    \ ') {\n        num_oranges = num_oranges * 10 + (s[i] - '0');\n        i++;\n\
    \    }\n    return n - num_apples - num_oranges;", "    // your code here\n  \
    \  long num_apples = 0;\n    long num_oranges = 0;\n    long num_mangoes = 0;\n\
    \    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            num_apples\
    \ = std::stol(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            num_oranges = std::stol(word);\n        }\n\
    \    }\n    num_mangoes = n - num_apples - num_oranges;\n    return num_mangoes;",
  "    // your code here\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    long i = 0;\n    while(s[i] != ' '){\n        apples = apples * 10\
    \ + (s[i] - '0');\n        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n\
    \        oranges = oranges * 10 + (s[i] - '0');\n        i++;\n    }\n    mangoes\
    \ = n - apples - oranges;\n    return mangoes;", "    // your code here\n    long\
    \ sum = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(std::getline(ss,\
    \ temp, ' ')){\n        if(temp == \"apples\"){\n            std::getline(ss,\
    \ temp, ' ');\n            sum += std::stol(temp);\n        }\n        else if(temp\
    \ == \"oranges\"){\n            std::getline(ss, temp, ' ');\n            sum\
    \ += std::stol(temp);\n        }\n    }\n    return n - sum;", "    // Write your\
    \ code here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    std::stringstream ss(s);\n\
    \    std::string token;\n    std::vector<std::string> tokens;\n    while(std::getline(ss,\
    \ token, ' ')) {\n        tokens.push_back(token);\n    }\n    std::stringstream\
    \ ss2(tokens[0]);\n    int apple;\n    ss2 >> apple;\n    std::stringstream ss3(tokens[2]);\n\
    \    int orange;\n    ss3 >> orange;\n    return n - apple - orange;", "    long\
    \ apples, oranges;\n    std::stringstream ss;\n    ss << s;\n    ss >> apples\
    \ >> oranges;\n    return n - apples - oranges;", "    // your code here\n   \
    \ int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii =\
    \ 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n   \
    \ int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt =\
    \ 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n   \
    \ int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc =\
    \ 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n   \
    \ int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll\
    \ = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n\
    \    int rrr = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int\
    \ www = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n    int aaaa\
    \ = 0;\n    int bbbb = 0;\n    int cccc = 0;\n   ", "    // Your code here\n \
    \   std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string>\
    \ words;\n    while(ss >> word)\n    {\n        words.push_back(word);\n    }\n\
    \    long num_apples = std::stol(words[0]);\n    long num_oranges = std::stol(words[3]);\n\
    \    return n - num_apples - num_oranges;", "    // your code here\n    long apples\
    \ = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    while(std::getline(ss, temp, ' ')){\n        if(temp\
    \ == \"apples\"){\n            apples = std::stol(temp);\n        }\n        else\
    \ if(temp == \"oranges\"){\n            oranges = std::stol(temp);\n        }\n\
    \    }\n    mangoes = n - (apples + oranges);\n    return mangoes;", "    // Your\
    \ code here\n    std::stringstream ss(s);\n    std::string temp;\n    long apples\
    \ = 0;\n    long oranges = 0;\n    while(std::getline(ss, temp, ' ')){\n     \
    \   if(temp == \"apples\"){\n            std::getline(ss, temp, ' ');\n      \
    \      apples = std::stol(temp);\n        }\n        else if(temp == \"oranges\"\
    ){\n            std::getline(ss, temp, ' ');\n            oranges = std::stol(temp);\n\
    \        }\n    }\n    return n - (apples + oranges);", "    // your code here\n\
    \    int a,o;\n    sscanf(s.c_str(),\"%d apples and %d oranges\",&a,&o);\n   \
    \ return n-a-o;", "    // your code here\n    long apples = 0;\n    long oranges\
    \ = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n\
    \    ss >> temp;\n    apples = std::stol(temp);\n    ss >> temp;\n    ss >> temp;\n\
    \    oranges = std::stol(temp);\n    mangoes = n - apples - oranges;\n    return\
    \ mangoes;", "    std::stringstream ss(s);\n    std::string word;\n    int apples\
    \ = 0;\n    int oranges = 0;\n    while (ss >> word) {\n        if (word == \"\
    apples\") {\n            ss >> word;\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        if (word == \"oranges\") {\n        \
    \    ss >> word;\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - (apples + oranges);", "    // your code here\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad\
    \ = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n \
    \   int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am\
    \ = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n \
    \   int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av\
    \ = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n \
    \   int ba = 0;\n    int bb = 0;\n    int bc = 0;\n    int bd = 0;\n    int be\
    \ = 0;\n    int bf = 0;\n    int bg = 0;\n    int bh = 0;\n    int bi = 0;\n \
    \   int bj = 0;\n    int bk = 0;\n    int bl = 0;\n    int bm = 0;\n    int bn\
    \ = 0;\n    int bo = 0;\n    int bp = 0;\n    int bq = 0;\n    int br = 0;\n \
    \   int bs = 0;\n    int bt = 0;\n    int bu = 0;\n    int bv = 0;\n    int bw\
    \ = 0;\n    int bx = 0;\n    int by = 0;\n    int bz = 0;\n    int ca = 0;", " \
    \   // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n\
    \    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int\
    \ t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n\
    \    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int\
    \ e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n\
    \    int kk=0;\n    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n \
    \   int qq=0;\n    int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n  \
    \  int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n   \
    \ int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int\
    \ gg=0;\n    int hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int\
    \ lll=0;\n    int mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n   \
    \ int rrr=0;\n    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n\
    \    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n\
    \    int cccc=0;\n   ", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string word;\n    long apple = 0;\n    long orange = 0;\n    while(ss\
    \ >> word){\n        if(word == \"apples\"){\n            ss >> word;\n      \
    \      apple = std::stol(word);\n        }\n        else if(word == \"oranges\"\
    ){\n            ss >> word;\n            orange = std::stol(word);\n        }\n\
    \    }\n    return n - (apple + orange);", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int apples = 0;\n    int oranges = 0;\n \
    \   while(ss >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n\
    \            ss >> word;\n            apples = std::stoi(word);\n        }\n \
    \       else if(word == \"oranges\") {\n            ss >> word;\n            ss\
    \ >> word;\n            oranges = std::stoi(word);\n        }\n    }\n    return\
    \ n - (apples + oranges);", "    int a, o;\n    sscanf(s.c_str(), \"%d apples\
    \ and %d oranges\", &a, &o);\n    return n - a - o;", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string word;\n    int apples = 0;\n  \
    \  int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n\
    \            ss >> word;\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            ss >> word;\n            oranges = std::stoi(word);\n        }\n\
    \    }\n    return n - (apples + oranges);", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    std::vector<std::string> v;\n    while(ss\
    \ >> word)\n        v.push_back(word);\n    int a = std::stoi(v[0]);\n    int\
    \ o = std::stoi(v[2]);\n    return n - a - o;", "    // your code here\n    int\
    \ i = 0;\n    int j = 0;\n    int k = 0;\n    int count = 0;\n    while(s[i] !=\
    \ ' '){\n        i++;\n    }\n    while(s[j] != ' '){\n        j++;\n    }\n \
    \   while(s[k] != ' '){\n        k++;\n    }\n    count = n - (i + j + k);\n \
    \   return count;", "    std::stringstream ss(s);\n    std::string temp;\n   \
    \ long apples = 0;\n    long oranges = 0;\n    while (ss >> temp) {\n        if\
    \ (temp == \"apples\") {\n            ss >> apples;\n        } else if (temp ==\
    \ \"oranges\") {\n            ss >> oranges;\n        }\n    }\n    return n -\
    \ apples - oranges;", "    long apples = 0;\n    long oranges = 0;\n    std::stringstream\
    \ ss(s);\n    ss >> apples >> oranges;\n    return n - apples - oranges;", " \
    \   long apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"apples\") {\n            ss >> word;\n            apples = std::stol(word);\n\
    \        }\n        if (word == \"oranges\") {\n            ss >> word;\n    \
    \        oranges = std::stol(word);\n        }\n    }\n    mangoes = n - (apples\
    \ + oranges);\n    return mangoes;", "    // your code here\n    int i=0;\n  \
    \  int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int o=0;\n    int p=0;\n\
    \    int q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n    int v=0;\n    int\
    \ w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int a=0;\n    int b=0;\n\
    \    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n    int\
    \ h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n    int ll=0;\n    int mm=0;\n\
    \    int oo=0;\n    int pp=0;\n    int qq=0;\n    int rr=0;\n    int tt=0;\n \
    \   int uu=0;\n    int vv=0;\n    int ww=0;\n    int xx=0;\n    int yy=0;\n  \
    \  int zz=0;\n    int aa=0;\n    int bb=0;\n    int cc=0;\n    int dd=0;\n   \
    \ int ee=0;\n    int ff=0;\n    int gg=0;\n    int hh=0;\n    int iii=0;\n   \
    \ int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int mmm=0;\n    int ooo=0;\n\
    \    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n    int ttt=0;\n    int uuu=0;\n\
    \    int vvv=0;\n    int www=0;\n    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n\
    \    int aaaa=0;\n    int bbbb=0;\n    int cccc=0;\n   ", "    // Write your code\
    \ here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    int i=0;\n    int j=0;\n\
    \    int k=0;\n    int l=0;\n    int m=0;\n    int a=0;\n    int b=0;\n    int\
    \ c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n\
    \    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n    int\
    \ v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int a1=0;\n\
    \    int b1=0;\n    int c1=0;\n    int d1=0;\n    int e1=0;\n    int f1=0;\n \
    \   int g1=0;\n    int h1=0;\n    int p1=0;\n    int q1=0;\n    int r1=0;\n  \
    \  int t1=0;\n    int u1=0;\n    int v1=0;\n    int w1=0;\n    int x1=0;\n   \
    \ int y1=0;\n    int z1=0;\n    int a2=0;\n    int b2=0;\n    int c2=0;\n    int\
    \ d2=0;\n    int e2=0;\n    int f2=0;\n    int g2=0;\n    int h2=0;\n    int p2=0;\n\
    \    int q2=0;\n    int r2=0;\n    int t2=0;\n    int u2=0;\n    int v2=0;\n \
    \   int w2=0;\n    int x2=0;\n    int y2=0;\n    int z2=0;\n    int a3=0;\n  \
    \  int b3=0;\n    int c3=0;", "    // your code here\n    long a,o;\n    sscanf(s.c_str(),\"\
    %ld apples and %ld oranges\",&a,&o);\n    return n-a-o;", "    // your code here\n\
    \    int apple = 0, orange = 0;\n    std::stringstream ss(s);\n    ss >> apple\
    \ >> s >> orange;\n    return n - apple - orange;", "    long apples = 0;\n  \
    \  long oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n  \
    \  std::string token;\n    std::vector<std::string> tokens;\n    while(getline(ss,\
    \ token, ' ')) {\n        tokens.push_back(token);\n    }\n    apples = std::stol(tokens[0]);\n\
    \    oranges = std::stol(tokens[3]);\n    mangoes = n - (apples + oranges);\n\
    \    return mangoes;", "    long apples, oranges;\n    sscanf(s.c_str(), \"%ld\
    \ apples and %ld oranges\", &apples, &oranges);\n    return n - apples - oranges;",
  "    // your code here\n    std::stringstream ss(s);\n    std::string word;\n  \
    \  int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            ss >> word;\n       \
    \     apples = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            ss >> word;\n            oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - (apples + oranges);", "    long apples, oranges;\n\
    \    sscanf(s.c_str(), \"%ld apples and %ld oranges\", &apples, &oranges);\n \
    \   return n - apples - oranges;", "    // your code here\n    long a,o;\n   \
    \ std::stringstream ss;\n    ss<<s;\n    ss>>a>>s>>o;\n    return n-a-o;", " \
    \   // your code here\n    int apples = 0;\n    int oranges = 0;\n    int mango\
    \ = 0;\n    int i = 0;\n    while(s[i] != ' '){\n        apples = apples * 10\
    \ + (s[i] - '0');\n        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n\
    \        oranges = oranges * 10 + (s[i] - '0');\n        i++;\n    }\n    mango\
    \ = n - (apples + oranges);\n    return mango;", "    // your code here\n    long\
    \ apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    long i = 0;\n\
    \    while(s[i] != ' '){\n        apples = apples * 10 + s[i] - '0';\n       \
    \ i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n        oranges = oranges\
    \ * 10 + s[i] - '0';\n        i++;\n    }\n    mangoes = n - apples - oranges;\n\
    \    return mangoes;", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string word;\n    int count = 0;\n    int apples = 0;\n    int oranges\
    \ = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n          \
    \  ss >> word;\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            ss >> word;\n            oranges = std::stoi(word);\n        }\n\
    \    }\n    return n - (apples + oranges);", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    std::vector<std::string> v;\n    while(ss\
    \ >> word)\n        v.push_back(word);\n    int a = std::stoi(v[0]);\n    int\
    \ o = std::stoi(v[2]);\n    return n - a - o;", "    std::stringstream ss(s);\n\
    \    std::string word;\n    std::vector<std::string> words;\n    while (ss >>\
    \ word) {\n        words.push_back(word);\n    }\n    long apples = std::stol(words[0]);\n\
    \    long oranges = std::stol(words[3]);\n    long mangoes = n - apples - oranges;\n\
    \    return mangoes;", "    // Write your code here\n    // To print results to\
    \ the standard output you can use std::cout\n    // Example: std::cout << \"Hello\
    \ world!\";\n    long apples = 0;\n    long oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    apples\") {\n            ss >> word;\n            apples = std::stol(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stol(word);\n        }\n    }\n    return n - (apples\
    \ + oranges);", "    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n\
    \    int l=0;\n    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int\
    \ r=0;\n    int t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n\
    \    int y=0;\n    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int\
    \ d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n\
    \    int jj=0;\n    int kk=0;\n    int ll=0;\n    int mm=0;\n    int oo=0;\n \
    \   int pp=0;\n    int qq=0;\n    int rr=0;\n    int tt=0;\n    int uu=0;\n  \
    \  int vv=0;\n    int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n   \
    \ int aa=0;\n    int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n    int\
    \ ff=0;\n    int gg=0;\n    int hh=0;\n    int iii=0;\n    int jjj=0;\n    int\
    \ kkk=0;\n    int lll=0;\n    int mmm=0;\n    int ooo=0;\n    int ppp=0;\n   \
    \ int qqq=0;\n    int rrr=0;\n    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n\
    \    int www=0;\n    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n\
    \    int bbbb=0;\n    int cccc=0;\n   ", "    // Write your code here\n    //\
    \ To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    long apples = 0;\n    long oranges = 0;\n\
    \    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n\
    \    while(std::getline(ss, temp, ' ')){\n        if(temp == \"apples\"){\n  \
    \          apples = std::stol(std::getline(ss, temp, ' '));\n        }\n     \
    \   else if(temp == \"oranges\"){\n            oranges = std::stol(std::getline(ss,\
    \ temp, ' '));\n        }\n    }\n    mangoes = n - apples - oranges;\n    return\
    \ mangoes;", "    long apples = 0;\n    long oranges = 0;\n    long mangoes =\
    \ 0;\n    long i = 0;\n    while(s[i] != ' '){\n        apples = apples * 10 +\
    \ s[i] - '0';\n        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n   \
    \     oranges = oranges * 10 + s[i] - '0';\n        i++;\n    }\n    mangoes =\
    \ n - apples - oranges;\n    return mangoes;", "    // your code here\n    long\
    \ num_of_apples = 0;\n    long num_of_oranges = 0;\n    long num_of_mangoes =\
    \ 0;\n    long total_fruits = 0;\n    std::vector<std::string> tokens;\n    std::stringstream\
    \ check1(s);\n    std::string intermediate;\n    while(getline(check1, intermediate,\
    \ ' '))\n    {\n        tokens.push_back(intermediate);\n    }\n    num_of_apples\
    \ = std::stol(tokens[0]);\n    num_of_oranges = std::stol(tokens[3]);\n    total_fruits\
    \ = num_of_apples + num_of_oranges;\n    num_of_mangoes = n - total_fruits;\n\
    \    return num_of_mangoes;", "    long apples = 0;\n    long oranges = 0;\n \
    \   long mangoes = 0;\n    std::stringstream ss(s);\n    ss >> apples >> oranges;\n\
    \    mangoes = n - (apples + oranges);\n    return mangoes;", "    // your code\
    \ here\n    long num_apples = 0;\n    long num_oranges = 0;\n    long num_mangoes\
    \ = 0;\n    long num_fruits = 0;\n    std::string temp = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++){\n        if(s[i] == ' '){\n            if(temp ==\
    \ \"apples\"){\n                num_apples = std::stol(s.substr(0, i));\n    \
    \            s = s.substr(i + 1, s.length() - i - 1);\n                i = 0;\n\
    \            }\n            else if(temp == \"oranges\"){\n                num_oranges\
    \ = std::stol(s.substr(0, i));\n                s = s.substr(i + 1, s.length()\
    \ - i - 1);\n                i = 0;\n            }\n            temp = \"\";\n\
    \        }\n        else{\n            temp += s[i];\n        }\n    }\n    num_fruits\
    \ = num_apples + num_oranges;\n    num_mangoes = n - num_fruits;\n    return num_mangoes;",
  "    // your code here\n    long count = 0;\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    std::vector<std::string> result;\n    while(ss >> temp)\n       \
    \ result.push_back(temp);\n    for(int i = 0; i < result.size(); i++){\n     \
    \   if(result[i] == \"apples\"){\n            count += std::stol(result[i-1]);\n\
    \        }\n        if(result[i] == \"oranges\"){\n            count += std::stol(result[i-1]);\n\
    \        }\n    }\n    return n - count;", "    // Write your code here\n    //\
    \ To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    int i = 0;\n    int j = 0;\n    int k =\
    \ 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n    int\
    \ q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n   \
    \ int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n \
    \   int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt\
    \ = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n \
    \   int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc\
    \ = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n \
    \   int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int\
    \ lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n    int ppp\
    \ = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int sss = 0;\n    int ttt = 0;\n\
    \    int uuu = 0;\n    int", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        ss >> word;\n            apples = std::stoi(word);\n        } else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            ss >> word;\n      \
    \      oranges = std::stoi(word);\n        }\n    }\n    return n - (apples +\
    \ oranges);", "    // your code here\n    long i,j,k,l,m,o,p,q,r,s1,t,u,v,w,x,y,z;\n\
    \    std::string a,b,c,d,e,f,g,h,i1,j1,k1,l1,m1,n1,o1,p1,q1,r1,s2,t1,u1,v1,w1,x1,y1,z1;\n\
    \    std::stringstream ss;\n    ss<<s;\n    ss>>a>>b>>c>>d>>e;\n    ss.clear();\n\
    \    ss<<a;\n    ss>>i;\n    ss.clear();\n    ss<<e;\n    ss>>j;\n    ss.clear();\n\
    \    return n-(i+j);", "    // your code here\n    int i=0;\n    int j=0;\n  \
    \  int k=0;\n    int a=0;\n    int o=0;\n    while(s[i]!=' '){\n        a=a*10+(s[i]-'0');\n\
    \        i++;\n    }\n    i+=7;\n    while(s[i]!=' '){\n        o=o*10+(s[i]-'0');\n\
    \        i++;\n    }\n    return n-(a+o);", "    // your code here\n    long num_apples\
    \ = 0;\n    long num_oranges = 0;\n    long num_mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    std::vector<std::string> tokens;\n    while(std::getline(ss,\
    \ temp, ' ')){\n        tokens.push_back(temp);\n    }\n    num_apples = std::stol(tokens[0]);\n\
    \    num_oranges = std::stol(tokens[3]);\n    num_mangoes = n - (num_apples +\
    \ num_oranges);\n    return num_mangoes;", "    // your code here\n    long a,b;\n\
    \    sscanf(s.c_str(),\"%ld apples and %ld oranges\",&a,&b);\n    return n-a-b;",
  "    // your code here\n    long a, o;\n    std::stringstream ss(s);\n    ss >>\
    \ a >> s >> o;\n    return n - a - o;", "    // your code here\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj =\
    \ 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int oo = 0;\n   \
    \ int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu =\
    \ 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n   \
    \ int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd =\
    \ 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n   \
    \ int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int\
    \ mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr\
    \ = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n\
    \    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n    int aaaa = 0;\n   \
    \ int bbbb = 0;\n    int cccc = 0;\n   ", "    // your code here\n    int i=0;\n\
    \    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int o=0;\n    int\
    \ p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n    int v=0;\n\
    \    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int a=0;\n    int\
    \ b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n\
    \    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n    int ll=0;\n  \
    \  int mm=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n    int rr=0;\n   \
    \ int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n    int xx=0;\n    int\
    \ yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n    int cc=0;\n    int dd=0;\n\
    \    int ee=0;\n    int ff=0;\n    int gg=0;\n    int hh=0;\n    int iii=0;\n\
    \    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int mmm=0;\n    int ooo=0;\n\
    \    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n    int ttt=0;\n    int uuu=0;\n\
    \    int vvv=0;\n    int www=0;\n    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n\
    \    int aaaa=0;\n    int bbbb=0;\n    int cccc=0;\n   ", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string word;\n    int apples = 0;\n  \
    \  int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n\
    \            ss >> word;\n            apples = std::stoi(word);\n        }\n \
    \       else if(word == \"oranges\") {\n            ss >> word;\n            oranges\
    \ = std::stoi(word);\n        }\n    }\n    return n - apples - oranges;", " \
    \   // your code here\n    long a,o;\n    std::stringstream ss;\n    ss<<s;\n\
    \    ss>>a>>s>>o;\n    return n-a-o;", "    // your code here\n    long apples\
    \ = 0;\n    long oranges = 0;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while(ss >> word) {\n        if(word == \"apples\") {\n            ss >>\
    \ word;\n            ss >> word;\n            apples = std::stol(word);\n    \
    \    }\n        else if(word == \"oranges\") {\n            ss >> word;\n    \
    \        ss >> word;\n            oranges = std::stol(word);\n        }\n    }\n\
    \    return n - (apples + oranges);", "    // your code here\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n \
    \   int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn\
    \ = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n \
    \   int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aaa = 0;\n\
    \    int bbb = 0;\n    int ccc = 0;\n    int ddd = 0;\n    int eee = 0;\n    int\
    \ fff = 0;\n    int ggg = 0;\n    int hhh = 0;\n    int iii = 0;\n    int jjj\
    \ = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n\
    \    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int\
    \ sss = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www\
    \ = 0;\n    int xxx = 0;\n    int yyy", "    // your code here\n    int i=0;\n\
    \    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int o=0;\n    int\
    \ p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n    int v=0;\n\
    \    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int a=0;\n    int\
    \ b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n\
    \    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n    int ll=0;\n  \
    \  int mm=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n    int rr=0;\n   \
    \ int ss=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n    int\
    \ xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n    int cc=0;\n\
    \    int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int hh=0;\n \
    \   int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int mmm=0;\n\
    \    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n    int sss=0;\n\
    \    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n\
    \    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbb", "    // your code\
    \ here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n\
    \    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int\
    \ u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n\
    \    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int\
    \ f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n\
    \    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n \
    \   int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n  \
    \  int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n   \
    \ int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int\
    \ hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int\
    \ mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n   \
    \ int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n\
    \    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n    int cccc=0;\n\
    \   ", "    // your code here\n    long num_apples = 0;\n    long num_oranges\
    \ = 0;\n    long num_mangoes = 0;\n    long total_fruits = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    apples\") {\n            ss >> word;\n            num_apples = std::stol(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            num_oranges = std::stol(word);\n        }\n    }\n    total_fruits\
    \ = num_apples + num_oranges;\n    num_mangoes = n - total_fruits;\n    return\
    \ num_mangoes;", "    // your code here\n    int apples = 0;\n    int oranges\
    \ = 0;\n    int i = 0;\n    while(s[i] != ' '){\n        apples = apples * 10\
    \ + (s[i] - '0');\n        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n\
    \        oranges = oranges * 10 + (s[i] - '0');\n        i++;\n    }\n    return\
    \ n - apples - oranges;", "    long apples = 0;\n    long oranges = 0;\n    long\
    \ mangoes = 0;\n    long i = 0;\n    while(s[i] != ' ') {\n        apples = apples\
    \ * 10 + (s[i] - '0');\n        i++;\n    }\n    i += 6;\n    while(s[i] != '\
    \ ') {\n        oranges = oranges * 10 + (s[i] - '0');\n        i++;\n    }\n\
    \    mangoes = n - apples - oranges;\n    return mangoes;", "    // your code\
    \ here\n    long num_apples, num_oranges;\n    sscanf(s.c_str(), \"%ld apples\
    \ and %ld oranges\", &num_apples, &num_oranges);\n    return n - num_apples -\
    \ num_oranges;", "    // your code here\n    long a,o;\n    std::stringstream\
    \ ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;", "    // your code here\n    long\
    \ num_apples = 0;\n    long num_oranges = 0;\n    long num_mangoes = 0;\n    std::string\
    \ temp = \"\";\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] == '\
    \ '){\n            if(temp == \"apples\"){\n                num_apples = std::stol(s.substr(0,\
    \ i));\n                temp = \"\";\n            }\n            else if(temp\
    \ == \"oranges\"){\n                num_oranges = std::stol(s.substr(0, i));\n\
    \                temp = \"\";\n            }\n            s = s.substr(i+1, s.length()\
    \ - i);\n            i = 0;\n        }\n        else{\n            temp += s[i];\n\
    \        }\n    }\n    num_mangoes = n - num_apples - num_oranges;\n    return\
    \ num_mangoes;", "    // your code here\n    int i = 0;\n    int j = 0;\n    int\
    \ k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n   \
    \ int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa =\
    \ 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n   \
    \ int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj =\
    \ 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n   \
    \ int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss =\
    \ 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n   \
    \ int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aaa = 0;\n    int bbb\
    \ = 0;\n    int ccc = 0;\n    int ddd = 0;\n    int eee = 0;\n    int fff = 0;\n\
    \    int ggg = 0;\n    int hhh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int\
    \ kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo\
    \ = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int sss = 0;\n\
    \    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int\
    \ xxx = 0;\n    int yyy", "    // your code here\n    std::stringstream ss(s);\n\
    \    std::string word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"apples\") {\n            ss >> word;\n    \
    \        apples = std::stoi(word);\n        }\n        else if(word == \"oranges\"\
    ) {\n            ss >> word;\n            oranges = std::stoi(word);\n       \
    \ }\n    }\n    return n - (apples + oranges);", "    // your code here\n    long\
    \ num_apples = 0;\n    long num_oranges = 0;\n    long num_mangoes = 0;\n    std::string\
    \ temp = \"\";\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] == '\
    \ '){\n            if(temp == \"apples\"){\n                num_apples = std::stol(s.substr(0,\
    \ i));\n                s = s.substr(i+1, s.length()-i);\n                break;\n\
    \            }\n            else{\n                num_oranges = std::stol(s.substr(0,\
    \ i));\n                s = s.substr(i+1, s.length()-i);\n                break;\n\
    \            }\n        }\n        temp += s[i];\n    }\n    for(int i = 0; i\
    \ < s.length(); i++){\n        if(s[i] == ' '){\n            if(temp == \"apples\"\
    ){\n                num_apples = std::stol(s.substr(0, i));\n                s\
    \ = s.substr(i+1, s.length()-i);\n                break;\n            }\n    \
    \        else{\n                num_oranges = std::stol(s.substr(0, i));\n   \
    \             s = s.substr(i+1, s.length()-i);\n                break;\n     \
    \       }\n        }\n        temp += s[i];\n    }\n    num_mangoes = n - (num_apples\
    \ + num_oranges);\n    return num_mangoes;", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    long apple = 0;\n    long orange = 0;\n \
    \   while(ss >> word){\n        if(word == \"apples\"){\n            ss >> word;\n\
    \            apple = std::stol(word);\n        }\n        else if(word == \"oranges\"\
    ){\n            ss >> word;\n            orange = std::stol(word);\n        }\n\
    \    }\n    return n - (apple + orange);", "    // Write your code here\n    //\
    \ To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n\
    \    return n - apples - oranges;", "    // your code here\n    int i=0;\n   \
    \ int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int o=0;\n    int p=0;\n\
    \    int q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n    int v=0;\n    int\
    \ w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int a=0;\n    int b=0;\n\
    \    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n    int\
    \ h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n    int ll=0;\n    int mm=0;\n\
    \    int nn=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n    int rr=0;\n \
    \   int ss=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n  \
    \  int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n   \
    \ int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int\
    \ hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int\
    \ mmm=0;\n    int nnn=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n   \
    \ int rrr=0;\n    int sss=0;\n    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n\
    \    int www=0;\n    int xxx=0;\n    int yyy=0;\n    int zzz", "    // your code\
    \ here\n    long count = 0;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    while(ss >> word){\n        if(word == \"apples\"){\n            ss >> word;\n\
    \            count += std::stol(word);\n        }\n        else if(word == \"\
    oranges\"){\n            ss >> word;\n            count += std::stol(word);\n\
    \        }\n    }\n    return n - count;", "    // your code here\n    int apples\
    \ = 0;\n    int oranges = 0;\n    int mangoes = 0;\n    int i = 0;\n    while(s[i]\
    \ != ' '){\n        apples = apples * 10 + (s[i] - '0');\n        i++;\n    }\n\
    \    i = i + 5;\n    while(s[i] != ' '){\n        oranges = oranges * 10 + (s[i]\
    \ - '0');\n        i++;\n    }\n    mangoes = n - apples - oranges;\n    return\
    \ mangoes;", "    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n\
    \    int l=0;\n    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int\
    \ r=0;\n    int t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n\
    \    int y=0;\n    int z=0;\n    int aa=0;\n    int bb=0;\n    int cc=0;\n   \
    \ int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int hh=0;\n    int\
    \ ii=0;\n    int jj=0;\n    int kk=0;\n    int ll=0;\n    int mm=0;\n    int nn=0;\n\
    \    int oo=0;\n    int pp=0;\n    int qq=0;\n    int rr=0;\n    int ss=0;\n \
    \   int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n    int xx=0;\n  \
    \  int yy=0;\n    int zz=0;\n    int aaa=0;\n    int bbb=0;\n    int ccc=0;\n\
    \    int ddd=0;\n    int eee=0;\n    int fff=0;\n    int ggg=0;\n    int hhh=0;\n\
    \    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int mmm=0;\n\
    \    int nnn=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n\
    \    int sss=0;\n    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n\
    \    int xxx=0;\n    int yyy", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    long apple, orange;\n    ss >> apple >> word >> word >> orange;\n\
    \    return n - apple - orange;", "    // your code here\n    long apples, oranges;\n\
    \    sscanf(s.c_str(), \"%ld apples and %ld oranges\", &apples, &oranges);\n \
    \   return n - apples - oranges;", "    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apple_count = 0;\n    int orange_count = 0;\n    while (ss >>\
    \ word) {\n        if (word == \"apples\") {\n            ss >> word;\n      \
    \      apple_count = std::stoi(word);\n        }\n        if (word == \"oranges\"\
    ) {\n            ss >> word;\n            orange_count = std::stoi(word);\n  \
    \      }\n    }\n    return n - apple_count - orange_count;", "    // your code\
    \ here\n    std::stringstream ss;\n    ss << s;\n    std::string temp;\n    int\
    \ apples = 0;\n    int oranges = 0;\n    while (!ss.eof()) {\n        ss >> temp;\n\
    \        if (temp == \"apples\") {\n            ss >> temp;\n            ss >>\
    \ temp;\n            apples = std::stoi(temp);\n        }\n        else if (temp\
    \ == \"oranges\") {\n            ss >> temp;\n            ss >> temp;\n      \
    \      oranges = std::stoi(temp);\n        }\n    }\n    return n - (apples +\
    \ oranges);", "    // your code here\n    int count = 0;\n    int i = 0;\n   \
    \ while(s[i] != ' '){\n        count = count*10 + (s[i] - '0');\n        i++;\n\
    \    }\n    return n - count;", "\t// your code here\n\tint a, o;\n\tstd::stringstream\
    \ ss(s);\n\tss >> a >> s >> o;\n\treturn n - a - o;", "    // your code here\n\
    \    int apples = 0;\n    int oranges = 0;\n    int mango = 0;\n    int i = 0;\n\
    \    while(s[i] != ' '){\n        apples = apples * 10 + s[i] - '0';\n       \
    \ i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n        oranges = oranges\
    \ * 10 + s[i] - '0';\n        i++;\n    }\n    mango = n - (apples + oranges);\n\
    \    return mango;", "    // your code here\n    long apples = 0;\n    long oranges\
    \ = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n\
    \    while(std::getline(ss, temp, ' ')){\n        if(temp == \"apples\"){\n  \
    \          apples = std::stol(std::getline(ss, temp, ' '));\n        }\n     \
    \   else if(temp == \"oranges\"){\n            oranges = std::stol(std::getline(ss,\
    \ temp, ' '));\n        }\n    }\n    mangoes = n - apples - oranges;\n    return\
    \ mangoes;", "    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    long apples = 0;\n    long oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            ss >>\
    \ word;\n            apples = std::stol(word);\n        }\n        else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            ss >> word;\n      \
    \      oranges = std::stol(word);\n        }\n    }\n    return n - apples - oranges;",
  "    std::stringstream ss(s);\n    long a, o;\n    ss >> a >> ss >> ss >> o;\n \
    \   return n - a - o;", "    std::stringstream ss(s);\n    std::string temp;\n\
    \    std::vector<std::string> tokens;\n    while (std::getline(ss, temp, ' '))\
    \ {\n        tokens.push_back(temp);\n    }\n    long apples = std::stol(tokens[0]);\n\
    \    long oranges = std::stol(tokens[3]);\n    return n - apples - oranges;",
  "    // Your code here\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(getline(ss,\
    \ temp, ' ')){\n        if(temp == \"apples\"){\n            apples = std::stol(getline(ss,\
    \ temp, ' '));\n        }\n        else if(temp == \"oranges\"){\n           \
    \ oranges = std::stol(getline(ss, temp, ' '));\n        }\n    }\n    mangoes\
    \ = n - apples - oranges;\n    return mangoes;", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    int count = 0;\n    int apple = 0;\n    int\
    \ orange = 0;\n    while(ss >> word) {\n        if(word == \"apples\") {\n   \
    \         ss >> word;\n            ss >> word;\n            apple = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            orange = std::stoi(word);\n        }\n    }\n    return n - (apple\
    \ + orange);", "    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int count = 0;\n    int num_apples = 0;\n    int num_oranges = 0;\n\
    \    while(ss >> word) {\n        if(word == \"apples\") {\n            ss >>\
    \ word;\n            num_apples = std::stoi(word);\n        }\n        else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            num_oranges = std::stoi(word);\n\
    \        }\n    }\n    return n - (num_apples + num_oranges);", "    // your code\
    \ here\n    long apples, oranges;\n    std::stringstream ss(s);\n    ss >> apples\
    \ >> s >> oranges;\n    return n - apples - oranges;", "    long apples = 0;\n\
    \    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    while(getline(ss, temp, ' ')){\n        if(temp ==\
    \ \"apples\"){\n            apples = std::stol(temp);\n        }\n        else\
    \ if(temp == \"oranges\"){\n            oranges = std::stol(temp);\n        }\n\
    \    }\n    mangoes = n - (apples + oranges);\n    return mangoes;", "    // your\
    \ code goes here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n   \
    \ int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n\
    \    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int\
    \ z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n\
    \    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n    int\
    \ kk=0;\n    int ll=0;\n    int mm=0;\n    int nn=0;\n    int oo=0;\n    int pp=0;\n\
    \    int qq=0;\n    int rr=0;\n    int ss=0;\n    int tt=0;\n    int uu=0;\n \
    \   int vv=0;\n    int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n  \
    \  int aa=0;\n    int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n   \
    \ int ff=0;\n    int gg=0;\n    int hh=0;\n    int iii=0;\n    int jjj=0;\n  \
    \  int kkk=0;\n    int lll=0;\n    int mmm=0;\n    int nnn=0;\n    int ooo=0;\n\
    \    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n    int sss=0;\n    int ttt=0;\n\
    \    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n    int yyy=0;\n\
    \    int z", "    long apples = 0;\n    long oranges = 0;\n    long mangoes =\
    \ 0;\n    std::stringstream ss;\n    ss << s;\n    std::string temp;\n    while\
    \ (!ss.eof()) {\n        ss >> temp;\n        if (temp.compare(\"apples\") ==\
    \ 0) {\n            ss >> temp;\n            apples = std::stol(temp);\n     \
    \   } else if (temp.compare(\"oranges\") == 0) {\n            ss >> temp;\n  \
    \          oranges = std::stol(temp);\n        }\n    }\n    mangoes = n - (apples\
    \ + oranges);\n    return mangoes;", "    // your code here\n    std::stringstream\
    \ ss(s);\n    std::string token;\n    std::vector<std::string> v;\n    while(std::getline(ss,\
    \ token, ' ')) {\n        v.push_back(token);\n    }\n    int a = std::stoi(v[0]);\n\
    \    int o = std::stoi(v[3]);\n    return n - a - o;", "    std::stringstream\
    \ ss(s);\n    std::string word;\n    long a = 0, o = 0;\n    while (ss >> word)\
    \ {\n        if (word == \"apples\") {\n            ss >> word;\n            a\
    \ = std::stol(word);\n        } else if (word == \"oranges\") {\n            ss\
    \ >> word;\n            o = std::stol(word);\n        }\n    }\n    return n -\
    \ a - o;", "    long apples = 0;\n    long oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"apples\") {\n            ss >> word;\n            apples = std::stol(word);\n\
    \        } else if (word == \"oranges\") {\n            ss >> word;\n        \
    \    oranges = std::stol(word);\n        }\n    }\n    return n - apples - oranges;",
  "    // your code here\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int\
    \ l = 0;\n    int m = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n   \
    \ int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int o = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd\
    \ = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n \
    \   int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int pp = 0;\n    int qq\
    \ = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n \
    \   int ww = 0;\n    int oo = 0;\n    int aaa = 0;\n    int bbb = 0;\n    int\
    \ ccc = 0;\n    int ddd = 0;\n    int eee = 0;\n    int fff = 0;\n    int ggg\
    \ = 0;\n    int hhh = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n\
    \    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt = 0;\n    int\
    \ uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int ooo = 0;\n    int aaaa\
    \ = 0;\n    int bbbb = 0;\n    int cccc = 0;\n    int dddd = 0;\n    int eee",
  "    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n\
    \    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int\
    \ t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n\
    \    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int\
    \ e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n\
    \    int kk=0;\n    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n \
    \   int qq=0;\n    int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n  \
    \  int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n   \
    \ int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int\
    \ gg=0;\n    int hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int\
    \ lll=0;\n    int mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n   \
    \ int rrr=0;\n    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n\
    \    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n\
    \    int cccc=0;\n   ", "    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"\
    %d apples and %d oranges\",&a,&o);\n    return n-a-o;", "    // your code here\n\
    \    long a,o;\n    std::stringstream ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;",
  "    // your code here\n    std::stringstream ss(s);\n    std::string word;\n  \
    \  int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word\
    \ == \"apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            oranges = std::stoi(word);\n        }\n    }\n    return n - (apples\
    \ + oranges);", "    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    int apples = 0;\n    int oranges = 0;\n    while(std::getline(ss,\
    \ temp, ' ')){\n        if(temp == \"apples\"){\n            apples = std::stoi(temp);\n\
    \        }\n        else if(temp == \"oranges\"){\n            oranges = std::stoi(temp);\n\
    \        }\n    }\n    return n - (apples + oranges);", "    // your code here\n\
    \    std::stringstream ss(s);\n    std::string temp;\n    std::vector<std::string>\
    \ tokens;\n    while(std::getline(ss, temp, ' ')) {\n        tokens.push_back(temp);\n\
    \    }\n    long apples = std::stol(tokens[0]);\n    long oranges = std::stol(tokens[3]);\n\
    \    return n - apples - oranges;", "    // your code here\n    long a,o;\n  \
    \  std::stringstream ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;", "\t// your\
    \ code here\n\tstd::stringstream ss(s);\n\tstd::string word;\n\tint apples = 0;\n\
    \tint oranges = 0;\n\twhile (ss >> word) {\n\t\tif (word == \"apples\") {\n\t\t\
    \tss >> word;\n\t\t\tapples = std::stoi(word);\n\t\t}\n\t\telse if (word == \"\
    oranges\") {\n\t\t\tss >> word;\n\t\t\toranges = std::stoi(word);\n\t\t}\n\t}\n\
    \treturn n - (apples + oranges);", "    // Write your code here\n    // To print\
    \ results to the standard output you can use std::cout\n    // Example: std::cout\
    \ << \"Hello world!\";\n    long a,o;\n    sscanf(s.c_str(),\"%ld apples and %ld\
    \ oranges\",&a,&o);\n    return n-a-o;", "    // Write your code here\n    //\
    \ To print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n\
    \    return n - (apples + oranges);", "    // your code here\n    long a,o;\n\
    \    std::stringstream ss(s);\n    ss>>a>>s>>o;\n    return n-a-o;", "    // your\
    \ code here\n    long num_apples = 0;\n    long num_oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string temp;\n    while(std::getline(ss, temp, ' ')) {\n  \
    \      if(temp == \"apples\") {\n            std::getline(ss, temp, ' ');\n  \
    \          num_apples = std::stol(temp);\n        } else if(temp == \"oranges\"\
    ) {\n            std::getline(ss, temp, ' ');\n            num_oranges = std::stol(temp);\n\
    \        }\n    }\n    return n - num_apples - num_oranges;", "    // your code\
    \ here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n\
    \    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n    int\
    \ u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n\
    \    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int\
    \ f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n    int kk=0;\n\
    \    int ll=0;\n    int mm=0;\n    int oo=0;\n    int pp=0;\n    int qq=0;\n \
    \   int rr=0;\n    int tt=0;\n    int uu=0;\n    int vv=0;\n    int ww=0;\n  \
    \  int xx=0;\n    int yy=0;\n    int zz=0;\n    int aa=0;\n    int bb=0;\n   \
    \ int cc=0;\n    int dd=0;\n    int ee=0;\n    int ff=0;\n    int gg=0;\n    int\
    \ hh=0;\n    int iii=0;\n    int jjj=0;\n    int kkk=0;\n    int lll=0;\n    int\
    \ mmm=0;\n    int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n   \
    \ int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n\
    \    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n    int bbbb=0;\n    int cccc=0;\n\
    \   ", "    // your code here\n    long apples, oranges;\n    std::stringstream\
    \ ss(s);\n    ss >> apples >> oranges;\n    return n - apples - oranges;", " \
    \   long apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"apples\") {\n            ss >> word;\n            apples = std::stol(word);\n\
    \        } else if (word == \"oranges\") {\n            ss >> word;\n        \
    \    oranges = std::stol(word);\n        }\n    }\n    mangoes = n - (apples +\
    \ oranges);\n    return mangoes;", "    // your code here\n    long apples, oranges;\n\
    \    sscanf(s.c_str(), \"%ld apples and %ld oranges\", &apples, &oranges);\n \
    \   return n - apples - oranges;", "    // your code here\n    int i = 0;\n  \
    \  int j = 0;\n    int k = 0;\n    int count = 0;\n    while(s[i] != ' '){\n \
    \       i++;\n    }\n    while(s[j] != ' '){\n        j++;\n    }\n    while(s[k]\
    \ != ' '){\n        k++;\n    }\n    count = n - (i + j + k);\n    return count;",
  "    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n\
    \    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int\
    \ t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n\
    \    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int\
    \ e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n    int jj=0;\n\
    \    int kk=0;\n    int ll=0;\n    int mm=0;\n    int nn=0;\n    int oo=0;\n \
    \   int pp=0;\n    int qq=0;\n    int rr=0;\n    int ss=0;\n    int tt=0;\n  \
    \  int uu=0;\n    int vv=0;\n    int ww=0;\n    int xx=0;\n    int yy=0;\n   \
    \ int zz=0;\n    int aa=0;\n    int bb=0;\n    int cc=0;\n    int dd=0;\n    int\
    \ ee=0;\n    int ff=0;\n    int gg=0;\n    int hh=0;\n    int iii=0;\n    int\
    \ jjj=0;\n    int kkk=0;\n    int lll=0;\n    int mmm=0;\n    int nnn=0;\n   \
    \ int ooo=0;\n    int ppp=0;\n    int qqq=0;\n    int rrr=0;\n    int sss=0;\n\
    \    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n    int www=0;\n    int xxx=0;\n\
    \    int yyy=0;\n    int zzz", "    // your code here\n    int i = 0;\n    int\
    \ j = 0;\n    std::string temp = \"\";\n    while(s[i] != ' '){\n        temp\
    \ += s[i];\n        i++;\n    }\n    int apples = std::stoi(temp);\n    temp =\
    \ \"\";\n    i += 6;\n    while(s[i] != ' '){\n        temp += s[i];\n       \
    \ i++;\n    }\n    int oranges = std::stoi(temp);\n    int mangoes = n - (apples\
    \ + oranges);\n    return mangoes;", "    // your code here\n    long apples,\
    \ oranges;\n    std::stringstream ss(s);\n    ss >> apples >> s >> oranges;\n\
    \    return n - apples - oranges;", "    int apple = 0, orange = 0;\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apple++;\n\
    \        } else if (s[i] == 'o') {\n            orange++;\n        }\n    }\n\
    \    return n - apple - orange;", "    // your code here\n    int apples = 0;\n\
    \    int oranges = 0;\n    int mango = 0;\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    int i = 0;\n    while(getline(ss, temp, ' ')){\n        if(i == 0){\n\
    \            apples = std::stoi(temp);\n        }\n        else if(i == 2){\n\
    \            oranges = std::stoi(temp);\n        }\n        i++;\n    }\n    mango\
    \ = n - (apples + oranges);\n    return mango;", "    // your code here\n    int\
    \ i=0;\n    int j=0;\n    int k=0;\n    int m=0;\n    int l=0;\n    int a=0;\n\
    \    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int\
    \ g=0;\n    int h=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int t=0;\n\
    \    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int\
    \ z=0;\n    int o=0;\n    int count=0;\n    int count1=0;\n    int count2=0;\n\
    \    int count3=0;\n    int count4=0;\n    int count5=0;\n    int count6=0;\n\
    \    int count7=0;\n    int count8=0;\n    int count9=0;\n    int count10=0;\n\
    \    int count11=0;\n    int count12=0;\n    int count13=0;\n    int count14=0;\n\
    \    int count15=0;\n    int count16=0;\n    int count17=0;\n    int count18=0;\n\
    \    int count19=0;\n    int count20=0;\n    int count21=0;\n    int count22=0;\n\
    \    int count23=0;\n    int count24=0;\n    int count25=0;\n    int count26=0;\n\
    \    int count27=0;\n    int count28=0;\n    int count29=0;\n    int count30=0;\n\
    \    int count31=0;\n    int count32=0;\n    int count33=0;\n    int count34=0;\n\
    \    int count35=0;\n    int count36=0;\n    int count37=0;\n    int count38=0;\n\
    \    int count39=0;\n    int count40=0;\n    int count41=0;\n    int", "    int\
    \ a, o;\n    sscanf(s.c_str(), \"%d apples and %d oranges\", &a, &o);\n    return\
    \ n - a - o;", "    // your code here\n    long apples, oranges;\n    std::stringstream\
    \ ss(s);\n    ss >> apples >> oranges;\n    return n - apples - oranges;", " \
    \   // your code here\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(ss >> temp)\
    \ {\n        if(temp == \"apples\") {\n            ss >> apples;\n        } else\
    \ if(temp == \"oranges\") {\n            ss >> oranges;\n        }\n    }\n  \
    \  mangoes = n - (apples + oranges);\n    return mangoes;", "    // your code\
    \ here\n    std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string>\
    \ v;\n    while(ss >> word)\n        v.push_back(word);\n    int apples = std::stoi(v[0]);\n\
    \    int oranges = std::stoi(v[3]);\n    return n - apples - oranges;", "    long\
    \ apples = 0;\n    long oranges = 0;\n    long mangoes = 0;\n    std::stringstream\
    \ ss(s);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"apples\") {\n            ss >> word;\n            apples = std::stol(word);\n\
    \        }\n        if (word == \"oranges\") {\n            ss >> word;\n    \
    \        oranges = std::stol(word);\n        }\n    }\n    mangoes = n - apples\
    \ - oranges;\n    return mangoes;", "    // your code here\n    long count = 0;\n\
    \    long count1 = 0;\n    long count2 = 0;\n    for(int i = 0; i < s.length();\
    \ i++){\n        if(s[i] == 'a'){\n            count1++;\n        }\n        if(s[i]\
    \ == 'o'){\n            count2++;\n        }\n    }\n    count = n - (count1 +\
    \ count2);\n    return count;", "    // your code here\n    long apples, oranges;\n\
    \    std::stringstream ss(s);\n    ss >> apples >> s >> oranges;\n    return n\
    \ - apples - oranges;", "    // your code here\n    long apples = 0;\n    long\
    \ oranges = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    ss >> temp;\n    apples = std::stol(temp);\n    ss >> temp;\n   \
    \ ss >> temp;\n    oranges = std::stol(temp);\n    mangoes = n - apples - oranges;\n\
    \    return mangoes;", "    // your code here\n    int apples = 0;\n    int oranges\
    \ = 0;\n    int mango = 0;\n    int i = 0;\n    while(s[i] != ' '){\n        apples\
    \ = apples * 10 + (s[i] - '0');\n        i++;\n    }\n    i += 6;\n    while(s[i]\
    \ != ' '){\n        oranges = oranges * 10 + (s[i] - '0');\n        i++;\n   \
    \ }\n    mango = n - (apples + oranges);\n    return mango;", "    // your code\
    \ here\n    std::stringstream ss(s);\n    std::string word;\n    int apples =\
    \ 0;\n    int oranges = 0;\n    while(ss >> word) {\n        if(word == \"apples\"\
    ) {\n            ss >> word;\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\") {\n            ss >> word;\n\
    \            ss >> word;\n            oranges = std::stoi(word);\n        }\n\
    \    }\n    return n - (apples + oranges);"]
stop_tokens:
- "\n}"

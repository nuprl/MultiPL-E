language: cpp
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (int i = 0; i < l.size(); i++) {\n        if (s.find(l[i]) != s.end())\
    \ {\n            return true;\n        }\n        s.insert(-l[i]);\n    }\n  \
    \  return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n \
    \   assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1vo_hl4a.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmp1vo_hl4a.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmp1vo_hl4a.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmp1vo_hl4a.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmp1vo_hl4a.cpp:19:13: error: 's' was not declared in this\
    \ scope\n         if (s.find(l[i]) != s.end()) {\n             ^\n/tmp/tmp1vo_hl4a.cpp:22:9:\
    \ error: 's' was not declared in this scope\n         s.insert(-l[i]);\n     \
    \    ^\n/tmp/tmp1vo_hl4a.cpp: In function 'int main()':\n/tmp/tmp1vo_hl4a.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1vo_hl4a.cpp:2:\n/tmp/tmp1vo_hl4a.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmp1vo_hl4a.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmp1vo_hl4a.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmp1vo_hl4a.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp1vo_hl4a.cpp:28:77:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-li"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (auto i : l) {\n        if (s.find(-i) != s.end()) {\n         \
    \   return true;\n        }\n        s.insert(i);\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl035dy7t.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpl035dy7t.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpl035dy7t.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpl035dy7t.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpl035dy7t.cpp:18:15: error: 'i' does not name a type\n\
    \     for (auto i : l) {\n               ^\n/tmp/tmpl035dy7t.cpp:24:5: error:\
    \ expected ';' before 'return'\n     return false;\n     ^\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpl035dy7t.cpp: In function 'int main()':\n/tmp/tmpl035dy7t.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl035dy7t.cpp:2:\n/tmp/tmpl035dy7t.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpl035dy7t.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpl035dy7t.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpl035dy7t.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed ini"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (auto i : l) {\n        if (s.find(-i) != s.end()) {\n         \
    \   return true;\n        }\n        s.insert(i);\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl035dy7t.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpl035dy7t.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpl035dy7t.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpl035dy7t.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpl035dy7t.cpp:18:15: error: 'i' does not name a type\n\
    \     for (auto i : l) {\n               ^\n/tmp/tmpl035dy7t.cpp:24:5: error:\
    \ expected ';' before 'return'\n     return false;\n     ^\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpl035dy7t.cpp: In function 'int main()':\n/tmp/tmpl035dy7t.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl035dy7t.cpp:2:\n/tmp/tmpl035dy7t.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpl035dy7t.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpl035dy7t.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpl035dy7t.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed ini"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    int i = 0;\n    int j = l.size() - 1;\n    while (i < j) {\n\
    \        if (l[i] + l[j] == 0) {\n            return true;\n        } else if\
    \ (l[i] + l[j] < 0) {\n            i++;\n        } else {\n            j--;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptwtcna5v.cpp: In function 'int main()':\n/tmp/tmptwtcna5v.cpp:32:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptwtcna5v.cpp:2:\n/tmp/tmptwtcna5v.cpp:33:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmptwtcna5v.cpp:33:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmptwtcna5v.cpp:33:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmptwtcna5v.cpp:33:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmptwtcna5v.cpp:33:77:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmptwtcna5v.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptwtcna5v.cpp:2:\n/tmp/tmptwtcna5v.cp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (auto i : l) {\n        if (s.find(-i) != s.end()) {\n         \
    \   return true;\n        }\n        s.insert(i);\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl035dy7t.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpl035dy7t.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpl035dy7t.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpl035dy7t.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpl035dy7t.cpp:18:15: error: 'i' does not name a type\n\
    \     for (auto i : l) {\n               ^\n/tmp/tmpl035dy7t.cpp:24:5: error:\
    \ expected ';' before 'return'\n     return false;\n     ^\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpl035dy7t.cpp: In function 'int main()':\n/tmp/tmpl035dy7t.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl035dy7t.cpp:2:\n/tmp/tmpl035dy7t.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpl035dy7t.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpl035dy7t.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpl035dy7t.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed ini"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // Your code here\n\
    \    std::sort(l.begin(), l.end());\n    int i = 0;\n    int j = l.size() - 1;\n\
    \    while (i < j) {\n        if (l[i] + l[j] == 0) {\n            return true;\n\
    \        } else if (l[i] + l[j] < 0) {\n            i++;\n        } else {\n \
    \           j--;\n        }\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wk86pa9.cpp: In function 'int main()':\n/tmp/tmp1wk86pa9.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1wk86pa9.cpp:2:\n/tmp/tmp1wk86pa9.cpp:34:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmp1wk86pa9.cpp:34:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmp1wk86pa9.cpp:34:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmp1wk86pa9.cpp:34:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp1wk86pa9.cpp:34:77:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp1wk86pa9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1wk86pa9.cpp:2:\n/tmp/tmp1wk86pa9.cp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (long i : l) {\n        if (s.find(-i) != s.end()) {\n         \
    \   return true;\n        }\n        s.insert(i);\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcwn4dulh.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpcwn4dulh.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpcwn4dulh.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpcwn4dulh.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpcwn4dulh.cpp:18:19: error: range-based 'for' loops are\
    \ not allowed in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmpcwn4dulh.cpp:19:13:\
    \ error: 's' was not declared in this scope\n         if (s.find(-i) != s.end())\
    \ {\n             ^\n/tmp/tmpcwn4dulh.cpp:22:9: error: 's' was not declared in\
    \ this scope\n         s.insert(i);\n         ^\n/tmp/tmpcwn4dulh.cpp: In function\
    \ 'int main()':\n/tmp/tmpcwn4dulh.cpp:27:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = pairs_sum_to_zero;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcwn4dulh.cpp:2:\n/tmp/tmpcwn4dulh.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpcwn4dulh.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpcwn4dulh.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpcwn4dulh.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpcwn4dulh.cpp:28:77:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/v"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (auto i : l) {\n        if (s.find(-i) != s.end()) {\n         \
    \   return true;\n        }\n        s.insert(i);\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl035dy7t.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpl035dy7t.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpl035dy7t.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpl035dy7t.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpl035dy7t.cpp:18:15: error: 'i' does not name a type\n\
    \     for (auto i : l) {\n               ^\n/tmp/tmpl035dy7t.cpp:24:5: error:\
    \ expected ';' before 'return'\n     return false;\n     ^\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpl035dy7t.cpp: In function 'int main()':\n/tmp/tmpl035dy7t.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl035dy7t.cpp:2:\n/tmp/tmpl035dy7t.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpl035dy7t.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpl035dy7t.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpl035dy7t.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed ini"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (auto i : l) {\n        if (s.find(-i) != s.end()) {\n         \
    \   return true;\n        }\n        s.insert(i);\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl035dy7t.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpl035dy7t.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpl035dy7t.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpl035dy7t.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpl035dy7t.cpp:18:15: error: 'i' does not name a type\n\
    \     for (auto i : l) {\n               ^\n/tmp/tmpl035dy7t.cpp:24:5: error:\
    \ expected ';' before 'return'\n     return false;\n     ^\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpl035dy7t.cpp: In function 'int main()':\n/tmp/tmpl035dy7t.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl035dy7t.cpp:2:\n/tmp/tmpl035dy7t.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpl035dy7t.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpl035dy7t.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpl035dy7t.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed ini"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // Your code here\n\
    \    std::sort(l.begin(), l.end());\n    int i = 0;\n    int j = l.size() - 1;\n\
    \    while (i < j) {\n        if (l[i] + l[j] == 0) {\n            return true;\n\
    \        } else if (l[i] + l[j] < 0) {\n            i++;\n        } else {\n \
    \           j--;\n        }\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wk86pa9.cpp: In function 'int main()':\n/tmp/tmp1wk86pa9.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1wk86pa9.cpp:2:\n/tmp/tmp1wk86pa9.cpp:34:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmp1wk86pa9.cpp:34:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmp1wk86pa9.cpp:34:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmp1wk86pa9.cpp:34:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp1wk86pa9.cpp:34:77:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp1wk86pa9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1wk86pa9.cpp:2:\n/tmp/tmp1wk86pa9.cp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (auto i : l) {\n        if (s.find(-i) != s.end()) {\n         \
    \   return true;\n        }\n        s.insert(i);\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl035dy7t.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpl035dy7t.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpl035dy7t.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpl035dy7t.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpl035dy7t.cpp:18:15: error: 'i' does not name a type\n\
    \     for (auto i : l) {\n               ^\n/tmp/tmpl035dy7t.cpp:24:5: error:\
    \ expected ';' before 'return'\n     return false;\n     ^\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpl035dy7t.cpp: In function 'int main()':\n/tmp/tmpl035dy7t.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl035dy7t.cpp:2:\n/tmp/tmpl035dy7t.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpl035dy7t.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpl035dy7t.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpl035dy7t.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed ini"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // Your code here\n\
    \    std::unordered_set<long> s;\n    for(auto i:l){\n        if(s.find(-i)!=s.end()){\n\
    \            return true;\n        }\n        s.insert(i);\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoe_yamqy.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpoe_yamqy.cpp:18:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpoe_yamqy.cpp:18:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpoe_yamqy.cpp:18:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpoe_yamqy.cpp:19:14: error: 'i' does not name a type\n\
    \     for(auto i:l){\n              ^\n/tmp/tmpoe_yamqy.cpp:25:5: error: expected\
    \ ';' before 'return'\n     return false;\n     ^\n/tmp/tmpoe_yamqy.cpp:25:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpoe_yamqy.cpp:25:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpoe_yamqy.cpp:25:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpoe_yamqy.cpp:25:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpoe_yamqy.cpp: In function 'int main()':\n/tmp/tmpoe_yamqy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpoe_yamqy.cpp:2:\n/tmp/tmpoe_yamqy.cpp:29:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpoe_yamqy.cpp:29:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpoe_yamqy.cpp:29:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpoe_yamqy.cpp:29:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed initiali"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (auto i : l) {\n        if (s.find(-i) != s.end()) {\n         \
    \   return true;\n        }\n        s.insert(i);\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl035dy7t.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpl035dy7t.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpl035dy7t.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpl035dy7t.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpl035dy7t.cpp:18:15: error: 'i' does not name a type\n\
    \     for (auto i : l) {\n               ^\n/tmp/tmpl035dy7t.cpp:24:5: error:\
    \ expected ';' before 'return'\n     return false;\n     ^\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpl035dy7t.cpp: In function 'int main()':\n/tmp/tmpl035dy7t.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl035dy7t.cpp:2:\n/tmp/tmpl035dy7t.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpl035dy7t.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpl035dy7t.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpl035dy7t.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed ini"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (auto i : l) {\n        if (s.find(-i) != s.end()) {\n         \
    \   return true;\n        }\n        s.insert(i);\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl035dy7t.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpl035dy7t.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpl035dy7t.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpl035dy7t.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpl035dy7t.cpp:18:15: error: 'i' does not name a type\n\
    \     for (auto i : l) {\n               ^\n/tmp/tmpl035dy7t.cpp:24:5: error:\
    \ expected ';' before 'return'\n     return false;\n     ^\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpl035dy7t.cpp: In function 'int main()':\n/tmp/tmpl035dy7t.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl035dy7t.cpp:2:\n/tmp/tmpl035dy7t.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpl035dy7t.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpl035dy7t.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpl035dy7t.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed ini"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (long i : l) {\n        if (s.find(-i) != s.end()) {\n         \
    \   return true;\n        }\n        s.insert(i);\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcwn4dulh.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpcwn4dulh.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpcwn4dulh.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpcwn4dulh.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpcwn4dulh.cpp:18:19: error: range-based 'for' loops are\
    \ not allowed in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmpcwn4dulh.cpp:19:13:\
    \ error: 's' was not declared in this scope\n         if (s.find(-i) != s.end())\
    \ {\n             ^\n/tmp/tmpcwn4dulh.cpp:22:9: error: 's' was not declared in\
    \ this scope\n         s.insert(i);\n         ^\n/tmp/tmpcwn4dulh.cpp: In function\
    \ 'int main()':\n/tmp/tmpcwn4dulh.cpp:27:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = pairs_sum_to_zero;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcwn4dulh.cpp:2:\n/tmp/tmpcwn4dulh.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpcwn4dulh.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpcwn4dulh.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpcwn4dulh.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpcwn4dulh.cpp:28:77:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/v"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // Your code here\n\
    \    std::unordered_set<long> s;\n    for(auto i:l){\n        if(s.find(-i)!=s.end()){\n\
    \            return true;\n        }\n        s.insert(i);\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoe_yamqy.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpoe_yamqy.cpp:18:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpoe_yamqy.cpp:18:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpoe_yamqy.cpp:18:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpoe_yamqy.cpp:19:14: error: 'i' does not name a type\n\
    \     for(auto i:l){\n              ^\n/tmp/tmpoe_yamqy.cpp:25:5: error: expected\
    \ ';' before 'return'\n     return false;\n     ^\n/tmp/tmpoe_yamqy.cpp:25:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpoe_yamqy.cpp:25:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpoe_yamqy.cpp:25:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpoe_yamqy.cpp:25:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpoe_yamqy.cpp: In function 'int main()':\n/tmp/tmpoe_yamqy.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpoe_yamqy.cpp:2:\n/tmp/tmpoe_yamqy.cpp:29:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpoe_yamqy.cpp:29:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpoe_yamqy.cpp:29:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpoe_yamqy.cpp:29:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed initiali"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (int i = 0; i < l.size(); i++) {\n        if (s.find(l[i]) != s.end())\
    \ {\n            return true;\n        }\n        s.insert(-l[i]);\n    }\n  \
    \  return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n \
    \   assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1vo_hl4a.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmp1vo_hl4a.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmp1vo_hl4a.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmp1vo_hl4a.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmp1vo_hl4a.cpp:19:13: error: 's' was not declared in this\
    \ scope\n         if (s.find(l[i]) != s.end()) {\n             ^\n/tmp/tmp1vo_hl4a.cpp:22:9:\
    \ error: 's' was not declared in this scope\n         s.insert(-l[i]);\n     \
    \    ^\n/tmp/tmp1vo_hl4a.cpp: In function 'int main()':\n/tmp/tmp1vo_hl4a.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1vo_hl4a.cpp:2:\n/tmp/tmp1vo_hl4a.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmp1vo_hl4a.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmp1vo_hl4a.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmp1vo_hl4a.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp1vo_hl4a.cpp:28:77:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-li"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (auto i : l) {\n        if (s.find(-i) != s.end()) {\n         \
    \   return true;\n        }\n        s.insert(i);\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl035dy7t.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpl035dy7t.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpl035dy7t.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpl035dy7t.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpl035dy7t.cpp:18:15: error: 'i' does not name a type\n\
    \     for (auto i : l) {\n               ^\n/tmp/tmpl035dy7t.cpp:24:5: error:\
    \ expected ';' before 'return'\n     return false;\n     ^\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpl035dy7t.cpp:24:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpl035dy7t.cpp: In function 'int main()':\n/tmp/tmpl035dy7t.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl035dy7t.cpp:2:\n/tmp/tmpl035dy7t.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpl035dy7t.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpl035dy7t.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpl035dy7t.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed ini"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // your code here\n\
    \    std::unordered_set<long> s;\n    for(long i=0;i<l.size();i++){\n        if(s.find(l[i])!=s.end()){\n\
    \            return true;\n        }\n        s.insert(-l[i]);\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9azq5j7m.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmp9azq5j7m.cpp:18:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmp9azq5j7m.cpp:18:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmp9azq5j7m.cpp:18:24: error: expected ';'\
    \ before 'long'\n/tmp/tmp9azq5j7m.cpp:20:12: error: 's' was not declared in this\
    \ scope\n         if(s.find(l[i])!=s.end()){\n            ^\n/tmp/tmp9azq5j7m.cpp:23:9:\
    \ error: 's' was not declared in this scope\n         s.insert(-l[i]);\n     \
    \    ^\n/tmp/tmp9azq5j7m.cpp: In function 'int main()':\n/tmp/tmp9azq5j7m.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = pairs_sum_to_zero;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9azq5j7m.cpp:2:\n/tmp/tmp9azq5j7m.cpp:29:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmp9azq5j7m.cpp:29:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmp9azq5j7m.cpp:29:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmp9azq5j7m.cpp:29:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp9azq5j7m.cpp:29:77:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    std::unordered_set<long>\
    \ s;\n    for (long i : l) {\n        if (s.find(-i) != s.end()) {\n         \
    \   return true;\n        }\n        s.insert(i);\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcwn4dulh.cpp: In function 'bool pairs_sum_to_zero(std::vector<long\
    \ int>)':\n/tmp/tmpcwn4dulh.cpp:17:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> s;\n     ^\n/tmp/tmpcwn4dulh.cpp:17:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ s;\n                        ^\n/tmp/tmpcwn4dulh.cpp:17:24: error: expected ';'\
    \ before 'long'\n/tmp/tmpcwn4dulh.cpp:18:19: error: range-based 'for' loops are\
    \ not allowed in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmpcwn4dulh.cpp:19:13:\
    \ error: 's' was not declared in this scope\n         if (s.find(-i) != s.end())\
    \ {\n             ^\n/tmp/tmpcwn4dulh.cpp:22:9: error: 's' was not declared in\
    \ this scope\n         s.insert(i);\n         ^\n/tmp/tmpcwn4dulh.cpp: In function\
    \ 'int main()':\n/tmp/tmpcwn4dulh.cpp:27:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = pairs_sum_to_zero;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcwn4dulh.cpp:2:\n/tmp/tmpcwn4dulh.cpp:28:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3, (long)5,\
    \ (long)0}))) == (false));\n                                        ^\n/tmp/tmpcwn4dulh.cpp:28:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n                                        \
    \                                     ^\n/tmp/tmpcwn4dulh.cpp:28:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n/tmp/tmpcwn4dulh.cpp:28:77: error: no matching function for call\
    \ to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpcwn4dulh.cpp:28:77:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/v"
  stdout: ''

language: cpp
name: HumanEval_161_solve
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    if(s.size() == 0) return s;\n    std::string res = \"\";\n    for(int i =\
    \ 0; i < s.size(); i++) {\n        if(s[i] >= 'a' && s[i] <= 'z') {\n        \
    \    res += toupper(s[i]);\n        } else if(s[i] >= 'A' && s[i] <= 'Z') {\n\
    \            res += tolower(s[i]);\n        } else {\n            res += s[i];\n\
    \        }\n    }\n    if(res == s) {\n        std::reverse(res.begin(), res.end());\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsr0x_nyi.cpp: In function 'int main()':\n/tmp/tmpsr0x_nyi.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsr0x_nyi.cpp:2:\n/tmp/tmpsr0x_nyi.cpp:34:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string result;\n    bool has_letter = false;\n    for (int i = 0; i\
    \ < s.size(); i++) {\n        if (isalpha(s[i])) {\n            has_letter = true;\n\
    \            if (isupper(s[i])) {\n                result += tolower(s[i]);\n\
    \            } else {\n                result += toupper(s[i]);\n            }\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (!has_letter)\
    \ {\n        std::reverse(result.begin(), result.end());\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprtan_akb.cpp: In function 'int main()':\n/tmp/tmprtan_akb.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprtan_akb.cpp:2:\n/tmp/tmprtan_akb.cpp:37:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string result;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (s[i] >= 'a' && s[i] <= 'z') {\n            result += toupper(s[i]);\n     \
    \   } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result\
    \ == s) {\n        std::reverse(result.begin(), result.end());\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvjyrcd7l.cpp: In function 'int main()':\n/tmp/tmpvjyrcd7l.cpp:32:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvjyrcd7l.cpp:2:\n/tmp/tmpvjyrcd7l.cpp:33:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    int i = 0;\n    while(i < s.size() && !isalpha(s[i])) i++;\n    if(i == s.size())\
    \ return std::string(s.rbegin(), s.rend());\n    for(int j = 0; j < s.size();\
    \ j++) {\n        if(isalpha(s[j])) {\n            if(isupper(s[j])) s[j] = tolower(s[j]);\n\
    \            else s[j] = toupper(s[j]);\n        }\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8ggzb_08.cpp: In function 'int main()':\n/tmp/tmp8ggzb_08.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8ggzb_08.cpp:2:\n/tmp/tmp8ggzb_08.cpp:29:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    int len = s.length();\n    if(len == 0) return s;\n    for(int i = 0; i <\
    \ len; i++) {\n        if(s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i]\
    \ - 'a' + 'A';\n        } else if(s[i] >= 'A' && s[i] <= 'Z') {\n            s[i]\
    \ = s[i] - 'A' + 'a';\n        }\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpqrbxwypm.cpp: In function 'int main()':\n/tmp/tmpqrbxwypm.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqrbxwypm.cpp:2:\n/tmp/tmpqrbxwypm.cpp:29:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    int count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            count++;\n            if(islower(s[i])) {\n                s[i]\
    \ = toupper(s[i]);\n            } else {\n                s[i] = tolower(s[i]);\n\
    \            }\n        }\n    }\n    if(count == 0) {\n        std::reverse(s.begin(),\
    \ s.end());\n    }\n    return s;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphiy6xym2.cpp: In function 'int main()':\n/tmp/tmphiy6xym2.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphiy6xym2.cpp:2:\n/tmp/tmphiy6xym2.cpp:34:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    int n = s.size();\n    if(n == 0) return \"\";\n    int i = 0;\n    while(i\
    \ < n && !isalpha(s[i])) i++;\n    if(i == n) return std::string(s.rbegin(), s.rend());\n\
    \    for(int j = i; j < n; j++) {\n        if(isalpha(s[j])) {\n            if(islower(s[j]))\
    \ s[j] = toupper(s[j]);\n            else s[j] = tolower(s[j]);\n        }\n \
    \   }\n    return s;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsepag6ly.cpp: In function 'int main()':\n/tmp/tmpsepag6ly.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsepag6ly.cpp:2:\n/tmp/tmpsepag6ly.cpp:31:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \  std::string result;\n  bool has_letter = false;\n  for (char c : s) {\n   \
    \ if (isalpha(c)) {\n      has_letter = true;\n      if (isupper(c)) {\n     \
    \   result += tolower(c);\n      } else {\n        result += toupper(c);\n   \
    \   }\n    } else {\n      result += c;\n    }\n  }\n  if (!has_letter) {\n  \
    \  std::reverse(result.begin(), result.end());\n  }\n  return result;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"\
    aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqya4qone.cpp: In function 'std::string solve(std::string)':\n/tmp/tmpqya4qone.cpp:18:17:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n   for (char c\
    \ : s) {\n                 ^\n/tmp/tmpqya4qone.cpp: In function 'int main()':\n\
    /tmp/tmpqya4qone.cpp:36:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = solve;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqya4qone.cpp:2:\n/tmp/tmpqya4qone.cpp:37:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    int n = s.size();\n    bool flag = true;\n    for(int i = 0; i < n; i++)\
    \ {\n        if(isalpha(s[i])) {\n            flag = false;\n            break;\n\
    \        }\n    }\n    if(flag) {\n        reverse(s.begin(), s.end());\n    \
    \    return s;\n    }\n    for(int i = 0; i < n; i++) {\n        if(isalpha(s[i]))\
    \ {\n            if(isupper(s[i])) {\n                s[i] = tolower(s[i]);\n\
    \            }\n            else {\n                s[i] = toupper(s[i]);\n  \
    \          }\n        }\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2tz5gwvu.cpp: In function 'int main()':\n/tmp/tmp2tz5gwvu.cpp:41:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2tz5gwvu.cpp:2:\n/tmp/tmp2tz5gwvu.cpp:42:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    int count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            count++;\n            if(isupper(s[i])) {\n                s[i]\
    \ = tolower(s[i]);\n            } else {\n                s[i] = toupper(s[i]);\n\
    \            }\n        }\n    }\n    if(count == 0) {\n        std::reverse(s.begin(),\
    \ s.end());\n    }\n    return s;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpoiqg1xx8.cpp: In function 'int main()':\n/tmp/tmpoiqg1xx8.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpoiqg1xx8.cpp:2:\n/tmp/tmpoiqg1xx8.cpp:34:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string result = \"\";\n    bool hasLetter = false;\n    for (int i =\
    \ 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n     \
    \       hasLetter = true;\n            result += s[i] - 32;\n        } else if\
    \ (s[i] >= 'A' && s[i] <= 'Z') {\n            hasLetter = true;\n            result\
    \ += s[i] + 32;\n        } else {\n            result += s[i];\n        }\n  \
    \  }\n    if (!hasLetter) {\n        std::reverse(result.begin(), result.end());\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = solve;\n   \
    \ assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpibahqb1m.cpp: In function 'int main()':\n/tmp/tmpibahqb1m.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpibahqb1m.cpp:2:\n/tmp/tmpibahqb1m.cpp:36:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    int n = s.size();\n    if(n == 0) return \"\";\n    for(int i = 0; i < n;\
    \ i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i])) s[i] = toupper(s[i]);\n\
    \            else s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkby0ca6_.cpp: In function 'int main()':\n/tmp/tmpkby0ca6_.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkby0ca6_.cpp:2:\n/tmp/tmpkby0ca6_.cpp:28:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    int flag = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            flag = 1;\n            if(islower(s[i])) {\n                s[i]\
    \ = toupper(s[i]);\n            } else {\n                s[i] = tolower(s[i]);\n\
    \            }\n        }\n    }\n    if(flag == 0) {\n        std::reverse(s.begin(),\
    \ s.end());\n    }\n    return s;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphaw5isko.cpp: In function 'int main()':\n/tmp/tmphaw5isko.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphaw5isko.cpp:2:\n/tmp/tmphaw5isko.cpp:34:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    int len = s.length();\n    int i = 0;\n    while(i < len && !isalpha(s[i]))\n\
    \        i++;\n    if(i == len)\n        reverse(s.begin(), s.end());\n    else{\n\
    \        for(int j = 0; j < len; j++){\n            if(isalpha(s[j])){\n     \
    \           if(islower(s[j]))\n                    s[j] = toupper(s[j]);\n   \
    \             else\n                    s[j] = tolower(s[j]);\n            }\n\
    \        }\n    }\n    return s;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpms8erjyw.cpp: In function 'int main()':\n/tmp/tmpms8erjyw.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpms8erjyw.cpp:2:\n/tmp/tmpms8erjyw.cpp:36:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string result;\n    bool is_letter = false;\n    for (int i = 0; i <\
    \ s.size(); i++) {\n        if (isalpha(s[i])) {\n            is_letter = true;\n\
    \            if (islower(s[i])) {\n                result += toupper(s[i]);\n\
    \            } else {\n                result += tolower(s[i]);\n            }\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (!is_letter)\
    \ {\n        std::reverse(result.begin(), result.end());\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy8uahwxg.cpp: In function 'int main()':\n/tmp/tmpy8uahwxg.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy8uahwxg.cpp:2:\n/tmp/tmpy8uahwxg.cpp:37:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    int len = s.length();\n    if(len == 0)\n        return s;\n    for(int i\
    \ = 0; i < len; i++) {\n        if(s[i] >= 'a' && s[i] <= 'z')\n            s[i]\
    \ = s[i] - 32;\n        else if(s[i] >= 'A' && s[i] <= 'Z')\n            s[i]\
    \ = s[i] + 32;\n    }\n    return s;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmph0v3f1j7.cpp: In function 'int main()':\n/tmp/tmph0v3f1j7.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0v3f1j7.cpp:2:\n/tmp/tmph0v3f1j7.cpp:29:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    if (s.size() == 0) return \"\";\n    std::string res = \"\";\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n   \
    \         res += toupper(s[i]);\n        } else if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n            res += tolower(s[i]);\n        } else {\n            res += s[i];\n\
    \        }\n    }\n    if (res == s) {\n        std::reverse(res.begin(), res.end());\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprihncqex.cpp: In function 'int main()':\n/tmp/tmprihncqex.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprihncqex.cpp:2:\n/tmp/tmprihncqex.cpp:34:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    int len = s.length();\n    if(len == 0) return s;\n    int i = 0;\n    while(i\
    \ < len && !isalpha(s[i])) i++;\n    if(i == len) return std::string(s.rbegin(),\
    \ s.rend());\n    for(int j = i; j < len; j++) {\n        if(isalpha(s[j])) {\n\
    \            if(islower(s[j])) s[j] = toupper(s[j]);\n            else s[j] =\
    \ tolower(s[j]);\n        }\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv9kyz4dp.cpp: In function 'int main()':\n/tmp/tmpv9kyz4dp.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv9kyz4dp.cpp:2:\n/tmp/tmpv9kyz4dp.cpp:31:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string result;\n    if (s.size() == 0) {\n        return result;\n \
    \   }\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i]\
    \ <= 'z') {\n            result += toupper(s[i]);\n        } else if (s[i] >=\
    \ 'A' && s[i] <= 'Z') {\n            result += tolower(s[i]);\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"\
    aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxg1empg5.cpp: In function 'int main()':\n/tmp/tmpxg1empg5.cpp:32:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxg1empg5.cpp:2:\n/tmp/tmpxg1empg5.cpp:33:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    int n = s.size();\n    if(n == 0) return \"\";\n    std::string ans = \"\"\
    ;\n    for(int i = 0; i < n; i++) {\n        if(s[i] >= 'a' && s[i] <= 'z') {\n\
    \            ans += s[i] - 'a' + 'A';\n        } else if(s[i] >= 'A' && s[i] <=\
    \ 'Z') {\n            ans += s[i] - 'A' + 'a';\n        } else {\n           \
    \ ans += s[i];\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwxgi89w_.cpp: In function 'int main()':\n/tmp/tmpwxgi89w_.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = solve;\n    \
    \      ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n       \
    \          from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwxgi89w_.cpp:2:\n/tmp/tmpwxgi89w_.cpp:32:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"AsDf\"\
    )) == (\"aSdF\"));\n                              ^\n"
  stdout: ''

language: cpp
name: HumanEval_42_incr_list
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpm16dmjdk.cpp: In function 'int main()':\n/tmp/tmpm16dmjdk.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm16dmjdk.cpp:2:\n/tmp/tmpm16dmjdk.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpm16dmjdk.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpm16dmjdk.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpm16dmjdk.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpm16dmjdk.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpm16dmjdk.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpm16dmjdk.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpm16dmjdk.cpp: In function 'int main()':\n/tmp/tmpm16dmjdk.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm16dmjdk.cpp:2:\n/tmp/tmpm16dmjdk.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpm16dmjdk.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpm16dmjdk.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpm16dmjdk.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpm16dmjdk.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpm16dmjdk.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpm16dmjdk.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpu04f5z14.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpu04f5z14.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpu04f5z14.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmpu04f5z14.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpu04f5z14.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpu04f5z14.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpu04f5z14.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpu04f5z14.cpp: In function 'int main()':\n/tmp/tmpu04f5z14.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpu04f5z14.cpp:2:\n/tmp/tmpu04f5z14.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpu04f5z14.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpu04f5z14.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpu04f5z14.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpu04f5z14.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpu04f5z14.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpu04f5z14.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpu04f5z14.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpu04f5z14.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmpu04f5z14.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpu04f5z14.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpu04f5z14.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpu04f5z14.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpu04f5z14.cpp: In function 'int main()':\n/tmp/tmpu04f5z14.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpu04f5z14.cpp:2:\n/tmp/tmpu04f5z14.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpu04f5z14.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpu04f5z14.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpu04f5z14.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpu04f5z14.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpu04f5z14.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto x : l) {\n        res.push_back(x +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprbfb0opm.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmprbfb0opm.cpp:10:15: error: 'x' does not name a type\n     for\
    \ (auto x : l) {\n               ^\n/tmp/tmprbfb0opm.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmprbfb0opm.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmprbfb0opm.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmprbfb0opm.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmprbfb0opm.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmprbfb0opm.cpp: In function 'int main()':\n/tmp/tmprbfb0opm.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmprbfb0opm.cpp:2:\n/tmp/tmprbfb0opm.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmprbfb0opm.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmprbfb0opm.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmprbfb0opm.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmprbfb0opm.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmprbfb0opm.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpro4uh78f.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpro4uh78f.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpro4uh78f.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpro4uh78f.cpp: In function 'int main()':\n/tmp/tmpro4uh78f.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpro4uh78f.cpp:2:\n/tmp/tmpro4uh78f.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpro4uh78f.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpro4uh78f.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpro4uh78f.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpro4uh78f.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpro4uh78f.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpro4uh78f.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpro4uh78f.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpro4uh78f.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpro4uh78f.cpp: In function 'int main()':\n/tmp/tmpro4uh78f.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpro4uh78f.cpp:2:\n/tmp/tmpro4uh78f.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpro4uh78f.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpro4uh78f.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpro4uh78f.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpro4uh78f.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpro4uh78f.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (auto i : l) {\n        result.push_back(i\
    \ + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp4sm6tn8y.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp4sm6tn8y.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp4sm6tn8y.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmp4sm6tn8y.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp4sm6tn8y.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp4sm6tn8y.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp4sm6tn8y.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp4sm6tn8y.cpp: In function 'int main()':\n/tmp/tmp4sm6tn8y.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4sm6tn8y.cpp:2:\n/tmp/tmp4sm6tn8y.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp4sm6tn8y.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp4sm6tn8y.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp4sm6tn8y.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp4sm6tn8y.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp4sm6tn8y.cpp:18:68: note: candidates"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpro4uh78f.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpro4uh78f.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpro4uh78f.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpro4uh78f.cpp: In function 'int main()':\n/tmp/tmpro4uh78f.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpro4uh78f.cpp:2:\n/tmp/tmpro4uh78f.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpro4uh78f.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpro4uh78f.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpro4uh78f.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpro4uh78f.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpro4uh78f.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpl96kslu4.cpp: In function 'int main()':\n/tmp/tmpl96kslu4.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl96kslu4.cpp:2:\n/tmp/tmpl96kslu4.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpl96kslu4.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpl96kslu4.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpl96kslu4.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpl96kslu4.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpl96kslu4.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpl96kslu4.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   ret.push_back(l[i] + 1);\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_8w8hfka.cpp: In function 'int main()':\n/tmp/tmp_8w8hfka.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_8w8hfka.cpp:2:\n/tmp/tmp_8w8hfka.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_8w8hfka.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_8w8hfka.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_8w8hfka.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_8w8hfka.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_8w8hfka.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_8w8hfka.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> out;\n    for (auto i : l) {\n        out.push_back(i +\
    \ 1);\n    }\n    return out;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxtysx7n3.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpxtysx7n3.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpxtysx7n3.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return out;\n     ^\n/tmp/tmpxtysx7n3.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpxtysx7n3.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpxtysx7n3.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpxtysx7n3.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpxtysx7n3.cpp: In function 'int main()':\n/tmp/tmpxtysx7n3.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpxtysx7n3.cpp:2:\n/tmp/tmpxtysx7n3.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpxtysx7n3.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpxtysx7n3.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpxtysx7n3.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpxtysx7n3.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpxtysx7n3.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpm16dmjdk.cpp: In function 'int main()':\n/tmp/tmpm16dmjdk.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm16dmjdk.cpp:2:\n/tmp/tmpm16dmjdk.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpm16dmjdk.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpm16dmjdk.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpm16dmjdk.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpm16dmjdk.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpm16dmjdk.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpm16dmjdk.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpro4uh78f.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpro4uh78f.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpro4uh78f.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpro4uh78f.cpp: In function 'int main()':\n/tmp/tmpro4uh78f.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpro4uh78f.cpp:2:\n/tmp/tmpro4uh78f.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpro4uh78f.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpro4uh78f.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpro4uh78f.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpro4uh78f.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpro4uh78f.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpu04f5z14.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpu04f5z14.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpu04f5z14.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmpu04f5z14.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpu04f5z14.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpu04f5z14.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpu04f5z14.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpu04f5z14.cpp: In function 'int main()':\n/tmp/tmpu04f5z14.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpu04f5z14.cpp:2:\n/tmp/tmpu04f5z14.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpu04f5z14.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpu04f5z14.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpu04f5z14.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpu04f5z14.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpu04f5z14.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpro4uh78f.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpro4uh78f.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpro4uh78f.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpro4uh78f.cpp: In function 'int main()':\n/tmp/tmpro4uh78f.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpro4uh78f.cpp:2:\n/tmp/tmpro4uh78f.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpro4uh78f.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpro4uh78f.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpro4uh78f.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpro4uh78f.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpro4uh78f.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto e : l) {\n        res.push_back(e +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpijf9ff2o.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpijf9ff2o.cpp:10:15: error: 'e' does not name a type\n     for\
    \ (auto e : l) {\n               ^\n/tmp/tmpijf9ff2o.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmpijf9ff2o.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpijf9ff2o.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpijf9ff2o.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpijf9ff2o.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpijf9ff2o.cpp: In function 'int main()':\n/tmp/tmpijf9ff2o.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpijf9ff2o.cpp:2:\n/tmp/tmpijf9ff2o.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpijf9ff2o.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpijf9ff2o.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpijf9ff2o.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpijf9ff2o.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpijf9ff2o.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto x : l) {\n        ret.push_back(x +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp6bvmnc6i.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp6bvmnc6i.cpp:10:15: error: 'x' does not name a type\n     for\
    \ (auto x : l) {\n               ^\n/tmp/tmp6bvmnc6i.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp6bvmnc6i.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp6bvmnc6i.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp6bvmnc6i.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp6bvmnc6i.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp6bvmnc6i.cpp: In function 'int main()':\n/tmp/tmp6bvmnc6i.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp6bvmnc6i.cpp:2:\n/tmp/tmp6bvmnc6i.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp6bvmnc6i.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp6bvmnc6i.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp6bvmnc6i.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp6bvmnc6i.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp6bvmnc6i.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpro4uh78f.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpro4uh78f.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpro4uh78f.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpro4uh78f.cpp: In function 'int main()':\n/tmp/tmpro4uh78f.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpro4uh78f.cpp:2:\n/tmp/tmpro4uh78f.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpro4uh78f.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpro4uh78f.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpro4uh78f.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpro4uh78f.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpro4uh78f.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpro4uh78f.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpro4uh78f.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpro4uh78f.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpro4uh78f.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpro4uh78f.cpp: In function 'int main()':\n/tmp/tmpro4uh78f.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpro4uh78f.cpp:2:\n/tmp/tmpro4uh78f.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpro4uh78f.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpro4uh78f.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpro4uh78f.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpro4uh78f.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpro4uh78f.cpp:18:68: note: candidates ar"
  stdout: ''

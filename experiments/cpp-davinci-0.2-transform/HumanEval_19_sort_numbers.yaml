name: HumanEval_19_sort_numbers
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
  \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
  \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
  \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers((\"\
  three one five\"))\n// (\"one three five\")\nstd::string sort_numbers(std::string\
  \ numbers) {\n"
tests: "}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
  \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
  three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
  \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
  six five four three two one zero\")) == (\"zero one two three four five six\"));\n\
  }\n"
completions: ["    std::vector<int> nums;\n    std::stringstream ss(numbers);\n  \
    \  std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\")\
    \ nums.push_back(0);\n        else if (temp == \"one\") nums.push_back(1);\n \
    \       else if (temp == \"two\") nums.push_back(2);\n        else if (temp ==\
    \ \"three\") nums.push_back(3);\n        else if (temp == \"four\") nums.push_back(4);\n\
    \        else if (temp == \"five\") nums.push_back(5);\n        else if (temp\
    \ == \"six\") nums.push_back(6);\n        else if (temp == \"seven\") nums.push_back(7);\n\
    \        else if (temp == \"eight\") nums.push_back(8);\n        else if (temp\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::stringstream ss2;\n    for (int i = 0; i < nums.size(); i++) {\n   \
    \     if (i != 0) ss2 << \" \";\n        if (nums[i] == 0) ss2 << \"zero\";\n\
    \        else if (nums[i] == 1) ss2 << \"one\";\n        else if (nums[i] == 2)\
    \ ss2 << \"two\";\n        else if (nums[i] == 3) ss2 << \"three\";\n        else\
    \ if (nums[i] == 4) ss2 << \"four\";\n        else if (nums[i] == 5) ss2 << \"\
    five\";\n        else if (nums[i] == 6) ss2 << \"six\";\n        else if (nums[i]\
    \ == 7) ss2 << \"seven\";\n        else if (nums[i] == 8) ss2 << \"eight\";\n\
    \        else if (nums[i] == 9) ss2 << \"nine\";\n    }\n    return ss2.str();",
  "    std::stringstream ss(numbers);\n    std::string word;\n    std::vector<int>\
    \ nums;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) {\n            result += \" \";\n        }\n   \
    \     if (nums[i] == 0) {\n            result += \"zero\";\n        } else if\
    \ (nums[i] == 1) {\n            result += \"one\";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two\";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three\";\n        } else if (nums[i] == 4) {\n      \
    \      result += \"four\";\n        } else if (nums[i] == 5) {\n            result\
    \ += \"five\";\n        } else if (nums[i] == 6) {\n            result += \"six\"\
    ;\n        } else if (nums[i] == 7) {\n            result += \"seven\";\n    \
    \    } else if", "    std::stringstream ss(numbers);\n    std::vector<int> v;\n\
    \    std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\")\
    \ {\n            v.push_back(0);\n        }\n        else if(temp == \"one\")\
    \ {\n            v.push_back(1);\n        }\n        else if(temp == \"two\")\
    \ {\n            v.push_back(2);\n        }\n        else if(temp == \"three\"\
    ) {\n            v.push_back(3);\n        }\n        else if(temp == \"four\"\
    ) {\n            v.push_back(4);\n        }\n        else if(temp == \"five\"\
    ) {\n            v.push_back(5);\n        }\n        else if(temp == \"six\")\
    \ {\n            v.push_back(6);\n        }\n        else if(temp == \"seven\"\
    ) {\n            v.push_back(7);\n        }\n        else if(temp == \"eight\"\
    ) {\n            v.push_back(8);\n        }\n        else if(temp == \"nine\"\
    ) {\n            v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string result;\n    for(int i = 0; i < v.size(); i++) {\n        if(v[i]\
    \ == 0) {\n            result += \"zero \";\n        }\n        else if(v[i] ==\
    \ 1) {\n            result += \"one \";\n        }\n        else if(v[i] == 2)\
    \ {\n            result += \"two \";\n        }\n        else if(v[i] == 3) {\n\
    \            result += \"three \";\n        }\n        else if(v[i] == 4) {\n\
    \            result += \"four \";\n        }\n        else if(v[i] == 5) {\n \
    \           result += \"five \";\n        }\n        else if(v[i] == 6) {\n  \
    \          result += \"six \";\n        }\n        else if(v[i] == 7) {\n    \
    \        result += \"seven \";\n        }\n        else", "    std::stringstream\
    \ ss(numbers);\n    std::vector<int> v;\n    std::string temp;\n    while(ss >>\
    \ temp) {\n        if(temp == \"zero\") {\n            v.push_back(0);\n     \
    \   }\n        else if(temp == \"one\") {\n            v.push_back(1);\n     \
    \   }\n        else if(temp == \"two\") {\n            v.push_back(2);\n     \
    \   }\n        else if(temp == \"three\") {\n            v.push_back(3);\n   \
    \     }\n        else if(temp == \"four\") {\n            v.push_back(4);\n  \
    \      }\n        else if(temp == \"five\") {\n            v.push_back(5);\n \
    \       }\n        else if(temp == \"six\") {\n            v.push_back(6);\n \
    \       }\n        else if(temp == \"seven\") {\n            v.push_back(7);\n\
    \        }\n        else if(temp == \"eight\") {\n            v.push_back(8);\n\
    \        }\n        else if(temp == \"nine\") {\n            v.push_back(9);\n\
    \        }\n    }\n    std::sort(v.begin(), v.end());\n    std::stringstream ss1;\n\
    \    for(int i = 0; i < v.size(); i++) {\n        if(v[i] == 0) {\n          \
    \  ss1 << \"zero \";\n        }\n        else if(v[i] == 1) {\n            ss1\
    \ << \"one \";\n        }\n        else if(v[i] == 2) {\n            ss1 << \"\
    two \";\n        }\n        else if(v[i] == 3) {\n            ss1 << \"three \"\
    ;\n        }\n        else if(v[i] == 4) {\n            ss1 << \"four \";\n  \
    \      }\n        else if(v[i] == 5) {\n            ss1 << \"five \";\n      \
    \  }\n        else if(v[i] == 6) {\n            ss1 << \"six \";\n        }\n\
    \        else if(v[i] == 7) {\n            ss1 <<", "    std::vector<int> nums;\n\
    \    std::stringstream ss(numbers);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"zero\") {\n            nums.push_back(0);\n       \
    \ } else if (word == \"one\") {\n            nums.push_back(1);\n        } else\
    \ if (word == \"two\") {\n            nums.push_back(2);\n        } else if (word\
    \ == \"three\") {\n            nums.push_back(3);\n        } else if (word ==\
    \ \"four\") {\n            nums.push_back(4);\n        } else if (word == \"five\"\
    ) {\n            nums.push_back(5);\n        } else if (word == \"six\") {\n \
    \           nums.push_back(6);\n        } else if (word == \"seven\") {\n    \
    \        nums.push_back(7);\n        } else if (word == \"eight\") {\n       \
    \     nums.push_back(8);\n        } else if (word == \"nine\") {\n           \
    \ nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  if (nums[i] == 0) {\n            result += \"zero \";\n        } else if (nums[i]\
    \ == 1) {\n            result += \"one \";\n        } else if (nums[i] == 2) {\n\
    \            result += \"two \";\n        } else if (nums[i] == 3) {\n       \
    \     result += \"three \";\n        } else if (nums[i] == 4) {\n            result\
    \ += \"four \";\n        } else if (nums[i] == 5) {\n            result += \"\
    five \";\n        } else if (nums[i] == 6) {\n            result += \"six \";\n\
    \        } else if (nums[i] == 7) {\n            result += \"seven \";\n     \
    \   } else if (nums[i] == 8) {\n", "    std::vector<int> nums;\n    std::stringstream\
    \ ss(numbers);\n    std::string word;\n    while (ss >> word) {\n        if (word\
    \ == \"zero\") nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n\
    \        else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (auto num : nums) {\n        if (num == 0) result\
    \ += \"zero \";\n        else if (num == 1) result += \"one \";\n        else\
    \ if (num == 2) result += \"two \";\n        else if (num == 3) result += \"three\
    \ \";\n        else if (num == 4) result += \"four \";\n        else if (num ==\
    \ 5) result += \"five \";\n        else if (num == 6) result += \"six \";\n  \
    \      else if (num == 7) result += \"seven \";\n        else if (num == 8) result\
    \ += \"eight \";\n        else if (num == 9) result += \"nine \";\n    }\n   \
    \ return result.substr(0, result.size() - 1);", "    std::stringstream ss(numbers);\n\
    \    std::string word;\n    std::vector<int> nums;\n    while (ss >> word) {\n\
    \        if (word == \"zero\") {\n            nums.push_back(0);\n        } else\
    \ if (word == \"one\") {\n            nums.push_back(1);\n        } else if (word\
    \ == \"two\") {\n            nums.push_back(2);\n        } else if (word == \"\
    three\") {\n            nums.push_back(3);\n        } else if (word == \"four\"\
    ) {\n            nums.push_back(4);\n        } else if (word == \"five\") {\n\
    \            nums.push_back(5);\n        } else if (word == \"six\") {\n     \
    \       nums.push_back(6);\n        } else if (word == \"seven\") {\n        \
    \    nums.push_back(7);\n        } else if (word == \"eight\") {\n           \
    \ nums.push_back(8);\n        } else if (word == \"nine\") {\n            nums.push_back(9);\n\
    \        }\n    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n\
    \    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] == 0) {\n  \
    \          result += \"zero \";\n        } else if (nums[i] == 1) {\n        \
    \    result += \"one \";\n        } else if (nums[i] == 2) {\n            result\
    \ += \"two \";\n        } else if (nums[i] == 3) {\n            result += \"three\
    \ \";\n        } else if (nums[i] == 4) {\n            result += \"four \";\n\
    \        } else if (nums[i] == 5) {\n            result += \"five \";\n      \
    \  } else if (nums[i] == 6) {\n            result += \"six \";\n        } else\
    \ if (nums[i] == 7) {\n            result += \"seven \";\n        } else if (nums[i]\
    \ == 8) {\n", "    std::stringstream ss(numbers);\n    std::string token;\n  \
    \  std::vector<int> v;\n    while(std::getline(ss, token, ' ')) {\n        if(token\
    \ == \"zero\") {\n            v.push_back(0);\n        } else if(token == \"one\"\
    ) {\n            v.push_back(1);\n        } else if(token == \"two\") {\n    \
    \        v.push_back(2);\n        } else if(token == \"three\") {\n          \
    \  v.push_back(3);\n        } else if(token == \"four\") {\n            v.push_back(4);\n\
    \        } else if(token == \"five\") {\n            v.push_back(5);\n       \
    \ } else if(token == \"six\") {\n            v.push_back(6);\n        } else if(token\
    \ == \"seven\") {\n            v.push_back(7);\n        } else if(token == \"\
    eight\") {\n            v.push_back(8);\n        } else if(token == \"nine\")\
    \ {\n            v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string result;\n    for(int i = 0; i < v.size(); i++) {\n        if(v[i]\
    \ == 0) {\n            result += \"zero \";\n        } else if(v[i] == 1) {\n\
    \            result += \"one \";\n        } else if(v[i] == 2) {\n           \
    \ result += \"two \";\n        } else if(v[i] == 3) {\n            result += \"\
    three \";\n        } else if(v[i] == 4) {\n            result += \"four \";\n\
    \        } else if(v[i] == 5) {\n            result += \"five \";\n        } else\
    \ if(v[i] == 6) {\n            result += \"six \";\n        } else if(v[i] ==\
    \ 7) {\n            result += \"seven \";\n        } else if(v[i] == 8) {\n  \
    \          result += \"eight \";\n        } else if(v[", "    std::vector<int>\
    \ vec;\n    std::stringstream ss(numbers);\n    std::string temp;\n    while (ss\
    \ >> temp) {\n        if (temp == \"zero\") {\n            vec.push_back(0);\n\
    \        } else if (temp == \"one\") {\n            vec.push_back(1);\n      \
    \  } else if (temp == \"two\") {\n            vec.push_back(2);\n        } else\
    \ if (temp == \"three\") {\n            vec.push_back(3);\n        } else if (temp\
    \ == \"four\") {\n            vec.push_back(4);\n        } else if (temp == \"\
    five\") {\n            vec.push_back(5);\n        } else if (temp == \"six\")\
    \ {\n            vec.push_back(6);\n        } else if (temp == \"seven\") {\n\
    \            vec.push_back(7);\n        } else if (temp == \"eight\") {\n    \
    \        vec.push_back(8);\n        } else if (temp == \"nine\") {\n         \
    \   vec.push_back(9);\n        }\n    }\n    std::sort(vec.begin(), vec.end());\n\
    \    std::string result;\n    for (int i = 0; i < vec.size(); i++) {\n       \
    \ if (vec[i] == 0) {\n            result += \"zero \";\n        } else if (vec[i]\
    \ == 1) {\n            result += \"one \";\n        } else if (vec[i] == 2) {\n\
    \            result += \"two \";\n        } else if (vec[i] == 3) {\n        \
    \    result += \"three \";\n        } else if (vec[i] == 4) {\n            result\
    \ += \"four \";\n        } else if (vec[i] == 5) {\n            result += \"five\
    \ \";\n        } else if (vec[i] == 6) {\n            result += \"six \";\n  \
    \      } else if (vec[i] == 7) {\n            result += \"seven \";\n        }\
    \ else if (vec[i] == 8) {\n            result += \"eight \";\n        } else if\
    \ (vec[i] == 9) {\n           ", "    std::stringstream ss(numbers);\n    std::vector<int>\
    \ v;\n    std::string word;\n    while (ss >> word) {\n        if (word == \"\
    zero\") {\n            v.push_back(0);\n        } else if (word == \"one\") {\n\
    \            v.push_back(1);\n        } else if (word == \"two\") {\n        \
    \    v.push_back(2);\n        } else if (word == \"three\") {\n            v.push_back(3);\n\
    \        } else if (word == \"four\") {\n            v.push_back(4);\n       \
    \ } else if (word == \"five\") {\n            v.push_back(5);\n        } else\
    \ if (word == \"six\") {\n            v.push_back(6);\n        } else if (word\
    \ == \"seven\") {\n            v.push_back(7);\n        } else if (word == \"\
    eight\") {\n            v.push_back(8);\n        } else if (word == \"nine\")\
    \ {\n            v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string result;\n    for (int i = 0; i < v.size(); i++) {\n        if\
    \ (v[i] == 0) {\n            result += \"zero \";\n        } else if (v[i] ==\
    \ 1) {\n            result += \"one \";\n        } else if (v[i] == 2) {\n   \
    \         result += \"two \";\n        } else if (v[i] == 3) {\n            result\
    \ += \"three \";\n        } else if (v[i] == 4) {\n            result += \"four\
    \ \";\n        } else if (v[i] == 5) {\n            result += \"five \";\n   \
    \     } else if (v[i] == 6) {\n            result += \"six \";\n        } else\
    \ if (v[i] == 7) {\n            result += \"seven \";\n        } else if (v[i]\
    \ == 8) {\n            result += \"eight \";\n        } else if (v[i] == 9) {\n\
    \           ", "    std::stringstream ss(numbers);\n    std::string word;\n  \
    \  std::vector<int> nums;\n    while (ss >> word) {\n        if (word == \"zero\"\
    ) nums.push_back(0);\n        else if (word == \"one\") nums.push_back(1);\n \
    \       else if (word == \"two\") nums.push_back(2);\n        else if (word ==\
    \ \"three\") nums.push_back(3);\n        else if (word == \"four\") nums.push_back(4);\n\
    \        else if (word == \"five\") nums.push_back(5);\n        else if (word\
    \ == \"six\") nums.push_back(6);\n        else if (word == \"seven\") nums.push_back(7);\n\
    \        else if (word == \"eight\") nums.push_back(8);\n        else if (word\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string res = \"\";\n    for (int i = 0; i < nums.size(); i++) {\n  \
    \      if (nums[i] == 0) res += \"zero \";\n        else if (nums[i] == 1) res\
    \ += \"one \";\n        else if (nums[i] == 2) res += \"two \";\n        else\
    \ if (nums[i] == 3) res += \"three \";\n        else if (nums[i] == 4) res +=\
    \ \"four \";\n        else if (nums[i] == 5) res += \"five \";\n        else if\
    \ (nums[i] == 6) res += \"six \";\n        else if (nums[i] == 7) res += \"seven\
    \ \";\n        else if (nums[i] == 8) res += \"eight \";\n        else if (nums[i]\
    \ == 9) res += \"nine \";\n    }\n    return res.substr(0, res.size() - 1);",
  "    std::vector<int> nums;\n    std::stringstream ss(numbers);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"zero\") {\n         \
    \   nums.push_back(0);\n        } else if (word == \"one\") {\n            nums.push_back(1);\n\
    \        } else if (word == \"two\") {\n            nums.push_back(2);\n     \
    \   } else if (word == \"three\") {\n            nums.push_back(3);\n        }\
    \ else if (word == \"four\") {\n            nums.push_back(4);\n        } else\
    \ if (word == \"five\") {\n            nums.push_back(5);\n        } else if (word\
    \ == \"six\") {\n            nums.push_back(6);\n        } else if (word == \"\
    seven\") {\n            nums.push_back(7);\n        } else if (word == \"eight\"\
    ) {\n            nums.push_back(8);\n        } else if (word == \"nine\") {\n\
    \            nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (nums[i] == 0) {\n            result += \"zero \";\n    \
    \    } else if (nums[i] == 1) {\n            result += \"one \";\n        } else\
    \ if (nums[i] == 2) {\n            result += \"two \";\n        } else if (nums[i]\
    \ == 3) {\n            result += \"three \";\n        } else if (nums[i] == 4)\
    \ {\n            result += \"four \";\n        } else if (nums[i] == 5) {\n  \
    \          result += \"five \";\n        } else if (nums[i] == 6) {\n        \
    \    result += \"six \";\n        } else if (nums[i] == 7) {\n            result\
    \ += \"seven \";\n        } else if (nums[i] == 8) {\n", "  std::stringstream\
    \ ss(numbers);\n  std::vector<int> nums;\n  std::string word;\n  while (ss >>\
    \ word) {\n    if (word == \"zero\") {\n      nums.push_back(0);\n    } else if\
    \ (word == \"one\") {\n      nums.push_back(1);\n    } else if (word == \"two\"\
    ) {\n      nums.push_back(2);\n    } else if (word == \"three\") {\n      nums.push_back(3);\n\
    \    } else if (word == \"four\") {\n      nums.push_back(4);\n    } else if (word\
    \ == \"five\") {\n      nums.push_back(5);\n    } else if (word == \"six\") {\n\
    \      nums.push_back(6);\n    } else if (word == \"seven\") {\n      nums.push_back(7);\n\
    \    } else if (word == \"eight\") {\n      nums.push_back(8);\n    } else if\
    \ (word == \"nine\") {\n      nums.push_back(9);\n    }\n  }\n  std::sort(nums.begin(),\
    \ nums.end());\n  std::string result = \"\";\n  for (int i = 0; i < nums.size();\
    \ i++) {\n    if (nums[i] == 0) {\n      result += \"zero \";\n    } else if (nums[i]\
    \ == 1) {\n      result += \"one \";\n    } else if (nums[i] == 2) {\n      result\
    \ += \"two \";\n    } else if (nums[i] == 3) {\n      result += \"three \";\n\
    \    } else if (nums[i] == 4) {\n      result += \"four \";\n    } else if (nums[i]\
    \ == 5) {\n      result += \"five \";\n    } else if (nums[i] == 6) {\n      result\
    \ += \"six \";\n    } else if (nums[i] == 7) {\n      result += \"seven \";\n\
    \    } else if (nums[i] == 8)", "    std::vector<int> nums;\n    std::stringstream\
    \ ss(numbers);\n    std::string token;\n    while(std::getline(ss, token, ' '))\
    \ {\n        if (token == \"zero\") nums.push_back(0);\n        else if (token\
    \ == \"one\") nums.push_back(1);\n        else if (token == \"two\") nums.push_back(2);\n\
    \        else if (token == \"three\") nums.push_back(3);\n        else if (token\
    \ == \"four\") nums.push_back(4);\n        else if (token == \"five\") nums.push_back(5);\n\
    \        else if (token == \"six\") nums.push_back(6);\n        else if (token\
    \ == \"seven\") nums.push_back(7);\n        else if (token == \"eight\") nums.push_back(8);\n\
    \        else if (token == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(),\
    \ nums.end());\n    std::string result;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (i != 0) result += \" \";\n        if (nums[i] == 0) result\
    \ += \"zero\";\n        else if (nums[i] == 1) result += \"one\";\n        else\
    \ if (nums[i] == 2) result += \"two\";\n        else if (nums[i] == 3) result\
    \ += \"three\";\n        else if (nums[i] == 4) result += \"four\";\n        else\
    \ if (nums[i] == 5) result += \"five\";\n        else if (nums[i] == 6) result\
    \ += \"six\";\n        else if (nums[i] == 7) result += \"seven\";\n        else\
    \ if (nums[i] == 8) result += \"eight\";\n        else if (nums[i] == 9) result\
    \ += \"nine\";\n    }\n    return result;", "    std::vector<int> nums;\n    std::stringstream\
    \ ss(numbers);\n    std::string token;\n    while(std::getline(ss, token, ' '))\
    \ {\n        if (token == \"zero\") {\n            nums.push_back(0);\n      \
    \  } else if (token == \"one\") {\n            nums.push_back(1);\n        } else\
    \ if (token == \"two\") {\n            nums.push_back(2);\n        } else if (token\
    \ == \"three\") {\n            nums.push_back(3);\n        } else if (token ==\
    \ \"four\") {\n            nums.push_back(4);\n        } else if (token == \"\
    five\") {\n            nums.push_back(5);\n        } else if (token == \"six\"\
    ) {\n            nums.push_back(6);\n        } else if (token == \"seven\") {\n\
    \            nums.push_back(7);\n        } else if (token == \"eight\") {\n  \
    \          nums.push_back(8);\n        } else if (token == \"nine\") {\n     \
    \       nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result = \"\";\n    for (int i = 0; i < nums.size(); i++) {\n\
    \        if (nums[i] == 0) {\n            result += \"zero \";\n        } else\
    \ if (nums[i] == 1) {\n            result += \"one \";\n        } else if (nums[i]\
    \ == 2) {\n            result += \"two \";\n        } else if (nums[i] == 3) {\n\
    \            result += \"three \";\n        } else if (nums[i] == 4) {\n     \
    \       result += \"four \";\n        } else if (nums[i] == 5) {\n           \
    \ result += \"five \";\n        } else if (nums[i] == 6) {\n            result\
    \ += \"six \";\n        } else if (nums[i] == 7) {\n            result += \"seven\
    \ \";\n        } else if (", "    std::stringstream ss(numbers);\n    std::vector<int>\
    \ v;\n    std::string word;\n    while (ss >> word) {\n        if (word == \"\
    zero\") {\n            v.push_back(0);\n        } else if (word == \"one\") {\n\
    \            v.push_back(1);\n        } else if (word == \"two\") {\n        \
    \    v.push_back(2);\n        } else if (word == \"three\") {\n            v.push_back(3);\n\
    \        } else if (word == \"four\") {\n            v.push_back(4);\n       \
    \ } else if (word == \"five\") {\n            v.push_back(5);\n        } else\
    \ if (word == \"six\") {\n            v.push_back(6);\n        } else if (word\
    \ == \"seven\") {\n            v.push_back(7);\n        } else if (word == \"\
    eight\") {\n            v.push_back(8);\n        } else if (word == \"nine\")\
    \ {\n            v.push_back(9);\n        }\n    }\n    std::sort(v.begin(), v.end());\n\
    \    std::string result;\n    for (int i = 0; i < v.size(); i++) {\n        if\
    \ (v[i] == 0) {\n            result += \"zero \";\n        } else if (v[i] ==\
    \ 1) {\n            result += \"one \";\n        } else if (v[i] == 2) {\n   \
    \         result += \"two \";\n        } else if (v[i] == 3) {\n            result\
    \ += \"three \";\n        } else if (v[i] == 4) {\n            result += \"four\
    \ \";\n        } else if (v[i] == 5) {\n            result += \"five \";\n   \
    \     } else if (v[i] == 6) {\n            result += \"six \";\n        } else\
    \ if (v[i] == 7) {\n            result += \"seven \";\n        } else if (v[i]\
    \ == 8) {\n            result += \"eight \";\n        } else if (v[i] == 9) {\n\
    \           ", "    std::stringstream ss(numbers);\n    std::vector<int> v;\n\
    \    std::string temp;\n    while(ss >> temp) {\n        if(temp == \"zero\")\
    \ v.push_back(0);\n        else if(temp == \"one\") v.push_back(1);\n        else\
    \ if(temp == \"two\") v.push_back(2);\n        else if(temp == \"three\") v.push_back(3);\n\
    \        else if(temp == \"four\") v.push_back(4);\n        else if(temp == \"\
    five\") v.push_back(5);\n        else if(temp == \"six\") v.push_back(6);\n  \
    \      else if(temp == \"seven\") v.push_back(7);\n        else if(temp == \"\
    eight\") v.push_back(8);\n        else if(temp == \"nine\") v.push_back(9);\n\
    \    }\n    std::sort(v.begin(), v.end());\n    std::string res;\n    for(int\
    \ i = 0; i < v.size(); i++) {\n        if(v[i] == 0) res += \"zero \";\n     \
    \   else if(v[i] == 1) res += \"one \";\n        else if(v[i] == 2) res += \"\
    two \";\n        else if(v[i] == 3) res += \"three \";\n        else if(v[i] ==\
    \ 4) res += \"four \";\n        else if(v[i] == 5) res += \"five \";\n       \
    \ else if(v[i] == 6) res += \"six \";\n        else if(v[i] == 7) res += \"seven\
    \ \";\n        else if(v[i] == 8) res += \"eight \";\n        else if(v[i] ==\
    \ 9) res += \"nine \";\n    }\n    return res;", "    std::vector<int> nums;\n\
    \    std::stringstream ss(numbers);\n    std::string word;\n    while (ss >> word)\
    \ {\n        if (word == \"zero\") {\n            nums.push_back(0);\n       \
    \ } else if (word == \"one\") {\n            nums.push_back(1);\n        } else\
    \ if (word == \"two\") {\n            nums.push_back(2);\n        } else if (word\
    \ == \"three\") {\n            nums.push_back(3);\n        } else if (word ==\
    \ \"four\") {\n            nums.push_back(4);\n        } else if (word == \"five\"\
    ) {\n            nums.push_back(5);\n        } else if (word == \"six\") {\n \
    \           nums.push_back(6);\n        } else if (word == \"seven\") {\n    \
    \        nums.push_back(7);\n        } else if (word == \"eight\") {\n       \
    \     nums.push_back(8);\n        } else if (word == \"nine\") {\n           \
    \ nums.push_back(9);\n        }\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  if (nums[i] == 0) {\n            result += \"zero \";\n        } else if (nums[i]\
    \ == 1) {\n            result += \"one \";\n        } else if (nums[i] == 2) {\n\
    \            result += \"two \";\n        } else if (nums[i] == 3) {\n       \
    \     result += \"three \";\n        } else if (nums[i] == 4) {\n            result\
    \ += \"four \";\n        } else if (nums[i] == 5) {\n            result += \"\
    five \";\n        } else if (nums[i] == 6) {\n            result += \"six \";\n\
    \        } else if (nums[i] == 7) {\n            result += \"seven \";\n     \
    \   } else if (nums[i] == 8) {\n", "    std::vector<int> nums;\n    std::stringstream\
    \ ss(numbers);\n    std::string word;\n    while (ss >> word) {\n        if (word\
    \ == \"zero\") {\n            nums.push_back(0);\n        } else if (word == \"\
    one\") {\n            nums.push_back(1);\n        } else if (word == \"two\")\
    \ {\n            nums.push_back(2);\n        } else if (word == \"three\") {\n\
    \            nums.push_back(3);\n        } else if (word == \"four\") {\n    \
    \        nums.push_back(4);\n        } else if (word == \"five\") {\n        \
    \    nums.push_back(5);\n        } else if (word == \"six\") {\n            nums.push_back(6);\n\
    \        } else if (word == \"seven\") {\n            nums.push_back(7);\n   \
    \     } else if (word == \"eight\") {\n            nums.push_back(8);\n      \
    \  } else if (word == \"nine\") {\n            nums.push_back(9);\n        }\n\
    \    }\n    std::sort(nums.begin(), nums.end());\n    std::string result;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] == 0) {\n    \
    \        result += \"zero \";\n        } else if (nums[i] == 1) {\n          \
    \  result += \"one \";\n        } else if (nums[i] == 2) {\n            result\
    \ += \"two \";\n        } else if (nums[i] == 3) {\n            result += \"three\
    \ \";\n        } else if (nums[i] == 4) {\n            result += \"four \";\n\
    \        } else if (nums[i] == 5) {\n            result += \"five \";\n      \
    \  } else if (nums[i] == 6) {\n            result += \"six \";\n        } else\
    \ if (nums[i] == 7) {\n            result += \"seven \";\n        } else if (nums[i]\
    \ == 8) {\n", "    std::vector<int> nums;\n    std::stringstream ss(numbers);\n\
    \    std::string temp;\n    while (ss >> temp) {\n        if (temp == \"zero\"\
    ) nums.push_back(0);\n        else if (temp == \"one\") nums.push_back(1);\n \
    \       else if (temp == \"two\") nums.push_back(2);\n        else if (temp ==\
    \ \"three\") nums.push_back(3);\n        else if (temp == \"four\") nums.push_back(4);\n\
    \        else if (temp == \"five\") nums.push_back(5);\n        else if (temp\
    \ == \"six\") nums.push_back(6);\n        else if (temp == \"seven\") nums.push_back(7);\n\
    \        else if (temp == \"eight\") nums.push_back(8);\n        else if (temp\
    \ == \"nine\") nums.push_back(9);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    std::string result;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  if (nums[i] == 0) result += \"zero \";\n        else if (nums[i] == 1) result\
    \ += \"one \";\n        else if (nums[i] == 2) result += \"two \";\n        else\
    \ if (nums[i] == 3) result += \"three \";\n        else if (nums[i] == 4) result\
    \ += \"four \";\n        else if (nums[i] == 5) result += \"five \";\n       \
    \ else if (nums[i] == 6) result += \"six \";\n        else if (nums[i] == 7) result\
    \ += \"seven \";\n        else if (nums[i] == 8) result += \"eight \";\n     \
    \   else if (nums[i] == 9) result += \"nine \";\n    }\n    return result;"]
stop_tokens:
- "\n}"

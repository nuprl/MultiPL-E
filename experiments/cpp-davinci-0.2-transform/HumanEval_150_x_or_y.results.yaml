language: cpp
name: HumanEval_150_x_or_y
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n%2 == 0) {\n    return y;\n  }\n  else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpescdm30e: /tmp/tmpescdm30e.cpp:21: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    long r = n % 6;\n    if (r == 1 || r == 5) {\n        return x;\n    } else\
    \ {\n        return y;\n    }\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp5477m0a9: /tmp/tmp5477m0a9.cpp:22: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return x;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp7jzdh8zl: /tmp/tmp7jzdh8zl.cpp:38: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp5wqdjudk: /tmp/tmp5wqdjudk.cpp:19: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 5) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n\
    \ == 11) {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n\
    \ == 17) {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n\
    \ == 23) {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n\
    \ == 31) {\n    return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n\
    \ == 41) {\n    return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n\
    \ == 47) {\n    return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n\
    \ == 59) {\n    return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n\
    \ == 67) {\n    return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n\
    \ == 73) {\n    return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n\
    \ == 83) {\n    return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n\
    \ == 97) {\n    return x;\n  }\n  if (n == 101) {\n    return y;\n  }\n  if (n\
    \ == 103) {\n    return x;\n  }\n  if (n == 107) {\n    return y;\n  }\n  if (n\
    \ == 109) {\n    return x;\n  }\n  if (n == 113) {\n    return y;\n  }\n \n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpo3knrqk4: /tmp/tmpo3knrqk4.cpp:105: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp3sxrg8ja: /tmp/tmp3sxrg8ja.cpp:38: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2 || n == 3 || n == 5 || n == 7) {\n        return x;\n    }\n \
    \   else {\n        return y;\n    }\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpwlkrjhq8: /tmp/tmpwlkrjhq8.cpp:23: int main(): Assertion `candidate((1259),
    (3), (52)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i <= sqrt(n); i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp2z3ou8n9: /tmp/tmp2z3ou8n9.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyzbbl5ja: /tmp/tmpyzbbl5ja.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i * i <= n; i++) {\n \
    \   if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i <= sqrt(n); i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvbyj7cxz: /tmp/tmpvbyj7cxz.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2)\n    return y;\n  for (long i = 2; i * i <= n; i++)\n    if (n %\
    \ i == 0)\n      return y;\n  return x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  long result;\n  if (n == 2) {\n    result = x;\n  } else {\n    result = y;\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyb720iak: /tmp/tmpyb720iak.cpp:21: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2 || n == 3 || n == 5 || n == 7) {\n        return x;\n    } else\
    \ {\n        return y;\n    }\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmprb0ntt3b: /tmp/tmprb0ntt3b.cpp:22: int main(): Assertion `candidate((1259),
    (3), (52)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \tif (n == 2 || n == 3 || n == 5 || n == 7) {\n\t\treturn x;\n\t}\n\telse {\n\t\
    \treturn y;\n\t}\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpmysw2sbn: /tmp/tmpmysw2sbn.cpp:23: int main(): Assertion `candidate((1259),
    (3), (52)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  long z;\n  if (n == 2) {\n    z = x;\n  } else {\n    z = y;\n  }\n  return\
    \ z;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpdt0fco08: /tmp/tmpdt0fco08.cpp:21: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmptirqc86l: /tmp/tmptirqc86l.cpp:19: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) return y;\n    for (long i = 2; i < n; i++) {\n        if (n\
    \ % i == 0) return y;\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyzbbl5ja: /tmp/tmpyzbbl5ja.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyzbbl5ja: /tmp/tmpyzbbl5ja.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 5) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n\
    \ == 11) {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n\
    \ == 17) {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n\
    \ == 23) {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n\
    \ == 31) {\n    return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n\
    \ == 41) {\n    return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n\
    \ == 47) {\n    return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n\
    \ == 59) {\n    return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n\
    \ == 67) {\n    return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n\
    \ == 73) {\n    return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n\
    \ == 83) {\n    return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n\
    \ == 97) {\n    return x;\n  }\n  if (n == 101) {\n    return y;\n  }\n  if (n\
    \ == 103) {\n    return x;\n  }\n  if (n == 107) {\n    return y;\n  }\n  if (n\
    \ == 109) {\n    return x;\n  }\n  if (n == 113) {\n    return y;\n  }\n \n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpo3knrqk4: /tmp/tmpo3knrqk4.cpp:105: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp3sxrg8ja: /tmp/tmp3sxrg8ja.cpp:38: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  long result = 0;\n  // Complete the function\n  // Replace the following line\
    \ with your code\n  if(n%2==0)\n  {\n      result=y;\n  }\n  else\n  {\n     \
    \ result=x;\n  }\n  return result;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpgwf0ar2a: /tmp/tmpgwf0ar2a.cpp:27: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2)\n        return x;\n    if (n % 2 == 0)\n        return y;\n\
    \    for (long i = 3; i * i <= n; i += 2)\n        if (n % i == 0)\n         \
    \   return y;\n    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmprpq4v857: /tmp/tmprpq4v857.cpp:30: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    } else {\n        return x;\n \
    \   }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpx4to50ku: /tmp/tmpx4to50ku.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  long\
    \ i = 2;\n  while (i < n) {\n    if (n % i == 0) {\n      return y;\n    }\n \
    \   i = i + 1;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2)\n        return x;\n    for (long i = 2; i < n; i++) {\n    \
    \    if (n % i == 0)\n            return y;\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmplty40atz: /tmp/tmplty40atz.cpp:29: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  long result = 0;\n  // Insert your code here\n  if(n == 2)\n    result = x;\n\
    \  else if(n%2 == 0)\n    result = y;\n  else{\n    for(int i = 3; i <= sqrt(n);\
    \ i+=2){\n      if(n%i == 0){\n        result = y;\n        break;\n      }\n\
    \    }\n    if(result == 0)\n      result = x;\n  }\n  return result;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqzce2gpu: /tmp/tmpqzce2gpu.cpp:39: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp3sxrg8ja: /tmp/tmp3sxrg8ja.cpp:38: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n <= 1)\n    return y;\n  if (n == 2)\n    return x;\n  if (n % 2 == 0)\n\
    \    return y;\n  for (long i = 3; i <= sqrt(n); i += 2) {\n    if (n % i == 0)\n\
    \      return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062249
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n == 3) {\n        return\
    \ x;\n    }\n    if (n == 5) {\n        return x;\n    }\n    if (n == 7) {\n\
    \        return x;\n    }\n    if (n == 11) {\n        return x;\n    }\n    if\
    \ (n == 13) {\n        return x;\n    }\n    if (n == 17) {\n        return x;\n\
    \    }\n    if (n == 19) {\n        return x;\n    }\n    if (n == 23) {\n   \
    \     return x;\n    }\n    if (n == 29) {\n        return x;\n    }\n    if (n\
    \ == 31) {\n        return x;\n    }\n    if (n == 37) {\n        return x;\n\
    \    }\n    if (n == 41) {\n        return x;\n    }\n    if (n == 43) {\n   \
    \     return x;\n    }\n    if (n == 47) {\n        return x;\n    }\n    if (n\
    \ == 53) {\n        return x;\n    }\n    if (n == 59) {\n        return x;\n\
    \    }\n    if (n == 61) {\n        return x;\n    }\n    if (n == 67) {\n   \
    \     return x;\n    }\n    if (n == 71) {\n        return x;\n    }\n    if (n\
    \ == 73) {\n        return x;\n    }\n    if (n == 79) {\n        return x;\n\
    \    }\n    if (n == 83) {\n        return x;\n    }\n    if (n == 89) {\n   \
    \     return x;\n    }\n    if (n == 97) {\n        return x;\n    }\n    if (n\
    \ == 101) {\n        return x;\n    }\n    if (n == 103) {\n        return x;\n\
    \    }\n    if (n == 107) {\n        return x;\n    }\n    if (n == 109) {\n \
    \       return x;\n    }\n    if (n == 113) {\n        return x;\n    }\n   \n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmplzrat969: /tmp/tmplzrat969.cpp:106: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp3sxrg8ja: /tmp/tmp3sxrg8ja.cpp:38: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 4) {\n    return x;\n  }\n  if (n == 5) {\n    return y;\n  }\n  if (n\
    \ == 6) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n ==\
    \ 8) {\n    return x;\n  }\n  if (n == 9) {\n    return y;\n  }\n  if (n == 10)\
    \ {\n    return x;\n  }\n  if (n == 11) {\n    return y;\n  }\n  if (n == 12)\
    \ {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n == 14)\
    \ {\n    return x;\n  }\n  if (n == 15) {\n    return y;\n  }\n  if (n == 16)\
    \ {\n    return x;\n  }\n  if (n == 17) {\n    return y;\n  }\n  if (n == 18)\
    \ {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n == 20)\
    \ {\n    return x;\n  }\n  if (n == 21) {\n    return y;\n  }\n  if (n == 22)\
    \ {\n    return x;\n  }\n  if (n == 23) {\n    return y;\n  }\n  if (n == 24)\
    \ {\n    return x;\n  }\n  if (n == 25) {\n    return y;\n  }\n  if (n == 26)\
    \ {\n    return x;\n  }\n  if (n == 27) {\n    return y;\n  }\n  if (n == 28)\
    \ {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n == 30)\
    \ {\n    return x;\n  }\n  if (n == 31) {\n    return y;\n  }\n \n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpizfz70s0: /tmp/tmpizfz70s0.cpp:105: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    }\n    else {\n        return x;\n\
    \    }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpnpb1onjt: /tmp/tmpnpb1onjt.cpp:21: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n%2==0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpkn1vexib: /tmp/tmpkn1vexib.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) return x;\n  if (n % 2 == 0) return y;\n  for (long i = 3; i *\
    \ i <= n; i += 2)\n    if (n % i == 0) return y;\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpkyr2p94u: /tmp/tmpkyr2p94u.cpp:27: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    } else {\n        return x;\n \
    \   }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpx4to50ku: /tmp/tmpx4to50ku.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2 || n == 3 || n == 5 || n == 7) return x;\n  if (n % 2 == 0 || n\
    \ % 3 == 0 || n % 5 == 0 || n % 7 == 0) return y;\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmptcjkkmv0: /tmp/tmptcjkkmv0.cpp:25: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n == 3) {\n        return\
    \ x;\n    }\n    if (n == 5) {\n        return x;\n    }\n    if (n == 7) {\n\
    \        return x;\n    }\n    if (n == 11) {\n        return x;\n    }\n    if\
    \ (n == 13) {\n        return x;\n    }\n    if (n == 17) {\n        return x;\n\
    \    }\n    if (n == 19) {\n        return x;\n    }\n    if (n == 23) {\n   \
    \     return x;\n    }\n    if (n == 29) {\n        return x;\n    }\n    if (n\
    \ == 31) {\n        return x;\n    }\n    if (n == 37) {\n        return x;\n\
    \    }\n    if (n == 41) {\n        return x;\n    }\n    if (n == 43) {\n   \
    \     return x;\n    }\n    if (n == 47) {\n        return x;\n    }\n    if (n\
    \ == 53) {\n        return x;\n    }\n    if (n == 59) {\n        return x;\n\
    \    }\n    if (n == 61) {\n        return x;\n    }\n    if (n == 67) {\n   \
    \     return x;\n    }\n    if (n == 71) {\n        return x;\n    }\n    if (n\
    \ == 73) {\n        return x;\n    }\n    if (n == 79) {\n        return x;\n\
    \    }\n    if (n == 83) {\n        return x;\n    }\n    if (n == 89) {\n   \
    \     return x;\n    }\n    if (n == 97) {\n        return x;\n    }\n    if (n\
    \ == 101) {\n        return x;\n    }\n    if (n == 103) {\n        return x;\n\
    \    }\n    if (n == 107) {\n        return x;\n    }\n    if (n == 109) {\n \
    \       return x;\n    }\n    if (n == 113) {\n        return x;\n    }\n   \n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmplzrat969: /tmp/tmplzrat969.cpp:106: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    } else {\n        return x;\n \
    \   }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpx4to50ku: /tmp/tmpx4to50ku.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmptirqc86l: /tmp/tmptirqc86l.cpp:19: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2)\n    return y;\n  for (long i = 2; i < n; i++)\n    if (n % i ==\
    \ 0)\n      return y;\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2)\n    return x;\n  else if (n % 2 == 0)\n    return y;\n  else {\n\
    \    for (long i = 3; i < n; i += 2) {\n      if (n % i == 0)\n        return\
    \ y;\n    }\n    return x;\n  }\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpxrbxaews: /tmp/tmpxrbxaews.cpp:33: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  } else if (n == 3) {\n    return y;\n  } else\
    \ if (n == 5) {\n    return x;\n  } else if (n == 7) {\n    return y;\n  } else\
    \ if (n == 11) {\n    return x;\n  } else if (n == 13) {\n    return y;\n  } else\
    \ if (n == 17) {\n    return x;\n  } else if (n == 19) {\n    return y;\n  } else\
    \ if (n == 23) {\n    return x;\n  } else if (n == 29) {\n    return y;\n  } else\
    \ if (n == 31) {\n    return x;\n  } else if (n == 37) {\n    return y;\n  } else\
    \ if (n == 41) {\n    return x;\n  } else if (n == 43) {\n    return y;\n  } else\
    \ if (n == 47) {\n    return x;\n  } else if (n == 53) {\n    return y;\n  } else\
    \ if (n == 59) {\n    return x;\n  } else if (n == 61) {\n    return y;\n  } else\
    \ if (n == 67) {\n    return x;\n  } else if (n == 71) {\n    return y;\n  } else\
    \ if (n == 73) {\n    return x;\n  } else if (n == 79) {\n    return y;\n  } else\
    \ if (n == 83) {\n    return x;\n  } else if (n == 89) {\n    return y;\n  } else\
    \ if (n == 97) {\n    return x;\n  } else if (n == 101) {\n    return y;\n  }\
    \ else if (n == 103) {\n    return x;\n  } else if (n == 107) {\n    return y;\n\
    \  } else if (n == 109) {\n    return x;\n  } else if (n == 113) {\n    return\
    \ y;\n  } else if (n == 127) {\n    return x;\n  } else if (n == 131) {\n    return\
    \ y;\n \n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzm9bg7fa.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpzm9bg7fa.cpp:77:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   77 | int main() {\n     \
    \ |            ^\n/tmp/tmpzm9bg7fa.cpp:89:1: error: expected \u2018}\u2019 at\
    \ end of input\n   89 | }\n      | ^\n/tmp/tmpzm9bg7fa.cpp:10:37: note: to match\
    \ this \u2018{\u2019\n   10 | long x_or_y(long n, long x, long y) {\n      | \
    \                                    ^\n/tmp/tmpzm9bg7fa.cpp:89:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   89 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660062249
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n <= 1) {\n        return y;\n    }\n    for (long i = 2; i < n; i++)\
    \ {\n        if (n % i == 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 5) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n\
    \ == 11) {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n\
    \ == 17) {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n\
    \ == 23) {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n\
    \ == 31) {\n    return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n\
    \ == 41) {\n    return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n\
    \ == 47) {\n    return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n\
    \ == 59) {\n    return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n\
    \ == 67) {\n    return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n\
    \ == 73) {\n    return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n\
    \ == 83) {\n    return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n\
    \ == 97) {\n    return x;\n  }\n  if (n == 101) {\n    return y;\n  }\n  if (n\
    \ == 103) {\n    return x;\n  }\n  if (n == 107) {\n    return y;\n  }\n  if (n\
    \ == 109) {\n    return x;\n  }\n  if (n == 113) {\n    return y;\n  }\n \n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpo3knrqk4: /tmp/tmpo3knrqk4.cpp:105: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  for\
    \ (long i = 2; i < n; i++) {\n    if (n % i == 0) {\n      return y;\n    }\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062249
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyzbbl5ja: /tmp/tmpyzbbl5ja.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n <= 1) {\n    return y;\n  }\n  long i = 2;\n  while (i < n) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n    i = i + 1;\n  }\n  return x;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  for (long i = 3; i * i <= n; i += 2) {\n\
    \    if (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpc945gjyn: /tmp/tmpc945gjyn.cpp:31: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n < 2) return y;\n    for (long i = 2; i < n; i++) {\n        if (n %\
    \ i == 0) return y;\n    }\n    return x;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyzbbl5ja: /tmp/tmpyzbbl5ja.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n == 3) {\n        return\
    \ x;\n    }\n    if (n == 5) {\n        return x;\n    }\n    if (n == 7) {\n\
    \        return x;\n    }\n    if (n == 11) {\n        return x;\n    }\n    if\
    \ (n == 13) {\n        return x;\n    }\n    if (n == 17) {\n        return x;\n\
    \    }\n    if (n == 19) {\n        return x;\n    }\n    if (n == 23) {\n   \
    \     return x;\n    }\n    if (n == 29) {\n        return x;\n    }\n    if (n\
    \ == 31) {\n        return x;\n    }\n    if (n == 37) {\n        return x;\n\
    \    }\n    if (n == 41) {\n        return x;\n    }\n    if (n == 43) {\n   \
    \     return x;\n    }\n    if (n == 47) {\n        return x;\n    }\n    if (n\
    \ == 53) {\n        return x;\n    }\n    if (n == 59) {\n        return x;\n\
    \    }\n    if (n == 61) {\n        return x;\n    }\n    if (n == 67) {\n   \
    \     return x;\n    }\n    if (n == 71) {\n        return x;\n    }\n    if (n\
    \ == 73) {\n        return x;\n    }\n    if (n == 79) {\n        return x;\n\
    \    }\n    if (n == 83) {\n        return x;\n    }\n    if (n == 89) {\n   \
    \     return x;\n    }\n    if (n == 97) {\n        return x;\n    }\n    if (n\
    \ == 101) {\n        return x;\n    }\n    if (n == 103) {\n        return x;\n\
    \    }\n    if (n == 107) {\n        return x;\n    }\n    if (n == 109) {\n \
    \       return x;\n    }\n    if (n == 113) {\n        return x;\n    }\n   \n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmplzrat969: /tmp/tmplzrat969.cpp:106: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  long result;\n  if (n == 2) {\n    result = x;\n  } else {\n    result = y;\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyb720iak: /tmp/tmpyb720iak.cpp:21: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  return (n % 2 == 0) ? y : x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp6fpy9khs: /tmp/tmp6fpy9khs.cpp:16: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  } else if (n == 3) {\n    return y;\n  } else\
    \ if (n % 2 == 0) {\n    return x;\n  } else if (n % 3 == 0) {\n    return y;\n\
    \  } else {\n    return x;\n  }\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpqzjrt2_8: /tmp/tmpqzjrt2_8.cpp:27: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i <= sqrt(n); i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp2z3ou8n9: /tmp/tmp2z3ou8n9.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyzbbl5ja: /tmp/tmpyzbbl5ja.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n <= 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyzbbl5ja: /tmp/tmpyzbbl5ja.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp3sxrg8ja: /tmp/tmp3sxrg8ja.cpp:38: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 5) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n\
    \ == 11) {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n\
    \ == 17) {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n\
    \ == 23) {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n\
    \ == 31) {\n    return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n\
    \ == 41) {\n    return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n\
    \ == 47) {\n    return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n\
    \ == 59) {\n    return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n\
    \ == 67) {\n    return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n\
    \ == 73) {\n    return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n\
    \ == 83) {\n    return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n\
    \ == 97) {\n    return x;\n  }\n  if (n == 101) {\n    return y;\n  }\n  if (n\
    \ == 103) {\n    return x;\n  }\n  if (n == 107) {\n    return y;\n  }\n  if (n\
    \ == 109) {\n    return x;\n  }\n  if (n == 113) {\n    return y;\n  }\n \n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpo3knrqk4: /tmp/tmpo3knrqk4.cpp:105: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  long result;\n  if (n < 2) {\n    result = y;\n  } else {\n    long i = 2;\n\
    \    while (i < n) {\n      if (n % i == 0) {\n        result = y;\n        break;\n\
    \      }\n      i = i + 1;\n    }\n    result = x;\n  }\n  return result;\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmph51y7vr0: /tmp/tmph51y7vr0.cpp:30: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  } else if (n % 2 == 0) {\n    return y;\n \
    \ } else {\n    long i = 3;\n    while (i * i <= n) {\n      if (n % i == 0) {\n\
    \        return y;\n      }\n      i = i + 2;\n    }\n    return x;\n  }\n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpdpl7jopv: /tmp/tmpdpl7jopv.cpp:36: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062250
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062251
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if(n < 2)\n        return y;\n    if(n == 2)\n        return x;\n    if(n\
    \ % 2 == 0)\n        return y;\n    for(long i = 3; i * i <= n; i += 2) {\n  \
    \      if(n % i == 0)\n            return y;\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    } else {\n        return x;\n \
    \   }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpx4to50ku: /tmp/tmpx4to50ku.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if(n<2) return y;\n  for(long i=2;i*i<=n;i++) {\n    if(n%i==0) return y;\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) return x;\n    if (n % 2 == 0) return y;\n    for (long i = 3;\
    \ i <= sqrt(n); i += 2) {\n        if (n % i == 0) return y;\n    }\n    return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp5ty9tndk: /tmp/tmp5ty9tndk.cpp:28: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i < n; i += 2) {\n        if (n % i == 0) {\n\
    \            return y;\n        }\n    }\n    return x;\n}\nint main() {\n   \
    \ auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpwwy7s_dg: /tmp/tmpwwy7s_dg.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) return y;\n  if (n % 2 == 0) return y;\n  for (long i = 3; i * i\
    \ <= n; i += 2) {\n    if (n % i == 0) return y;\n  }\n  return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmplpvzq22c: /tmp/tmplpvzq22c.cpp:29: int main(): Assertion `candidate((2),
    (2), (0)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyzbbl5ja: /tmp/tmpyzbbl5ja.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmptirqc86l: /tmp/tmptirqc86l.cpp:19: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  long result;\n  if (n == 2) {\n    result = x;\n  } else {\n    result = y;\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyb720iak: /tmp/tmpyb720iak.cpp:21: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if(n == 2) return x;\n  if(n == 3) return x;\n  if(n == 5) return x;\n  if(n\
    \ == 7) return x;\n  if(n == 11) return x;\n  if(n == 13) return x;\n  if(n ==\
    \ 17) return x;\n  if(n == 19) return x;\n  if(n == 23) return x;\n  if(n == 29)\
    \ return x;\n  if(n == 31) return x;\n  if(n == 37) return x;\n  if(n == 41) return\
    \ x;\n  if(n == 43) return x;\n  if(n == 47) return x;\n  if(n == 53) return x;\n\
    \  if(n == 59) return x;\n  if(n == 61) return x;\n  if(n == 67) return x;\n \
    \ if(n == 71) return x;\n  if(n == 73) return x;\n  if(n == 79) return x;\n  if(n\
    \ == 83) return x;\n  if(n == 89) return x;\n  if(n == 97) return x;\n  if(n ==\
    \ 101) return x;\n  if(n == 103) return x;\n  if(n == 107) return x;\n  if(n ==\
    \ 109) return x;\n  if(n == 113) return x;\n  if(n == 127) return x;\n  if(n ==\
    \ 131) return x;\n  if(n == 137) return x;\n  if(n == 139) return x;\n  if(n ==\
    \ 149) return x;\n  if(n == 151) return x;\n  if(n == 157) return x;\n  if(n ==\
    \ 163) return x;\n  if(n == 167) return x;\n  if(n == 173) return x;\n  if(n ==\
    \ 179) return x;\n  if(n == 181) return x;\n  if(n == 191) return x;\n  if(n ==\
    \ 193) return x;\n  if(n == 197) return x;\n  if(n == 199) return x;\n  if(n ==\n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptka0ldjr.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmptka0ldjr.cpp:58:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   58 | }\n      | ^\n/tmp/tmptka0ldjr.cpp:57:10:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   57 |   if(n ==\n\
    \      |     ~    ^\n      |          )\n   58 | }\n      | ~         \n/tmp/tmptka0ldjr.cpp:58:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   58 | }\n \
    \     | ^\n/tmp/tmptka0ldjr.cpp:58:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   58 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 5) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n\
    \ == 11) {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n\
    \ == 17) {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n\
    \ == 23) {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n\
    \ == 31) {\n    return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n\
    \ == 41) {\n    return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n\
    \ == 47) {\n    return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n\
    \ == 59) {\n    return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n\
    \ == 67) {\n    return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n\
    \ == 73) {\n    return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n\
    \ == 83) {\n    return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n\
    \ == 97) {\n    return x;\n  }\n  return y;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpnovh8dk6: /tmp/tmpnovh8dk6.cpp:90: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyzbbl5ja: /tmp/tmpyzbbl5ja.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) return y;\n  for (long i = 2; i*i <= n; i++) {\n    if (n % i ==\
    \ 0) return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  long z = 0;\n  if (n == 2) {\n    z = x;\n  } else {\n    if (n % 2 == 0) {\n\
    \      z = y;\n    } else {\n      long i = 3;\n      while (i * i <= n) {\n \
    \       if (n % i == 0) {\n          z = y;\n          break;\n        }\n   \
    \     i = i + 2;\n      }\n      if (i * i > n) {\n        z = x;\n      }\n \
    \   }\n  }\n  return z;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp2quyid80: /tmp/tmp2quyid80.cpp:43: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062250
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmptirqc86l: /tmp/tmptirqc86l.cpp:19: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    } else {\n        return x;\n \
    \   }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpx4to50ku: /tmp/tmpx4to50ku.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i <= sqrt(n); i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvbyj7cxz: /tmp/tmpvbyj7cxz.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    } else {\n        return x;\n \
    \   }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpx4to50ku: /tmp/tmpx4to50ku.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i <= sqrt(n); i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpvbyj7cxz: /tmp/tmpvbyj7cxz.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \tif (n % 2 == 0) {\n\t\treturn y;\n\t}\n\telse {\n\t\treturn x;\n\t}\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpoq_nyqc8: /tmp/tmpoq_nyqc8.cpp:21: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i < n; i += 2) {\n        if (n % i == 0) {\n\
    \            return y;\n        }\n    }\n    return x;\n}\nint main() {\n   \
    \ auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpwwy7s_dg: /tmp/tmpwwy7s_dg.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2 || n == 3 || n == 5 || n == 7) {\n        return x;\n    } else\
    \ {\n        return y;\n    }\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmprb0ntt3b: /tmp/tmprb0ntt3b.cpp:22: int main(): Assertion `candidate((1259),
    (3), (52)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2 || n == 3 || n == 5 || n == 7) {\n        return x;\n    } else\
    \ {\n        return y;\n    }\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmprb0ntt3b: /tmp/tmprb0ntt3b.cpp:22: int main(): Assertion `candidate((1259),
    (3), (52)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 5) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n\
    \ == 11) {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n\
    \ == 17) {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n\
    \ == 23) {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n\
    \ == 31) {\n    return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n\
    \ == 41) {\n    return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n\
    \ == 47) {\n    return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n\
    \ == 59) {\n    return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n\
    \ == 67) {\n    return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n\
    \ == 73) {\n    return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n\
    \ == 83) {\n    return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n\
    \ == 97) {\n    return x;\n  }\n  if (n == 101) {\n    return y;\n  }\n  if (n\
    \ == 103) {\n    return x;\n  }\n  if (n == 107) {\n    return y;\n  }\n  if (n\
    \ == 109) {\n    return x;\n  }\n  if (n == 113) {\n    return y;\n  }\n \n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpo3knrqk4: /tmp/tmpo3knrqk4.cpp:105: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  } else if (n % 2 == 0) {\n    return y;\n \
    \ } else {\n    for (long i = 3; i * i <= n; i += 2) {\n      if (n % i == 0)\
    \ {\n        return y;\n      }\n    }\n    return x;\n  }\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyrf4zzvv: /tmp/tmpyrf4zzvv.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp3sxrg8ja: /tmp/tmp3sxrg8ja.cpp:38: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmptirqc86l: /tmp/tmptirqc86l.cpp:19: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n == 3) {\n        return\
    \ x;\n    }\n    if (n == 5) {\n        return x;\n    }\n    if (n == 7) {\n\
    \        return x;\n    }\n    if (n == 11) {\n        return x;\n    }\n    if\
    \ (n == 13) {\n        return x;\n    }\n    if (n == 17) {\n        return x;\n\
    \    }\n    if (n == 19) {\n        return x;\n    }\n    if (n == 23) {\n   \
    \     return x;\n    }\n    if (n == 29) {\n        return x;\n    }\n    if (n\
    \ == 31) {\n        return x;\n    }\n    if (n == 37) {\n        return x;\n\
    \    }\n    if (n == 41) {\n        return x;\n    }\n    if (n == 43) {\n   \
    \     return x;\n    }\n    if (n == 47) {\n        return x;\n    }\n    if (n\
    \ == 53) {\n        return x;\n    }\n    if (n == 59) {\n        return x;\n\
    \    }\n    if (n == 61) {\n        return x;\n    }\n    if (n == 67) {\n   \
    \     return x;\n    }\n    if (n == 71) {\n        return x;\n    }\n    if (n\
    \ == 73) {\n        return x;\n    }\n    if (n == 79) {\n        return x;\n\
    \    }\n    if (n == 83) {\n        return x;\n    }\n    if (n == 89) {\n   \
    \     return x;\n    }\n    if (n == 97) {\n        return x;\n    }\n    if (n\
    \ == 101) {\n        return x;\n    }\n    if (n == 103) {\n        return x;\n\
    \    }\n    if (n == 107) {\n        return x;\n    }\n    if (n == 109) {\n \
    \       return x;\n    }\n    if (n == 113) {\n        return x;\n    }\n   \n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmplzrat969: /tmp/tmplzrat969.cpp:106: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2)\n    return y;\n  for (long i = 2; i * i <= n; i++)\n    if (n %\
    \ i == 0)\n      return y;\n  return x;\n}\nint main() {\n    auto candidate =\
    \ x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  for\
    \ (long i = 2; i < n; i++) {\n    if (n % i == 0) {\n      return y;\n    }\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062249
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n <= 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmptirqc86l: /tmp/tmptirqc86l.cpp:19: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2)\n    return y;\n  for (long i = 2; i < n; i++)\n    if (n % i ==\
    \ 0)\n      return y;\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n == 3) {\n        return\
    \ x;\n    }\n    if (n == 5) {\n        return x;\n    }\n    if (n == 7) {\n\
    \        return x;\n    }\n    if (n == 11) {\n        return x;\n    }\n    if\
    \ (n == 13) {\n        return x;\n    }\n    if (n == 17) {\n        return x;\n\
    \    }\n    if (n == 19) {\n        return x;\n    }\n    if (n == 23) {\n   \
    \     return x;\n    }\n    if (n == 29) {\n        return x;\n    }\n    if (n\
    \ == 31) {\n        return x;\n    }\n    if (n == 37) {\n        return x;\n\
    \    }\n    if (n == 41) {\n        return x;\n    }\n    if (n == 43) {\n   \
    \     return x;\n    }\n    if (n == 47) {\n        return x;\n    }\n    if (n\
    \ == 53) {\n        return x;\n    }\n    if (n == 59) {\n        return x;\n\
    \    }\n    if (n == 61) {\n        return x;\n    }\n    if (n == 67) {\n   \
    \     return x;\n    }\n    if (n == 71) {\n        return x;\n    }\n    if (n\
    \ == 73) {\n        return x;\n    }\n    if (n == 79) {\n        return x;\n\
    \    }\n    if (n == 83) {\n        return x;\n    }\n    if (n == 89) {\n   \
    \     return x;\n    }\n    if (n == 97) {\n        return x;\n    }\n    if (n\
    \ == 101) {\n        return x;\n    }\n    if (n == 103) {\n        return x;\n\
    \    }\n    if (n == 107) {\n        return x;\n    }\n    if (n == 109) {\n \
    \       return x;\n    }\n    if (n == 113) {\n        return x;\n    }\n   \n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmplzrat969: /tmp/tmplzrat969.cpp:106: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    long r = 0;\n    if (n == 2) {\n        r = x;\n    } else {\n        r =\
    \ y;\n    }\n    return r;\n}\nint main() {\n    auto candidate = x_or_y;\n  \
    \  assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp3l2q8oex: /tmp/tmp3l2q8oex.cpp:21: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyzbbl5ja: /tmp/tmpyzbbl5ja.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i < n; i += 2) {\n        if (n % i == 0) {\n\
    \            return y;\n        }\n    }\n    return x;\n}\nint main() {\n   \
    \ auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpwwy7s_dg: /tmp/tmpwwy7s_dg.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmptirqc86l: /tmp/tmptirqc86l.cpp:19: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  } else if (n % 2 == 0) {\n    return y;\n \
    \ } else {\n    for (long i = 3; i <= sqrt(n); i += 2) {\n      if (n % i == 0)\
    \ {\n        return y;\n      }\n    }\n    return x;\n  }\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpbq5homs6: /tmp/tmpbq5homs6.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyzbbl5ja: /tmp/tmpyzbbl5ja.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) {\n        return y;\n    }\n    for (long i = 2; i < n; i++)\
    \ {\n        if (n % i == 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 5) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n\
    \ == 11) {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n\
    \ == 17) {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n\
    \ == 23) {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n\
    \ == 31) {\n    return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n\
    \ == 41) {\n    return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n\
    \ == 47) {\n    return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n\
    \ == 59) {\n    return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n\
    \ == 67) {\n    return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n\
    \ == 73) {\n    return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n\
    \ == 83) {\n    return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n\
    \ == 97) {\n    return x;\n  }\n  if (n == 101) {\n    return y;\n  }\n  if (n\
    \ == 103) {\n    return x;\n  }\n  if (n == 107) {\n    return y;\n  }\n  if (n\
    \ == 109) {\n    return x;\n  }\n  if (n == 113) {\n    return y;\n  }\n \n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpo3knrqk4: /tmp/tmpo3knrqk4.cpp:105: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  if (n == 2) {\n    return x;\n  }\n  for\
    \ (long i = 2; i < n; i++) {\n    if (n % i == 0) {\n      return y;\n    }\n\
    \  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2 || n == 3 || n == 5 || n == 7) {\n    return x;\n  }\n  else {\n\
    \    return y;\n  }\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpsj4qg7ng: /tmp/tmpsj4qg7ng.cpp:23: int main(): Assertion `candidate((1259),
    (3), (52)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660062251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return x;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp7jzdh8zl: /tmp/tmp7jzdh8zl.cpp:38: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \tif (n == 2) {\n\t\treturn x;\n\t}\n\tif (n % 2 == 0) {\n\t\treturn y;\n\t}\n\
    \tfor (long i = 3; i < n; i += 2) {\n\t\tif (n % i == 0) {\n\t\t\treturn y;\n\t\
    \t}\n\t}\n\treturn x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpbkxwaxai: /tmp/tmpbkxwaxai.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i <= sqrt(n); i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp2z3ou8n9: /tmp/tmp2z3ou8n9.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 1) {\n        return y;\n    }\n    for (long i = 2; i < n; i++)\
    \ {\n        if (n % i == 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062250
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp3sxrg8ja: /tmp/tmp3sxrg8ja.cpp:38: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n % 2 == 0) {\n        return y;\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp5wqdjudk: /tmp/tmp5wqdjudk.cpp:19: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 5) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n\
    \ == 11) {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n\
    \ == 17) {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n\
    \ == 23) {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n\
    \ == 31) {\n    return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n\
    \ == 41) {\n    return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n\
    \ == 47) {\n    return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n\
    \ == 59) {\n    return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n\
    \ == 67) {\n    return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n\
    \ == 73) {\n    return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n\
    \ == 83) {\n    return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n\
    \ == 97) {\n    return x;\n  }\n  if (n == 101) {\n    return y;\n  }\n  if (n\
    \ == 103) {\n    return x;\n  }\n  if (n == 107) {\n    return y;\n  }\n  if (n\
    \ == 109) {\n    return x;\n  }\n  if (n == 113) {\n    return y;\n  }\n \n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpo3knrqk4: /tmp/tmpo3knrqk4.cpp:105: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    // TODO: your code here\n    if(n==1)\n        return y;\n    for(int i=2;i<=sqrt(n);i++)\n\
    \    {\n        if(n%i==0)\n            return y;\n    }\n    return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2)\n    return x;\n  else if (n % 2 == 0)\n    return y;\n  else {\n\
    \    for (long i = 3; i < n; i += 2) {\n      if (n % i == 0)\n        return\
    \ y;\n    }\n    return x;\n  }\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpxrbxaews: /tmp/tmpxrbxaews.cpp:33: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) return y;\n  for (long i = 2; i < n; i++) {\n    if (n % i == 0)\
    \ return y;\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  long r = 0;\n  if (n < 2) {\n    r = y;\n  } else {\n    long i = 2;\n    while\
    \ (i < n) {\n      if (n % i == 0) {\n        r = y;\n        break;\n      }\n\
    \      i = i + 1;\n    }\n    if (r == 0) {\n      r = x;\n    }\n  }\n  return\
    \ r;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i < n; i += 2) {\n    if (n % i == 0) {\n      return y;\n\
    \    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpymbv7jyq: /tmp/tmpymbv7jyq.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n % 2 == 0) {\n    return y;\n  }\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return\
    \ y;\n    }\n  }\n  return x;\n}\nint main() {\n    auto candidate = x_or_y;\n\
    \    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15), (8),\
    \ (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpolgfgzl5: /tmp/tmpolgfgzl5.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    long result = 0;\n    if (n == 2) {\n        result = x;\n    } else if (n\
    \ == 3) {\n        result = y;\n    } else if (n == 5) {\n        result = x;\n\
    \    } else if (n == 7) {\n        result = y;\n    } else if (n == 11) {\n  \
    \      result = x;\n    } else if (n == 13) {\n        result = y;\n    } else\
    \ if (n == 17) {\n        result = x;\n    } else if (n == 19) {\n        result\
    \ = y;\n    } else if (n == 23) {\n        result = x;\n    } else if (n == 29)\
    \ {\n        result = y;\n    } else if (n == 31) {\n        result = x;\n   \
    \ } else if (n == 37) {\n        result = y;\n    } else if (n == 41) {\n    \
    \    result = x;\n    } else if (n == 43) {\n        result = y;\n    } else if\
    \ (n == 47) {\n        result = x;\n    } else if (n == 53) {\n        result\
    \ = y;\n    } else if (n == 59) {\n        result = x;\n    } else if (n == 61)\
    \ {\n        result = y;\n    } else if (n == 67) {\n        result = x;\n   \
    \ } else if (n == 71) {\n        result = y;\n    } else if (n == 73) {\n    \
    \    result = x;\n    } else if (n == 79) {\n        result = y;\n    } else if\
    \ (n == 83) {\n        result = x;\n    } else if (n == 89) {\n        result\
    \ = y;\n    } else if (n == 97) {\n        result = x;\n    } else if (n == 101)\
    \ {\n        result = y;\n    } else if (n == 103) {\n        result = x;\n  \
    \  } else if (n == 107) {\n        result = y;\n    } else if (n == 109) {\n \
    \       result = x;\n    } else if (n == 113) {\n        result\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplho9ckf0.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplho9ckf0.cpp:71:15: error: expected \u2018;\u2019\
    \ before \u2018}\u2019 token\n   71 |         result\n      |               ^\n\
    \      |               ;\n   72 | }\n      | ~              \n/tmp/tmplho9ckf0.cpp:73:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   73 | int main() {\n      |            ^\n/tmp/tmplho9ckf0.cpp:85:1: error:\
    \ expected \u2018}\u2019 at end of input\n   85 | }\n      | ^\n/tmp/tmplho9ckf0.cpp:10:37:\
    \ note: to match this \u2018{\u2019\n   10 | long x_or_y(long n, long x, long\
    \ y) {\n      |                                     ^\n/tmp/tmplho9ckf0.cpp:85:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   85 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660062250
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp3sxrg8ja: /tmp/tmp3sxrg8ja.cpp:38: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 1) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062251
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n < 2) {\n        return y;\n    }\n    for (long i = 2; i < n; i++)\
    \ {\n        if (n % i == 0) {\n            return y;\n        }\n    }\n    return\
    \ x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 5) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n\
    \ == 11) {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n\
    \ == 17) {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n\
    \ == 23) {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n\
    \ == 31) {\n    return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n\
    \ == 41) {\n    return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n\
    \ == 47) {\n    return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n\
    \ == 59) {\n    return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n\
    \ == 67) {\n    return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n\
    \ == 73) {\n    return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n\
    \ == 83) {\n    return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n\
    \ == 97) {\n    return x;\n  }\n  if (n == 101) {\n    return y;\n  }\n  if (n\
    \ == 103) {\n    return x;\n  }\n  if (n == 107) {\n    return y;\n  }\n  if (n\
    \ == 109) {\n    return x;\n  }\n  if (n == 113) {\n    return y;\n  }\n \n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpo3knrqk4: /tmp/tmpo3knrqk4.cpp:105: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n < 2) {\n        return y;\n    }\n    for (long i = 2; i * i <= n;\
    \ i++) {\n        if (n % i == 0) {\n            return y;\n        }\n    }\n\
    \    return x;\n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  // TODO: implement this function\n  return 0;\n}\nint main() {\n    auto candidate\
    \ = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n    assert(candidate((15),\
    \ (8), (5)) == (5));\n    assert(candidate((3), (33), (5212)) == (33));\n    assert(candidate((1259),\
    \ (3), (52)) == (3));\n    assert(candidate((7919), (-1), (12)) == (-1));\n  \
    \  assert(candidate((3609), (1245), (583)) == (583));\n    assert(candidate((91),\
    \ (56), (129)) == (129));\n    assert(candidate((6), (34), (1234)) == (1234));\n\
    \    assert(candidate((1), (2), (0)) == (0));\n    assert(candidate((2), (2),\
    \ (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpzf3l6zrn: /tmp/tmpzf3l6zrn.cpp:16: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062251
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  } else if (n == 3) {\n    return y;\n  } else\
    \ if (n == 5) {\n    return x;\n  } else if (n == 7) {\n    return y;\n  } else\
    \ if (n == 11) {\n    return x;\n  } else if (n == 13) {\n    return y;\n  } else\
    \ if (n == 17) {\n    return x;\n  } else if (n == 19) {\n    return y;\n  } else\
    \ if (n == 23) {\n    return x;\n  } else if (n == 29) {\n    return y;\n  } else\
    \ if (n == 31) {\n    return x;\n  } else if (n == 37) {\n    return y;\n  } else\
    \ if (n == 41) {\n    return x;\n  } else if (n == 43) {\n    return y;\n  } else\
    \ if (n == 47) {\n    return x;\n  } else if (n == 53) {\n    return y;\n  } else\
    \ if (n == 59) {\n    return x;\n  } else if (n == 61) {\n    return y;\n  } else\
    \ if (n == 67) {\n    return x;\n  } else if (n == 71) {\n    return y;\n  } else\
    \ if (n == 73) {\n    return x;\n  } else if (n == 79) {\n    return y;\n  } else\
    \ if (n == 83) {\n    return x;\n  } else if (n == 89) {\n    return y;\n  } else\
    \ if (n == 97) {\n    return x;\n  } else if (n == 101) {\n    return y;\n  }\
    \ else if (n == 103) {\n    return x;\n  } else if (n == 107) {\n    return y;\n\
    \  } else if (n == 109) {\n    return x;\n  } else if (n == 113) {\n    return\
    \ y;\n  } else if (n == 127) {\n    return x;\n  } else if (n == 131) {\n    return\
    \ y;\n \n}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7),\
    \ (34), (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzm9bg7fa.cpp: In function \u2018long int x_or_y(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpzm9bg7fa.cpp:77:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   77 | int main() {\n     \
    \ |            ^\n/tmp/tmpzm9bg7fa.cpp:89:1: error: expected \u2018}\u2019 at\
    \ end of input\n   89 | }\n      | ^\n/tmp/tmpzm9bg7fa.cpp:10:37: note: to match\
    \ this \u2018{\u2019\n   10 | long x_or_y(long n, long x, long y) {\n      | \
    \                                    ^\n/tmp/tmpzm9bg7fa.cpp:89:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   89 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660062249
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n == 5) {\n    return x;\n  }\n  if (n == 7) {\n    return y;\n  }\n  if (n\
    \ == 11) {\n    return x;\n  }\n  if (n == 13) {\n    return y;\n  }\n  if (n\
    \ == 17) {\n    return x;\n  }\n  if (n == 19) {\n    return y;\n  }\n  if (n\
    \ == 23) {\n    return x;\n  }\n  if (n == 29) {\n    return y;\n  }\n  if (n\
    \ == 31) {\n    return x;\n  }\n  if (n == 37) {\n    return y;\n  }\n  if (n\
    \ == 41) {\n    return x;\n  }\n  if (n == 43) {\n    return y;\n  }\n  if (n\
    \ == 47) {\n    return x;\n  }\n  if (n == 53) {\n    return y;\n  }\n  if (n\
    \ == 59) {\n    return x;\n  }\n  if (n == 61) {\n    return y;\n  }\n  if (n\
    \ == 67) {\n    return x;\n  }\n  if (n == 71) {\n    return y;\n  }\n  if (n\
    \ == 73) {\n    return x;\n  }\n  if (n == 79) {\n    return y;\n  }\n  if (n\
    \ == 83) {\n    return x;\n  }\n  if (n == 89) {\n    return y;\n  }\n  if (n\
    \ == 97) {\n    return x;\n  }\n  if (n == 101) {\n    return y;\n  }\n  if (n\
    \ == 103) {\n    return x;\n  }\n  if (n == 107) {\n    return y;\n  }\n  if (n\
    \ == 109) {\n    return x;\n  }\n  if (n == 113) {\n    return y;\n  }\n \n}\n\
    int main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpo3knrqk4: /tmp/tmpo3knrqk4.cpp:105: int main(): Assertion `candidate((7),
    (34), (12)) == (34)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    long i = 3;\n    while (i * i <= n) {\n        if (n % i == 0)\
    \ {\n            return y;\n        }\n        i += 2;\n    }\n    return x;\n\
    }\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
    \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpn1pdmsol: /tmp/tmpn1pdmsol.cpp:36: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062251
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n == 2) {\n    return x;\n  }\n  if (n == 3) {\n    return y;\n  }\n  if\
    \ (n % 2 == 0) {\n    return y;\n  }\n  if (n % 3 == 0) {\n    return y;\n  }\n\
    \  long i = 5;\n  long w = 2;\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      return y;\n    }\n    i += w;\n    w = 6 - w;\n  }\n  return x;\n}\nint\
    \ main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12))\
    \ == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
    \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n\
    \    assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
    \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
    \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
    \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmp3sxrg8ja: /tmp/tmp3sxrg8ja.cpp:38: int main(): Assertion `candidate((3),
    (33), (5212)) == (33)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n < 2) {\n    return y;\n  }\n  for (long i = 2; i < n; i++) {\n    if\
    \ (n % i == 0) {\n      return y;\n    }\n  }\n  return x;\n}\nint main() {\n\
    \    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \    if (n == 2) {\n        return x;\n    }\n    if (n % 2 == 0) {\n        return\
    \ y;\n    }\n    for (long i = 3; i * i <= n; i += 2) {\n        if (n % i ==\
    \ 0) {\n            return y;\n        }\n    }\n    return x;\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpyzbbl5ja: /tmp/tmpyzbbl5ja.cpp:34: int main(): Assertion `candidate((1),
    (2), (0)) == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660062248
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which\
    \ should return the value of x if n is \n// a prime number and should return the\
    \ value of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n\
    // >>> x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n\
    \  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\nint main()\
    \ {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34), (12)) == (34));\n\
    \    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3), (33),\
    \ (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n    assert(candidate((7919),\
    \ (-1), (12)) == (-1));\n    assert(candidate((3609), (1245), (583)) == (583));\n\
    \    assert(candidate((91), (56), (129)) == (129));\n    assert(candidate((6),\
    \ (34), (1234)) == (1234));\n    assert(candidate((1), (2), (0)) == (0));\n  \
    \  assert(candidate((2), (2), (0)) == (2));\n}\n"
  status: Exception
  stderr: 'tmpa10pyu23: /tmp/tmpa10pyu23.cpp:20: int main(): Assertion `candidate((15),
    (8), (5)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660062248

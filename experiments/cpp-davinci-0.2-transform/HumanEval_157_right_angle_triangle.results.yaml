language: cpp
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use Printf\n    // Example:\
    \ Printf(\"%s = %d\", \"a\", a);\n    if(a>b && a>c)\n    {\n        if(a*a ==\
    \ b*b + c*c)\n            return true;\n        else\n            return false;\n\
    \    }\n    else if(b>a && b>c)\n    {\n        if(b*b == a*a + c*c)\n       \
    \     return true;\n        else\n            return false;\n    }\n    else if(c>a\
    \ && c>b)\n    {\n        if(c*c == a*a + b*b)\n            return true;\n   \
    \     else\n            return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw6_5s91c.cpp: In function 'int main()':\n/tmp/tmpw6_5s91c.cpp:39:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpw6_5s91c.cpp:2:\n/tmp/tmpw6_5s91c.cpp:40:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\"\n    long max = std::max(a, std::max(b, c));\n    long\
    \ min = std::min(a, std::min(b, c));\n    long mid = a + b + c - max - min;\n\
    \    if (max * max == mid * mid + min * min)\n        return true;\n    else\n\
    \        return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprn3f1g1c.cpp: In function 'int main()':\n/tmp/tmprn3f1g1c.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprn3f1g1c.cpp:2:\n/tmp/tmprn3f1g1c.cpp:26:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    if(a*a + b*b == c*c)\n        return\
    \ true;\n    if(a*a + c*c == b*b)\n        return true;\n    if(b*b + c*c == a*a)\n\
    \        return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2js_hvm1.cpp: In function 'int main()':\n/tmp/tmp2js_hvm1.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2js_hvm1.cpp:2:\n/tmp/tmp2js_hvm1.cpp:26:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    long max = std::max(a, std::max(b, c));\n\
    \    long min = std::min(a, std::min(b, c));\n    long mid = a + b + c - max -\
    \ min;\n    return max * max == min * min + mid * mid;\n}\nint main() {\n    auto\
    \ candidate = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n\
    \    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwhazge00.cpp: In function 'int main()':\n/tmp/tmpwhazge00.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwhazge00.cpp:2:\n/tmp/tmpwhazge00.cpp:23:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    if (a == 0 || b == 0\
    \ || c == 0) {\n        return false;\n    }\n    if (a == b && b == c) {\n  \
    \      return false;\n    }\n    long max = std::max(a, std::max(b, c));\n   \
    \ long min = std::min(a, std::min(b, c));\n    long mid = a + b + c - max - min;\n\
    \    if (max * max == min * min + mid * mid) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpclztl51u.cpp: In function 'int main()':\n/tmp/tmpclztl51u.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpclztl51u.cpp:2:\n/tmp/tmpclztl51u.cpp:29:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // TODO: Write your code\
    \ here\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2rvwaawg.cpp: In function 'int main()':\n/tmp/tmp2rvwaawg.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2rvwaawg.cpp:2:\n/tmp/tmp2rvwaawg.cpp:18:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use Printf\n    // Example:\
    \ Printf(\"%s = %s\\n\", \"My variable\", my_variable);\n    if(a==0 || b==0 ||\
    \ c==0)\n        return false;\n    if(a*a + b*b == c*c)\n        return true;\n\
    \    if(a*a + c*c == b*b)\n        return true;\n    if(b*b + c*c == a*a)\n  \
    \      return true;\n    return false;\n}\nint main() {\n    auto candidate =\
    \ right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n   \
    \ assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjb7ksmte.cpp: In function 'int main()':\n/tmp/tmpjb7ksmte.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjb7ksmte.cpp:2:\n/tmp/tmpjb7ksmte.cpp:28:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    if(a*a + b*b == c*c)\n\
    \        return true;\n    else if(a*a + c*c == b*b)\n        return true;\n \
    \   else if(b*b + c*c == a*a)\n        return true;\n    else\n        return\
    \ false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbl0d10mt.cpp: In function 'int main()':\n/tmp/tmpbl0d10mt.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbl0d10mt.cpp:2:\n/tmp/tmpbl0d10mt.cpp:24:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use Printf\n    // Example:\
    \ Printf(\"%s = %d\", \"a\", a);\n    long x = a*a;\n    long y = b*b;\n    long\
    \ z = c*c;\n    if(x+y==z || x+z==y || y+z==x)\n        return true;\n    else\n\
    \        return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpge7_kplk.cpp: In function 'int main()':\n/tmp/tmpge7_kplk.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpge7_kplk.cpp:2:\n/tmp/tmpge7_kplk.cpp:26:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    if (a*a + b*b == c*c || a*a + c*c ==\
    \ b*b || b*b + c*c == a*a)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_3tdkfwl.cpp: In function 'int main()':\n/tmp/tmp_3tdkfwl.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_3tdkfwl.cpp:2:\n/tmp/tmp_3tdkfwl.cpp:22:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use Printf\n    // Example:\
    \ Printf(\"%s = %d\", \"a\", a);\n    long x = a*a;\n    long y = b*b;\n    long\
    \ z = c*c;\n    if(x+y==z || x+z==y || y+z==x)\n        return true;\n    else\n\
    \        return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpge7_kplk.cpp: In function 'int main()':\n/tmp/tmpge7_kplk.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpge7_kplk.cpp:2:\n/tmp/tmpge7_kplk.cpp:26:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use Printf\n    // Example:\
    \ Printf(\"%s = %s\\n\", \"My variable\", my_var);\n    // long a = 3, b = 4,\
    \ c = 5;\n    if(a > b && a > c)\n    {\n        if(a*a == b*b + c*c)\n      \
    \      return true;\n        else\n            return false;\n    }\n    else\
    \ if(b > a && b > c)\n    {\n        if(b*b == a*a + c*c)\n            return\
    \ true;\n        else\n            return false;\n    }\n    else if(c > a &&\
    \ c > b)\n    {\n        if(c*c == a*a + b*b)\n            return true;\n    \
    \    else\n            return false;\n    }\n    else\n        return false;\n\
    }\nint main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphw1rf4do.cpp: In function 'int main()':\n/tmp/tmphw1rf4do.cpp:42:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphw1rf4do.cpp:2:\n/tmp/tmphw1rf4do.cpp:43:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    if(a*a + b*b == c*c || a*a + c*c == b*b\
    \ || b*b + c*c == a*a)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3djmlidn.cpp: In function 'int main()':\n/tmp/tmp3djmlidn.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3djmlidn.cpp:2:\n/tmp/tmp3djmlidn.cpp:22:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    if(a*a + b*b == c*c)\n        return\
    \ true;\n    else if(a*a + c*c == b*b)\n        return true;\n    else if(b*b\
    \ + c*c == a*a)\n        return true;\n    else\n        return false;\n}\nint\
    \ main() {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3),\
    \ (4), (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n  \
    \  assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2), (2),\
    \ (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10),\
    \ (5), (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n\
    \    assert(candidate((15), (8), (17)) == (true));\n    assert(candidate((48),\
    \ (55), (73)) == (true));\n    assert(candidate((1), (1), (1)) == (false));\n\
    \    assert(candidate((2), (2), (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpggfiy6hd.cpp: In function 'int main()':\n/tmp/tmpggfiy6hd.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpggfiy6hd.cpp:2:\n/tmp/tmpggfiy6hd.cpp:27:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use Printf\n    // Example:\
    \ Printf(\"%s\\n\", \"Hello world!\");\n    long max = std::max(a, std::max(b,\
    \ c));\n    long min = std::min(a, std::min(b, c));\n    long mid = a + b + c\
    \ - max - min;\n    if (max * max == min * min + mid * mid) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmplgz72ixh.cpp: In function 'int main()':\n/tmp/tmplgz72ixh.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplgz72ixh.cpp:2:\n/tmp/tmplgz72ixh.cpp:26:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use printf()\n    // Example:\
    \ printf(\"%s\", \"Hello world!\");\n    if(a*a + b*b == c*c || a*a + c*c == b*b\
    \ || b*b + c*c == a*a)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3djmlidn.cpp: In function 'int main()':\n/tmp/tmp3djmlidn.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3djmlidn.cpp:2:\n/tmp/tmp3djmlidn.cpp:22:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use Printf()\n    // Example:\
    \ Printf(\"%s\", \"Hello world!\");\n    if(a*a + b*b == c*c || b*b + c*c == a*a\
    \ || a*a + c*c == b*b)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = right_angle_triangle;\n    assert(candidate((3), (4),\
    \ (5)) == (true));\n    assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10),\
    \ (6), (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n  \
    \  assert(candidate((7), (24), (25)) == (true));\n    assert(candidate((10), (5),\
    \ (7)) == (false));\n    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjzyll2gx.cpp: In function 'int main()':\n/tmp/tmpjzyll2gx.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjzyll2gx.cpp:2:\n/tmp/tmpjzyll2gx.cpp:22:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\"\n    long max, min1, min2;\n    if(a > b && a > c) {\n\
    \        max = a;\n        min1 = b;\n        min2 = c;\n    }\n    else if(b\
    \ > a && b > c) {\n        max = b;\n        min1 = a;\n        min2 = c;\n  \
    \  }\n    else {\n        max = c;\n        min1 = a;\n        min2 = b;\n   \
    \ }\n    if(max * max == min1 * min1 + min2 * min2)\n        return true;\n  \
    \  return false;\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_9ayvkiq.cpp: In function 'int main()':\n/tmp/tmp_9ayvkiq.cpp:37:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_9ayvkiq.cpp:2:\n/tmp/tmp_9ayvkiq.cpp:38:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    if (a == 0 || b == 0\
    \ || c == 0) {\n        return false;\n    }\n    std::vector<long> sides = {a,\
    \ b, c};\n    std::sort(sides.begin(), sides.end());\n    return (sides[0] * sides[0]\
    \ + sides[1] * sides[1]) == sides[2] * sides[2];\n}\nint main() {\n    auto candidate\
    \ = right_angle_triangle;\n    assert(candidate((3), (4), (5)) == (true));\n \
    \   assert(candidate((1), (2), (3)) == (false));\n    assert(candidate((10), (6),\
    \ (8)) == (true));\n    assert(candidate((2), (2), (2)) == (false));\n    assert(candidate((7),\
    \ (24), (25)) == (true));\n    assert(candidate((10), (5), (7)) == (false));\n\
    \    assert(candidate((5), (12), (13)) == (true));\n    assert(candidate((15),\
    \ (8), (17)) == (true));\n    assert(candidate((48), (55), (73)) == (true));\n\
    \    assert(candidate((1), (1), (1)) == (false));\n    assert(candidate((2), (2),\
    \ (10)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi6f8suiz.cpp: In function 'bool right_angle_triangle(long int,\
    \ long int, long int)':\n/tmp/tmpi6f8suiz.cpp:16:39: error: in C++98 'sides' must\
    \ be initialized by constructor, not by '{...}'\n     std::vector<long> sides\
    \ = {a, b, c};\n                                       ^\n/tmp/tmpi6f8suiz.cpp:16:39:\
    \ error: could not convert '{a, b, c}' from '<brace-enclosed initializer list>'\
    \ to 'std::vector<long int>'\n/tmp/tmpi6f8suiz.cpp: In function 'int main()':\n\
    /tmp/tmpi6f8suiz.cpp:21:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = right_angle_triangle;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi6f8suiz.cpp:2:\n/tmp/tmpi6f8suiz.cpp:22:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n// sides form a right-angled\
    \ triangle, False otherwise.\n// A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n// 90 degree.\n// Example:\n// >>> right_angle_triangle((3),\
    \ (4), (5))\n// (true)\n// >>> right_angle_triangle((1), (2), (3))\n// (false)\n\
    bool right_angle_triangle(long a, long b, long c) {\n    long sides[3] = {a, b,\
    \ c};\n    std::sort(sides, sides + 3);\n    return sides[0] * sides[0] + sides[1]\
    \ * sides[1] == sides[2] * sides[2];\n}\nint main() {\n    auto candidate = right_angle_triangle;\n\
    \    assert(candidate((3), (4), (5)) == (true));\n    assert(candidate((1), (2),\
    \ (3)) == (false));\n    assert(candidate((10), (6), (8)) == (true));\n    assert(candidate((2),\
    \ (2), (2)) == (false));\n    assert(candidate((7), (24), (25)) == (true));\n\
    \    assert(candidate((10), (5), (7)) == (false));\n    assert(candidate((5),\
    \ (12), (13)) == (true));\n    assert(candidate((15), (8), (17)) == (true));\n\
    \    assert(candidate((48), (55), (73)) == (true));\n    assert(candidate((1),\
    \ (1), (1)) == (false));\n    assert(candidate((2), (2), (10)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpi2ju6kqn.cpp: In function 'int main()':\n/tmp/tmpi2ju6kqn.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = right_angle_triangle;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi2ju6kqn.cpp:2:\n/tmp/tmpi2ju6kqn.cpp:19:35: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((3), (4),\
    \ (5)) == (true));\n                                   ^\n"
  stdout: ''

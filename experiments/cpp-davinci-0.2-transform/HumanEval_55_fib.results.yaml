language: cpp
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ else if (n == 1) {\n        return 1;\n    }\n    else {\n        return fib(n\
    \ - 1) + fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n   \
    \ return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n < 2) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0 || n == 1) {\n        return n;\n\
    \    }\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n < 2) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0)\n        return 0;\n    if (n ==\
    \ 1)\n        return 1;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0)\n        return 0;\n    if (n ==\
    \ 1)\n        return 1;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n == 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1)\
    \ {\n\t\treturn 1;\n\t}\n\treturn fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n < 2) {\n        return n;\n    }\n    return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a = 0;\n  long b = 1;\n  long i = 0;\n  while\
    \ (i < n) {\n    long c = a + b;\n    a = b;\n    b = c;\n    i = i + 1;\n  }\n\
    \  return a;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long a = 0;\n    long b = 1;\n    long c = 0;\n\
    \    if (n == 0) {\n        return a;\n    }\n    if (n == 1) {\n        return\
    \ b;\n    }\n    for (long i = 2; i <= n; i++) {\n        c = a + b;\n       \
    \ a = b;\n        b = c;\n    }\n    return c;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a = 0;\n  long b = 1;\n  long c = 0;\n  long\
    \ i = 0;\n  while (i < n) {\n    c = a + b;\n    a = b;\n    b = c;\n    i = i\
    \ + 1;\n  }\n  return a;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a = 0;\n  long b = 1;\n  long c = 0;\n  long\
    \ i = 0;\n  while (i < n) {\n    c = a + b;\n    a = b;\n    b = c;\n    i = i\
    \ + 1;\n  }\n  return c;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: Exception
  stderr: 'tmpoju5fuop: /tmp/tmpoju5fuop.cpp:25: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0)\n        return 0;\n    if (n ==\
    \ 1)\n        return 1;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n < 2) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n < 2) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n == 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1)\
    \ {\n\t\treturn 1;\n\t}\n\treturn fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n <= 1) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n < 2)\n    return n;\n  else\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n < 2) {\n        return n;\n    }\n    return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) return 0;\n  if (n == 1) return 1;\n\
    \  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ else if (n == 1) {\n        return 1;\n    }\n    else {\n        return fib(n\
    \ - 1) + fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n   \
    \ return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063658
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063659

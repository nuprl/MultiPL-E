language: cpp
name: HumanEval_97_multiply
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a % 10) * (b % 10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpui0lodk0: /tmp/tmpui0lodk0.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    // your code here\n    long result = 0;\n    if(a < 0)\n        a = -a;\n\
    \    if(b < 0)\n        b = -b;\n    result = (a % 10) * (b % 10);\n    return\
    \ result;\n}\nint main() {\n    auto candidate = multiply;\n    assert(candidate((148),\
    \ (412)) == (16));\n    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020),\
    \ (1851)) == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a % 10) * (b % 10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpui0lodk0: /tmp/tmpui0lodk0.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n  \
    \  assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpusq2ggld: /tmp/tmpusq2ggld.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    int a1 = a % 10;\n    int b1 = b % 10;\n    return a1 * b1;\n}\nint main()\
    \ {\n    auto candidate = multiply;\n    assert(candidate((148), (412)) == (16));\n\
    \    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020), (1851))\
    \ == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp8pyb8ds0: /tmp/tmp8pyb8ds0.cpp:25: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    int a1 = a%10;\n    int b1 = b%10;\n    return a1*b1;\n}\nint main() {\n\
    \    auto candidate = multiply;\n    assert(candidate((148), (412)) == (16));\n\
    \    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020), (1851))\
    \ == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp3mm46c7q: /tmp/tmp3mm46c7q.cpp:25: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10) * (b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpaakof9ss: /tmp/tmpaakof9ss.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10) * (b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpaakof9ss: /tmp/tmpaakof9ss.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n  \
    \  assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpusq2ggld: /tmp/tmpusq2ggld.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a % 10) * (b % 10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpyu3m89m8: /tmp/tmpyu3m89m8.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n  \
    \  assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpusq2ggld: /tmp/tmpusq2ggld.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    int a1 = a % 10;\n    int b1 = b % 10;\n    return a1 * b1;\n}\nint main()\
    \ {\n    auto candidate = multiply;\n    assert(candidate((148), (412)) == (16));\n\
    \    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020), (1851))\
    \ == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp8pyb8ds0: /tmp/tmp8pyb8ds0.cpp:25: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n  \
    \  assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpusq2ggld: /tmp/tmpusq2ggld.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    std::stringstream ss;\n    ss << a << b;\n    std::string s = ss.str();\n\
    \    std::stringstream ss2;\n    ss2 << s[s.size() - 1] << s[s.size() - 2];\n\
    \    int result;\n    ss2 >> result;\n    return result;\n}\nint main() {\n  \
    \  auto candidate = multiply;\n    assert(candidate((148), (412)) == (16));\n\
    \    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020), (1851))\
    \ == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp47o4_eek: /tmp/tmp47o4_eek.cpp:27: int main(): Assertion `candidate((148),
    (412)) == (16)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    int x = a%10;\n    int y = b%10;\n    return x*y;\n}\nint main() {\n    auto\
    \ candidate = multiply;\n    assert(candidate((148), (412)) == (16));\n    assert(candidate((19),\
    \ (28)) == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpxynjt1lo: /tmp/tmpxynjt1lo.cpp:25: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a % 10) * (b % 10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpui0lodk0: /tmp/tmpui0lodk0.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    int a1 = a % 10;\n    int b1 = b % 10;\n    return a1 * b1;\n}\nint main()\
    \ {\n    auto candidate = multiply;\n    assert(candidate((148), (412)) == (16));\n\
    \    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020), (1851))\
    \ == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp8pyb8ds0: /tmp/tmp8pyb8ds0.cpp:25: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n  \
    \  assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpusq2ggld: /tmp/tmpusq2ggld.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a % 10) * (b % 10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpui0lodk0: /tmp/tmpui0lodk0.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n  \
    \  assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpusq2ggld: /tmp/tmpusq2ggld.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n  \
    \  assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpusq2ggld: /tmp/tmpusq2ggld.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n  \
    \  assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpusq2ggld: /tmp/tmpusq2ggld.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    long result = 0;\n    if (a < 0) {\n        a = -a;\n    }\n    if (b < 0)\
    \ {\n        b = -b;\n    }\n    result = (a % 10) * (b % 10);\n    return result;\n\
    }\nint main() {\n    auto candidate = multiply;\n    assert(candidate((148), (412))\
    \ == (16));\n    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020),\
    \ (1851)) == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    int a_unit = a % 10;\n    int b_unit = b % 10;\n    return a_unit * b_unit;\n\
    }\nint main() {\n    auto candidate = multiply;\n    assert(candidate((148), (412))\
    \ == (16));\n    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020),\
    \ (1851)) == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmphs49bd_b: /tmp/tmphs49bd_b.cpp:25: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a % 10) * (b % 10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpui0lodk0: /tmp/tmpui0lodk0.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    long result = (a % 10) * (b % 10);\n    return result;\n}\nint main() {\n\
    \    auto candidate = multiply;\n    assert(candidate((148), (412)) == (16));\n\
    \    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020), (1851))\
    \ == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpij4neusr: /tmp/tmpij4neusr.cpp:24: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a % 10) * (b % 10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpyu3m89m8: /tmp/tmpyu3m89m8.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    long product = 1;\n    while(a > 0) {\n        product *= a % 10;\n     \
    \   a /= 10;\n    }\n    while(b > 0) {\n        product *= b % 10;\n        b\
    \ /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpvyu2d53l: /tmp/tmpvyu2d53l.cpp:29: int main(): Assertion `candidate((148),
    (412)) == (16)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    // your code here\n    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate\
    \ = multiply;\n    assert(candidate((148), (412)) == (16));\n    assert(candidate((19),\
    \ (28)) == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpwbipiian: /tmp/tmpwbipiian.cpp:24: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10) * (b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpaakof9ss: /tmp/tmpaakof9ss.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    int a1 = a % 10;\n    int b1 = b % 10;\n    return a1 * b1;\n}\nint main()\
    \ {\n    auto candidate = multiply;\n    assert(candidate((148), (412)) == (16));\n\
    \    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020), (1851))\
    \ == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp8pyb8ds0: /tmp/tmp8pyb8ds0.cpp:25: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return abs(a%10 * b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpwec_zpb8: /tmp/tmpwec_zpb8.cpp:20: int main(): Assertion `candidate((148),
    (412)) == (16)'' failed.

    '
  stdout: ''
  timestamp: 1660064960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a % 10) * (b % 10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpui0lodk0: /tmp/tmpui0lodk0.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    long product = 0;\n    if (a < 0) {\n        a = -a;\n    }\n    if (b <\
    \ 0) {\n        b = -b;\n    }\n    product = a % 10 * b % 10;\n    return product;\n\
    }\nint main() {\n    auto candidate = multiply;\n    assert(candidate((148), (412))\
    \ == (16));\n    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020),\
    \ (1851)) == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpp9gjlths: /tmp/tmpp9gjlths.cpp:28: int main(): Assertion `candidate((148),
    (412)) == (16)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a % 10) * (b % 10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpyu3m89m8: /tmp/tmpyu3m89m8.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    int x = a % 10;\n    int y = b % 10;\n    return x * y;\n}\nint main() {\n\
    \    auto candidate = multiply;\n    assert(candidate((148), (412)) == (16));\n\
    \    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020), (1851))\
    \ == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpuszb7x09: /tmp/tmpuszb7x09.cpp:25: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    long result = 0;\n    int a_unit_digit = a % 10;\n    int b_unit_digit =\
    \ b % 10;\n    result = a_unit_digit * b_unit_digit;\n    return result;\n}\n\
    int main() {\n    auto candidate = multiply;\n    assert(candidate((148), (412))\
    \ == (16));\n    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020),\
    \ (1851)) == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjz7_83to: /tmp/tmpjz7_83to.cpp:27: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n  \
    \  assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpusq2ggld: /tmp/tmpusq2ggld.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    long product = 0;\n    long x = a % 10;\n    long y = b % 10;\n    product\
    \ = x * y;\n    return product;\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp_7cj49v3: /tmp/tmp_7cj49v3.cpp:27: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (abs(a) % 10) * (abs(b) % 10);\n}\nint main() {\n    auto candidate\
    \ = multiply;\n    assert(candidate((148), (412)) == (16));\n    assert(candidate((19),\
    \ (28)) == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n  \
    \  assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpusq2ggld: /tmp/tmpusq2ggld.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    long c = a % 10;\n    long d = b % 10;\n    return c * d;\n}\nint main()\
    \ {\n    auto candidate = multiply;\n    assert(candidate((148), (412)) == (16));\n\
    \    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020), (1851))\
    \ == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
    \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
    \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpvkxoiv87: /tmp/tmpvkxoiv87.cpp:25: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10) * (b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpaakof9ss: /tmp/tmpaakof9ss.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \  long result = 0;\n  if(a < 0)\n    a = -a;\n  if(b < 0)\n    b = -b;\n  result\
    \ = (a % 10) * (b % 10);\n  return result;\n}\nint main() {\n    auto candidate\
    \ = multiply;\n    assert(candidate((148), (412)) == (16));\n    assert(candidate((19),\
    \ (28)) == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function\
    \ that takes two integers and returns \n// the product of their unit digits.\n\
    // Assume the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n\
    // (16)\n// >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n\
    // (0)\n// >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n\
    \    return (a%10)*(b%10);\n}\nint main() {\n    auto candidate = multiply;\n\
    \    assert(candidate((148), (412)) == (16));\n    assert(candidate((19), (28))\
    \ == (72));\n    assert(candidate((2020), (1851)) == (0));\n    assert(candidate((14),\
    \ (-15)) == (20));\n    assert(candidate((76), (67)) == (42));\n    assert(candidate((17),\
    \ (27)) == (49));\n    assert(candidate((0), (1)) == (0));\n    assert(candidate((0),\
    \ (0)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr6nau34: /tmp/tmpjr6nau34.cpp:23: int main(): Assertion `candidate((14),
    (-15)) == (20)'' failed.

    '
  stdout: ''
  timestamp: 1660064959

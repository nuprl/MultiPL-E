name: HumanEval_108_count_nums
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function count_nums\
  \ which takes an array of integers and returns\n// the number of elements which\
  \ has a sum of digits > 0.\n// If a number is negative, then its first signed digit\
  \ will be negative:\n// e.g. -123 has signed digits -1, 2, and 3.\n// >>> count_nums((std::vector<long>()))\n\
  // (0)\n// >>> count_nums((std::vector<long>({(long)-1, (long)11, (long)-11})))\n\
  // (1)\n// >>> count_nums((std::vector<long>({(long)1, (long)1, (long)2})))\n//\
  \ (3)\nlong count_nums(std::vector<long> arr) {\n"
tests: "}\nint main() {\n    auto candidate = count_nums;\n    assert(candidate((std::vector<long>()))\
  \ == (0));\n    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)0})))\
  \ == (0));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)2,\
  \ (long)-2, (long)3, (long)4, (long)5}))) == (6));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)6, (long)9, (long)-6, (long)0, (long)1, (long)5}))) == (5));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)100, (long)98, (long)-7, (long)1, (long)-1}))) == (4));\n    assert(candidate((std::vector<long>({(long)12,\
  \ (long)23, (long)34, (long)-45, (long)-56, (long)0}))) == (5));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)1}))) == (1));\n    assert(candidate((std::vector<long>({(long)1}))) ==\
  \ (1));\n}\n"
completions: ["    long count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        long sum = 0;\n        long num = arr[i];\n        if (num < 0) {\n \
    \           num = num * -1;\n        }\n        while (num > 0) {\n          \
    \  sum += num % 10;\n            num = num / 10;\n        }\n        if (sum >\
    \ 0) {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        long sum = 0;\n\
    \        if (arr[i] < 0) {\n            arr[i] = arr[i] * -1;\n        }\n   \
    \     while (arr[i] > 0) {\n            sum += arr[i] % 10;\n            arr[i]\
    \ = arr[i] / 10;\n        }\n        if (sum > 0) {\n            count++;\n  \
    \      }\n    }\n    return count;", "    long count = 0;\n    for (auto i : arr)\
    \ {\n        if (i < 0) {\n            i = -i;\n        }\n        while (i >\
    \ 0) {\n            count += i % 10;\n            i /= 10;\n        }\n    }\n\
    \    return count;", "    long count = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        long sum = 0;\n        if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n        } else {\n            sum += arr[i];\n        }\n    \
    \    while (sum > 0) {\n            sum -= sum % 10;\n            sum /= 10;\n\
    \        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n \
    \   return count;", "    long count = 0;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        long sum = 0;\n        if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n        } else {\n            sum += arr[i];\n        }\n    \
    \    while (sum > 0) {\n            sum -= sum % 10;\n            sum /= 10;\n\
    \        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n \
    \   return count;", "    long count = 0;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        long sum = 0;\n        if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n        } else {\n            sum += arr[i];\n        }\n    \
    \    while (sum > 0) {\n            long digit = sum % 10;\n            sum /=\
    \ 10;\n            count += digit;\n        }\n    }\n    return count;", "  long\
    \ count = 0;\n  for (auto i : arr) {\n    long sum = 0;\n    if (i < 0) {\n  \
    \    sum += i * -1;\n    } else {\n      sum += i;\n    }\n    while (sum > 0)\
    \ {\n      sum -= sum % 10;\n      sum /= 10;\n    }\n    if (sum > 0) {\n   \
    \   count++;\n    }\n  }\n  return count;", "    long count = 0;\n    for (long\
    \ i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        if (arr[i] < 0)\
    \ {\n            sum += arr[i] * -1;\n        } else {\n            sum += arr[i];\n\
    \        }\n        while (sum > 0) {\n            sum -= sum % 10;\n        \
    \    sum /= 10;\n        }\n        if (sum > 0) {\n            count++;\n   \
    \     }\n    }\n    return count;", "    long count = 0;\n    for (int i = 0;\
    \ i < arr.size(); i++) {\n        long sum = 0;\n        long num = arr[i];\n\
    \        if (num < 0) {\n            num = num * -1;\n        }\n        while\
    \ (num > 0) {\n            sum += num % 10;\n            num = num / 10;\n   \
    \     }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        long sum = 0;\n        long num = arr[i];\n        if (num < 0) {\n \
    \           num = -num;\n        }\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        if (sum > 0) {\n  \
    \          count++;\n        }\n    }\n    return count;", "    long count = 0;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        long\
    \ num = arr[i];\n        if (num < 0) {\n            num = num * -1;\n       \
    \ }\n        while (num > 0) {\n            sum += num % 10;\n            num\
    \ = num / 10;\n        }\n        if (sum > 0) {\n            count++;\n     \
    \   }\n    }\n    return count;", "    long count = 0;\n    for (long i = 0; i\
    \ < arr.size(); i++) {\n        long sum = 0;\n        long num = arr[i];\n  \
    \      if (num < 0) {\n            num = num * -1;\n        }\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num = num / 10;\n        }\n\
    \        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
  "    long count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        long\
    \ sum = 0;\n        if (arr[i] < 0) {\n            sum += arr[i] * -1;\n     \
    \   } else {\n            sum += arr[i];\n        }\n        while (sum > 0) {\n\
    \            sum = sum / 10;\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        long sum = 0;\n        long num = arr[i];\n        if (num < 0) {\n \
    \           num = num * -1;\n        }\n        while (num > 0) {\n          \
    \  sum += num % 10;\n            num = num / 10;\n        }\n        if (sum >\
    \ 0) {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        long sum =\
    \ 0;\n        long num = arr[i];\n        if (num < 0) {\n            num = num\
    \ * -1;\n        }\n        while (num > 0) {\n            sum += num % 10;\n\
    \            num = num / 10;\n        }\n        if (sum > 0) {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    for (long i =\
    \ 0; i < arr.size(); i++) {\n        long sum = 0;\n        long num = arr[i];\n\
    \        if (num < 0) {\n            num = num * -1;\n        }\n        while\
    \ (num > 0) {\n            sum += num % 10;\n            num = num / 10;\n   \
    \     }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long sum = 0;\n    for (long i = 0; i < arr.size(); i++) {\n \
    \       long num = arr[i];\n        if (num < 0) {\n            num = -num;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num /= 10;\n        }\n        if (sum > 0) {\n            sum = 0;\n   \
    \         continue;\n        }\n    }\n    return sum;", "    long count = 0;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n        } else {\n        \
    \    sum += arr[i];\n        }\n        while (sum > 0) {\n            sum = sum\
    \ / 10;\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        long sum =\
    \ 0;\n        long num = arr[i];\n        if (num < 0) {\n            num = num\
    \ * -1;\n        }\n        while (num > 0) {\n            sum += num % 10;\n\
    \            num = num / 10;\n        }\n        if (sum > 0) {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    for (int i =\
    \ 0; i < arr.size(); i++) {\n        long sum = 0;\n        long num = arr[i];\n\
    \        if (num < 0) {\n            num = num * -1;\n        }\n        while\
    \ (num > 0) {\n            sum += num % 10;\n            num = num / 10;\n   \
    \     }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return\
    \ count;"]
stop_tokens:
- "\n}"

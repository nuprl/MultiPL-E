name: HumanEval_145_order_by_points
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function which sorts\
  \ the given list of integers\n// in ascending order according to the sum of their\
  \ digits.\n// Note: if there are several items with similar sum of their digits,\n\
  // order them based on their index in original list.\n// For example:\n// >>> order_by_points((std::vector<long>({(long)1,\
  \ (long)11, (long)-1, (long)-11, (long)-12})))\n// (std::vector<long>({(long)-1,\
  \ (long)-11, (long)1, (long)-12, (long)11}))\n// >>> order_by_points((std::vector<long>()))\n\
  // (std::vector<long>())\nstd::vector<long> order_by_points(std::vector<long> nums)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = order_by_points;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)11, (long)-1, (long)-11, (long)-12}))) == (std::vector<long>({(long)-1,\
  \ (long)-11, (long)1, (long)-12, (long)11})));\n    assert(candidate((std::vector<long>({(long)1234,\
  \ (long)423, (long)463, (long)145, (long)2, (long)423, (long)423, (long)53, (long)6,\
  \ (long)37, (long)3457, (long)3, (long)56, (long)0, (long)46}))) == (std::vector<long>({(long)0,\
  \ (long)2, (long)3, (long)6, (long)53, (long)423, (long)423, (long)423, (long)1234,\
  \ (long)145, (long)37, (long)46, (long)56, (long)463, (long)3457})));\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)-11, (long)-32, (long)43, (long)54, (long)-98, (long)2, (long)-3}))) ==\
  \ (std::vector<long>({(long)-3, (long)-32, (long)-98, (long)-11, (long)1, (long)2,\
  \ (long)43, (long)54})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10, (long)11})))\
  \ == (std::vector<long>({(long)1, (long)10, (long)2, (long)11, (long)3, (long)4,\
  \ (long)5, (long)6, (long)7, (long)8, (long)9})));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)6, (long)6, (long)-76, (long)-21, (long)23, (long)4}))) == (std::vector<long>({(long)-76,\
  \ (long)-21, (long)0, (long)4, (long)23, (long)6, (long)6})));\n}\n"
completions: ["    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = num * -1;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sums;\n    std::vector<int> indices;\n    int sum = 0;\n    for (int i = 0;\
    \ i < nums.size(); i++) {\n        sum = 0;\n        while (nums[i] != 0) {\n\
    \            sum += nums[i] % 10;\n            nums[i] /= 10;\n        }\n   \
    \     sums.push_back(sum);\n        indices.push_back(i);\n    }\n    for (int\
    \ i = 0; i < sums.size(); i++) {\n        for (int j = i + 1; j < sums.size();\
    \ j++) {\n            if (sums[i] > sums[j]) {\n                int temp = sums[i];\n\
    \                sums[i] = sums[j];\n                sums[j] = temp;\n       \
    \         temp = indices[i];\n                indices[i] = indices[j];\n     \
    \           indices[j] = temp;\n            }\n        }\n    }\n    for (int\
    \ i = 0; i < indices.size(); i++) {\n        result.push_back(nums[indices[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    std::vector<int> index;\n    int s = 0;\n    int i = 0;\n    for (auto\
    \ n : nums) {\n        s = 0;\n        while (n != 0) {\n            s += n %\
    \ 10;\n            n /= 10;\n        }\n        sum.push_back(s);\n        index.push_back(i);\n\
    \        i++;\n    }\n    for (int i = 0; i < sum.size(); i++) {\n        for\
    \ (int j = i + 1; j < sum.size(); j++) {\n            if (sum[i] > sum[j]) {\n\
    \                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n        }\n    }\n    for (auto i : index) {\n  \
    \      result.push_back(nums[i]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum_of_digits;\n    std::vector<long> index;\n\
    \    std::vector<long> temp;\n    long sum = 0;\n    for(int i = 0; i < nums.size();\
    \ i++) {\n        sum = 0;\n        temp = nums;\n        while(temp[i] != 0)\
    \ {\n            sum += temp[i] % 10;\n            temp[i] /= 10;\n        }\n\
    \        sum_of_digits.push_back(sum);\n        index.push_back(i);\n    }\n \
    \   for(int i = 0; i < nums.size(); i++) {\n        for(int j = 0; j < nums.size()\
    \ - 1; j++) {\n            if(sum_of_digits[j] > sum_of_digits[j + 1]) {\n   \
    \             std::swap(sum_of_digits[j], sum_of_digits[j + 1]);\n           \
    \     std::swap(index[j], index[j + 1]);\n            }\n        }\n    }\n  \
    \  for(int i = 0; i < nums.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long n = nums[i];\n        if (n < 0) {\n         \
    \   n = n * -1;\n        }\n        while (n > 0) {\n            sum += n % 10;\n\
    \            n = n / 10;\n        }\n        map[sum].push_back(nums[i]);\n  \
    \  }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> res;\n    std::map<long, std::vector<long>> m;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n\
    \        if (num < 0) num = -num;\n        while (num) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n      \
    \      num = -num;\n        }\n        while (num) {\n            sum += num %\
    \ 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      res.push_back(temp[i]);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        int sum = 0;\n        int num = nums[i];\n    \
    \    while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    std::vector<long> nums_copy;\n    nums_copy\
    \ = nums;\n    long sum_of_digits = 0;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        sum_of_digits = 0;\n        while (nums[i] != 0) {\n            sum_of_digits\
    \ += nums[i] % 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < sum.size(); i++)\
    \ {\n        for (int j = i + 1; j < sum.size(); j++) {\n            if (sum[i]\
    \ > sum[j]) {\n                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n        }\n    }\n    for (int i = 0; i < index.size();\
    \ i++) {\n        result.push_back(nums_copy[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum_of_digits;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        long sum = 0;\n       \
    \ long num = nums[i];\n        if(num<0){\n            num = num*(-1);\n     \
    \   }\n        while(num>0){\n            sum = sum + num%10;\n            num\
    \ = num/10;\n        }\n        sum_of_digits.push_back(sum);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<sum_of_digits.size();i++){\n        for(int j=i+1;j<sum_of_digits.size();j++){\n\
    \            if(sum_of_digits[i]>sum_of_digits[j]){\n                long temp\
    \ = sum_of_digits[i];\n                sum_of_digits[i] = sum_of_digits[j];\n\
    \                sum_of_digits[j] = temp;\n                temp = index[i];\n\
    \                index[i] = index[j];\n                index[j] = temp;\n    \
    \        }\n        }\n    }\n    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long temp;\n    for(int i=0;i<nums.size();i++){\n\
    \        temp=0;\n        while(nums[i]!=0){\n            temp+=nums[i]%10;\n\
    \            nums[i]/=10;\n        }\n        sum.push_back(temp);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<sum.size();i++){\n        for(int j=i+1;j<sum.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                temp=sum[i];\n              \
    \  sum[i]=sum[j];\n                sum[j]=temp;\n                temp=index[i];\n\
    \                index[i]=index[j];\n                index[j]=temp;\n        \
    \    }\n        }\n    }\n    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long s = 0;\n    for(int i = 0; i <\
    \ nums.size(); i++) {\n        s = 0;\n        while(nums[i] != 0) {\n       \
    \     s += nums[i] % 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(s);\n\
    \        index.push_back(i);\n    }\n    for(int i = 0; i < sum.size(); i++) {\n\
    \        for(int j = i + 1; j < sum.size(); j++) {\n            if(sum[i] > sum[j])\
    \ {\n                long temp = sum[i];\n                sum[i] = sum[j];\n \
    \               sum[j] = temp;\n                temp = index[i];\n           \
    \     index[i] = index[j];\n                index[j] = temp;\n            }\n\
    \        }\n    }\n    for(int i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    int sum_of_digits = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n        while (nums[i]\
    \ != 0) {\n            sum_of_digits += nums[i] % 10;\n            nums[i] /=\
    \ 10;\n        }\n        sum.push_back(sum_of_digits);\n        index.push_back(i);\n\
    \    }\n    for (int i = 0; i < sum.size(); i++) {\n        for (int j = i + 1;\
    \ j < sum.size(); j++) {\n            if (sum[i] > sum[j]) {\n               \
    \ std::swap(sum[i], sum[j]);\n                std::swap(index[i], index[j]);\n\
    \            }\n        }\n    }\n    for (int i = 0; i < index.size(); i++) {\n\
    \        result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    std::vector<long> index;\n    for(int\
    \ i=0;i<nums.size();i++){\n        long temp=0;\n        long temp2=nums[i];\n\
    \        while(temp2!=0){\n            temp+=temp2%10;\n            temp2/=10;\n\
    \        }\n        sum.push_back(temp);\n        index.push_back(i);\n    }\n\
    \    for(int i=0;i<sum.size();i++){\n        for(int j=i+1;j<sum.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                long temp=sum[i];\n         \
    \       sum[i]=sum[j];\n                sum[j]=temp;\n                temp=index[i];\n\
    \                index[i]=index[j];\n                index[j]=temp;\n        \
    \    }\n        }\n    }\n    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (auto i : nums) {\n        int sum = 0;\n \
    \       int num = i;\n        while (num != 0) {\n            sum += num % 10;\n\
    \            num /= 10;\n        }\n        map[sum].push_back(i);\n    }\n  \
    \  for (auto i : map) {\n        for (auto j : i.second) {\n            result.push_back(j);\n\
    \        }\n    }\n    return result;", "    std::vector<long> ans;\n    std::map<int,\
    \ std::vector<long>> mp;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n        \
    \    num = -num;\n        }\n        while (num) {\n            sum += num % 10;\n\
    \            num /= 10;\n        }\n        mp[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = mp.begin(); it != mp.end(); it++) {\n        for (int i =\
    \ 0; i < it->second.size(); i++) {\n            ans.push_back(it->second[i]);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n     \
    \       num = num * -1;\n        }\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n      \
    \      num = num * -1;\n        }\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long s=0;\n        long n=nums[i];\n        while(n!=0){\n            s+=n%10;\n\
    \            n/=10;\n        }\n        sum.push_back(s);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                long temp=sum[i];\n         \
    \       sum[i]=sum[j];\n                sum[j]=temp;\n                temp=index[i];\n\
    \                index[i]=index[j];\n                index[j]=temp;\n        \
    \    }\n        }\n    }\n    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    std::vector<long> temp;\n    long sum_of_digits\
    \ = 0;\n    long index_of_num = 0;\n    for (long num : nums) {\n        sum_of_digits\
    \ = 0;\n        index_of_num = 0;\n        while (num != 0) {\n            sum_of_digits\
    \ += num % 10;\n            num /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \        index.push_back(index_of_num);\n        index_of_num++;\n    }\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        for (long j = 0; j < nums.size()\
    \ - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n                temp.push_back(sum[j]);\n\
    \                sum[j] = sum[j + 1];\n                sum[j + 1] = temp[0];\n\
    \                temp.clear();\n                temp.push_back(index[j]);\n  \
    \              index[j] = index[j + 1];\n                index[j + 1] = temp[0];\n\
    \                temp.clear();\n            }\n        }\n    }\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    std::vector<int> index;\n    int total = 0;\n    for(int i = 0; i\
    \ < nums.size(); i++){\n        total = 0;\n        while(nums[i] != 0){\n   \
    \         total += nums[i] % 10;\n            nums[i] /= 10;\n        }\n    \
    \    sum.push_back(total);\n        index.push_back(i);\n    }\n    for(int i\
    \ = 0; i < sum.size(); i++){\n        for(int j = i + 1; j < sum.size(); j++){\n\
    \            if(sum[i] > sum[j]){\n                std::swap(sum[i], sum[j]);\n\
    \                std::swap(index[i], index[j]);\n            }\n        }\n  \
    \  }\n    for(int i = 0; i < index.size(); i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    std::vector<int> index;\n    int temp = 0;\n    for(int i = 0; i <\
    \ nums.size(); i++){\n        temp = 0;\n        while(nums[i] != 0){\n      \
    \      temp += nums[i] % 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(temp);\n\
    \        index.push_back(i);\n    }\n    for(int i = 0; i < sum.size(); i++){\n\
    \        for(int j = i; j < sum.size(); j++){\n            if(sum[i] > sum[j]){\n\
    \                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n        }\n    }\n    for(int i = 0; i < index.size();\
    \ i++){\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        if (num < 0) {\n            num = -num;\n        }\n     \
    \   while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = -num;\n \
    \       }\n        while (num != 0) {\n            sum += num % 10;\n        \
    \    num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0; i\
    \ < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::map<long,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ long sum = 0;\n        long num = nums[i];\n        if (num < 0) num = -num;\n\
    \        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        m[sum].push_back(nums[i]);\n    }\n    for (auto it = m.begin();\
    \ it != m.end(); it++) {\n        std::sort(it->second.begin(), it->second.end());\n\
    \        for (int i = 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::vector<long>\
    \ temp;\n    std::vector<long> temp2;\n    std::vector<long> temp3;\n    int sum\
    \ = 0;\n    int sum2 = 0;\n    int sum3 = 0;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        if (nums[i] < 0) {\n            temp.push_back(nums[i]);\n \
    \       }\n        else if (nums[i] > 0) {\n            temp2.push_back(nums[i]);\n\
    \        }\n        else {\n            temp3.push_back(nums[i]);\n        }\n\
    \    }\n    for (int i = 0; i < temp.size(); i++) {\n        sum = 0;\n      \
    \  while (temp[i] != 0) {\n            sum += temp[i] % 10;\n            temp[i]\
    \ /= 10;\n        }\n        result.push_back(sum);\n    }\n    for (int i = 0;\
    \ i < temp2.size(); i++) {\n        sum2 = 0;\n        while (temp2[i] != 0) {\n\
    \            sum2 += temp2[i] % 10;\n            temp2[i] /= 10;\n        }\n\
    \        result.push_back(sum2);\n    }\n    for (int i = 0; i < temp3.size();\
    \ i++) {\n        sum3 = 0;\n        while (temp3[i] != 0) {\n            sum3\
    \ += temp3[i] % 10;\n            temp3[i] /= 10;\n        }\n        result.push_back(sum3);\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;", " \
    \   std::vector<long> result;\n    std::map<long, std::vector<long>> m;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long num\
    \ = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n     \
    \       num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n    }\n   \
    \ for (auto i = m.begin(); i != m.end(); i++) {\n        for (int j = 0; j < i->second.size();\
    \ j++) {\n            result.push_back(i->second[j]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::map<long, long> map;\n  \
    \  for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ n = nums[i];\n        while (n != 0) {\n            sum += n % 10;\n       \
    \     n /= 10;\n        }\n        map[sum] = nums[i];\n    }\n    for (auto it\
    \ = map.begin(); it != map.end(); it++) {\n        result.push_back(it->second);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    int s = 0;\n    for(int i = 0; i < nums.size();\
    \ i++){\n        s = 0;\n        while(nums[i] != 0){\n            s += nums[i]\
    \ % 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(s);\n  \
    \      index.push_back(i);\n    }\n    for(int i = 0; i < sum.size(); i++){\n\
    \        for(int j = i + 1; j < sum.size(); j++){\n            if(sum[i] > sum[j]){\n\
    \                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n        }\n    }\n    for(int i = 0; i < index.size();\
    \ i++){\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        long temp=0;\n        long\
    \ temp1=nums[i];\n        while(temp1!=0){\n            temp+=temp1%10;\n    \
    \        temp1/=10;\n        }\n        sum.push_back(temp);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<sum.size();i++){\n        for(int j=i+1;j<sum.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                long temp=sum[i];\n         \
    \       sum[i]=sum[j];\n                sum[j]=temp;\n                temp=index[i];\n\
    \                index[i]=index[j];\n                index[j]=temp;\n        \
    \    }\n        }\n    }\n    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long temp=0;\n        long temp1=nums[i];\n        while(temp1!=0){\n \
    \           temp+=temp1%10;\n            temp1/=10;\n        }\n        sum.push_back(temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n    \
    \            long temp=sum[i];\n                sum[i]=sum[j];\n             \
    \   sum[j]=temp;\n                temp=index[i];\n                index[i]=index[j];\n\
    \                index[j]=temp;\n            }\n        }\n    }\n    for(int\
    \ i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = num * -1;\n\
    \        }\n        while (num != 0) {\n            sum += num % 10;\n       \
    \     num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> ans;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits = 0;\n    for(long\
    \ i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n        while(nums[i]\
    \ != 0) {\n            sum_of_digits += nums[i] % 10;\n            nums[i] /=\
    \ 10;\n        }\n        sum.push_back(sum_of_digits);\n        index.push_back(i);\n\
    \    }\n    for(long i = 0; i < sum.size(); i++) {\n        for(long j = i + 1;\
    \ j < sum.size(); j++) {\n            if(sum[i] > sum[j]) {\n                long\
    \ temp = sum[i];\n                sum[i] = sum[j];\n                sum[j] = temp;\n\
    \                temp = index[i];\n                index[i] = index[j];\n    \
    \            index[j] = temp;\n            }\n        }\n    }\n    for(long i\
    \ = 0; i < index.size(); i++) {\n        ans.push_back(nums[index[i]]);\n    }\n\
    \    return ans;", "    std::vector<long> res;\n    std::map<int, std::vector<long>>\
    \ m;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n    \
    \    long n = nums[i];\n        if (n < 0) {\n            n = -n;\n        }\n\
    \        while (n) {\n            sum += n % 10;\n            n /= 10;\n     \
    \   }\n        m[sum].push_back(nums[i]);\n    }\n    for (auto it = m.begin();\
    \ it != m.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            res.push_back(it->second[i]);\n        }\n    }\n    return res;",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        long num\
    \ = nums[i];\n        if (num < 0) {\n            num = -num;\n        }\n   \
    \     while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        long temp=nums[i];\n  \
    \      long sum_temp=0;\n        while(temp!=0){\n            sum_temp+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_temp);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                long temp=sum[i];\n         \
    \       sum[i]=sum[j];\n                sum[j]=temp;\n                temp=nums[i];\n\
    \                nums[i]=nums[j];\n                nums[j]=temp;\n           \
    \     temp=index[i];\n                index[i]=index[j];\n                index[j]=temp;\n\
    \            }\n            else if(sum[i]==sum[j]){\n                if(index[i]>index[j]){\n\
    \                    long temp=sum[i];\n                    sum[i]=sum[j];\n \
    \                   sum[j]=temp;\n                    temp=nums[i];\n        \
    \            nums[i]=nums[j];\n                    nums[j]=temp;\n           \
    \         temp=index[i];\n                    index[i]=index[j];\n           \
    \         index[j]=temp;\n                }\n            }\n        }\n    }\n\
    \    return nums;", "    std::vector<long> res;\n    std::map<int, std::vector<long>>\
    \ m;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n    \
    \    long temp = nums[i];\n        while (temp) {\n            sum += temp % 10;\n\
    \            temp /= 10;\n        }\n        m[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int i = 0;\
    \ i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n \
    \       }\n    }\n    return res;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n     \
    \       num = -num;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::vector<int> sums;\n    std::vector<int>\
    \ indices;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n\
    \        int num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        sums.push_back(sum);\n   \
    \     indices.push_back(i);\n    }\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        int min = INT_MAX;\n        int min_index = 0;\n        for (int\
    \ j = 0; j < nums.size(); j++) {\n            if (sums[j] < min) {\n         \
    \       min = sums[j];\n                min_index = j;\n            }\n      \
    \  }\n        result.push_back(nums[indices[min_index]]);\n        sums[min_index]\
    \ = INT_MAX;\n    }\n    return result;", "    std::vector<long> result;\n   \
    \ std::map<int, std::vector<long>> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int num = nums[i];\n        if (num <\
    \ 0) {\n            num = num * -1;\n        }\n        while (num > 0) {\n  \
    \          sum += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long n = nums[i];\n        if (n < 0) {\n         \
    \   n = n * -1;\n        }\n        while (n > 0) {\n            sum += n % 10;\n\
    \            n = n / 10;\n        }\n        map[sum].push_back(nums[i]);\n  \
    \  }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n     \
    \       num = num * -1;\n        }\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ int sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n    \
    \        sum += num % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n        while (nums[i]\
    \ != 0) {\n            sum_of_digits += nums[i] % 10;\n            nums[i] /=\
    \ 10;\n        }\n        sum.push_back(sum_of_digits);\n        index.push_back(i);\n\
    \    }\n    for (int i = 0; i < sum.size(); i++) {\n        for (int j = i + 1;\
    \ j < sum.size(); j++) {\n            if (sum[i] > sum[j]) {\n               \
    \ long temp = sum[i];\n                sum[i] = sum[j];\n                sum[j]\
    \ = temp;\n                temp = index[i];\n                index[i] = index[j];\n\
    \                index[j] = temp;\n            }\n        }\n    }\n    for (int\
    \ i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    int s = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        s\
    \ = 0;\n        while(nums[i] != 0) {\n            s += nums[i] % 10;\n      \
    \      nums[i] /= 10;\n        }\n        sum.push_back(s);\n    }\n    for(int\
    \ i = 0; i < nums.size(); i++) {\n        int min = i;\n        for(int j = i\
    \ + 1; j < nums.size(); j++) {\n            if(sum[j] < sum[min]) {\n        \
    \        min = j;\n            }\n        }\n        if(min != i) {\n        \
    \    std::swap(sum[i], sum[min]);\n            std::swap(nums[i], nums[min]);\n\
    \        }\n    }\n    return nums;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n      \
    \      num = num * -1;\n        }\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> index;\n    std::vector<long>::iterator\
    \ it;\n    long sum = 0;\n    for(it = nums.begin(); it != nums.end(); it++) {\n\
    \        sum = 0;\n        long num = *it;\n        while(num != 0) {\n      \
    \      sum += num % 10;\n            num /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \    }\n    for(long i = 0; i < nums.size(); i++) {\n        index.push_back(i);\n\
    \    }\n    for(long i = 0; i < nums.size(); i++) {\n        for(long j = 0; j\
    \ < nums.size() - i - 1; j++) {\n            if(sum_of_digits[j] > sum_of_digits[j\
    \ + 1]) {\n                std::swap(sum_of_digits[j], sum_of_digits[j + 1]);\n\
    \                std::swap(index[j], index[j + 1]);\n            }\n        }\n\
    \    }\n    for(long i = 0; i < nums.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long sum_of_digits=0;\n        long num=nums[i];\n        while(num!=0){\n\
    \            sum_of_digits+=num%10;\n            num=num/10;\n        }\n    \
    \    sum.push_back(sum_of_digits);\n        index.push_back(i);\n    }\n    for(int\
    \ i=0;i<sum.size();i++){\n        for(int j=i+1;j<sum.size();j++){\n         \
    \   if(sum[i]>sum[j]){\n                long temp=sum[i];\n                sum[i]=sum[j];\n\
    \                sum[j]=temp;\n                temp=index[i];\n              \
    \  index[i]=index[j];\n                index[j]=temp;\n            }\n       \
    \ }\n    }\n    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int temp = nums[i];\n        if (temp < 0) {\n     \
    \       temp = temp * -1;\n        }\n        while (temp > 0) {\n           \
    \ sum += temp % 10;\n            temp = temp / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long s=0;\n        long n=nums[i];\n        while(n!=0){\n            s=s+n%10;\n\
    \            n=n/10;\n        }\n        sum.push_back(s);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<sum.size();i++){\n        for(int j=i+1;j<sum.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                long temp=sum[i];\n         \
    \       sum[i]=sum[j];\n                sum[j]=temp;\n                temp=index[i];\n\
    \                index[i]=index[j];\n                index[j]=temp;\n        \
    \    }\n        }\n    }\n    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        long temp=nums[i];\n    \
    \    long sum1=0;\n        while(temp!=0){\n            sum1+=temp%10;\n     \
    \       temp/=10;\n        }\n        sum.push_back(sum1);\n    }\n    for(int\
    \ i=0;i<nums.size();i++){\n        int min=i;\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[j]<sum[min]){\n                min=j;\n            }\n   \
    \     }\n        long temp=sum[i];\n        sum[i]=sum[min];\n        sum[min]=temp;\n\
    \        temp=nums[i];\n        nums[i]=nums[min];\n        nums[min]=temp;\n\
    \    }\n    return nums;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    int temp = 0;\n    for(int i = 0; i < nums.size(); i++){\n       \
    \ temp = 0;\n        while(nums[i] != 0){\n            temp += nums[i] % 10;\n\
    \            nums[i] /= 10;\n        }\n        sum.push_back(temp);\n    }\n\
    \    for(int i = 0; i < nums.size(); i++){\n        int min = i;\n        for(int\
    \ j = i + 1; j < nums.size(); j++){\n            if(sum[j] < sum[min]){\n    \
    \            min = j;\n            }\n        }\n        std::swap(sum[i], sum[min]);\n\
    \        std::swap(nums[i], nums[min]);\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    std::vector<long> index;\n    for(int\
    \ i=0;i<nums.size();i++){\n        long sum_digits=0;\n        long temp=nums[i];\n\
    \        if(temp<0){\n            temp*=-1;\n        }\n        while(temp>0){\n\
    \            sum_digits+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_digits);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<sum.size();i++){\n    \
    \    for(int j=i+1;j<sum.size();j++){\n            if(sum[i]>sum[j]){\n      \
    \          long temp=sum[i];\n                sum[i]=sum[j];\n               \
    \ sum[j]=temp;\n                temp=index[i];\n                index[i]=index[j];\n\
    \                index[j]=temp;\n            }\n        }\n    }\n    for(int\
    \ i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ m;\n    for (long i = 0; i < nums.size(); i++) {\n        int sum = 0;\n   \
    \     int temp = nums[i];\n        if (temp < 0) {\n            temp = temp *\
    \ -1;\n        }\n        while (temp > 0) {\n            sum += temp % 10;\n\
    \            temp = temp / 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sums;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n \
    \       int n = nums[i];\n        while (n != 0) {\n            sum += n % 10;\n\
    \            n /= 10;\n        }\n        sums.push_back(sum);\n    }\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int min = sums[i];\n        int\
    \ min_index = i;\n        for (int j = i; j < nums.size(); j++) {\n          \
    \  if (sums[j] < min) {\n                min = sums[j];\n                min_index\
    \ = j;\n            }\n        }\n        sums[min_index] = sums[i];\n       \
    \ sums[i] = min;\n        long temp = nums[min_index];\n        nums[min_index]\
    \ = nums[i];\n        nums[i] = temp;\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n\
    \        if (num < 0) {\n            num = num * -1;\n        }\n        while\
    \ (num > 0) {\n            sum += num % 10;\n            num = num / 10;\n   \
    \     }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        std::vector<long> temp = it->second;\n   \
    \     for (long i = 0; i < temp.size(); i++) {\n            result.push_back(temp[i]);\n\
    \        }\n    }\n    return result;", "\tstd::vector<long> result;\n\tstd::map<long,\
    \ std::vector<long>> m;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tlong sum\
    \ = 0;\n\t\tlong num = nums[i];\n\t\twhile (num != 0) {\n\t\t\tsum += num % 10;\n\
    \t\t\tnum /= 10;\n\t\t}\n\t\tm[sum].push_back(nums[i]);\n\t}\n\tfor (auto it =\
    \ m.begin(); it != m.end(); it++) {\n\t\tfor (int i = 0; i < it->second.size();\
    \ i++) {\n\t\t\tresult.push_back(it->second[i]);\n\t\t}\n\t}\n\treturn result;",
  "    std::vector<long> res;\n    std::map<long, std::vector<long>> mp;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long num\
    \ = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n     \
    \       num /= 10;\n        }\n        mp[sum].push_back(nums[i]);\n    }\n  \
    \  for (auto it = mp.begin(); it != mp.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            res.push_back(it->second[i]);\n        }\n    }\n    return res;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        if (map.find(sum) == map.end()) {\n\
    \            std::vector<long> temp;\n            temp.push_back(nums[i]);\n \
    \           map[sum] = temp;\n        } else {\n            map[sum].push_back(nums[i]);\n\
    \        }\n    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n\
    \        for (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> index;\n    std::vector<long> sorted_index;\n\
    \    std::vector<long> sorted_sum_of_digits;\n    long sum = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum = 0;\n        while (nums[i] !=\
    \ 0) {\n            sum += nums[i] % 10;\n            nums[i] /= 10;\n       \
    \ }\n        sum_of_digits.push_back(sum);\n        index.push_back(i);\n    }\n\
    \    sorted_sum_of_digits = sum_of_digits;\n    sorted_index = index;\n    std::sort(sorted_sum_of_digits.begin(),\
    \ sorted_sum_of_digits.end());\n    for (int i = 0; i < sorted_sum_of_digits.size();\
    \ i++) {\n        for (int j = 0; j < sum_of_digits.size(); j++) {\n         \
    \   if (sorted_sum_of_digits[i] == sum_of_digits[j]) {\n                result.push_back(nums[index[j]]);\n\
    \                sum_of_digits[j] = -1;\n                index[j] = -1;\n    \
    \            break;\n            }\n        }\n    }\n    return result;", " \
    \   std::vector<long> result;\n    std::vector<int> sum;\n    int sum_of_digits\
    \ = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n\
    \        while(nums[i] != 0) {\n            sum_of_digits += nums[i] % 10;\n \
    \           nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \    }\n    for(int i = 0; i < nums.size(); i++) {\n        int min = sum[i];\n\
    \        int index = i;\n        for(int j = i + 1; j < nums.size(); j++) {\n\
    \            if(sum[j] < min) {\n                min = sum[j];\n             \
    \   index = j;\n            }\n        }\n        std::swap(sum[i], sum[index]);\n\
    \        std::swap(nums[i], nums[index]);\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    std::vector<long> index;\n    int s\
    \ = 0;\n    for(int i = 0; i < nums.size(); i++){\n        s = 0;\n        while(nums[i]\
    \ != 0){\n            s += nums[i] % 10;\n            nums[i] /= 10;\n       \
    \ }\n        sum.push_back(s);\n        index.push_back(i);\n    }\n    for(int\
    \ i = 0; i < sum.size(); i++){\n        for(int j = i + 1; j < sum.size(); j++){\n\
    \            if(sum[i] > sum[j]){\n                std::swap(sum[i], sum[j]);\n\
    \                std::swap(index[i], index[j]);\n            }\n        }\n  \
    \  }\n    for(int i = 0; i < index.size(); i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n\
    \            sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (auto i : nums) {\n        int sum = 0;\n \
    \       int num = i;\n        while (num != 0) {\n            sum += num % 10;\n\
    \            num /= 10;\n        }\n        map[sum].push_back(i);\n    }\n  \
    \  for (auto i : map) {\n        for (auto j : i.second) {\n            result.push_back(j);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ temp;\n    std::vector<long> temp2;\n    std::vector<long> temp3;\n    std::vector<long>\
    \ temp4;\n    std::vector<long> temp5;\n    std::vector<long> temp6;\n    std::vector<long>\
    \ temp7;\n    std::vector<long> temp8;\n    std::vector<long> temp9;\n    std::vector<long>\
    \ temp10;\n    std::vector<long> temp11;\n    std::vector<long> temp12;\n    std::vector<long>\
    \ temp13;\n    std::vector<long> temp14;\n    std::vector<long> temp15;\n    std::vector<long>\
    \ temp16;\n    std::vector<long> temp17;\n    std::vector<long> temp18;\n    std::vector<long>\
    \ temp19;\n    std::vector<long> temp20;\n    std::vector<long> temp21;\n    std::vector<long>\
    \ temp22;\n    std::vector<long> temp23;\n    std::vector<long> temp24;\n    std::vector<long>\
    \ temp25;\n    std::vector<long> temp26;\n    std::vector<long> temp27;\n    std::vector<long>\
    \ temp28;\n    std::vector<long> temp29;\n    std::vector<long> temp30;\n    std::vector<long>\
    \ temp31;\n    std::vector<long> temp32;\n    std::vector<long> temp33;\n    std::vector<long>\
    \ temp34;\n    std::vector<long> temp35;\n    std::vector<long> temp36;\n    std::vector<long>\
    \ temp37;\n    std::vector<long> temp38;\n    std::vector<long> temp39;\n    std::vector<long>\
    \ temp40;\n    std::vector<long> temp41;\n    std::vector<long> temp42;\n    std::vector<long>\
    \ temp43;\n    std::vector<long> temp44;\n    std::vector<long> temp45;\n    std::vector<long>",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int temp\
    \ = nums[i];\n        if (temp < 0) {\n            temp = temp * -1;\n       \
    \ }\n        while (temp > 0) {\n            sum += temp % 10;\n            temp\
    \ = temp / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0; i\
    \ < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long temp=0;\n        long temp1=nums[i];\n        while(temp1!=0){\n \
    \           temp+=temp1%10;\n            temp1/=10;\n        }\n        sum.push_back(temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n    \
    \            long temp=sum[i];\n                sum[i]=sum[j];\n             \
    \   sum[j]=temp;\n                temp=index[i];\n                index[i]=index[j];\n\
    \                index[j]=temp;\n            }\n        }\n    }\n    for(int\
    \ i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n\
    \        long num = nums[i];\n        if (num < 0) {\n            num = -num;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = map.begin(); it != map.end(); it++) {\n        for (long i = 0; i\
    \ < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        long sum_of_digits=0;\n\
    \        long temp=nums[i];\n        while(temp!=0){\n            sum_of_digits+=temp%10;\n\
    \            temp/=10;\n        }\n        sum.push_back(sum_of_digits);\n   \
    \     index.push_back(i);\n    }\n    for(int i=0;i<sum.size();i++){\n       \
    \ for(int j=i+1;j<sum.size();j++){\n            if(sum[i]>sum[j]){\n         \
    \       long temp=sum[i];\n                sum[i]=sum[j];\n                sum[j]=temp;\n\
    \                temp=index[i];\n                index[i]=index[j];\n        \
    \        index[j]=temp;\n            }\n        }\n    }\n    for(int i=0;i<index.size();i++){\n\
    \        result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> m;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int n = nums[i];\n        if (n < 0) {\n\
    \            n = n * -1;\n        }\n        while (n > 0) {\n            sum\
    \ += n % 10;\n            n = n / 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum\
    \ = 0;\n        int num = nums[i];\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \    }\n    for (int i = 0; i < nums.size(); i++) {\n        int min = INT_MAX;\n\
    \        int min_index = 0;\n        for (int j = 0; j < sum_of_digits.size();\
    \ j++) {\n            if (sum_of_digits[j] < min) {\n                min = sum_of_digits[j];\n\
    \                min_index = j;\n            }\n        }\n        result.push_back(nums[min_index]);\n\
    \        sum_of_digits[min_index] = INT_MAX;\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (long num : nums) {\n        long sum = 0;\n        long n = num;\n    \
    \    while (n != 0) {\n            sum += n % 10;\n            n /= 10;\n    \
    \    }\n        map[sum].push_back(num);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (long num : it->second) {\n          \
    \  result.push_back(num);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    std::vector<long> index;\n    long\
    \ sum_of_digits = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum_of_digits\
    \ = 0;\n        while (nums[i] != 0) {\n            sum_of_digits += nums[i] %\
    \ 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \        index.push_back(i);\n    }\n    for (long i = 0; i < sum.size(); i++)\
    \ {\n        for (long j = i + 1; j < sum.size(); j++) {\n            if (sum[i]\
    \ > sum[j]) {\n                std::swap(sum[i], sum[j]);\n                std::swap(index[i],\
    \ index[j]);\n            }\n        }\n    }\n    for (long i = 0; i < index.size();\
    \ i++) {\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        long temp = nums[i];\n\
    \        long sum_temp = 0;\n        while(temp!=0){\n            sum_temp +=\
    \ temp%10;\n            temp = temp/10;\n        }\n        sum.push_back(sum_temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<sum.size();i++){\n    \
    \    for(int j=i+1;j<sum.size();j++){\n            if(sum[i]>sum[j]){\n      \
    \          long temp = sum[i];\n                sum[i] = sum[j];\n           \
    \     sum[j] = temp;\n                temp = index[i];\n                index[i]\
    \ = index[j];\n                index[j] = temp;\n            }\n        }\n  \
    \  }\n    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ long> map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum =\
    \ 0;\n        long temp = nums[i];\n        while (temp != 0) {\n            sum\
    \ += temp % 10;\n            temp /= 10;\n        }\n        map[sum] = nums[i];\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        result.push_back(it->second);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n        while (nums[i]\
    \ != 0) {\n            sum_of_digits += nums[i] % 10;\n            nums[i] /=\
    \ 10;\n        }\n        sum.push_back(sum_of_digits);\n        index.push_back(i);\n\
    \    }\n    for (int i = 0; i < sum.size(); i++) {\n        for (int j = i + 1;\
    \ j < sum.size(); j++) {\n            if (sum[i] > sum[j]) {\n               \
    \ long temp = sum[i];\n                sum[i] = sum[j];\n                sum[j]\
    \ = temp;\n                temp = index[i];\n                index[i] = index[j];\n\
    \                index[j] = temp;\n            }\n        }\n    }\n    for (int\
    \ i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ long> map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum =\
    \ 0;\n        long num = nums[i];\n        if (num < 0) {\n            num = num\
    \ * -1;\n        }\n        while (num > 0) {\n            sum += num % 10;\n\
    \            num = num / 10;\n        }\n        map[sum] = nums[i];\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        result.push_back(it->second);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    std::vector<int> index;\n    int temp = 0;\n    int temp_sum = 0;\n\
    \    for(int i = 0; i < nums.size(); i++){\n        temp = nums[i];\n        temp_sum\
    \ = 0;\n        while(temp != 0){\n            temp_sum += temp % 10;\n      \
    \      temp /= 10;\n        }\n        sum.push_back(temp_sum);\n        index.push_back(i);\n\
    \    }\n    for(int i = 0; i < sum.size(); i++){\n        for(int j = i + 1; j\
    \ < sum.size(); j++){\n            if(sum[i] > sum[j]){\n                std::swap(sum[i],\
    \ sum[j]);\n                std::swap(index[i], index[j]);\n            }\n  \
    \      }\n    }\n    for(int i = 0; i < index.size(); i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        int temp=0;\n        int\
    \ n=nums[i];\n        while(n!=0){\n            temp+=n%10;\n            n/=10;\n\
    \        }\n        sum.push_back(temp);\n    }\n    std::vector<int> index;\n\
    \    for(int i=0;i<nums.size();i++){\n        index.push_back(i);\n    }\n   \
    \ for(int i=0;i<nums.size();i++){\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                int temp=sum[i];\n          \
    \      sum[i]=sum[j];\n                sum[j]=temp;\n                temp=nums[i];\n\
    \                nums[i]=nums[j];\n                nums[j]=temp;\n           \
    \     temp=index[i];\n                index[i]=index[j];\n                index[j]=temp;\n\
    \            }\n            else if(sum[i]==sum[j]){\n                if(index[i]>index[j]){\n\
    \                    int temp=sum[i];\n                    sum[i]=sum[j];\n  \
    \                  sum[j]=temp;\n                    temp=nums[i];\n         \
    \           nums[i]=nums[j];\n                    nums[j]=temp;\n            \
    \        temp=index[i];\n                    index[i]=index[j];\n            \
    \        index[j]=temp;\n                }\n            }\n        }\n    }\n\
    \    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[i]);\n   \
    \ }\n    return result;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n \
    \       long num = nums[i];\n        if (num < 0) {\n            num = num * -1;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::vector<int> sum;\n    for(int i=0;i<nums.size();i++){\n\
    \        int sum_=0;\n        int num=nums[i];\n        if(num<0){\n         \
    \   num*=-1;\n        }\n        while(num>0){\n            sum_+=num%10;\n  \
    \          num/=10;\n        }\n        sum.push_back(sum_);\n    }\n    for(int\
    \ i=0;i<nums.size();i++){\n        int min=INT_MAX;\n        int index=0;\n  \
    \      for(int j=0;j<sum.size();j++){\n            if(sum[j]<min){\n         \
    \       min=sum[j];\n                index=j;\n            }\n        }\n    \
    \    result.push_back(nums[index]);\n        sum[index]=INT_MAX;\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    // your code here\n    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (long i = 0; i\
    \ < nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n\
    \        while (num != 0) {\n            sum += num % 10;\n            num /=\
    \ 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it\
    \ = map.begin(); it != map.end(); it++) {\n        for (long i = 0; i < it->second.size();\
    \ i++) {\n            result.push_back(it->second[i]);\n        }\n    }\n   \
    \ return result;", "    std::vector<long> result;\n    std::vector<long> sum;\n\
    \    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n        long\
    \ temp=nums[i];\n        long temp_sum=0;\n        while(temp!=0){\n         \
    \   temp_sum+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(temp_sum);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<sum.size();i++){\n    \
    \    for(int j=i+1;j<sum.size();j++){\n            if(sum[i]>sum[j]){\n      \
    \          long temp=sum[i];\n                sum[i]=sum[j];\n               \
    \ sum[j]=temp;\n                temp=index[i];\n                index[i]=index[j];\n\
    \                index[j]=temp;\n            }\n        }\n    }\n    for(int\
    \ i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n\
    \        long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sums;\n    std::vector<int> indices;\n    int sum = 0;\n    for (int i = 0;\
    \ i < nums.size(); i++) {\n        int num = nums[i];\n        if (num < 0) {\n\
    \            num = num * -1;\n        }\n        while (num > 0) {\n         \
    \   sum += num % 10;\n            num = num / 10;\n        }\n        sums.push_back(sum);\n\
    \        indices.push_back(i);\n        sum = 0;\n    }\n    for (int i = 0; i\
    \ < sums.size(); i++) {\n        for (int j = i + 1; j < sums.size(); j++) {\n\
    \            if (sums[i] > sums[j]) {\n                int temp = sums[i];\n \
    \               sums[i] = sums[j];\n                sums[j] = temp;\n        \
    \        temp = indices[i];\n                indices[i] = indices[j];\n      \
    \          indices[j] = temp;\n            }\n        }\n    }\n    for (int i\
    \ = 0; i < indices.size(); i++) {\n        result.push_back(nums[indices[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    int sum_of_digits = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n        while (nums[i]\
    \ != 0) {\n            sum_of_digits += nums[i] % 10;\n            nums[i] /=\
    \ 10;\n        }\n        sum.push_back(sum_of_digits);\n        index.push_back(i);\n\
    \    }\n    for (int i = 0; i < sum.size(); i++) {\n        for (int j = i + 1;\
    \ j < sum.size(); j++) {\n            if (sum[i] > sum[j]) {\n               \
    \ std::swap(sum[i], sum[j]);\n                std::swap(index[i], index[j]);\n\
    \            }\n        }\n    }\n    for (int i = 0; i < index.size(); i++) {\n\
    \        result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<long, std::vector<long>> map;\n    for (auto i : nums)\
    \ {\n        long sum = 0;\n        long temp = i;\n        while (temp != 0)\
    \ {\n            sum += temp % 10;\n            temp /= 10;\n        }\n     \
    \   map[sum].push_back(i);\n    }\n    for (auto i : map) {\n        for (auto\
    \ j : i.second) {\n            result.push_back(j);\n        }\n    }\n    return\
    \ result;", "    // your code here\n    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    int i = 0;\n    for (auto it = nums.begin();\
    \ it != nums.end(); it++) {\n        long sum_of_digits = 0;\n        long num\
    \ = *it;\n        if (num < 0) {\n            num = num * -1;\n        }\n   \
    \     while (num != 0) {\n            sum_of_digits += num % 10;\n           \
    \ num = num / 10;\n        }\n        sum.push_back(sum_of_digits);\n        index.push_back(i);\n\
    \        i++;\n    }\n    for (int i = 0; i < nums.size(); i++) {\n        int\
    \ min = sum[i];\n        int min_index = i;\n        for (int j = i + 1; j < nums.size();\
    \ j++) {\n            if (sum[j] < min) {\n                min = sum[j];\n   \
    \             min_index = j;\n            }\n        }\n        if (min_index\
    \ != i) {\n            std::swap(sum[i], sum[min_index]);\n            std::swap(index[i],\
    \ index[min_index]);\n        }\n    }\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        result.push_back(nums[index[i]]);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        long temp=0;\n        long\
    \ temp1=nums[i];\n        while(temp1!=0){\n            temp+=temp1%10;\n    \
    \        temp1/=10;\n        }\n        sum.push_back(temp);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                long temp=sum[i];\n         \
    \       sum[i]=sum[j];\n                sum[j]=temp;\n                temp=index[i];\n\
    \                index[i]=index[j];\n                index[j]=temp;\n        \
    \    }\n        }\n    }\n    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n     \
    \       num = num * -1;\n        }\n        while (num > 0) {\n            sum\
    \ += num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    std::vector<long>::iterator it;\n    for(it = nums.begin(); it !=\
    \ nums.end(); it++) {\n        long temp = *it;\n        long sum_temp = 0;\n\
    \        while(temp != 0) {\n            sum_temp += temp % 10;\n            temp\
    \ /= 10;\n        }\n        sum.push_back(sum_temp);\n        index.push_back(it\
    \ - nums.begin());\n    }\n    for(int i = 0; i < sum.size(); i++) {\n       \
    \ int min = i;\n        for(int j = i + 1; j < sum.size(); j++) {\n          \
    \  if(sum[j] < sum[min]) {\n                min = j;\n            }\n        }\n\
    \        if(min != i) {\n            long temp = sum[i];\n            sum[i] =\
    \ sum[min];\n            sum[min] = temp;\n            temp = index[i];\n    \
    \        index[i] = index[min];\n            index[min] = temp;\n        }\n \
    \   }\n    for(int i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> res;\n    std::map<long, std::vector<long>>\
    \ m;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n   \
    \     long num = nums[i];\n        while (num) {\n            sum += num % 10;\n\
    \            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int i = 0;\
    \ i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n \
    \       }\n    }\n    return res;", "    std::vector<long> ans;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long temp=0;\n        long temp1=nums[i];\n        while(temp1!=0){\n \
    \           temp+=temp1%10;\n            temp1/=10;\n        }\n        sum.push_back(temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<sum.size();i++){\n    \
    \    for(int j=i+1;j<sum.size();j++){\n            if(sum[i]>sum[j]){\n      \
    \          long temp=sum[i];\n                sum[i]=sum[j];\n               \
    \ sum[j]=temp;\n                temp=index[i];\n                index[i]=index[j];\n\
    \                index[j]=temp;\n            }\n        }\n    }\n    for(int\
    \ i=0;i<index.size();i++){\n        ans.push_back(nums[index[i]]);\n    }\n  \
    \  return ans;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    std::map<int, std::vector<long>>::iterator it;\n    std::vector<long>::iterator\
    \ itr;\n    int sum = 0;\n    for(itr = nums.begin(); itr != nums.end(); itr++)\
    \ {\n        sum = 0;\n        if(*itr < 0) {\n            *itr = *itr * -1;\n\
    \        }\n        while(*itr != 0) {\n            sum += *itr % 10;\n      \
    \      *itr = *itr / 10;\n        }\n        map[sum].push_back(*itr);\n    }\n\
    \    for(it = map.begin(); it != map.end(); it++) {\n        result.insert(result.end(),\
    \ it->second.begin(), it->second.end());\n    }\n    return result;", "\tstd::vector<long>\
    \ result;\n\tstd::map<int, std::vector<long>> map;\n\tfor (int i = 0; i < nums.size();\
    \ i++) {\n\t\tint sum = 0;\n\t\tint num = nums[i];\n\t\tif (num < 0) {\n\t\t\t\
    num = -num;\n\t\t}\n\t\twhile (num > 0) {\n\t\t\tsum += num % 10;\n\t\t\tnum /=\
    \ 10;\n\t\t}\n\t\tmap[sum].push_back(nums[i]);\n\t}\n\tfor (auto it = map.begin();\
    \ it != map.end(); it++) {\n\t\tfor (int i = 0; i < it->second.size(); i++) {\n\
    \t\t\tresult.push_back(it->second[i]);\n\t\t}\n\t}\n\treturn result;", "    std::vector<long>\
    \ result;\n    std::vector<long> sum;\n    std::vector<long> index;\n    for(int\
    \ i=0;i<nums.size();i++){\n        long sum_of_digits=0;\n        long num=nums[i];\n\
    \        while(num!=0){\n            sum_of_digits+=num%10;\n            num/=10;\n\
    \        }\n        sum.push_back(sum_of_digits);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                long temp=sum[i];\n         \
    \       sum[i]=sum[j];\n                sum[j]=temp;\n                temp=index[i];\n\
    \                index[i]=index[j];\n                index[j]=temp;\n        \
    \    }\n        }\n    }\n    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n      \
    \      num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n        while (nums[i]\
    \ != 0) {\n            sum_of_digits += nums[i] % 10;\n            nums[i] /=\
    \ 10;\n        }\n        sum.push_back(sum_of_digits);\n        index.push_back(i);\n\
    \    }\n    for (int i = 0; i < nums.size(); i++) {\n        for (int j = 0; j\
    \ < nums.size() - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n        \
    \        std::swap(sum[j], sum[j + 1]);\n                std::swap(nums[j], nums[j\
    \ + 1]);\n                std::swap(index[j], index[j + 1]);\n            }\n\
    \        }\n    }\n    for (int i = 0; i < nums.size(); i++) {\n        for (int\
    \ j = 0; j < nums.size() - 1; j++) {\n            if (sum[j] == sum[j + 1]) {\n\
    \                if (index[j] > index[j + 1]) {\n                    std::swap(sum[j],\
    \ sum[j + 1]);\n                    std::swap(nums[j], nums[j + 1]);\n       \
    \             std::swap(index[j], index[j + 1]);\n                }\n        \
    \    }\n        }\n    }\n    return nums;", "    std::vector<long> result;\n\
    \    std::map<long, std::vector<long>> map;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        long num = nums[i];\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin(); it\
    \ != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, long> sum_map;\n    std::map<long,\
    \ long>::iterator it;\n    for (int i = 0; i < nums.size(); i++) {\n        long\
    \ sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n        \
    \    sum += num % 10;\n            num /= 10;\n        }\n        sum_map[sum]\
    \ = nums[i];\n    }\n    for (it = sum_map.begin(); it != sum_map.end(); it++)\
    \ {\n        result.push_back(it->second);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> m;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int sum = 0;\n        int num = nums[i];\n        if (num <\
    \ 0) {\n            num = -num;\n        }\n        while (num > 0) {\n      \
    \      sum += num % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ temp;\n    std::vector<long> temp2;\n    std::vector<long> temp3;\n    std::vector<long>\
    \ temp4;\n    std::vector<long> temp5;\n    std::vector<long> temp6;\n    std::vector<long>\
    \ temp7;\n    std::vector<long> temp8;\n    std::vector<long> temp9;\n    std::vector<long>\
    \ temp10;\n    std::vector<long> temp11;\n    std::vector<long> temp12;\n    std::vector<long>\
    \ temp13;\n    std::vector<long> temp14;\n    std::vector<long> temp15;\n    std::vector<long>\
    \ temp16;\n    std::vector<long> temp17;\n    std::vector<long> temp18;\n    std::vector<long>\
    \ temp19;\n    std::vector<long> temp20;\n    std::vector<long> temp21;\n    std::vector<long>\
    \ temp22;\n    std::vector<long> temp23;\n    std::vector<long> temp24;\n    std::vector<long>\
    \ temp25;\n    std::vector<long> temp26;\n    std::vector<long> temp27;\n    std::vector<long>\
    \ temp28;\n    std::vector<long> temp29;\n    std::vector<long> temp30;\n    std::vector<long>\
    \ temp31;\n    std::vector<long> temp32;\n    std::vector<long> temp33;\n    std::vector<long>\
    \ temp34;\n    std::vector<long> temp35;\n    std::vector<long> temp36;\n    std::vector<long>\
    \ temp37;\n    std::vector<long> temp38;\n    std::vector<long> temp39;\n    std::vector<long>\
    \ temp40;\n    std::vector<long> temp41;\n    std::vector<long> temp42;\n    std::vector<long>\
    \ temp43;\n    std::vector<long> temp44;\n    std::vector<long> temp45;\n    std::vector<long>",
  "  std::vector<long> result;\n  std::vector<int> sum;\n  int s = 0;\n  for (int\
    \ i = 0; i < nums.size(); i++) {\n    s = 0;\n    while (nums[i] != 0) {\n   \
    \   s += nums[i] % 10;\n      nums[i] /= 10;\n    }\n    sum.push_back(s);\n \
    \ }\n  for (int i = 0; i < nums.size(); i++) {\n    int min = sum[i];\n    int\
    \ index = i;\n    for (int j = i + 1; j < nums.size(); j++) {\n      if (sum[j]\
    \ < min) {\n        min = sum[j];\n        index = j;\n      }\n    }\n    int\
    \ temp = sum[i];\n    sum[i] = sum[index];\n    sum[index] = temp;\n    temp =\
    \ nums[i];\n    nums[i] = nums[index];\n    nums[index] = temp;\n  }\n  return\
    \ nums;", "    std::vector<long> result;\n    std::map<long, std::vector<long>>\
    \ map;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n\
    \        long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::map<int,\
    \ std::vector<long>> mp;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n    \
    \        sum += num % 10;\n            num /= 10;\n        }\n        mp[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = mp.begin(); it != mp.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n     \
    \       sum += num % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (long i = 0; i < nums.size(); i++) {\n    \
    \    long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n\
    \            sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (long i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::map<long,\
    \ std::vector<long>> m;\n    for (long i = 0; i < nums.size(); i++) {\n      \
    \  long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (long\
    \ i = 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::vector<long>\
    \ digits;\n    std::vector<long> index;\n    std::vector<long> sorted;\n    long\
    \ sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum = 0;\n  \
    \      while (nums[i] != 0) {\n            sum += nums[i] % 10;\n            nums[i]\
    \ /= 10;\n        }\n        digits.push_back(sum);\n        index.push_back(i);\n\
    \    }\n    for (int i = 0; i < digits.size(); i++) {\n        for (int j = 0;\
    \ j < digits.size() - 1; j++) {\n            if (digits[j] > digits[j + 1]) {\n\
    \                long temp = digits[j];\n                digits[j] = digits[j\
    \ + 1];\n                digits[j + 1] = temp;\n                temp = index[j];\n\
    \                index[j] = index[j + 1];\n                index[j + 1] = temp;\n\
    \            }\n        }\n    }\n    for (int i = 0; i < index.size(); i++) {\n\
    \        sorted.push_back(nums[index[i]]);\n    }\n    return sorted;", "    std::vector<long>\
    \ result;\n    std::vector<int> sum;\n    for(int i=0;i<nums.size();i++){\n  \
    \      int s=0;\n        int n=nums[i];\n        while(n!=0){\n            s+=n%10;\n\
    \            n/=10;\n        }\n        sum.push_back(s);\n    }\n    std::vector<int>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        index.push_back(i);\n \
    \   }\n    for(int i=0;i<nums.size();i++){\n        for(int j=i+1;j<nums.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                std::swap(sum[i],sum[j]);\n \
    \               std::swap(index[i],index[j]);\n            }\n        }\n    }\n\
    \    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> ans;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            ans.push_back(it->second[i]);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<int>\
    \ sums;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n \
    \       int num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        sums.push_back(sum);\n   \
    \ }\n    std::vector<int> sorted_sums = sums;\n    std::sort(sorted_sums.begin(),\
    \ sorted_sums.end());\n    for (int i = 0; i < sorted_sums.size(); i++) {\n  \
    \      for (int j = 0; j < sums.size(); j++) {\n            if (sorted_sums[i]\
    \ == sums[j]) {\n                result.push_back(nums[j]);\n                sums[j]\
    \ = -1;\n                break;\n            }\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::vector<long> temp;\n    std::vector<long>\
    \ temp2;\n    std::vector<long> temp3;\n    std::vector<long> temp4;\n    std::vector<long>\
    \ temp5;\n    std::vector<long> temp6;\n    std::vector<long> temp7;\n    std::vector<long>\
    \ temp8;\n    std::vector<long> temp9;\n    std::vector<long> temp10;\n    std::vector<long>\
    \ temp11;\n    std::vector<long> temp12;\n    std::vector<long> temp13;\n    std::vector<long>\
    \ temp14;\n    std::vector<long> temp15;\n    std::vector<long> temp16;\n    std::vector<long>\
    \ temp17;\n    std::vector<long> temp18;\n    std::vector<long> temp19;\n    std::vector<long>\
    \ temp20;\n    std::vector<long> temp21;\n    std::vector<long> temp22;\n    std::vector<long>\
    \ temp23;\n    std::vector<long> temp24;\n    std::vector<long> temp25;\n    std::vector<long>\
    \ temp26;\n    std::vector<long> temp27;\n    std::vector<long> temp28;\n    std::vector<long>\
    \ temp29;\n    std::vector<long> temp30;\n    std::vector<long> temp31;\n    std::vector<long>\
    \ temp32;\n    std::vector<long> temp33;\n    std::vector<long> temp34;\n    std::vector<long>\
    \ temp35;\n    std::vector<long> temp36;\n    std::vector<long> temp37;\n    std::vector<long>\
    \ temp38;\n    std::vector<long> temp39;\n    std::vector<long> temp40;\n    std::vector<long>\
    \ temp41;\n    std::vector<long> temp42;\n    std::vector<long> temp43;\n    std::vector<long>\
    \ temp44;\n    std::vector<long> temp45;\n    std::vector<long>", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        int sum = 0;\n        long num = nums[i];\n   \
    \     while (num != 0) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    std::map<long, std::vector<long>>\
    \ m;\n    for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n   \
    \     long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits = 0;\n    long index_of_number\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum_of_digits =\
    \ 0;\n        index_of_number = i;\n        while (nums[i] != 0) {\n         \
    \   sum_of_digits += nums[i] % 10;\n            nums[i] /= 10;\n        }\n  \
    \      sum.push_back(sum_of_digits);\n        index.push_back(index_of_number);\n\
    \    }\n    for (long i = 0; i < sum.size(); i++) {\n        for (long j = i +\
    \ 1; j < sum.size(); j++) {\n            if (sum[i] > sum[j]) {\n            \
    \    std::swap(sum[i], sum[j]);\n                std::swap(index[i], index[j]);\n\
    \            }\n        }\n    }\n    for (long i = 0; i < index.size(); i++)\
    \ {\n        result.push_back(nums[index[i]]);\n    }\n    return result;", " \
    \   std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        long\
    \ temp = nums[i];\n        if (temp < 0) {\n            temp = temp * -1;\n  \
    \      }\n        while (temp > 0) {\n            sum += temp % 10;\n        \
    \    temp = temp / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        long temp=0;\n        while(nums[i]!=0){\n\
    \            temp+=nums[i]%10;\n            nums[i]/=10;\n        }\n        sum.push_back(temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<sum.size();i++){\n    \
    \    for(int j=i+1;j<sum.size();j++){\n            if(sum[i]>sum[j]){\n      \
    \          long temp=sum[i];\n                sum[i]=sum[j];\n               \
    \ sum[j]=temp;\n                temp=index[i];\n                index[i]=index[j];\n\
    \                index[j]=temp;\n            }\n        }\n    }\n    for(int\
    \ i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::vector<long> sum;\n\
    \    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n        long\
    \ temp=0;\n        while(nums[i]!=0){\n            temp+=nums[i]%10;\n       \
    \     nums[i]/=10;\n        }\n        sum.push_back(temp);\n        index.push_back(i);\n\
    \    }\n    for(int i=0;i<sum.size();i++){\n        for(int j=i+1;j<sum.size();j++){\n\
    \            if(sum[i]>sum[j]){\n                long temp=sum[i];\n         \
    \       sum[i]=sum[j];\n                sum[j]=temp;\n                temp=index[i];\n\
    \                index[i]=index[j];\n                index[j]=temp;\n        \
    \    }\n        }\n    }\n    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    long sum_of_digits = 0;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        sum_of_digits = 0;\n        while (nums[i]\
    \ != 0) {\n            sum_of_digits += nums[i] % 10;\n            nums[i] /=\
    \ 10;\n        }\n        sum.push_back(sum_of_digits);\n        index.push_back(i);\n\
    \    }\n    for (int i = 0; i < sum.size(); i++) {\n        for (int j = i + 1;\
    \ j < sum.size(); j++) {\n            if (sum[i] > sum[j]) {\n               \
    \ std::swap(sum[i], sum[j]);\n                std::swap(index[i], index[j]);\n\
    \            }\n        }\n    }\n    for (int i = 0; i < index.size(); i++) {\n\
    \        result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::vector<int> sums;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        int sum = 0;\n        int num = nums[i];\n        while (num != 0)\
    \ {\n            sum += num % 10;\n            num /= 10;\n        }\n       \
    \ sums.push_back(sum);\n    }\n    std::vector<int> indices(nums.size());\n  \
    \  std::iota(indices.begin(), indices.end(), 0);\n    std::sort(indices.begin(),\
    \ indices.end(), [&sums](int i1, int i2) {\n        return sums[i1] < sums[i2];\n\
    \    });\n    for (int i = 0; i < indices.size(); i++) {\n        result.push_back(nums[indices[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ int sum = 0;\n        int n = nums[i];\n        while (n != 0) {\n         \
    \   sum += n % 10;\n            n /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::sort(it->second.begin(),\
    \ it->second.end());\n        for (int i = 0; i < it->second.size(); i++) {\n\
    \            result.push_back(it->second[i]);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        if (num < 0) {\n            num = num * -1;\n        }\n \
    \       while (num > 0) {\n            sum += num % 10;\n            num = num\
    \ / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n    for (auto\
    \ it = map.begin(); it != map.end(); it++) {\n        std::vector<long> v = it->second;\n\
    \        for (int i = 0; i < v.size(); i++) {\n            result.push_back(v[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        if (nums[i] < 0) {\n            nums[i] = nums[i] *\
    \ -1;\n        }\n        while (nums[i] > 0) {\n            sum += nums[i] %\
    \ 10;\n            nums[i] = nums[i] / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ temp;\n    std::vector<long> temp2;\n    std::vector<long> temp3;\n    std::vector<long>\
    \ temp4;\n    std::vector<long> temp5;\n    std::vector<long> temp6;\n    std::vector<long>\
    \ temp7;\n    std::vector<long> temp8;\n    std::vector<long> temp9;\n    std::vector<long>\
    \ temp10;\n    std::vector<long> temp11;\n    std::vector<long> temp12;\n    std::vector<long>\
    \ temp13;\n    std::vector<long> temp14;\n    std::vector<long> temp15;\n    std::vector<long>\
    \ temp16;\n    std::vector<long> temp17;\n    std::vector<long> temp18;\n    std::vector<long>\
    \ temp19;\n    std::vector<long> temp20;\n    std::vector<long> temp21;\n    std::vector<long>\
    \ temp22;\n    std::vector<long> temp23;\n    std::vector<long> temp24;\n    std::vector<long>\
    \ temp25;\n    std::vector<long> temp26;\n    std::vector<long> temp27;\n    std::vector<long>\
    \ temp28;\n    std::vector<long> temp29;\n    std::vector<long> temp30;\n    std::vector<long>\
    \ temp31;\n    std::vector<long> temp32;\n    std::vector<long> temp33;\n    std::vector<long>\
    \ temp34;\n    std::vector<long> temp35;\n    std::vector<long> temp36;\n    std::vector<long>\
    \ temp37;\n    std::vector<long> temp38;\n    std::vector<long> temp39;\n    std::vector<long>\
    \ temp40;\n    std::vector<long> temp41;\n    std::vector<long> temp42;\n    std::vector<long>\
    \ temp43;\n    std::vector<long> temp44;\n    std::vector<long> temp45;\n    std::vector<long>",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> map;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        while (num != 0) {\n            sum += num % 10;\n       \
    \     num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n   \
    \ for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i = 0;\
    \ i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        long num = nums[i];\n        if (num < 0) {\n      \
    \      num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> m;\n    for (int i = 0; i < nums.size(); i++) {\n       \
    \ long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> res;\n    std::map<long, std::vector<long>> m;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long n = nums[i];\n\
    \        if (n < 0) {\n            n = -n;\n        }\n        while (n > 0) {\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (int\
    \ i = 0; i < it->second.size(); i++) {\n            res.push_back(it->second[i]);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    for (auto i : nums) {\n        long sum = 0;\n        long\
    \ num = i;\n        while (num != 0) {\n            sum += num % 10;\n       \
    \     num /= 10;\n        }\n        sum_of_digits.push_back(sum);\n    }\n  \
    \  std::vector<long> sorted_sum_of_digits = sum_of_digits;\n    std::sort(sorted_sum_of_digits.begin(),\
    \ sorted_sum_of_digits.end());\n    for (auto i : sorted_sum_of_digits) {\n  \
    \      for (int j = 0; j < sum_of_digits.size(); j++) {\n            if (sum_of_digits[j]\
    \ == i) {\n                result.push_back(nums[j]);\n                sum_of_digits[j]\
    \ = -1;\n                break;\n            }\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<int, std::vector<long>> m;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n        int num =\
    \ nums[i];\n        while (num != 0) {\n            sum += num % 10;\n       \
    \     num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n    }\n    for\
    \ (auto it = m.begin(); it != m.end(); it++) {\n        for (int i = 0; i < it->second.size();\
    \ i++) {\n            result.push_back(it->second[i]);\n        }\n    }\n   \
    \ return result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      long num = nums[i];\n        while (num != 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    std::map<int,\
    \ std::vector<long>> mp;\n    for (int i = 0; i < nums.size(); i++) {\n      \
    \  int sum = 0;\n        int num = nums[i];\n        if (num < 0) num = -num;\n\
    \        while (num) {\n            sum += num % 10;\n            num /= 10;\n\
    \        }\n        mp[sum].push_back(nums[i]);\n    }\n    for (auto it = mp.begin();\
    \ it != mp.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            res.push_back(it->second[i]);\n        }\n    }\n    return res;",
  "    std::vector<long> res;\n    std::map<long, std::vector<long>> m;\n    for (int\
    \ i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long num = nums[i];\n\
    \        if (num < 0) {\n            num = -num;\n        }\n        while (num)\
    \ {\n            sum += num % 10;\n            num /= 10;\n        }\n       \
    \ m[sum].push_back(nums[i]);\n    }\n    for (auto it = m.begin(); it != m.end();\
    \ it++) {\n        for (int i = 0; i < it->second.size(); i++) {\n           \
    \ res.push_back(it->second[i]);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        int sum = 0;\n        long num = nums[i];\n   \
    \     if (num < 0) {\n            num = num * -1;\n        }\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num = num / 10;\n        }\n\
    \        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::vector<long> sum;\n    std::vector<long>\
    \ index;\n    long sum_of_digits = 0;\n    for (int i = 0; i < nums.size(); i++)\
    \ {\n        sum_of_digits = 0;\n        while (nums[i] != 0) {\n            sum_of_digits\
    \ += nums[i] % 10;\n            nums[i] /= 10;\n        }\n        sum.push_back(sum_of_digits);\n\
    \        index.push_back(i);\n    }\n    for (int i = 0; i < sum.size(); i++)\
    \ {\n        for (int j = i + 1; j < sum.size(); j++) {\n            if (sum[i]\
    \ > sum[j]) {\n                long temp = sum[i];\n                sum[i] = sum[j];\n\
    \                sum[j] = temp;\n                temp = index[i];\n          \
    \      index[i] = index[j];\n                index[j] = temp;\n            }\n\
    \        }\n    }\n    for (int i = 0; i < index.size(); i++) {\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> m;\n    for (long i = 0; i < nums.size(); i++) {\n      \
    \  long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n  \
    \          sum += num % 10;\n            num /= 10;\n        }\n        m[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = m.begin(); it != m.end(); it++) {\n        for (long\
    \ i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        while (num != 0) {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      long sum_of_digits=0;\n        long num=nums[i];\n        while(num!=0){\n\
    \            sum_of_digits+=num%10;\n            num/=10;\n        }\n       \
    \ sum.push_back(sum_of_digits);\n        index.push_back(i);\n    }\n    for(int\
    \ i=0;i<sum.size();i++){\n        for(int j=i+1;j<sum.size();j++){\n         \
    \   if(sum[i]>sum[j]){\n                long temp=sum[i];\n                sum[i]=sum[j];\n\
    \                sum[j]=temp;\n                temp=index[i];\n              \
    \  index[i]=index[j];\n                index[j]=temp;\n            }\n       \
    \ }\n    }\n    for(int i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = -num;\n        }\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ long> map;\n    std::map<long, long>::iterator it;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        long sum = 0;\n        long temp = nums[i];\n \
    \       while (temp != 0) {\n            sum += temp % 10;\n            temp /=\
    \ 10;\n        }\n        map.insert(std::pair<long, long>(sum, nums[i]));\n \
    \   }\n    for (it = map.begin(); it != map.end(); it++) {\n        result.push_back(it->second);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    for(int i=0;i<nums.size();i++){\n        long temp=0;\n        long\
    \ temp2=nums[i];\n        while(temp2!=0){\n            temp+=temp2%10;\n    \
    \        temp2/=10;\n        }\n        sum.push_back(temp);\n    }\n    for(int\
    \ i=0;i<nums.size();i++){\n        long min=sum[i];\n        int index=i;\n  \
    \      for(int j=i+1;j<nums.size();j++){\n            if(sum[j]<min){\n      \
    \          min=sum[j];\n                index=j;\n            }\n        }\n \
    \       long temp=sum[i];\n        sum[i]=sum[index];\n        sum[index]=temp;\n\
    \        temp=nums[i];\n        nums[i]=nums[index];\n        nums[index]=temp;\n\
    \    }\n    for(int i=0;i<nums.size();i++){\n        result.push_back(nums[i]);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   int sum = 0;\n        int num = nums[i];\n        if (num < 0) {\n       \
    \     num = num * -1;\n        }\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ temp = it->second;\n        for (int i = 0; i < temp.size(); i++) {\n      \
    \      result.push_back(temp[i]);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::vector<long> sum_of_digits;\n    std::vector<long>\
    \ index;\n    for(int i=0;i<nums.size();i++){\n        long sum = 0;\n       \
    \ long num = nums[i];\n        while(num!=0){\n            sum += num%10;\n  \
    \          num = num/10;\n        }\n        sum_of_digits.push_back(sum);\n \
    \       index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n    \
    \    for(int j=i+1;j<nums.size();j++){\n            if(sum_of_digits[i]>sum_of_digits[j]){\n\
    \                long temp = sum_of_digits[i];\n                sum_of_digits[i]\
    \ = sum_of_digits[j];\n                sum_of_digits[j] = temp;\n            \
    \    temp = index[i];\n                index[i] = index[j];\n                index[j]\
    \ = temp;\n            }\n        }\n    }\n    for(int i=0;i<nums.size();i++){\n\
    \        result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::map<int, std::vector<long>> map;\n    for (int i = 0; i <\
    \ nums.size(); i++) {\n        int sum = 0;\n        int num = nums[i];\n    \
    \    if (num < 0) {\n            num = num * -1;\n        }\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num = num / 10;\n        }\n\
    \        map[sum].push_back(nums[i]);\n    }\n    for (auto it = map.begin();\
    \ it != map.end(); it++) {\n        for (int i = 0; i < it->second.size(); i++)\
    \ {\n            result.push_back(it->second[i]);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = num * -1;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        std::vector<long>\
    \ v = it->second;\n        for (int i = 0; i < v.size(); i++) {\n            result.push_back(v[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    int i,j,k;\n    int n = nums.size();\n\
    \    for(i=0;i<n;i++)\n    {\n        long s = 0;\n        long num = nums[i];\n\
    \        while(num!=0)\n        {\n            s = s + num%10;\n            num\
    \ = num/10;\n        }\n        sum.push_back(s);\n        index.push_back(i);\n\
    \    }\n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n \
    \           if(sum[i]>sum[j])\n            {\n                long temp = sum[i];\n\
    \                sum[i] = sum[j];\n                sum[j] = temp;\n          \
    \      temp = index[i];\n                index[i] = index[j];\n              \
    \  index[j] = temp;\n            }\n        }\n    }\n    for(i=0;i<n;i++)\n \
    \   {\n        result.push_back(nums[index[i]]);\n    }\n    return result;",
  "    std::vector<long> result;\n    std::map<long, std::vector<long>> map;\n   \
    \ for (int i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        long\
    \ num = nums[i];\n        while (num != 0) {\n            sum += num % 10;\n \
    \           num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum;\n    std::vector<long> index;\n    for(int i=0;i<nums.size();i++){\n  \
    \      int temp=nums[i];\n        int sum_temp=0;\n        while(temp!=0){\n \
    \           sum_temp+=temp%10;\n            temp/=10;\n        }\n        sum.push_back(sum_temp);\n\
    \        index.push_back(i);\n    }\n    for(int i=0;i<nums.size();i++){\n   \
    \     for(int j=i+1;j<nums.size();j++){\n            if(sum[i]>sum[j]){\n    \
    \            long temp=sum[i];\n                sum[i]=sum[j];\n             \
    \   sum[j]=temp;\n                temp=nums[i];\n                nums[i]=nums[j];\n\
    \                nums[j]=temp;\n                temp=index[i];\n             \
    \   index[i]=index[j];\n                index[j]=temp;\n            }\n      \
    \      else if(sum[i]==sum[j]){\n                if(index[i]>index[j]){\n    \
    \                long temp=sum[i];\n                    sum[i]=sum[j];\n     \
    \               sum[j]=temp;\n                    temp=nums[i];\n            \
    \        nums[i]=nums[j];\n                    nums[j]=temp;\n               \
    \     temp=index[i];\n                    index[i]=index[j];\n               \
    \     index[j]=temp;\n                }\n            }\n        }\n    }\n   \
    \ return nums;", "    std::vector<long> result;\n    std::map<int, std::vector<long>>\
    \ map;\n    for (int i = 0; i < nums.size(); i++) {\n        int sum = 0;\n  \
    \      int num = nums[i];\n        if (num < 0) {\n            num = num * -1;\n\
    \        }\n        while (num > 0) {\n            sum += num % 10;\n        \
    \    num = num / 10;\n        }\n        map[sum].push_back(nums[i]);\n    }\n\
    \    for (auto it = map.begin(); it != map.end(); it++) {\n        for (int i\
    \ = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<int,\
    \ std::vector<long>> map;\n    for (long num : nums) {\n        int sum = 0;\n\
    \        if (num < 0) {\n            num = -num;\n        }\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n  \
    \      map[sum].push_back(num);\n    }\n    for (auto it = map.begin(); it !=\
    \ map.end(); it++) {\n        for (long num : it->second) {\n            result.push_back(num);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::map<long,\
    \ std::vector<long>> map;\n    for (int i = 0; i < nums.size(); i++) {\n     \
    \   long sum = 0;\n        long num = nums[i];\n        while (num != 0) {\n \
    \           sum += num % 10;\n            num /= 10;\n        }\n        map[sum].push_back(nums[i]);\n\
    \    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        for\
    \ (int i = 0; i < it->second.size(); i++) {\n            result.push_back(it->second[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::vector<long>\
    \ sum_of_digits;\n    std::vector<long> index;\n    std::vector<long>::iterator\
    \ it;\n    long sum = 0;\n    long i = 0;\n    for (it = nums.begin(); it != nums.end();\
    \ it++) {\n        sum = 0;\n        while (*it != 0) {\n            sum += *it\
    \ % 10;\n            *it /= 10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \        index.push_back(i);\n        i++;\n    }\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        for (int j = 0; j < nums.size() - i - 1; j++) {\n          \
    \  if (sum_of_digits[j] > sum_of_digits[j + 1]) {\n                std::swap(sum_of_digits[j],\
    \ sum_of_digits[j + 1]);\n                std::swap(index[j], index[j + 1]);\n\
    \            }\n        }\n    }\n    for (int i = 0; i < nums.size(); i++) {\n\
    \        result.push_back(nums[index[i]]);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    std::map<long, std::vector<long>> m;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        long sum = 0;\n        long num = nums[i];\n        while (num\
    \ != 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n \
    \       m[sum].push_back(nums[i]);\n    }\n    for (auto it = m.begin(); it !=\
    \ m.end(); it++) {\n        for (long i = 0; i < it->second.size(); i++) {\n \
    \           res.push_back(it->second[i]);\n        }\n    }\n    return res;",
  "    std::vector<long> result;\n    std::vector<long> sum_of_digits;\n    std::vector<long>\
    \ index;\n    std::vector<long>::iterator it;\n    long sum;\n    for(long i=0;i<nums.size();i++){\n\
    \        sum=0;\n        long temp=nums[i];\n        while(temp!=0){\n       \
    \     sum+=temp%10;\n            temp/=10;\n        }\n        sum_of_digits.push_back(sum);\n\
    \        index.push_back(i);\n    }\n    for(long i=0;i<sum_of_digits.size();i++){\n\
    \        for(long j=i+1;j<sum_of_digits.size();j++){\n            if(sum_of_digits[i]>sum_of_digits[j]){\n\
    \                long temp=sum_of_digits[i];\n                sum_of_digits[i]=sum_of_digits[j];\n\
    \                sum_of_digits[j]=temp;\n                temp=index[i];\n    \
    \            index[i]=index[j];\n                index[j]=temp;\n            }\n\
    \        }\n    }\n    for(long i=0;i<index.size();i++){\n        result.push_back(nums[index[i]]);\n\
    \    }\n    return result;"]
stop_tokens:
- "\n}"

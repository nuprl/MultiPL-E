name: HumanEval_91_is_bored
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
  \ of words, and your task is to count the number\n// of boredoms. A boredom is a\
  \ sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
  \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n// >>>\
  \ is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n// (1)\n\
  long is_bored(std::string S) {\n"
tests: "}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
  Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
  \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
  )) == (0));\n    assert(candidate((\"I feel good today. I will be productive. will\
  \ kill It\")) == (2));\n    assert(candidate((\"You and I are going for a walk\"\
  )) == (0));\n}\n"
completions: ["    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    std::stringstream ss(S);\n    std::string word;\n    long\
    \ count = 0;\n    while(ss >> word) {\n        if(word == \"I\") {\n         \
    \   count++;\n        }\n    }\n    return count;", "    long count = 0;\n   \
    \ std::stringstream ss(S);\n    std::string word;\n    while(ss >> word) {\n \
    \       if(word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    // Your code here\n    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::istringstream iss(S);\n    std::string word;\n    while (iss >>\
    \ word) {\n        if (word == \"I\") {\n            count++;\n        }\n   \
    \ }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long count = 0;\n    while(ss >> word) {\n\
    \        if(word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    int count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long count = 0;\n    while(ss >> word) {\n\
    \        if(word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    // your code here\n    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "    std::stringstream ss(S);\n    std::string\
    \ word;\n    long boredoms = 0;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "  // Your code here\n  long count = 0;\n  std::stringstream\
    \ ss(S);\n  std::string word;\n  while(ss >> word) {\n    if(word == \"I\") {\n\
    \      count++;\n    }\n  }\n  return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    // Your\
    \ code here\n    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "  long boredoms = 0;\n  bool is_bored\
    \ = false;\n  for (int i = 0; i < S.length(); i++) {\n    if (S[i] == 'I') {\n\
    \      is_bored = true;\n    } else if (S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!') {\n      if (is_bored) {\n        boredoms++;\n      }\n      is_bored\
    \ = false;\n    }\n  }\n  return boredoms;", "    long count = 0;\n    for(int\
    \ i = 0; i < S.length(); i++) {\n        if(S[i] == 'I') {\n            count++;\n\
    \        }\n    }\n    return count;", "  // your code here\n  long count = 0;\n\
    \  std::stringstream ss(S);\n  std::string word;\n  while(ss >> word){\n    if(word\
    \ == \"I\"){\n      count++;\n    }\n  }\n  return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    // your code here\n    long count\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(std::getline(ss, word, ' ')) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "  long boredoms\
    \ = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word)\
    \ {\n    if (word == \"I\") {\n      boredoms++;\n    }\n  }\n  return boredoms;",
  "  long count = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss\
    \ >> word) {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;",
  "  long boredoms = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while\
    \ (ss >> word) {\n    if (word == \"I\") {\n      boredoms++;\n    }\n  }\n  return\
    \ boredoms;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "  // Your code here\n  long boredoms =\
    \ 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word) {\n\
    \    if (word == \"I\") {\n      boredoms++;\n    }\n  }\n  return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long count = 0;\n    while(ss >> word) {\n\
    \        if(word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "  long count = 0;\n  std::stringstream ss(S);\n  std::string word;\n\
    \  while (ss >> word) {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n\
    \  return count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n   \
    \ std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;", "    long count\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    std::stringstream ss(S);\n    std::string word;\n    long\
    \ count = 0;\n    while(ss >> word) {\n        if(word == \"I\") {\n         \
    \   count++;\n        }\n    }\n    return count;", "    long boredoms = 0;\n\
    \    std::stringstream ss(S);\n    std::string word;\n    while (ss >> word) {\n\
    \        if (word == \"I\") {\n            boredoms++;\n        }\n    }\n   \
    \ return boredoms;", "  long boredoms = 0;\n  std::stringstream ss(S);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"I\") {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;", "    std::stringstream ss(S);\n    std::string\
    \ word;\n    long count = 0;\n    while(ss >> word) {\n        if(word == \"I\"\
    ) {\n            count++;\n        }\n    }\n    return count;", "    long count\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;", "  // your\
    \ code here\n  int count = 0;\n  std::stringstream ss(S);\n  std::string word;\n\
    \  while(ss >> word){\n    if(word == \"I\"){\n      count++;\n    }\n  }\n  return\
    \ count;", "    long count = 0;\n    for(int i = 0; i < S.length(); i++) {\n \
    \       if(S[i] == 'I') {\n            count++;\n        }\n    }\n    return\
    \ count;", "    // Your code here\n    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "    std::stringstream ss(S);\n    std::string\
    \ word;\n    long count = 0;\n    while(ss >> word) {\n        if(word == \"I\"\
    ) {\n            count++;\n        }\n    }\n    return count;", "  long boredoms\
    \ = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word)\
    \ {\n    if (word == \"I\") {\n      boredoms++;\n    }\n  }\n  return boredoms;",
  "    std::stringstream ss(S);\n    std::string word;\n    long count = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "  long count = 0;\n  std::stringstream ss(S);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"I\") {\n      count++;\n  \
    \  }\n  }\n  return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "  // your code here\n\
    \  long count = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while(ss\
    \ >> word){\n    if(word == \"I\"){\n      count++;\n    }\n  }\n  return count;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "  long boredoms = 0;\n  std::stringstream ss(S);\n\
    \  std::string word;\n  while (ss >> word) {\n    if (word == \"I\") {\n     \
    \ boredoms++;\n    }\n  }\n  return boredoms;", "  long count = 0;\n  std::stringstream\
    \ ss(S);\n  std::string word;\n  while (ss >> word) {\n    if (word == \"I\")\
    \ {\n      count++;\n    }\n  }\n  return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "  int boredoms\
    \ = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word)\
    \ {\n    if (word == \"I\") {\n      boredoms++;\n    }\n  }\n  return boredoms;",
  "    std::stringstream ss(S);\n    std::string word;\n    long count = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "  long count = 0;\n  std::stringstream ss(S);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"I\") {\n      count++;\n  \
    \  }\n  }\n  return count;", "    int boredoms = 0;\n    std::string delimiter\
    \ = \"!?.\";\n    size_t pos = 0;\n    std::string token;\n    while ((pos = S.find(delimiter))\
    \ != std::string::npos) {\n        token = S.substr(0, pos);\n        if (token.find(\"\
    I\") == 0) {\n            boredoms++;\n        }\n        S.erase(0, pos + delimiter.length());\n\
    \    }\n    return boredoms;", "    std::stringstream ss(S);\n    std::string\
    \ word;\n    long count = 0;\n    while(ss >> word) {\n        if(word == \"I\"\
    ) {\n            count++;\n        }\n    }\n    return count;", "    long count\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    // Your code here\n    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "  long count = 0;\n  std::stringstream ss(S);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"I\") {\n      count++;\n  \
    \  }\n  }\n  return count;", "    // your code here\n    long count = 0;\n   \
    \ std::stringstream ss(S);\n    std::string word;\n    while(ss >> word) {\n \
    \       if(word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    for(int i = 0; i < S.length(); i++) {\n \
    \       if(S[i] == 'I') {\n            count++;\n        }\n    }\n    return\
    \ count;", "  long boredoms = 0;\n  std::stringstream ss(S);\n  std::string word;\n\
    \  while (ss >> word) {\n    if (word == \"I\") {\n      boredoms++;\n    }\n\
    \  }\n  return boredoms;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    std::stringstream ss(S);\n    std::string word;\n    long\
    \ boredoms = 0;\n    while (ss >> word) {\n        if (word == \"I\") {\n    \
    \        boredoms++;\n        }\n    }\n    return boredoms;", "    long boredoms\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "    // Your code here\n    long count = 0;\n \
    \   std::stringstream ss(S);\n    std::string word;\n    while(ss >> word) {\n\
    \        if(word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::istringstream iss(S);\n\
    \    std::string word;\n    while (iss >> word) {\n        if (word == \"I\")\
    \ {\n            count++;\n        }\n    }\n    return count;", "    long count\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "  long boredoms = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while\
    \ (ss >> word) {\n    if (word == \"I\") {\n      boredoms++;\n    }\n  }\n  return\
    \ boredoms;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "  long count = 0;\n  std::stringstream\
    \ ss(S);\n  std::string word;\n  while (ss >> word) {\n    if (word == \"I\")\
    \ {\n      count++;\n    }\n  }\n  return count;", "  long count = 0;\n  std::stringstream\
    \ ss(S);\n  std::string word;\n  while (ss >> word) {\n    if (word == \"I\")\
    \ {\n      count++;\n    }\n  }\n  return count;", "  // your code here\n  std::stringstream\
    \ ss(S);\n  std::string word;\n  long count = 0;\n  while(ss >> word){\n    if(word\
    \ == \"I\"){\n      count++;\n    }\n  }\n  return count;", "    long boredoms\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "  long count = 0;\n  std::stringstream ss(S);\n\
    \  std::string word;\n  while (ss >> word) {\n    if (word == \"I\") {\n     \
    \ count++;\n    }\n  }\n  return count;", "    std::stringstream ss(S);\n    std::string\
    \ word;\n    long count = 0;\n    while(ss >> word) {\n        if(word == \"I\"\
    ) {\n            count++;\n        }\n    }\n    return count;", "    // Your\
    \ code here\n    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n \
    \   while (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    // Your code here\n    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string token;\n    while(std::getline(ss, token, '.')) {\n\
    \        std::stringstream ss2(token);\n        std::string token2;\n        while(std::getline(ss2,\
    \ token2, ' ')) {\n            if(token2 == \"I\") {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;",
  "  long count = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss\
    \ >> word) {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;",
  "    long boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n \
    \   while (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while\
    \ (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n    \
    \    }\n    }\n    return boredoms;", "    int boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "  long count = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss\
    \ >> word) {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;",
  "    // Your code here\n    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "  long count = 0;\n  std::stringstream\
    \ ss(S);\n  std::string word;\n  while (ss >> word) {\n    if (word == \"I\")\
    \ {\n      count++;\n    }\n  }\n  return count;", "  // your code here\n  std::stringstream\
    \ ss(S);\n  std::string word;\n  long count = 0;\n  while(ss >> word){\n    if(word\
    \ == \"I\"){\n      count++;\n    }\n  }\n  return count;", "  // your code here\n\
    \  long boredoms = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while(ss\
    \ >> word) {\n    if(word == \"I\") {\n      boredoms++;\n    }\n  }\n  return\
    \ boredoms;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    std::stringstream ss(S);\n    std::string\
    \ word;\n    long boredoms = 0;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    // Your code here\n    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(std::getline(ss, word, ' ')) {\n        if(word\
    \ == \"I\") {\n            count++;\n        }\n    }\n    return count;", " \
    \   std::istringstream iss(S);\n    std::string word;\n    long boredoms = 0;\n\
    \    while (iss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "\tlong count = 0;\n\tstd::stringstream\
    \ ss(S);\n\tstd::string word;\n\twhile (ss >> word) {\n\t\tif (word == \"I\")\
    \ {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    // Your code here\n    long count=0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss>>word){\n        if(word==\"I\"\
    ){\n            count++;\n        }\n    }\n    return count;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long count = 0;\n    while(ss >> word) {\n\
    \        if(word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "  long count = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss\
    \ >> word) {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;",
  "    std::stringstream ss(S);\n    std::string word;\n    long count = 0;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long count = 0;\n    while(ss >> word) {\n\
    \        if(word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "  long count = 0;\n  std::stringstream ss(S);\n  std::string word;\n\
    \  while (ss >> word) {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n\
    \  return count;", "    long boredoms = 0;\n    std::stringstream ss(S);\n   \
    \ std::string word;\n    while (ss >> word) {\n        if (word == \"I\") {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;", "    long count\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "  long count = 0;\n  std::stringstream ss(S);\n  std::string\
    \ word;\n  while (ss >> word) {\n    if (word == \"I\") {\n      count++;\n  \
    \  }\n  }\n  return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long count =\
    \ 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    // your code here\n    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    int count\
    \ = 0;\n    std::string word = \"I\";\n    std::stringstream ss(S);\n    std::string\
    \ token;\n    while (std::getline(ss, token, '.')) {\n        if (token.find(word)\
    \ != std::string::npos) {\n            count++;\n        }\n    }\n    return\
    \ count;", "    std::stringstream ss(S);\n    std::string word;\n    long count\
    \ = 0;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    std::stringstream ss(S);\n    std::string\
    \ word;\n    long count = 0;\n    while(ss >> word) {\n        if(word == \"I\"\
    ) {\n            count++;\n        }\n    }\n    return count;", "    long count\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"I\") {\n            count++;\n        }\n    }\n   \
    \ return count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    std::stringstream\
    \ ss(S);\n    std::string word;\n    long count = 0;\n    while(ss >> word) {\n\
    \        if(word == \"I\") {\n            count++;\n        }\n    }\n    return\
    \ count;", "  long count = 0;\n  std::stringstream ss(S);\n  std::string word;\n\
    \  while (ss >> word) {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n\
    \  return count;", "    std::stringstream ss(S);\n    std::string word;\n    long\
    \ count = 0;\n    while(ss >> word) {\n        if(word == \"I\") {\n         \
    \   count++;\n        }\n    }\n    return count;", "    // your code here\n \
    \   long count=0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss>>word){\n\
    \        if(word==\"I\"){\n            count++;\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    std::stringstream ss(S);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    // your code\
    \ here\n    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n\
    \    while(ss >> word) {\n        if(word == \"I\") {\n            count++;\n\
    \        }\n    }\n    return count;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "  long count = 0;\n  std::stringstream ss(S);\n  std::string\
    \ word;\n  while (std::getline(ss, word, ' ')) {\n    if (word == \"I\") {\n \
    \     count++;\n    }\n  }\n  return count;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    std::stringstream ss(S);\n    std::string word;\n\
    \    long count = 0;\n    while(ss >> word) {\n        if(word == \"I\") {\n \
    \           count++;\n        }\n    }\n    return count;", "  long count = 0;\n\
    \  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word) {\n   \
    \ if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;", "    long\
    \ count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    std::stringstream ss(S);\n    std::string word;\n\
    \    long count = 0;\n    while(ss >> word) {\n        if(word == \"I\") {\n \
    \           count++;\n        }\n    }\n    return count;", "    long boredoms\
    \ = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"I\") {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "    std::stringstream ss(S);\n    std::string\
    \ word;\n    long count = 0;\n    while(ss >> word) {\n        if(word == \"I\"\
    ) {\n            count++;\n        }\n    }\n    return count;", "  // your code\
    \ here\n  long count = 0;\n  std::stringstream ss(S);\n  std::string word;\n \
    \ while(ss >> word){\n    if(word == \"I\"){\n      count++;\n    }\n  }\n  return\
    \ count;", "    // your code here\n    long count = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while(ss >> word) {\n        if(word == \"\
    I\") {\n            count++;\n        }\n    }\n    return count;", "  long count\
    \ = 0;\n  std::stringstream ss(S);\n  std::string word;\n  while (ss >> word)\
    \ {\n    if (word == \"I\") {\n      count++;\n    }\n  }\n  return count;", " \
    \   long boredoms = 0;\n    std::stringstream ss(S);\n    std::string word;\n\
    \    while (ss >> word) {\n        if (word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;", "    long boredoms = 0;\n    std::stringstream\
    \ ss(S);\n    std::string word;\n    while (ss >> word) {\n        if (word ==\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;", "    long boredoms\
    \ = 0;\n    std::string word = \"\";\n    for (int i = 0; i < S.length(); i++)\
    \ {\n        if (S[i] == ' ') {\n            if (word == \"I\") {\n          \
    \      boredoms++;\n            }\n            word = \"\";\n        } else if\
    \ (S[i] == '.' || S[i] == '?' || S[i] == '!') {\n            if (word == \"I\"\
    ) {\n                boredoms++;\n            }\n            word = \"\";\n  \
    \      } else {\n            word += S[i];\n        }\n    }\n    return boredoms;",
  "    long count = 0;\n    std::stringstream ss(S);\n    std::string word;\n    while(ss\
    \ >> word) {\n        if(word == \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    std::stringstream ss(S);\n\
    \    std::string word;\n    while(ss >> word) {\n        if(word == \"I\") {\n\
    \            count++;\n        }\n    }\n    return count;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_49_modp
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk99s8x4s: /tmp/tmpk99s8x4s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        return p - modp(-n, p);\n    }\n    long res = 1;\n\
    \    long mult = n % p;\n    while (n > 0) {\n        if (n & 1) {\n         \
    \   res = (res * mult) % p;\n        }\n        mult = (mult * mult) % p;\n  \
    \      n >>= 1;\n    }\n    return res;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1_5ty6r9: /tmp/tmp1_5ty6r9.cpp:32: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n/2, p);\n    res = (res * res) % p;\n    if (n % 2\
    \ == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    long res = 1;\n    long\
    \ b = n;\n    while (p > 0) {\n        if (p & 1) {\n            res = (res *\
    \ b) % p;\n        }\n        p >>= 1;\n        b = (b * b) % p;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n == 1) return n % p;\n    if (n % 2 == 0)\
    \ {\n        long t = modp(n / 2, p);\n        return (t * t) % p;\n    } else\
    \ {\n        long t = modp(n / 2, p);\n        return (2 * t * t) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp88b2prwk: /tmp/tmp88b2prwk.cpp:28: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    } else {\n        return (modp(n - 1,\
    \ p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsr6nv71s: /tmp/tmpsr6nv71s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        long\
    \ x = modp(n / 2, p);\n        return (x * x) % p;\n    }\n    return (modp(n\
    \ - 1, p) * n) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpcni2382k: /tmp/tmpcni2382k.cpp:28: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    assert(n >= 0);\n    if (n == 0) {\n        return 1;\n    }\n    long res\
    \ = modp(n / 2, p);\n    res = (res * res) % p;\n    if (n % 2 == 1) {\n     \
    \   res = (res * 2) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    if (n == 0) {\n        return\
    \ 1;\n    }\n    long half = modp(n / 2, p);\n    if (n % 2 == 0) {\n        return\
    \ (half * half) % p;\n    } else {\n        return (half * half * n) % p;\n  \
    \  }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp307p8z9s: /tmp/tmp307p8z9s.cpp:32: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n == 1) return n;\n    long res = modp(n/2, p);\n    res = (res\
    \ * res) % p;\n    if (n % 2 == 1) res = (res * n) % p;\n    return res;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7zygqufq: /tmp/tmp7zygqufq.cpp:25: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return\
    \ (t * t) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5ecya1jv: /tmp/tmp5ecya1jv.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long res = modp(n /\
    \ 2, p);\n        return (res * res) % p;\n    }\n    return (modp(n - 1, p) *\
    \ n) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdndu326j: /tmp/tmpdndu326j.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    long res = modp(n / 2, p);\n    res = (res * res)\
    \ % p;\n    if (n % 2 == 1) res = (res * 2) % p;\n    return res;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return\
    \ t * t % p;\n    } else {\n        return modp(n - 1, p) * n % p;\n    }\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6tphpmf4: /tmp/tmp6tphpmf4.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    long x = modp(n/2, p);\n    x = (x * x) % p;\n\
    \    if (n % 2 == 1) {\n        x = (x * 2) % p;\n    }\n    return x;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long half = modp(n /\
    \ 2, p);\n        return (half * half) % p;\n    }\n    else {\n        return\
    \ (modp(n - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpr1p0f4xa: /tmp/tmpr1p0f4xa.cpp:29: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long x = modp(n / 2,\
    \ p);\n        return (x * x) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprh6hifsq: /tmp/tmprh6hifsq.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    long res = modp(n / 2, p);\n    res = (res * res)\
    \ % p;\n    if (n % 2 == 1) {\n        res = (res * 2) % p;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n % 2 == 1) {\n            res = (res * 2) %\
    \ p;\n        }\n        n = n / 2;\n        if (n > 0) {\n            res = (res\
    \ * res) % p;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpnstazkmp: /tmp/tmpnstazkmp.cpp:30: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  if (n < 0) {\n    n = (n % p) + p;\n  }\n  return n % p;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpo3n6w0nf: /tmp/tmpo3n6w0nf.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long y = modp(n / 2,\
    \ p);\n        return (y * y) % p;\n    }\n    else {\n        return (modp(n\
    \ - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpo_ygtbhw: /tmp/tmpo_ygtbhw.cpp:29: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n & 1) {\n            res = (res * n) % p;\n\
    \        }\n        n = n >> 1;\n        n = (n * n) % p;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063532
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long temp = modp(n /\
    \ 2, p);\n        return (temp * temp) % p;\n    }\n    return (modp(n - 1, p)\
    \ * n) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmptiaqyttp: /tmp/tmptiaqyttp.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n == 1) {\n        return n;\n    }\n    long\
    \ half = modp(n / 2, p);\n    long result = (half * half) % p;\n    if (n % 2\
    \ == 1) {\n        result = (result * n) % p;\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpphx751ir: /tmp/tmpphx751ir.cpp:31: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  if (n < 0) {\n    n += p;\n  }\n  if (n >= p) {\n    n %= p;\n  }\n  return\
    \ n;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2du9ibe0: /tmp/tmp2du9ibe0.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long res = modp(n /\
    \ 2, p);\n        return (res * res) % p;\n    }\n    else {\n        return (modp(n\
    \ - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpq5amvo6v: /tmp/tmpq5amvo6v.cpp:29: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n == 1) {\n        return n;\n    }\n    long\
    \ half = modp(n / 2, p);\n    if (n % 2 == 0) {\n        return (half * half)\
    \ % p;\n    } else {\n        return (half * half * n) % p;\n    }\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpt1yc2wpy: /tmp/tmpt1yc2wpy.cpp:31: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p >= 2);\n\
    \    if (n < 0) {\n        n = p - ((-n) % p);\n    }\n    return n % p;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4xcon542: /tmp/tmp4xcon542.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n += p * ((-n / p) + 1);\n    }\n    return n % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpwmws9fq3: /tmp/tmpwmws9fq3.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  long res = 1;\n  while (n > 0) {\n    if (n & 1)\n      res = (res * n) % p;\n\
    \    n = n >> 1;\n    n = (n * n) % p;\n  }\n  return res;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063533
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long res = modp(n /\
    \ 2, p);\n        return (res * res) % p;\n    } else {\n        return (modp(n\
    \ - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp938o_i32: /tmp/tmp938o_i32.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return n % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphazhtm3_: /tmp/tmphazhtm3_.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n / 2, p);\n    res = (res * res) % p;\n    if (n %\
    \ 2 == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk99s8x4s: /tmp/tmpk99s8x4s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long r = modp(n / 2, p);\n        return\
    \ (r * r) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_gawfut0: /tmp/tmp_gawfut0.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n == 1) return n;\n    long res = 1;\n   \
    \ while (n > 0) {\n        if (n & 1) res = (res * n) % p;\n        n = n >> 1;\n\
    \        n = (n * n) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063533
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return n % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphazhtm3_: /tmp/tmphazhtm3_.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = p - (-n % p);\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppogn55dq: /tmp/tmppogn55dq.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n == 1) {\n        return n;\n    }\n    if\
    \ (n % 2 == 0) {\n        long tmp = modp(n / 2, p);\n        return (tmp * tmp)\
    \ % p;\n    }\n    else {\n        long tmp = modp(n - 1, p);\n        return\
    \ (tmp * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5ha58_p_: /tmp/tmp5ha58_p_.cpp:33: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = p - (-n % p);\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppogn55dq: /tmp/tmppogn55dq.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    long res = modp(n / 2, p);\n    res = (res * res)\
    \ % p;\n    if (n % 2 == 1) {\n        res = (res * 2) % p;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return n % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphazhtm3_: /tmp/tmphazhtm3_.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return t * t % p;\n    } else {\n        return modp(n - 1, p)\
    \ * n % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpnq1io1uw: /tmp/tmpnq1io1uw.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long x = modp(n / 2,\
    \ p);\n        return (x * x) % p;\n    }\n    else {\n        return (modp(n\
    \ - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpcqw8sbpx: /tmp/tmpcqw8sbpx.cpp:29: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long x = modp(n / 2,\
    \ p);\n        return (x * x) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprh6hifsq: /tmp/tmprh6hifsq.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n/2, p);\n    res = (res * res) % p;\n    if (n % 2\
    \ == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        long\
    \ t = modp(n / 2, p);\n        return (t * t) % p;\n    }\n    return (modp(n\
    \ - 1, p) * n) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpnvq59q4q: /tmp/tmpnvq59q4q.cpp:28: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk99s8x4s: /tmp/tmpk99s8x4s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long result = 1;\n\
    \    while (n > 0) {\n        if (n & 1) {\n            result = (result * n)\
    \ % p;\n        }\n        n = n >> 1;\n        n = (n * n) % p;\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063533
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    long result = 1;\n    long\
    \ x = n;\n    while (p > 0) {\n        if (p & 1) {\n            result = (result\
    \ * x) % n;\n        }\n        x = (x * x) % n;\n        p >>= 1;\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgpgu3gqe: /tmp/tmpgpgu3gqe.cpp:32: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    } else {\n        return (modp(n - 1,\
    \ p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsr6nv71s: /tmp/tmpsr6nv71s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long tmp = modp(n /\
    \ 2, p);\n        return (tmp * tmp) % p;\n    }\n    return (modp(n - 1, p) *\
    \ n) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpndgtfooc: /tmp/tmpndgtfooc.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    } else {\n        return (modp(n - 1,\
    \ p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsr6nv71s: /tmp/tmpsr6nv71s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    long res = 1;\n    while (n > 0) {\n        if (n & 1) {\n            res\
    \ = (res * n) % p;\n        }\n        n = n >> 1;\n        n = (n * n) % p;\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063533
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n & 1) {\n            res = (res * n) % p;\n\
    \        }\n        n = n >> 1;\n        n = (n * n) % p;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063532
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk99s8x4s: /tmp/tmpk99s8x4s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n & 1) {\n            res = (res * n) % p;\n\
    \        }\n        n = n >> 1;\n        n = (n * n) % p;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063532
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long y = modp(n / 2,\
    \ p);\n        return (y * y) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0q5w72vk: /tmp/tmp0q5w72vk.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n == 1) return n % p;\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n & 1) res = (res * n) % p;\n        n = n >>\
    \ 1;\n        n = (n * n) % p;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063534
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long res = modp(n /\
    \ 2, p);\n        return (res * res) % p;\n    } else {\n        return (modp(n\
    \ - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp938o_i32: /tmp/tmp938o_i32.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    } else {\n        return (modp(n - 1,\
    \ p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsr6nv71s: /tmp/tmpsr6nv71s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tassert(p > 0);\n\t\
    if (n < 0) {\n\t\tn = n % p + p;\n\t}\n\treturn n % p;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp40k68ly5: /tmp/tmp40k68ly5.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n == 1) return n % p;\n    long res = 1;\n    long sq = n;\n   \
    \ while (sq > 0) {\n        if (sq & 1) res = (res * n) % p;\n        sq >>= 1;\n\
    \        n = (n * n) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmptghq95b1: /tmp/tmptghq95b1.cpp:28: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long x = modp(n/2, p);\n        return (x*x)\
    \ % p;\n    } else {\n        return (n % p) * modp(n-1, p) % p;\n    }\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpwjioxwbx: /tmp/tmpwjioxwbx.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long res = 1;\n \
    \ while (n > 0) {\n    if (n & 1) {\n      res = (res * n) % p;\n    }\n    n\
    \ = n >> 1;\n    n = (n * n) % p;\n  }\n  return res;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063534
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n / 2, p);\n    res = (res * res) % p;\n    if (n %\
    \ 2 == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return n % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphazhtm3_: /tmp/tmphazhtm3_.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n == 1) {\n        return n;\n    }\n    long\
    \ half = modp(n / 2, p);\n    if (n % 2 == 0) {\n        return (half * half)\
    \ % p;\n    } else {\n        return (half * half * n) % p;\n    }\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpt1yc2wpy: /tmp/tmpt1yc2wpy.cpp:31: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    } else {\n        return (modp(n - 1,\
    \ p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsr6nv71s: /tmp/tmpsr6nv71s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return\
    \ (t * t) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5ecya1jv: /tmp/tmp5ecya1jv.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n == 1) {\n        return n;\n    }\n    long\
    \ half = modp(n / 2, p);\n    long result = half * half % p;\n    if (n % 2 ==\
    \ 1) {\n        result = result * n % p;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp8bv_oiz7: /tmp/tmp8bv_oiz7.cpp:31: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n % 2 == 1) {\n            res = (res * 2) %\
    \ p;\n        }\n        n = n / 2;\n        if (n > 0) {\n            res = (res\
    \ * res) % p;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpnstazkmp: /tmp/tmpnstazkmp.cpp:30: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long m = modp(n / 2,\
    \ p);\n        return (m * m) % p;\n    } else {\n        return (modp(n - 1,\
    \ p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3doqm19f: /tmp/tmp3doqm19f.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n == 1) return n;\n    long res = 1;\n    while (n > 0) {\n    \
    \    if (n & 1) res = (res * n) % p;\n        n = n >> 1;\n        n = (n * n)\
    \ % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063534
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        long\
    \ tmp = modp(n / 2, p);\n        return (tmp * tmp) % p;\n    } else {\n     \
    \   return (modp(n - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0f6slnyb: /tmp/tmp0f6slnyb.cpp:29: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    long res = modp(n / 2, p);\n    res = (res * res)\
    \ % p;\n    if (n % 2 == 1) {\n        res = (res * 2) % p;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return n % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphazhtm3_: /tmp/tmphazhtm3_.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long r = modp(n / 2, p);\n        return\
    \ (r * r) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_gawfut0: /tmp/tmp_gawfut0.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long res = modp(n /\
    \ 2, p);\n        return (res * res) % p;\n    }\n    return (modp(n - 1, p) *\
    \ n) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdndu326j: /tmp/tmpdndu326j.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  if (n == 0) return 1;\n  if (n == 1) return n;\n  long res = 1;\n  while (n\
    \ > 0) {\n    if (n & 1) res = (res * n) % p;\n    n = n >> 1;\n    n = (n * n)\
    \ % p;\n  }\n  return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063534
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n & 1) {\n            res = (res * n) % p;\n\
    \        }\n        n = n >> 1;\n        n = (n * n) % p;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063532
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return\
    \ (t * t) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5ecya1jv: /tmp/tmp5ecya1jv.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n/2, p);\n    res = (res * res) % p;\n    if (n % 2\
    \ == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p >= 2);\n\
    \    if (n < 0) {\n        n = p - 1 - ((-n - 1) % (p - 1));\n    }\n    return\
    \ n % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpd77hx49u: /tmp/tmpd77hx49u.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long r = 1;\n \
    \   while (n > 0) {\n        if (n % 2 == 1) {\n            r = (r * 2) % p;\n\
    \        }\n        n = n / 2;\n        if (n > 0) {\n            r = (r * r)\
    \ % p;\n        }\n    }\n    return r;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0u6s_3ej: /tmp/tmp0u6s_3ej.cpp:30: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n/2, p);\n    res = (res * res) % p;\n    if (n % 2\
    \ == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    if (n < p) {\n        return\
    \ n;\n    }\n    long res = 1;\n    while (n > 0) {\n        if (n & 1) {\n  \
    \          res = (res * 2) % p;\n        }\n        n >>= 1;\n        if (n >\
    \ 0) {\n            res = (res * 2) % p;\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpo06xdukk: /tmp/tmpo06xdukk.cpp:37: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n & 1)\n            res = (res * 2) % p;\n \
    \       n >>= 1;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp60jkqs_6: /tmp/tmp60jkqs_6.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    assert(n >= 0);\n    if (n == 0) return 1;\n    if (n % 2 == 0) {\n     \
    \   long t = modp(n / 2, p);\n        return (t * t) % p;\n    } else {\n    \
    \    return (modp(n - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2a6cafdt: /tmp/tmp2a6cafdt.cpp:28: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  if (n < 0) {\n    n = (n % p) + p;\n  }\n  return n % p;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpo3n6w0nf: /tmp/tmpo3n6w0nf.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk99s8x4s: /tmp/tmpk99s8x4s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return\
    \ (t * t) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5ecya1jv: /tmp/tmp5ecya1jv.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n == 1) {\n        return n;\n    }\n    long\
    \ res = 1;\n    while (n > 0) {\n        if (n & 1) {\n            res = (res\
    \ * n) % p;\n        }\n        n = n >> 1;\n        n = (n * n) % p;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063534
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    } else {\n        return (modp(n - 1,\
    \ p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsr6nv71s: /tmp/tmpsr6nv71s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return n % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphazhtm3_: /tmp/tmphazhtm3_.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return pow(2, n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp68pbcdlr.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmp68pbcdlr.cpp:19:22: error: invalid operands of types \u2018double\u2019\
    \ and \u2018long int\u2019 to binary \u2018operator%\u2019\n   19 |     return\
    \ pow(2, n) % p;\n      |            ~~~~~~~~~ ^ ~\n      |               |  \
    \      |\n      |               double   long int\n"
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk99s8x4s: /tmp/tmpk99s8x4s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long r = 1;\n \
    \   while (n > 0) {\n        if (n % 2 == 1) {\n            r = (r * 2) % p;\n\
    \        }\n        n = n / 2;\n        if (n > 0) {\n            r = (r * r)\
    \ % p;\n        }\n    }\n    return r;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0u6s_3ej: /tmp/tmp0u6s_3ej.cpp:30: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long r = modp(n / 2,\
    \ p);\n        return (r * r) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpn8yb4_u3: /tmp/tmpn8yb4_u3.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long r = modp(n / 2,\
    \ p);\n        return (r * r) % p;\n    } else {\n        return (modp(n - 1,\
    \ p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5j1pdwmq: /tmp/tmp5j1pdwmq.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n/2, p);\n    res = (res * res) % p;\n    if (n % 2\
    \ == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n / 2, p);\n    res = (res * res) % p;\n    if (n %\
    \ 2 == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long tmp = modp(n /\
    \ 2, p);\n        return (tmp * tmp) % p;\n    }\n    return (modp(n - 1, p) *\
    \ n) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpndgtfooc: /tmp/tmpndgtfooc.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    long res = modp(n / 2, p);\n    res = (res * res)\
    \ % p;\n    if (n % 2 == 1) {\n        res = (res * 2) % p;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return n % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphazhtm3_: /tmp/tmphazhtm3_.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return n % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphazhtm3_: /tmp/tmphazhtm3_.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long x = modp(n / 2,\
    \ p);\n        return (x * x) % p;\n    }\n    else {\n        return (modp(n\
    \ - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpcqw8sbpx: /tmp/tmpcqw8sbpx.cpp:29: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    } else {\n        return (modp(n - 1,\
    \ p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsr6nv71s: /tmp/tmpsr6nv71s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long x = modp(n / 2,\
    \ p);\n        return (x * x) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprh6hifsq: /tmp/tmprh6hifsq.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n/2, p);\n    res = (res * res) % p;\n    if (n % 2\
    \ == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return\
    \ (t * t) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5ecya1jv: /tmp/tmp5ecya1jv.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long m = modp(n / 2,\
    \ p);\n        return (m * m) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdewp0bhq: /tmp/tmpdewp0bhq.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n / 2, p);\n    res = (res * res) % p;\n    if (n %\
    \ 2 == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  if (n < 0) {\n    n = (n % p) + p;\n  }\n  return n % p;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpo3n6w0nf: /tmp/tmpo3n6w0nf.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk99s8x4s: /tmp/tmpk99s8x4s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n == 1) return n;\n    if (n % 2 == 0) {\n\
    \        long x = modp(n/2, p);\n        return (x*x) % p;\n    } else {\n   \
    \     return (n*modp(n-1, p)) % p;\n    }\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk84vyncl: /tmp/tmpk84vyncl.cpp:28: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return n % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphazhtm3_: /tmp/tmphazhtm3_.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return n % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphazhtm3_: /tmp/tmphazhtm3_.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n / 2, p);\n    res = (res * res) % p;\n    if (n %\
    \ 2 == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = p - (-n % p);\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppogn55dq: /tmp/tmppogn55dq.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n == 1) return n;\n    if (n % 2 == 0) {\n        long x = modp(n/2,\
    \ p);\n        return (x*x) % p;\n    } else {\n        return (n * modp(n-1,\
    \ p)) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpla1noquq: /tmp/tmpla1noquq.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long tmp = modp(n /\
    \ 2, p);\n        return (tmp * tmp) % p;\n    } else {\n        return (modp(n\
    \ - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpbjyeux6y: /tmp/tmpbjyeux6y.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return\
    \ (t * t) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5ecya1jv: /tmp/tmp5ecya1jv.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n == 1) {\n        return n;\n    }\n    long\
    \ res = 1;\n    long a = n;\n    while (p > 0) {\n        if (p & 1) {\n     \
    \       res = (res * a) % MOD;\n        }\n        a = (a * a) % MOD;\n      \
    \  p >>= 1;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpju7bpyvh.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpju7bpyvh.cpp:25:31: error: \u2018MOD\u2019 was not declared in this\
    \ scope\n   25 |             res = (res * a) % MOD;\n      |                 \
    \              ^~~\n/tmp/tmpju7bpyvh.cpp:27:23: error: \u2018MOD\u2019 was not\
    \ declared in this scope\n   27 |         a = (a * a) % MOD;\n      |        \
    \               ^~~\n"
  stdout: ''
  timestamp: 1660063530
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n == 1) return n;\n    long res = 1;\n    while (n > 0) {\n    \
    \    if (n & 1) res = (res * n) % p;\n        n = n >> 1;\n        n = (n * n)\
    \ % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063534
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long x = modp(n / 2,\
    \ p);\n        return (x * x) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprh6hifsq: /tmp/tmprh6hifsq.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    } else if (n == 1) {\n        return n;\n    } else if\
    \ (n % 2 == 0) {\n        long res = modp(n / 2, p);\n        return (res * res)\
    \ % p;\n    } else {\n        return (n * modp(n - 1, p)) % p;\n    }\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpcizwboco: /tmp/tmpcizwboco.cpp:29: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n % 2 == 1) {\n            res = (res * 2) %\
    \ p;\n        }\n        n = n / 2;\n        if (n > 0) {\n            res = (res\
    \ * res) % p;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpnstazkmp: /tmp/tmpnstazkmp.cpp:30: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    } else {\n        return (n * modp(n -\
    \ 1, p)) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgfsk_46j: /tmp/tmpgfsk_46j.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    else if (n == 1) {\n        return n;\n    }\n\
    \    else if (n % 2 == 0) {\n        long res = modp(n / 2, p);\n        return\
    \ (res * res) % p;\n    }\n    else {\n        return (n * modp(n - 1, p)) % p;\n\
    \    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpbsvztzbk: /tmp/tmpbsvztzbk.cpp:32: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n % 2 == 1) {\n            res = (res * 2) %\
    \ p;\n        }\n        n = n / 2;\n        if (n > 0) {\n            res = (res\
    \ * res) % p;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpnstazkmp: /tmp/tmpnstazkmp.cpp:30: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long temp = modp(n /\
    \ 2, p);\n        return (temp * temp) % p;\n    }\n    else {\n        return\
    \ (modp(n - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2dwl1uu1: /tmp/tmp2dwl1uu1.cpp:29: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n == 1) return n;\n    long res = 1;\n    while (n > 0) {\n    \
    \    if (n % 2 == 1) {\n            res = (res * n) % p;\n        }\n        n\
    \ = n / 2;\n        n = (n * n) % p;\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063535
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long r = 1;\n \
    \   while (n > 0) {\n        if (n % 2 == 1) {\n            r = (r * 2) % p;\n\
    \        }\n        n = n / 2;\n        if (n > 0) {\n            r = (r * r)\
    \ % p;\n        }\n    }\n    return r;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0u6s_3ej: /tmp/tmp0u6s_3ej.cpp:30: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n == 1) return n % p;\n    if (n % 2 == 0)\
    \ {\n        long res = modp(n / 2, p);\n        return (res * res) % p;\n   \
    \ }\n    return (n * modp(n - 1, p)) % p;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp52mz4ngu: /tmp/tmp52mz4ngu.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n/2, p);\n    res = (res * res) % p;\n    if (n % 2\
    \ == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        return modp(n / 2, p)\
    \ * modp(n / 2, p) % p;\n    }\n    return modp(n / 2, p) * modp(n / 2, p) * n\
    \ % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1cqqouxs: /tmp/tmp1cqqouxs.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063531
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    } else {\n        return (n * modp(n -\
    \ 1, p)) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgfsk_46j: /tmp/tmpgfsk_46j.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n & 1)\n            res = (res * 2) % p;\n \
    \       n >>= 1;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp60jkqs_6: /tmp/tmp60jkqs_6.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    } else {\n        return (modp(n - 1,\
    \ p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsr6nv71s: /tmp/tmpsr6nv71s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    if (n == 0) {\n        return\
    \ 1;\n    }\n    long res = 1;\n    while (n > 0) {\n        if (n & 1) {\n  \
    \          res = (res * 2) % p;\n        }\n        n >>= 1;\n        if (n >\
    \ 0) {\n            res = (res * res) % p;\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzhemj3_c: /tmp/tmpzhemj3_c.cpp:37: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063531
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) {\n        return 1;\n    }\n    if (n % 2 == 0) {\n        long\
    \ x = modp(n / 2, p);\n        return (x * x) % p;\n    }\n    return (modp(n\
    \ - 1, p) * n) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpcni2382k: /tmp/tmpcni2382k.cpp:28: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = (n % p) + p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprt7m45y8: /tmp/tmprt7m45y8.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long x = modp(n/2, p);\n        return (x*x)\
    \ % p;\n    } else {\n        return (n * modp(n-1, p)) % p;\n    }\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpqqhi2mdl: /tmp/tmpqqhi2mdl.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063531
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n == 1) return n % p;\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n & 1) {\n            res = (res * 2) % p;\n\
    \        }\n        n >>= 1;\n        res = (res * res) % p;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1pwrubo6: /tmp/tmp1pwrubo6.cpp:30: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660063531
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long res = modp(n/2, p);\n        return\
    \ (res * res) % p;\n    }\n    return (modp(n-1, p) * n) % p;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpa_16e9op: /tmp/tmpa_16e9op.cpp:25: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063531
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    else if (n % 2 == 0) {\n        long x = modp(n\
    \ / 2, p);\n        return (x * x) % p;\n    }\n    else {\n        return (modp(n\
    \ - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpr_aug7od: /tmp/tmpr_aug7od.cpp:29: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063531
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n & 1) {\n            res = (res * n) % p;\n\
    \        }\n        n = n >> 1;\n        n = (n * n) % p;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063532
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n == 1) {\n        return n;\n    }\n    if\
    \ (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return (t * t) % p;\n\
    \    }\n    return (n * modp(n - 1, p)) % p;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpuego98mo: /tmp/tmpuego98mo.cpp:30: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063531
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return\
    \ (t * t) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5ecya1jv: /tmp/tmp5ecya1jv.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        return modp(n/2, p)\
    \ * modp(n/2, p) % p;\n    }\n    return modp(n/2, p) * modp(n/2, p) * n % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzs7rhv3y: /tmp/tmpzs7rhv3y.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063531
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    long x = modp(n / 2, p);\n    x = (x * x) % p;\n\
    \    if (n % 2 == 1) {\n        x = (x * 2) % p;\n    }\n    return x;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063531
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        return modp(n / 2, p)\
    \ * modp(n / 2, p) % p;\n    }\n    return modp(n / 2, p) * modp(n / 2, p) * n\
    \ % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1cqqouxs: /tmp/tmp1cqqouxs.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063531
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    long res = modp(n / 2, p);\n    res = (res * res)\
    \ % p;\n    if (n % 2 == 1) {\n        res = (res * 2) % p;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return\
    \ (t * t) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5ecya1jv: /tmp/tmp5ecya1jv.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk99s8x4s: /tmp/tmpk99s8x4s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p >= 2);\n\
    \  if (n < 0) {\n    n = (n % p) + p;\n  }\n  int result = 1;\n  int base = n\
    \ % p;\n  int exp = n;\n  while (exp > 0) {\n    if (exp % 2 == 1) {\n      result\
    \ = (result * base) % p;\n    }\n    base = (base * base) % p;\n    exp = exp\
    \ / 2;\n  }\n  return result;\n}\nint main() {\n    auto candidate = modp;\n \
    \   assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpvau3kmmy: /tmp/tmpvau3kmmy.cpp:33: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660063531
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    } else {\n        return (modp(n - 1,\
    \ p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsr6nv71s: /tmp/tmpsr6nv71s.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return\
    \ (t * t) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5ecya1jv: /tmp/tmp5ecya1jv.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    } else if (n % 2 == 0) {\n        long y = modp(n / 2,\
    \ p);\n        return (y * y) % p;\n    } else {\n        return (modp(n - 1,\
    \ p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsud726y9: /tmp/tmpsud726y9.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063531
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return n % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphazhtm3_: /tmp/tmphazhtm3_.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n == 1) return n % p;\n    long res = 1;\n    long sq = n;\n   \
    \ while (sq > 0) {\n        if (sq & 1) res = (res * n) % p;\n        sq >>= 1;\n\
    \        n = (n * n) % p;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmptghq95b1: /tmp/tmptghq95b1.cpp:28: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660063529
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long x = modp(n / 2,\
    \ p);\n        return (x * x) % p;\n    }\n    return (modp(n - 1, p) * n) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprh6hifsq: /tmp/tmprh6hifsq.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0)\n        n += p;\n    long res = 1;\n    while (n > 0) {\n   \
    \     if (n & 1)\n            res = (res * 2) % p;\n        n >>= 1;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpmonr9q52: /tmp/tmpmonr9q52.cpp:28: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660063531
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n & 1) {\n            res = (res * n) % p;\n\
    \        }\n        n = n >> 1;\n        n = (n * n) % p;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063532
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return\
    \ (t * t) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5ecya1jv: /tmp/tmp5ecya1jv.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) return 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2,\
    \ p);\n        return (t * t) % p;\n    } else {\n        return (n * modp(n -\
    \ 1, p)) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgfsk_46j: /tmp/tmpgfsk_46j.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long r = 1;\n \
    \   while (n > 0) {\n        if (n & 1) {\n            r = (r * 2) % p;\n    \
    \    }\n        n >>= 1;\n        if (n > 0) {\n            r = (r * r) % p;\n\
    \        }\n    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpknch2b1j: /tmp/tmpknch2b1j.cpp:30: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063532
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    return n % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphazhtm3_: /tmp/tmphazhtm3_.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063528
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long x = modp(n/2, p);\n        return (x*x)\
    \ % p;\n    } else {\n        return (modp(n-1, p) * n) % p;\n    }\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7mjx_d26: /tmp/tmp7mjx_d26.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063532
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        long t = modp(n / 2, p);\n        return\
    \ (t * t) % p;\n    } else {\n        return (modp(n - 1, p) * n) % p;\n    }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5ecya1jv: /tmp/tmp5ecya1jv.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) {\n\
    \        return 1;\n    }\n    if (n % 2 == 0) {\n        long temp = modp(n /\
    \ 2, p);\n        return (temp * temp) % p;\n    }\n    else {\n        return\
    \ (modp(n - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2dwl1uu1: /tmp/tmp2dwl1uu1.cpp:29: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063530
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p >= 2);\n\
    \    if (n < 0)\n        n = p - 1 - ((-n) % (p - 1));\n    return 1 << n % (p\
    \ - 1);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2ydqi1h3: /tmp/tmp2ydqi1h3.cpp:22: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660063532
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 1;\n    long res = modp(n/2, p);\n    res = (res * res) % p;\n    if (n % 2\
    \ == 1) res = (res * 2) % p;\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660063527
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  if (n == 0) return 1;\n  if (n % 2 == 0) {\n    long t = modp(n / 2, p);\n\
    \    return (t * t) % p;\n  } else {\n    return (modp(n - 1, p) * n) % p;\n \
    \ }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprelg9brs: /tmp/tmprelg9brs.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063532
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (n & 1) {\n            res = (res * n) % p;\n\
    \        }\n        n = n >> 1;\n        n = (n * n) % p;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660063532
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n < 0) {\n        n = n % p + p;\n    }\n    long res = 1;\n    long\
    \ x = n;\n    while (p > 0) {\n        if (p & 1) {\n            res = (res *\
    \ x) % p;\n        }\n        x = (x * x) % p;\n        p >>= 1;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdl0oza14: /tmp/tmpdl0oza14.cpp:32: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660063532
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  if (n == 0) return 1;\n  if (n % 2 == 0) {\n    long t = modp(n / 2, p);\n\
    \    return (t * t) % p;\n  } else {\n    return (modp(n - 1, p) * n) % p;\n \
    \ }\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprelg9brs: /tmp/tmprelg9brs.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063532
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    assert(n >= 0);\n    if (n == 0) return 1;\n    if (n % 2 == 0) {\n     \
    \   long t = modp(n / 2, p);\n        return (t * t) % p;\n    } else {\n    \
    \    return (modp(n - 1, p) * n) % p;\n    }\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp2a6cafdt: /tmp/tmp2a6cafdt.cpp:28: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660063529

language: cpp
name: HumanEval_9_rolling_max
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::vector<long>::iterator it\
    \ = numbers.begin();\n    result.push_back(*it);\n    it++;\n    for (; it !=\
    \ numbers.end(); it++) {\n        result.push_back(std::max(*it, result.back()));\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd8oboiux.cpp: In function 'int main()':\n/tmp/tmpd8oboiux.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd8oboiux.cpp:2:\n/tmp/tmpd8oboiux.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpd8oboiux.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpd8oboiux.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpd8oboiux.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpd8oboiux.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpd8oboiux.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpd8oboiux.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = 0;\n    for (auto\
    \ number : numbers) {\n        if (number > max) {\n            max = number;\n\
    \        }\n        result.push_back(max);\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_gphr7yh.cpp: In function 'std::vector<long int> rolling_max(std::vector<long\
    \ int>)':\n/tmp/tmp_gphr7yh.cpp:10:15: error: 'number' does not name a type\n\
    \     for (auto number : numbers) {\n               ^\n/tmp/tmp_gphr7yh.cpp:16:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmp_gphr7yh.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp_gphr7yh.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp_gphr7yh.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp_gphr7yh.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp_gphr7yh.cpp: In function 'int main()':\n/tmp/tmp_gphr7yh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_gphr7yh.cpp:2:\n/tmp/tmp_gphr7yh.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_gphr7yh.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp_gphr7yh.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp_gphr7yh.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp_gphr7yh.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpytlab1sy.cpp: In function 'int main()':\n/tmp/tmpytlab1sy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpytlab1sy.cpp:2:\n/tmp/tmpytlab1sy.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpytlab1sy.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpytlab1sy.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpytlab1sy.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpytlab1sy.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpytlab1sy.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpytlab1sy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::stack<long> stack;\n   \
    \ for (auto number : numbers) {\n        while (!stack.empty() && stack.top()\
    \ < number) {\n            stack.pop();\n        }\n        stack.push(number);\n\
    \        result.push_back(stack.top());\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp6tb9ue4r.cpp: In function 'std::vector<long int> rolling_max(std::vector<long\
    \ int>)':\n/tmp/tmp6tb9ue4r.cpp:10:15: error: 'number' does not name a type\n\
    \     for (auto number : numbers) {\n               ^\n/tmp/tmp6tb9ue4r.cpp:17:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmp6tb9ue4r.cpp:17:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp6tb9ue4r.cpp:17:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp6tb9ue4r.cpp:17:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp6tb9ue4r.cpp:17:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp6tb9ue4r.cpp: In function 'int main()':\n/tmp/tmp6tb9ue4r.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6tb9ue4r.cpp:2:\n/tmp/tmp6tb9ue4r.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp6tb9ue4r.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp6tb9ue4r.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp6tb9ue4r.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp6tb9ue4r.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppet6asqu.cpp: In function 'int main()':\n/tmp/tmppet6asqu.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/tmp/tmppet6asqu.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmppet6asqu.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmppet6asqu.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmppet6asqu.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmppet6asqu.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmppet6asqu.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n  \
    \          max = numbers[i];\n        }\n        result.push_back(max);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpww_fz_iy.cpp: In function 'int main()':\n/tmp/tmpww_fz_iy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpww_fz_iy.cpp:2:\n/tmp/tmpww_fz_iy.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpww_fz_iy.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpww_fz_iy.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpww_fz_iy.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpww_fz_iy.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpww_fz_iy.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpww_fz_iy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_at0x43t.cpp: In function 'int main()':\n/tmp/tmp_at0x43t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/tmp/tmp_at0x43t.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_at0x43t.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp_at0x43t.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp_at0x43t.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp_at0x43t.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp_at0x43t.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_at0x43t.cpp: In function 'int main()':\n/tmp/tmp_at0x43t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/tmp/tmp_at0x43t.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_at0x43t.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp_at0x43t.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp_at0x43t.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp_at0x43t.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp_at0x43t.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n        }\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqb8k92jh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (long number : numbers) {\n        max_so_far = std::max(max_so_far,\
    \ number);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpy76qdwk1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppet6asqu.cpp: In function 'int main()':\n/tmp/tmppet6asqu.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/tmp/tmppet6asqu.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmppet6asqu.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmppet6asqu.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmppet6asqu.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmppet6asqu.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmppet6asqu.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_at0x43t.cpp: In function 'int main()':\n/tmp/tmp_at0x43t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/tmp/tmp_at0x43t.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_at0x43t.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp_at0x43t.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp_at0x43t.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp_at0x43t.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp_at0x43t.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n  \
    \          max = numbers[i];\n        }\n        result.push_back(max);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpww_fz_iy.cpp: In function 'int main()':\n/tmp/tmpww_fz_iy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpww_fz_iy.cpp:2:\n/tmp/tmpww_fz_iy.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpww_fz_iy.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpww_fz_iy.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpww_fz_iy.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpww_fz_iy.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpww_fz_iy.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpww_fz_iy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxg406j_8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> max_queue;\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        while (!max_queue.empty()\
    \ && numbers[i] >= numbers[max_queue.back()]) {\n            max_queue.pop_back();\n\
    \        }\n        max_queue.push_back(i);\n        if (max_queue.front() <=\
    \ i - numbers.size()) {\n            max_queue.pop_front();\n        }\n     \
    \   result.push_back(numbers[max_queue.front()]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplrb9v4nk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_at0x43t.cpp: In function 'int main()':\n/tmp/tmp_at0x43t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/tmp/tmp_at0x43t.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_at0x43t.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp_at0x43t.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp_at0x43t.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp_at0x43t.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp_at0x43t.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        result.push_back(std::max(result[i\
    \ - 1], numbers[i]));\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = rolling_max;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3,\
    \ (long)100, (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100,\
    \ (long)100})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_h8q604h.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> window;\n  \
    \  for (auto number : numbers) {\n        while (!window.empty() && window.back()\
    \ < number) {\n            window.pop_back();\n        }\n        window.push_back(number);\n\
    \        result.push_back(window.front());\n        if (window.front() == number)\
    \ {\n            window.pop_front();\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1mo10cvo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxg406j_8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppet6asqu.cpp: In function 'int main()':\n/tmp/tmppet6asqu.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/tmp/tmppet6asqu.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmppet6asqu.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmppet6asqu.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmppet6asqu.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmppet6asqu.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmppet6asqu.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long current_max = numbers[0];\n\
    \    result.push_back(current_max);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > current_max) {\n            current_max = numbers[i];\n\
    \        }\n        result.push_back(current_max);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpctqlhvhd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppet6asqu.cpp: In function 'int main()':\n/tmp/tmppet6asqu.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/tmp/tmppet6asqu.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmppet6asqu.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmppet6asqu.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmppet6asqu.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmppet6asqu.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmppet6asqu.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> max_queue;\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        while (!max_queue.empty()\
    \ && numbers[i] >= numbers[max_queue.back()]) {\n            max_queue.pop_back();\n\
    \        }\n        max_queue.push_back(i);\n        if (max_queue.front() <=\
    \ i - numbers.size()) {\n            max_queue.pop_front();\n        }\n     \
    \   result.push_back(numbers[max_queue.front()]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplrb9v4nk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n  \
    \          max = numbers[i];\n        }\n        result.push_back(max);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpww_fz_iy.cpp: In function 'int main()':\n/tmp/tmpww_fz_iy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpww_fz_iy.cpp:2:\n/tmp/tmpww_fz_iy.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpww_fz_iy.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpww_fz_iy.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpww_fz_iy.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpww_fz_iy.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpww_fz_iy.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpww_fz_iy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = -1;\n    for\
    \ (auto number : numbers) {\n        if (number > max_so_far) {\n            max_so_far\
    \ = number;\n        }\n        result.push_back(max_so_far);\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1jvurtkc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::stack<long> st;\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        while (!st.empty() && st.top()\
    \ < numbers[i]) {\n            st.pop();\n        }\n        st.push(numbers[i]);\n\
    \        result.push_back(st.top());\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp70jykrkf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::stack<long> stack;\n   \
    \ for (auto number : numbers) {\n        while (!stack.empty() && stack.top()\
    \ < number) {\n            stack.pop();\n        }\n        stack.push(number);\n\
    \        result.push_back(stack.top());\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp6tb9ue4r.cpp: In function 'std::vector<long int> rolling_max(std::vector<long\
    \ int>)':\n/tmp/tmp6tb9ue4r.cpp:10:15: error: 'number' does not name a type\n\
    \     for (auto number : numbers) {\n               ^\n/tmp/tmp6tb9ue4r.cpp:17:5:\
    \ error: expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmp6tb9ue4r.cpp:17:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp6tb9ue4r.cpp:17:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp6tb9ue4r.cpp:17:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp6tb9ue4r.cpp:17:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp6tb9ue4r.cpp: In function 'int main()':\n/tmp/tmp6tb9ue4r.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6tb9ue4r.cpp:2:\n/tmp/tmp6tb9ue4r.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp6tb9ue4r.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp6tb9ue4r.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp6tb9ue4r.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp6tb9ue4r.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> max_queue;\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        while (!max_queue.empty()\
    \ && numbers[i] >= numbers[max_queue.back()]) {\n            max_queue.pop_back();\n\
    \        }\n        max_queue.push_back(i);\n        if (max_queue.front() <=\
    \ i - numbers.size()) {\n            max_queue.pop_front();\n        }\n     \
    \   result.push_back(numbers[max_queue.front()]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplrb9v4nk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        max_so_far = std::max(max_so_far,\
    \ numbers[i]);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpswstlw5t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> window;\n  \
    \  for (long i = 0; i < numbers.size(); i++) {\n        while (!window.empty()\
    \ && numbers[i] >= numbers[window.back()]) {\n            window.pop_back();\n\
    \        }\n        window.push_back(i);\n        if (i >= 2) {\n            result.push_back(numbers[window.front()]);\n\
    \            if (window.front() == i - 2) {\n                window.pop_front();\n\
    \            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = rolling_max;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3,\
    \ (long)100, (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100,\
    \ (long)100})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpythb9gra.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_val = numbers[0];\n\
    \    result.push_back(max_val);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_val = std::max(max_val, numbers[i]);\n        result.push_back(max_val);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpq2nnfrtg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_number = numbers[0];\n\
    \    result.push_back(max_number);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_number) {\n            max_number = numbers[i];\n\
    \        }\n        result.push_back(max_number);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpr6wbano5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_number = numbers[0];\n\
    \    for (auto number : numbers) {\n        max_number = std::max(max_number,\
    \ number);\n        result.push_back(max_number);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpd1wor8dx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpytlab1sy.cpp: In function 'int main()':\n/tmp/tmpytlab1sy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpytlab1sy.cpp:2:\n/tmp/tmpytlab1sy.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpytlab1sy.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpytlab1sy.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpytlab1sy.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpytlab1sy.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpytlab1sy.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpytlab1sy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxg406j_8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpytlab1sy.cpp: In function 'int main()':\n/tmp/tmpytlab1sy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpytlab1sy.cpp:2:\n/tmp/tmpytlab1sy.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpytlab1sy.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpytlab1sy.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpytlab1sy.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpytlab1sy.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpytlab1sy.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpytlab1sy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (long number : numbers) {\n        max_so_far = std::max(max_so_far,\
    \ number);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpy76qdwk1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> max_queue;\n\
    \    for (auto i = 0; i < numbers.size(); i++) {\n        while (!max_queue.empty()\
    \ && numbers[i] >= numbers[max_queue.back()]) {\n            max_queue.pop_back();\n\
    \        }\n        max_queue.push_back(i);\n        if (max_queue.front() <=\
    \ i - numbers.size()) {\n            max_queue.pop_front();\n        }\n     \
    \   result.push_back(numbers[max_queue.front()]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpdcs2occo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (auto number : numbers) {\n        if (number > max) {\n            max = number;\n\
    \        }\n        result.push_back(max);\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7zwynl9r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (auto number : numbers) {\n        if (number > max) {\n            max = number;\n\
    \        }\n        result.push_back(max);\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7zwynl9r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        max_so_far = std::max(max_so_far,\
    \ numbers[i]);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpswstlw5t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_at0x43t.cpp: In function 'int main()':\n/tmp/tmp_at0x43t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/tmp/tmp_at0x43t.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_at0x43t.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp_at0x43t.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp_at0x43t.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp_at0x43t.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp_at0x43t.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> max_queue;\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        while (!max_queue.empty()\
    \ && numbers[i] >= numbers[max_queue.back()]) {\n            max_queue.pop_back();\n\
    \        }\n        max_queue.push_back(i);\n        if (max_queue.front() <=\
    \ i - numbers.size()) {\n            max_queue.pop_front();\n        }\n     \
    \   result.push_back(numbers[max_queue.front()]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplrb9v4nk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_at0x43t.cpp: In function 'int main()':\n/tmp/tmp_at0x43t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/tmp/tmp_at0x43t.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_at0x43t.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp_at0x43t.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp_at0x43t.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp_at0x43t.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp_at0x43t.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long current_max = numbers[0];\n\
    \    result.push_back(current_max);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > current_max) {\n            current_max = numbers[i];\n\
    \        }\n        result.push_back(current_max);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpctqlhvhd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (long i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpe5xu2ddv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (int i = 0; i < numbers.size(); i++) {\n        max_so_far = std::max(max_so_far,\
    \ numbers[i]);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpuj8msyp0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> max_queue;\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        while (!max_queue.empty()\
    \ && numbers[i] >= numbers[max_queue.back()]) {\n            max_queue.pop_back();\n\
    \        }\n        max_queue.push_back(i);\n        if (max_queue.front() <=\
    \ i - numbers.size()) {\n            max_queue.pop_front();\n        }\n     \
    \   result.push_back(numbers[max_queue.front()]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplrb9v4nk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppet6asqu.cpp: In function 'int main()':\n/tmp/tmppet6asqu.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/tmp/tmppet6asqu.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmppet6asqu.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmppet6asqu.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmppet6asqu.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmppet6asqu.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmppet6asqu.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> dq;\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        while (!dq.empty() && numbers[i]\
    \ >= numbers[dq.back()]) {\n            dq.pop_back();\n        }\n        dq.push_back(i);\n\
    \        if (i - dq.front() >= 3) {\n            dq.pop_front();\n        }\n\
    \        result.push_back(numbers[dq.front()]);\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpn09m5dfg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (auto number : numbers) {\n        max_so_far = std::max(max_so_far,\
    \ number);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5npmzl2x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_val = numbers[0];\n\
    \    result.push_back(max_val);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_val) {\n            max_val = numbers[i];\n\
    \        }\n        result.push_back(max_val);\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpf7r19_zs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_at0x43t.cpp: In function 'int main()':\n/tmp/tmp_at0x43t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/tmp/tmp_at0x43t.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_at0x43t.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp_at0x43t.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp_at0x43t.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp_at0x43t.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp_at0x43t.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpytlab1sy.cpp: In function 'int main()':\n/tmp/tmpytlab1sy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpytlab1sy.cpp:2:\n/tmp/tmpytlab1sy.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpytlab1sy.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpytlab1sy.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpytlab1sy.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpytlab1sy.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpytlab1sy.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpytlab1sy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (long i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfvl4fw7a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> max_queue;\n\
    \    for (int i = 0; i < numbers.size(); i++) {\n        while (!max_queue.empty()\
    \ && numbers[i] >= numbers[max_queue.back()]) {\n            max_queue.pop_back();\n\
    \        }\n        max_queue.push_back(i);\n        if (max_queue.front() <=\
    \ i - numbers.size()) {\n            max_queue.pop_front();\n        }\n     \
    \   result.push_back(numbers[max_queue.front()]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp780dgwql.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> window;\n  \
    \  for (auto i = 0; i < numbers.size(); i++) {\n        while (!window.empty()\
    \ && numbers[i] >= numbers[window.back()]) {\n            window.pop_back();\n\
    \        }\n        window.push_back(i);\n        if (i >= 2) {\n            result.push_back(numbers[window.front()]);\n\
    \            if (window.front() == i - 2) {\n                window.pop_front();\n\
    \            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = rolling_max;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3,\
    \ (long)100, (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100,\
    \ (long)100})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpuixouh6f.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821805
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> window;\n  \
    \  for (long i = 0; i < numbers.size(); i++) {\n        while (!window.empty()\
    \ && numbers[i] >= numbers[window.back()]) {\n            window.pop_back();\n\
    \        }\n        window.push_back(i);\n        if (i - window.front() >= 3)\
    \ {\n            window.pop_front();\n        }\n        result.push_back(numbers[window.front()]);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpufn8jt1s.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821805
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        max = std::max(max, numbers[i]);\n\
    \        result.push_back(max);\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4uxp73oz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821805
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (auto number : numbers) {\n        max_so_far = std::max(max_so_far,\
    \ number);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5npmzl2x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> max_queue;\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        while (!max_queue.empty()\
    \ && numbers[i] >= numbers[max_queue.back()]) {\n            max_queue.pop_back();\n\
    \        }\n        max_queue.push_back(i);\n        if (max_queue.front() <=\
    \ i - numbers.size()) {\n            max_queue.pop_front();\n        }\n     \
    \   result.push_back(numbers[max_queue.front()]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplrb9v4nk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long current_max = numbers[0];\n\
    \    result.push_back(current_max);\n    for (long i = 1; i < numbers.size();\
    \ i++) {\n        if (numbers[i] > current_max) {\n            current_max = numbers[i];\n\
    \        }\n        result.push_back(current_max);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzslfrjie.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821805
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_at0x43t.cpp: In function 'int main()':\n/tmp/tmp_at0x43t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/tmp/tmp_at0x43t.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_at0x43t.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp_at0x43t.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp_at0x43t.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp_at0x43t.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp_at0x43t.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_at0x43t.cpp: In function 'int main()':\n/tmp/tmp_at0x43t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/tmp/tmp_at0x43t.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_at0x43t.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp_at0x43t.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp_at0x43t.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp_at0x43t.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp_at0x43t.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_at0x43t.cpp: In function 'int main()':\n/tmp/tmp_at0x43t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/tmp/tmp_at0x43t.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_at0x43t.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp_at0x43t.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp_at0x43t.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp_at0x43t.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp_at0x43t.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppet6asqu.cpp: In function 'int main()':\n/tmp/tmppet6asqu.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/tmp/tmppet6asqu.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmppet6asqu.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmppet6asqu.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmppet6asqu.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmppet6asqu.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmppet6asqu.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_value = numbers[0];\n\
    \    result.push_back(max_value);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \        }\n        result.push_back(max_value);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppet6asqu.cpp: In function 'int main()':\n/tmp/tmppet6asqu.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/tmp/tmppet6asqu.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmppet6asqu.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmppet6asqu.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmppet6asqu.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmppet6asqu.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmppet6asqu.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmppet6asqu.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    for (long i = 0; i < numbers.size(); i++) {\n        max_so_far = std::max(max_so_far,\
    \ numbers[i]);\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpswstlw5t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        max_so_far = std::max(max_so_far, numbers[i]);\n        result.push_back(max_so_far);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_at0x43t.cpp: In function 'int main()':\n/tmp/tmp_at0x43t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/tmp/tmp_at0x43t.cpp:19:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_at0x43t.cpp:20:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp_at0x43t.cpp:20:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp_at0x43t.cpp:20:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp_at0x43t.cpp:20:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmp_at0x43t.cpp:20:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp_at0x43t.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> dq;\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        while (!dq.empty() && numbers[i]\
    \ >= numbers[dq.back()]) {\n            dq.pop_back();\n        }\n        dq.push_back(i);\n\
    \        if (i >= 2) {\n            result.push_back(numbers[dq.front()]);\n \
    \           if (dq.front() == i - 2) {\n                dq.pop_front();\n    \
    \        }\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = rolling_max;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3,\
    \ (long)100, (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100,\
    \ (long)100})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptbytt74x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821805
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max_so_far = numbers[0];\n\
    \    result.push_back(max_so_far);\n    for (int i = 1; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \        }\n        result.push_back(max_so_far);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuphdkc1o.cpp: In function 'int main()':\n/tmp/tmpuphdkc1o.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/tmp/tmpuphdkc1o.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpuphdkc1o.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpuphdkc1o.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpuphdkc1o.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpuphdkc1o.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpuphdkc1o.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::stack<long> s;\n    for\
    \ (auto it = numbers.begin(); it != numbers.end(); ++it) {\n        while (!s.empty()\
    \ && s.top() < *it) {\n            s.pop();\n        }\n        s.push(*it);\n\
    \        result.push_back(s.top());\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphps66wad.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821805
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        max = std::max(max, numbers[i]);\n\
    \        result.push_back(max);\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo9163ykk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821805
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> max_queue;\n\
    \    for (int i = 0; i < numbers.size(); i++) {\n        while (!max_queue.empty()\
    \ && numbers[i] >= numbers[max_queue.back()]) {\n            max_queue.pop_back();\n\
    \        }\n        max_queue.push_back(i);\n        if (max_queue.front() <=\
    \ i - numbers.size()) {\n            max_queue.pop_front();\n        }\n     \
    \   result.push_back(numbers[max_queue.front()]);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp780dgwql.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (auto number : numbers) {\n        if (number > max) {\n            max = number;\n\
    \        }\n        result.push_back(max);\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = rolling_max;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7zwynl9r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821804
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (numbers[i] > max) {\n \
    \           max = numbers[i];\n        }\n        result.push_back(max);\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpytlab1sy.cpp: In function 'int main()':\n/tmp/tmpytlab1sy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpytlab1sy.cpp:2:\n/tmp/tmpytlab1sy.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpytlab1sy.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpytlab1sy.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpytlab1sy.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpytlab1sy.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpytlab1sy.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpytlab1sy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    std::deque<long> dq;\n    for\
    \ (int i = 0; i < numbers.size(); i++) {\n        while (!dq.empty() && numbers[i]\
    \ >= numbers[dq.back()]) {\n            dq.pop_back();\n        }\n        dq.push_back(i);\n\
    \        if (i >= 2) {\n            result.push_back(numbers[dq.front()]);\n \
    \           if (dq.front() == i - 2) {\n                dq.pop_front();\n    \
    \        }\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = rolling_max;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)4,\
    \ (long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3,\
    \ (long)100, (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100,\
    \ (long)100})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptbytt74x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821805
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n// in the\
    \ sequence.\n// >>> rolling_max((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)3, (long)4, (long)2})))\n// (std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)3, (long)3, (long)4, (long)4}))\nstd::vector<long> rolling_max(std::vector<long>\
    \ numbers) {\n    std::vector<long> result;\n    long max = numbers[0];\n    result.push_back(max);\n\
    \    for (int i = 1; i < numbers.size(); i++) {\n        if (numbers[i] > max)\
    \ {\n            max = numbers[i];\n        }\n        result.push_back(max);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = rolling_max;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)4, (long)4, (long)4})));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)3, (long)100,\
    \ (long)3}))) == (std::vector<long>({(long)3, (long)3, (long)3, (long)100, (long)100})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyek_sdjc.cpp: In function 'int main()':\n/tmp/tmpyek_sdjc.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rolling_max;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/tmp/tmpyek_sdjc.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpyek_sdjc.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpyek_sdjc.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpyek_sdjc.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpyek_sdjc.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpyek_sdjc.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/"
  stdout: ''

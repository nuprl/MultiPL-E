name: HumanEval_8_sum_product
language: pl
prompt: "# For a given list of integers, return a tuple consisting of a sum and a\
  \ product of all the integers in a list.\n# Empty sum should be equal to 0 and empty\
  \ product should be equal to 1.\nsub sum_product {\n    my($numbers) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_product;\n\
  \        if(eq_deeply($candidate->([]),[0, 1])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 1, 1]),[3, 1]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([100,\
  \ 0]),[100, 0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->([3, 5, 7]),[15, 105])) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([10]),[10,\
  \ 10])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: []
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

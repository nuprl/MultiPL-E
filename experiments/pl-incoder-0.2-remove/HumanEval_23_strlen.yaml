name: HumanEval_23_strlen
language: pl
prompt: "# Return length of given string\nsub strlen {\n    my($string) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&strlen;\n\
  \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->(\"x\"),1)) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  asdasnakj\"),9)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\
  \ntesthumaneval();"
completions: ["    my $length = 0;\n    my $i = 0;\n    while ($i < length($string))\
    \ {\n        $length++;\n        $i++;\n    }\n    return $length;\n}", "    my\
    \ $length = 0;\n    my $char;\n    while ($char = substr($string, $length + 1,\
    \ 1)) {\n        $length++;\n    }\n    return $length;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    return length $string;\n}", "    my $len = length($string);\n    return $len;\n\
    }", "    my $len = length $string;\n    return $len;\n}", "    return length($string);\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $length = 0;\n    while ($string =~ s/^([A-Za-z0-9_]+)//) {\n        $length++;\n\
    \    }\n    return $length;\n}", "    my $len = length($string);\n    return $len;\n\
    }", "    return length($string);\n}", "    my $len = length($string);\n    return\
    \ $len;\n}", "    my $len = length($string);\n    return $len;\n}", "    return\
    \ length($string);\n}", "    return length($string);\n}", "    my $length = 0;\n\
    \    while ($string =~ s/^([A-Za-z0-9_]+)/$length++;/) {\n    }\n    return $length;\n\
    }", "    my $length = 0;\n    while($string =~ s/^([A-Za-z0-9_]+)$//) {\n    \
    \    $length++;\n    }\n    return $length;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $length = 0;\n    my $pos = 0;\n    while($pos\
    \ < length($string)) {\n        $length++;\n        $pos = $pos + 1;\n    }\n\
    \    return $length;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $length = 0;\n    my $char;\n    while ($char = substr($string, $length))\
    \ {\n        $length++;\n    }\n    return $length;\n}", "    my $length = 0;\n\
    \    my $char;\n    while ($char = substr($string, $length)) {\n        $length++;\n\
    \    }\n    return $length;\n}", "    my $len = length($string);\n    return $len;\n\
    }", "    return length($string);\n}", "    return length($string);\n}", "    my\
    \ $length = 0;\n    while($string =~ s/^([a-zA-Z0-9_]+)/length($1)/e) { $length++\
    \ }\n    return $length;\n}", "    return length($string);\n}", "    my $len =\
    \ length($string);\n    return $len;\n}", "    my $length = 0;\n    my $i = 0;\n\
    \    while ($i < length($string)) {\n        $length++;\n        $i++;\n    }\n\
    \    return $length;\n}", "    return length($string);\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $len = length($string);\n    return $len;\n}", "    my $length = 0;\n  \
    \  my $char;\n    while ($char = substr($string, $length)) {\n        $length++;\n\
    \    }\n    return $length;\n}", "    my $len = length($string);\n    return $len;\n\
    }", "    my $length = 0;\n    my $i = 0;\n    while ($i < length($string)) {\n\
    \        $length++;\n        $i++;\n    }\n    return $length;\n}", "    my $length\
    \ = 0;\n    my $i = 0;\n    while ($i < length($string)) {\n        $length++;\n\
    \        $i++;\n    }\n    return $length;\n}", "    my $length = 0;\n    my $char;\n\
    \    while ($char = substr($string, $length + 1, 1)) {\n        $length++;\n \
    \   }\n    return $length;\n}", "    my $len = length($string);\n    return $len;\n\
    }", "    $string =~ tr/\\0//d;\n    return length($string);\n}", "    return length($string);\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length $string;\n    return $len;\n}", " \
    \   $string =~ tr/\\0//d;\n    return length($string);\n}", "    my $len = 0;\n\
    \    my $char;\n    while ($char = $string->[$len]) {\n        $len++;\n    }\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $len = length($string);\n    return $len;\n}", "    my $length = 0;\n  \
    \  my $pos = 0;\n    while ($pos < length($string)) {\n        $length++;\n  \
    \      $pos = $pos + 1;\n    }\n    return $length;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $len = length($string);\n    return $len;\n}", "    my $length = 0;\n  \
    \  while ($string =~ s/^([A-Za-z0-9_\\-\\.]+)//) {\n        $length++;\n    }\n\
    \    return $length;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $length = 0;\n    my $i = 0;\n    while ($i < length($string)) {\n     \
    \   $length++;\n        $i++;\n    }\n    return $length;\n}", "    return length($string);\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $length = 0;\n    my $char;\n    while ($char = $string->[$length]) {\n\
    \        $length++;\n    }\n    return $length;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $length = 0;\n    my $i = 0;\n    while ($i < length($string))\
    \ {\n        $length++;\n        $i++;\n    }\n    return $length;\n}", "    my\
    \ $len = length($string);\n    return $len;\n}", "    my $len = 0;\n    my $pos\
    \ = 0;\n    while ($string =~ /($RE{quote}{-})/g) {\n        $len += length($1);\n\
    \        $pos += length($1) + 1;\n    }\n    return $len;\n}", "    return length($string);\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length $string;\n    return $len;\n}", " \
    \   my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $length = 0;\n    my $char;\n    while ($char =\
    \ substr($string, $length + 1, 1)) {\n        $length++;\n    }\n    return $length;\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    return length($string);\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $length = 0;\n    while ($string =~ s/^([A-Za-z0-9_]+)(.*)$/$1/) {\n   \
    \     $length++;\n    }\n    return $length;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $length = 0;\n    while ($string =~ s/^([A-Za-z0-9_]+)//)\
    \ {\n        $length++;\n    }\n    return $length;\n}", "    my $length = 0;\n\
    \    my $char;\n    while ($char = $string->[$length]) {\n        $length++;\n\
    \    }\n    return $length;\n}", "    my $len = length($string);\n    return $len;\n\
    }", "    my $length = 0;\n    while ($string =~ s/^([A-Za-z0-9_]+)(.*)$/\\1/g)\
    \ {\n        $length++;\n    }\n    return $length;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    return length($string);\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    return length($string);\n}", "    my $length = 0;\n\
    \    my $char;\n    while ($char = substr($string, $length + 1, 1)) {\n      \
    \  $length++;\n    }\n    return $length;\n}", "    return length($string);\n}",
  "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $length = 0;\n    my $i = 0;\n    while ($i < length($string))\
    \ {\n        $length++;\n        $i++;\n    }\n    return $length;\n}", "    my\
    \ $len = length($string);\n    return $len;\n}", "    my $length = 0;\n    my\
    \ $char;\n    while ($char = $string->[$length]) {\n        $length++;\n    }\n\
    \    return $length;\n}", "    $string =~ tr/\\0//d;\n    return scalar @$string;\n\
    }", "    return length($string);\n}", "    my $length = 0;\n    my $i = 0;\n \
    \   while ($i < length($string)) {\n        $length++;\n        $i++;\n    }\n\
    \    return $length;\n}", "    return length($string);\n}", "    my $length =\
    \ 0;\n    my $pos = 0;\n    while ($pos = index($string, ' ', $pos)) {\n     \
    \   $length++;\n        $pos = $pos + 1;\n    }\n    return $length;\n}", "  \
    \  return length($string);\n}", "    my $len = length($string);\n    return $len;\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $len = length($string);\n    return $len;\n}", "    my $len = length $string;\n\
    \    return $len;\n}", "    my $length = 0;\n    my $char;\n    while ($char =\
    \ $string->[$length]) {\n        $length++;\n    }\n    return $length;\n}", " \
    \   $string =~ tr/\\0//d;\n    return scalar @$string;\n}", "    my $length =\
    \ 0;\n    my $pos = 0;\n    while ($string =~ s/^.{$pos}(.*?)^.{$pos}//s) {\n\
    \        $length += length($1);\n        $pos++;\n    }\n    return $length;\n\
    }", "    my $length = 0;\n    my $char;\n    while ($char = $string->[$length])\
    \ {\n        $length++;\n    }\n    return $length;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $length = 0;\n    my $i = 0;\n    while ($i < length($string))\
    \ {\n        $length++;\n        $i++;\n    }\n    return $length;\n}", "    my\
    \ $len = length($string);\n    return $len;\n}", "    return length($string);\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    return length($string);\n}", "    my $length = 0;\n\
    \    my $i = 0;\n    while ($i < length($string)) {\n        $length++;\n    \
    \    $i++;\n    }\n    return $length;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $length = 0;\n    my $char;\n    while ($char =\
    \ $string->[$length]) {\n        $length++;\n    }\n    return $length;\n}", " \
    \   my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $length = 0;\n    my $pos = 0;\n    while ($string\
    \ =~ /($RE{quote}{-})/g) {\n        $length++;\n        $pos += length($1);\n\
    \    }\n    return $length;\n}", "    my $length = 0;\n    my $i = 0;\n    while\
    \ ($i < length($string)) {\n        $length++;\n        $i++;\n    }\n    return\
    \ $length;\n}", "    my $len = 0;\n    my $i = 0;\n    while ($i < length($string))\
    \ {\n        $len++;\n        $i++;\n    }\n    return $len;\n}", "    return\
    \ length($string);\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $length = 0;\n    while ($string =~ s/^([A-Za-z0-9_]+)$//) {\n        $length++;\n\
    \    }\n    return $length;\n}", "    my $length = 0;\n    my $char;\n    while\
    \ ($char = $string->[$length]) {\n        $length++;\n    }\n    return $length;\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    return length($string);\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    $string =~ tr/\\0//d;\n    return length($string);\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    return length($string);\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $length = 0;\n    my $char;\n    while ($char = $string->[$length]) {\n\
    \        $length++;\n    }\n    return $length;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $len = length($string);\n    return $len;\n}", "    my $len = 0;\n    my\
    \ $char;\n    while ($char = substr($string, $len)) {\n        $len++;\n    }\n\
    \    return $len;\n}", "    my $length = 0;\n    my $char;\n    while ($char =\
    \ $string->[$length]) {\n        $length++;\n    }\n    return $length;\n}", " \
    \   my $len = length($string);\n    return $len;\n}", "    return length($string);\n\
    }", "    my $length = 0;\n    my $i = 0;\n    while($i < length($string)) {\n\
    \        $length++;\n        $i++;\n    }\n    return $length;\n}", "    my $length\
    \ = 0;\n    my $i = 0;\n    while ($i < length($string)) {\n        $length++;\n\
    \        $i++;\n    }\n    return $length;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $length = 0;\n    my $i = 0;\n    while ($i < length($string)) {\n     \
    \   $length++;\n        $i++;\n    }\n    return $length;\n}", "    my $len =\
    \ length($string);\n    return $len;\n}", "    my $length = 0;\n    my $char;\n\
    \    while ($char = substr($string, $length)) {\n        $length++;\n    }\n \
    \   return $length;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $len = length($string);\n    return $len;\n}", "    return length($string);\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $length = 0;\n\
    \    my $pos = 0;\n    while($pos < length($string)) {\n        $length++;\n \
    \       $pos = $pos + 1;\n    }\n    return $length;\n}", "    my $length = 0;\n\
    \    while ($string =~ s/^([A-Za-z0-9_]+)(.*)$/\\1/g) {\n        $length++;\n\
    \    }\n    return $length;\n}", "    my $length = 0;\n    while ($string =~ s/^([A-Za-z0-9_]+)$//)\
    \ {\n        $length++;\n    }\n    return $length;\n}", "    my $len = 0;\n \
    \   my $i = 0;\n    while ($i < length($string)) {\n        $len++;\n        $i++;\n\
    \    }\n    return $len;\n}", "    $string =~ tr/\\0//d;\n    return scalar @$string;\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = 0;\n    while ($string =~ s/^([A-Za-z0-9_]+)(.*)$/\\\
    1\\2/) {\n        $len += length($1);\n    }\n    return $len;\n}", "    my $len\
    \ = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    return length($string);\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    return length($string);\n}", "    my $length = 0;\n\
    \    my $char;\n    while ($char = $string->[$length]) {\n        $length++;\n\
    \    }\n    return $length;\n}", "    my $len = length($string);\n    return $len;\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $length = 0;\n    my $char;\n    while ($char =\
    \ substr($string, $length + 1, 1)) {\n        $length++;\n    }\n    return $length;\n\
    }", "    return length $string;\n}", "    my $len = length($string);\n    return\
    \ $len;\n}", "    my $len = length($string);\n    return $len;\n}", "    return\
    \ length($string);\n}", "    return length($string);\n}", "    return length($string);\n\
    }", "    my $len = length($string);\n    return $len;\n}", "    my $length = 0;\n\
    \    my $char;\n    while ($char = substr($string, $length + 1, 1)) {\n      \
    \  $length++;\n    }\n    return $length;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length($string);\n    return $len;\n}",
  "    my $length = 0;\n    my $i = 0;\n    while ($i < length($string)) {\n     \
    \   $length++;\n        $i++;\n    }\n    return $length;\n}", "    my $len =\
    \ length($string);\n    return $len;\n}", "    my $length = 0;\n    while ($string\
    \ =~ /[^\\x00-\\x7F]/) {\n        $length++;\n    }\n    return $length;\n}",
  "    my $len = length($string);\n    return $len;\n}", "    my $len = length($string);\n\
    \    return $len;\n}", "    my $len = length $string;\n    return $len;\n}", " \
    \   return length($string);\n}", "    return length($string);\n}", "    return\
    \ length($string);\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

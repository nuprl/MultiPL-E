name: HumanEval_153_Strongest_Extension
language: pl
prompt: "# You will be given the name of a class (a string) and a list of extensions.\n\
  # The extensions are to be used to load additional classes to the class. The\n#\
  \ strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  # letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n# in the extension's name, the strength is given by the fraction CAP - SM. \n\
  # You should find the strongest extension and return a string in this \n# format:\
  \ ClassName.StrongestExtensionName.\n# If there are two or more extensions with\
  \ the same strength, you should\n# choose the one that comes first in the list.\n\
  # For example, if you are given \"Slices\" as the class and a list of the\n# extensions:\
  \ ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n# return 'Slices.SErviNGSliCes'\
  \ since 'SErviNGSliCes' is the strongest extension \n# (its strength is -1).\n#\
  \ Example:\nsub Strongest_Extension {\n    my($class_name, $extensions) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&Strongest_Extension;\n\
  \        if(eq_deeply($candidate->(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
  ]),\"Watashi.eIGHt8OKe\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(\"Boku123\", [\"nani\", \"NazeDa\",\
  \ \"YEs.WeCaNe\", \"32145tggg\"]),\"Boku123.YEs.WeCaNe\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"__YESIMHERE\"\
  , [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"]),\"\
  __YESIMHERE.NuLl__\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
  \  }\n        if(eq_deeply($candidate->(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"\
  cosSo\"]),\"K.TAR\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->(\"__HAHA\", [\"Tab\", \"123\", \"781345\"\
  , \"-_-\"]),\"__HAHA.123\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"YameRore\", [\"HhAas\", \"okIWILL123\"\
  , \"WorkOut\", \"Fails\", \"-_-\"]),\"YameRore.okIWILL123\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"finNNalLLly\"\
  , [\"Die\", \"NowW\", \"Wow\", \"WoW\"]),\"finNNalLLly.WoW\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  _\", [\"Bb\", \"91245\"]),\"_.Bb\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(\"Sp\", [\"671235\", \"Bb\"]),\"\
  Sp.671235\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\n\
  testhumaneval();"
completions: ["    my $strongest = undef;\n    my $strength;\n    foreach my $extension\
    \ (@$extensions) {\n        $strength = uc(substr($extension, 0, 1))-uc(substr($extension,\
    \ 0, 2));\n        if ($strength > 0) {\n            if ($strength > $strongest)\
    \ {\n                $strongest = $strength;\n            }\n        }\n    }\n\
    \    return $class_name.$strongest;\n}", "    my @extensions = @$extensions;\n\
    \    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n \
    \   my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $num_upper_case_letters = length($class_name);\n    my $num_lower_case_letters\
    \ = length($class_name) - $num_upper_case_letters;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = length($extension);\n   \
    \     if ($extension_strength > $strongest_extension_strength) {\n           \
    \ $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $strongest_extension . $strongest_extension_strength;\n\
    }", "    my @extensions = @$extensions;\n    my $strongest = -1;\n    my $strongest_extension;\n\
    \    my $i;\n    \n    foreach my $extension (@extensions) {\n        $strongest\
    \ = 0;\n        $strongest_extension = $extension;\n        foreach my $i (0 ..\
    \ $#extensions) {\n            if ($extensions[$i] eq $extension) {\n        \
    \        $strongest = $i;\n            }\n        }\n        if ($strongest >\
    \ $strongest_extension) {\n            $strongest_extension = $strongest;\n  \
    \      }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", " \
    \   my $strongest = -1;\n    my $i = 0;\n    foreach my $extension (@$extensions)\
    \ {\n        my $c = uc(substr($extension, 0, 1));\n        my $s = uc(substr($extension,\
    \ 1, 1));\n        $strongest = -1 if $c < $s;\n        $strongest = $i if $strongest\
    \ < $i;\n        $i++;\n    }\n    return $class_name . '.' . $extensions[$strongest];\n\
    }", "    my $strongest;\n    my $strength;\n    foreach my $extension (@$extensions)\
    \ {\n        $strength = uc(substr($extension, 0, 1)) - (uc(substr($extension,\
    \ 0, 1)));\n        if ($strength > 0) {\n            $strongest = $class_name\
    \ . $extension;\n        }\n    }\n    return $strongest;\n}", "    my $strongest_extension;\n\
    \    my $max_strength = -1;\n    foreach my $extension (@$extensions) {\n    \
    \    my $extension_strength = uc($extension) =~ tr/A-Z//;\n        if ($extension_strength\
    \ > $max_strength) {\n            $strongest_extension = $extension;\n       \
    \     $max_strength = $extension_strength;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}", "    my %extension_strength;\n    foreach\
    \ my $extension (@$extensions) {\n        my $extension_class = $class_name .\
    \ '::' . $extension;\n        my $extension_strength = \n            Strongest_Extension_Strength($extension_class);\n\
    \        $extension_strength{$extension_strength} = $extension_class;\n    }\n\
    \    my $strongest_extension = \n        sort { $a <=> $b } \n        map { $extension_strength{$_}\
    \ } \n        keys(%extension_strength);\n    return $strongest_extension->[0];\n\
    }", "    my $strongest_extension;\n    my $num_uppercase_letters = length($class_name)\
    \ - length($class_name =~ /[A-Z]/);\n    my $num_lowercase_letters = length($class_name)\
    \ - length($class_name =~ /[a-z]/);\n    my $strength = $num_uppercase_letters\
    \ - $num_lowercase_letters;\n    foreach my $extension (@$extensions) {\n    \
    \    my $num_uppercase_letters_extension = length($extension) - length($extension\
    \ =~ /[A-Z]/);\n        my $num_lowercase_letters_extension = length($extension)\
    \ - length($extension =~ /[a-z]/);\n        my $strength_extension = $num_uppercase_letters_extension\
    \ - $num_lowercase_letters_extension;\n        if ($strength > $strength_extension)\
    \ {\n            $strongest_extension = $extension;\n            $strength = $strength_extension;\n\
    \        }\n    }\n    return $class_name . $strongest_extension;\n}", "    my\
    \ $strongest;\n    my $max_strength = 0;\n    foreach my $extension (@$extensions)\
    \ {\n        my $strength = length($extension) - length($class_name);\n      \
    \  if ($strength > $max_strength) {\n            $strongest = $extension;\n  \
    \          $max_strength = $strength;\n        }\n    }\n    return $strongest;\n\
    }", "    my $strongest_extension = '';\n    my $strongest_strength = 0;\n    foreach\
    \ my $extension (@$extensions) {\n        my $extension_class = $class_name .\
    \ '_' . $extension;\n        my $extension_strength = &$extension_class::STRONGEST_EXTENSION_STRONGEST;\n\
    \        if ($extension_strength > $strongest_strength) {\n            $strongest_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $strongest_extension;\n}", "    my %extension_strengths;\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_strength =\
    \ substr($extension, length($class_name));\n        $extension_strengths{$extension_strength}\
    \ = $extension;\n    }\n    my $strongest_extension = -1;\n    foreach my $strength\
    \ (sort {$a <=> $b} keys %extension_strengths) {\n        if ($strength > $strongest_extension)\
    \ {\n            $strongest_extension = $strength;\n        }\n    }\n    return\
    \ $extension_strengths{$strongest_extension};\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    my $class_name_length = length($class_name);\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_length = length($extension);\n\
    \        my $extension_strength = int(($extension_length - $class_name_length)\
    \ / 2);\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $strongest_extension\
    \ . '.' . $strongest_extension_strength;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    my $extension_count;\n    my $extension_count_strength;\n\
    \    foreach my $extension (@$extensions) {\n        $extension_count++;\n   \
    \     $extension_count_strength = substr($extension, 0, 1);\n        if ($extension_count_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension = $extension;\n\
    \            $strongest_extension_strength = $extension_count_strength;\n    \
    \    }\n    }\n    return $class_name . $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    my $num_uppercase_letters = length($class_name)\
    \ - length($class_name =~ /[A-Z]/);\n    my $num_lowercase_letters = length($class_name)\
    \ - length($class_name =~ /[a-z]/);\n    my $strongest_extension_strength_fraction\
    \ = $num_uppercase_letters - $num_lowercase_letters;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = length($extension) - length($extension\
    \ =~ /[A-Z]/) - length($extension =~ /[a-z]/);\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension = $extension;\n\
    \            $strongest_extension_strength = $extension_strength;\n        }\n\
    \    }\n    return $strongest_extension;\n}", "    my $strongest_extension = '';\n\
    \    my $strongest_extension_strength = -1;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_strength = uc($extension) =~ tr/A-Z//;\n        if\
    \ ($extension_strength > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", "  \
    \  my @extension_strengths;\n    foreach my $extension (@$extensions) {\n    \
    \    my $extension_strength = substr($extension, length($class_name));\n     \
    \   push(@extension_strengths, $extension_strength);\n    }\n    my $strongest_extension\
    \ = @extension_strengths\n        ? $extension_strengths[0]\n        : undef;\n\
    \    return $class_name . '.' . $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    my $extension_count;\n    my $extension_strength;\n\
    \    my $extension_class;\n    my $extension_class_name;\n    my $extension_class_name_count;\n\
    \    my $extension_class_name_strength;\n    my $extension_class_name_class;\n\
    \    my $extension_class_name_class_name;\n    my $extension_class_name_class_name_count;\n\
    \    my $extension_class_name_class_name_strength;\n    my $extension_class_name_class_name_class;\n\
    \    my $extension_class_name_class_name_class_name;\n    my $extension_class_name_class_name_class_name_count;\n\
    \    my $extension_class_name_class_name_class_name_strength;\n    my $extension_class_name_class_name_class_name_class;\n\
    \    my $extension_class_name_class_name_class_name_class_name;\n    my $extension_class_name_class_name_class_name_class_name_count;\n\
    \    my $extension_class_name_class_name_class_name_class_name_strength;\n   \
    \ my $extension_class_name_class_name_class_name_class_name_class;\n    my $extension_class_name_class_name_class_name_class_name_class_name;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_count;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_strength;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_class;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_class_name;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_class_name_count;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_class_name_strength;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_class_name_class;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_class_name_class_name;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_class_name_class_name_count;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_class_name_class_name_strength;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_class_name_class_name_class;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_class_name_class_name_class_name;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_class_name_class_name_class_name_count;\n\
    \    my $extension_class_name_class_name_class_name_class_name_class_name_class_name_class_name_class_name_strength;\n\
    \    my $extension_class_name_class_name_class_", "    my @extensions = @$extensions;\n\
    \    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n \
    \   my $found;\n    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $strongest_extension_class;\n    my $strongest_extension_class_name;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length_max;\n\
    \    my $strongest_extension_class_name_length_min;\n    my $strongest_extension_class_name_length_avg;\n\
    \    my $strongest_extension_class_name_length_stdev;\n    my $strongest_extension_class_name_length_median;\n\
    \    my $strongest_extension_class_name_length_mode;\n    my $strongest_extension_class_name_length_variance;\n\
    \    my $strongest_extension_class_name_length_standard_deviation;\n    my $strongest_extension_class_name_length_standard_deviation_mode;\n\
    \    my $strongest_extension_class_name_length_standard_deviation_median;\n  \
    \  my $strongest_extension_class_name_length_standard_deviation_variance;\n  \
    \  my $strongest_extension_class_name_length_standard_deviation_stdev;\n    my\
    \ $strongest_extension_class_name_length_standard_deviation_stdev_mode;\n    my\
    \ $strongest_extension_class_name_length_standard_deviation_stdev_median;\n  \
    \  my $strongest_extension_class_name_length_standard_deviation_stdev_variance;\n\
    \    my $strongest_extension_class_name_length_standard_deviation_stdev_stdev;\n\
    \    my $strongest_extension_class_name_length_standard_deviation_stdev_stdev_mode;\n\
    \    my $strongest_extension_class_name_length_standard_deviation_stdev_stdev_median;\n\
    \    my $strongest_extension_class_name_length_standard_deviation_stdev_stdev_variance;\n\
    \    my $strongest_extension_class_name_length_standard_deviation_stdev_stdev_stdev;\n\
    \    my $strongest_extension_class_name_length_standard_deviation_stdev_stdev_stdev_mode;\n\
    \    my $strongest_extension_class_name_length_standard_deviation_stdev_stdev_stdev_median;\n\
    \    my $strongest_extension_class_name_length_standard_deviation_stdev_stdev_stdev_variance;\n\
    \    my $strongest_extension_class_name_length_standard_deviation_stdev_stdev_stdev_stdev;\n\
    \    my $strongest_extension_class_name_", "    my $strongest_extension;\n   \
    \ my $num_cap = 0;\n    my $num_sm = 0;\n    foreach my $extension (@$extensions)\
    \ {\n        $num_cap += length($extension) - length($extension->{CAP});\n   \
    \     $num_sm += length($extension) - length($extension->{SM});\n    }\n    $strongest_extension\
    \ = $class_name if $num_cap == 0;\n    $strongest_extension = $class_name if $num_sm\
    \ == 0;\n    $strongest_extension = $class_name if $num_cap > $num_sm;\n    $strongest_extension\
    \ = $class_name if $num_cap < $num_sm;\n    return $strongest_extension;\n}",
  "    my $strongest_extension;\n    my $num_caps = 0;\n    my $num_sms = 0;\n   \
    \ foreach my $extension (@$extensions) {\n        my $num_caps_extension = length($extension)\
    \ - length($extension =~ /[A-Z]/);\n        my $num_sms_extension = length($extension)\
    \ - length($extension =~ /[a-z]/);\n        if ($num_caps_extension > $num_caps)\
    \ {\n            $strongest_extension = $extension;\n            $num_caps = $num_caps_extension;\n\
    \        }\n        if ($num_sms_extension > $num_sms) {\n            $strongest_extension\
    \ = $extension;\n            $num_sms = $num_sms_extension;\n        }\n    }\n\
    \    return $class_name . $strongest_extension;\n}", "    my $strongest;\n   \
    \ my $cap = 0;\n    my $sm = 0;\n    foreach my $extension (@$extensions) {\n\
    \        my $len = length($extension);\n        $cap += $len if $extension =~\
    \ /[A-Z]/;\n        $sm += $len if $extension =~ /[a-z]/;\n    }\n    $strongest\
    \ = \"$class_name.$extensions[0]\" if ($cap - $sm > 0);\n    foreach my $extension\
    \ (@$extensions) {\n        my $len = length($extension);\n        $cap -= $len\
    \ if $extension =~ /[A-Z]/;\n        $sm -= $len if $extension =~ /[a-z]/;\n \
    \   }\n    return $strongest if ($cap - $sm > 0);\n    foreach my $extension (@$extensions)\
    \ {\n        my $len = length($extension);\n        $cap -= $len if $extension\
    \ =~ /[A-Z]/;\n        $sm -= $len if $extension =~ /[a-z]/;\n    }\n    $strongest\
    \ = \"$class_name.$extensions[0]\" if ($cap - $sm > 0);\n    return $strongest;\n\
    }", "    my $strongest_extension = \"\";\n    my $strongest_extension_strength\
    \ = 0;\n    foreach my $extension (@$extensions) {\n        my $extension_strength\
    \ = uc($extension) =~ tr/A-Z//;\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}", "    my $strongest = undef;\n    my $i\
    \ = 0;\n    foreach my $extension (@$extensions) {\n        my $c = uc(substr($extension,\
    \ 0, 1));\n        my $s = uc(substr($extension, 1, 1));\n        my $strength\
    \ = int(($c - $s) / 2);\n        if ($strength > 0) {\n            if ($strongest\
    \ eq undef) {\n                $strongest = $extension;\n            }\n     \
    \       elsif ($strength < $strongest->{strength}) {\n                $strongest\
    \ = $extension;\n            }\n        }\n        $i++;\n    }\n    return $strongest;\n\
    }", "    my $strongest = -1;\n    my $strongest_extension;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_class = $class_name . '::' . $extension;\n\
    \        if ($extension_class =~ /^$class_name::/) {\n            my $strength\
    \ = length($extension) - length($extension_class);\n            if ($strength\
    \ > $strongest) {\n                $strongest = $strength;\n                $strongest_extension\
    \ = $extension;\n            }\n        }\n    }\n    return $strongest_extension;\n\
    }", "    my $strongest_extension;\n    my $strongest_extension_strength;\n   \
    \ my $num_uppercase_letters = length($class_name);\n    my $num_lowercase_letters\
    \ = length($class_name) - $num_uppercase_letters;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_strength = length($extension);\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    foreach my $extension (@$extensions)\
    \ {\n        my $class_name_length = length($class_name);\n        my $extension_length\
    \ = length($extension);\n        my $strength = $class_name_length - $extension_length;\n\
    \        if ($strength > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $strength;\n            $strongest_extension = $extension;\n        }\n  \
    \  }\n    return $strongest_extension;\n}", "    my $strongest_extension;\n  \
    \  my $strongest_extension_strength;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_strength = substr($extension, 0, 1) =~ tr/A-Z//;\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }", "    my $strongest_extension = \"\";\n    my $strongest_extension_strength\
    \ = 0;\n    foreach my $extension (@$extensions) {\n        my $extension_strength\
    \ = uc($extension) =~ tr/A-Z//;\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}", "    my $strongest;\n    my $strongest_index;\n\
    \    my $extension_count;\n    my $extension_strength;\n    my $extension_lower;\n\
    \    my $extension_upper;\n    my $extension_lower_index;\n    my $extension_upper_index;\n\
    \    my $extension_lower_index;\n    my $extension_upper_index;\n    my $extension_lower_index;\n\
    \    my $extension_upper_index;\n    my $extension_lower_index;\n    my $extension_upper_index;\n\
    \    my $extension_lower_index;\n    my $extension_upper_index;\n    my $extension_lower_index;\n\
    \    my $extension_upper_index;\n    my $extension_lower_index;\n    my $extension_upper_index;\n\
    \    my $extension_lower_index;\n    my $extension_upper_index;\n    my $extension_lower_index;\n\
    \    my $extension_upper_index;\n    my $extension_lower_index;\n    my $extension_upper_index;\n\
    \    my $extension_lower_index;\n    my $extension_upper_index;\n    my $extension_lower_index;\n\
    \    my $extension_upper_index;\n    my $extension_lower_index;\n    my $extension_upper_index;\n\
    \    my $extension_lower_index;\n    my $extension_upper_index;\n    my $extension_lower_index;\n\
    \    my $extension_upper_index;\n    my $extension_lower_index;\n    my $extension_upper_index;\n\
    \    my $extension_lower_index;\n    my $extension_upper_index;\n    my $extension_lower_index;\n\
    \    my $extension_upper_index;\n    my $extension_lower_index;\n    my $extension_upper_index;\n\
    \    my $extension_lower_index;\n    my $extension_upper_index;\n    my $extension_lower_index;\n\
    \    my $extension_upper_index;\n    my $extension_lower_index;\n    my $extension_upper_index;\n\
    \    my $extension_lower_index;\n    my $extension_upper_index;\n    my $extension_lower_index;\n\
    \    my $extension_upper_index;\n    my $extension_lower_index;\n    my $extension_upper_index;\n\
    \    my $extension_lower_index;\n    my $extension_upper_index;\n    my $extension_lower_index;\n\
    \    my $extension_upper_index;\n    my $extension_lower_index;\n    my $extension_upper_index;\n\
    \    my $extension_lower_index;\n    my $extension_upper_index;\n    my $extension_lower_index;",
  "    my $strongest_extension;\n    my $strongest_strength;\n    my $extension_count;\n\
    \    foreach my $extension (@$extensions) {\n        $extension_count++;\n   \
    \     $strongest_strength = $extension_count;\n        $strongest_extension =\
    \ $extension;\n        foreach my $extension_name (@$extensions) {\n         \
    \   my $extension_class = $extension_name =~ s/^(.)/ucfirst($1)/e;\n         \
    \   my $extension_class_name = $extension_class;\n            $extension_class_name\
    \ =~ s/([A-Z])/uc($1)/eg;\n            my $extension_class_name_length = $extension_class_name\
    \ =~ tr/A-Z//;\n            my $extension_class_name_length = $extension_class_name_length\
    \ + 2;\n            my $extension_class_name_strength = $extension_class_name_length\
    \ - $strongest_strength;\n            if ($extension_class_name_strength > $strongest_strength)\
    \ {\n                $strongest_strength = $extension_class_name_strength;\n \
    \               $strongest_extension = $extension_class_name;\n            }\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", " \
    \   my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n  \
    \  my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my\
    \ $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my\
    \ $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n\
    \    my $j;\n    my $k;\n    ", "    my $strongest_extension;\n    my $strongest_strength;\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_class = $class_name\
    \ . '_' . $extension;\n        my $extension_strength = Strongest_Extension_Strength($extension_class);\n\
    \        if ($extension_strength > $strongest_strength) {\n            $strongest_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension_class;\n\
    \        }\n    }\n    return $strongest_extension;\n}", "    my $strongest_extension\
    \ = '';\n    my $strongest_extension_strength = 0;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = uc($extension) =~ tr/A-Z//;\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . $strongest_extension;\n\
    }", "    my %extension_strength;\n    foreach my $extension (@$extensions) {\n\
    \        $extension_strength{$extension} = -1;\n    }\n    foreach my $extension\
    \ (@$extensions) {\n        $extension_strength{$extension} = $extension =~ tr/A-Z//;\n\
    \    }\n    foreach my $extension (sort {$extension_strength{$b} <=> $extension_strength{$a}}\
    \ keys %extension_strength) {\n        return $class_name.$extension;\n    }\n\
    \    return $class_name;\n}", "    my $strongest;\n    my $strongest_index;\n\
    \    my $strongest_extension;\n    my $strongest_extension_index;\n    my $strongest_extension_strength;\n\
    \    my $strongest_extension_strength_index;\n    my $strongest_extension_strength_strength;\n\
    \    my $strongest_extension_strength_strength_index;\n    my $strongest_extension_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_index;\n    my $strongest_extension_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_index;\n    my\
    \ $strongest_extension_strength_strength_strength_strength_strength;\n    my $strongest_extension_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength", "    my $strongest;\n\
    \    my $cap = 0;\n    my $sm = 0;\n    foreach my $extension (@$extensions) {\n\
    \        $cap += length($extension);\n        $sm += length($extension) - length($extension);\n\
    \    }\n    $strongest = \"$class_name.$extensions[0]\";\n    foreach my $extension\
    \ (@$extensions) {\n        $cap -= length($extension);\n        $sm -= length($extension)\
    \ - length($extension);\n        if ($cap > $sm) {\n            $strongest = \"\
    $class_name.$extension\";\n        }\n    }\n    return $strongest;\n}", "   \
    \ my $strongest_extension;\n    my $strongest_extension_strength;\n    my $extension_count;\n\
    \    my $extension_strength;\n    my $extension_class;\n    foreach my $extension\
    \ (@$extensions) {\n        $extension_count++;\n        $extension_class = $extension\
    \ =~ s/^([A-Z]*)([A-Z]*)([A-Z]*)$/$1/;\n        $extension_strength = $extension\
    \ =~ tr/A-Z/a-z/;\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . $strongest_extension . \"_\" . $strongest_extension_strength;\n}", "    my\
    \ $strongest_extension;\n    my $strongest_extension_strength;\n    my $num_uppercase_letters\
    \ = length($class_name) - length($class_name =~ /[A-Z]/);\n    my $num_lowercase_letters\
    \ = length($class_name) - length($class_name =~ /[a-z]/);\n    my $strength =\
    \ $num_uppercase_letters - $num_lowercase_letters;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = length($extension) - length($extension\
    \ =~ /[A-Z]/) - length($extension =~ /[a-z]/);\n        if ($extension_strength\
    \ > $strength) {\n            $strongest_extension = $extension;\n           \
    \ $strongest_extension_strength = $extension_strength;\n        }\n    }\n   \
    \ return $class_name . '.' . $strongest_extension;\n}", "    my $strongest;\n\
    \    my $strength;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my\
    \ $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my\
    \ $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n\
    \    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my\
    \ $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n\
    \    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my\
    \ $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n\
    \    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my\
    \ $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n\
    \    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my\
    \ $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n\
    \    ", "    my $strongest_extension = \"\";\n    my $strongest_extension_strength\
    \ = 0;\n    foreach my $extension (@$extensions) {\n        my $extension_strength\
    \ = uc($extension) =~ tr/A-Z/a-z/;\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}", "    my $strongest_extension;\n    my $strongest_strength;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $strongest_extension_found = 0;\n    foreach\
    \ my $extension (@$extensions) {\n        $strongest_strength = -1;\n        $strongest_extension\
    \ = '';\n        foreach my $char (split //, $extension) {\n            if ($char\
    \ =~ /^[A-Z]/) {\n                $strongest_strength++;\n            } elsif\
    \ ($char =~ /^[a-z]/) {\n                $strongest_strength--;\n            }\n\
    \            if ($strongest_strength > $strongest_strength) {\n              \
    \  $strongest_extension = $extension;\n                $strongest_strength = $strongest_strength\
    \ - 1;\n                $strongest_extension_found = 1;\n            }\n     \
    \   }\n        if ($strongest_strength == -1) {\n            $strongest_extension\
    \ = $extension;\n            $strongest_strength = 0;\n        }\n        if ($strongest_strength\
    \ == 0 && !$strongest_extension_found) {\n            $strongest_extension = $extension;\n\
    \            $strongest_strength = 1;\n        }\n        if ($strongest_strength\
    \ > $strongest_strength) {\n            $strongest_extension = $extension;\n \
    \           $strongest_strength = $strongest_strength - 1;\n        }\n      \
    \  $i++;\n        if ($i == @$extensions) {\n            $j++;\n            $i\
    \ = 0;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }", "    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my\
    \ $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my\
    \ $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n\
    \    my $j;\n    my $k;\n    ", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_strength =\
    \ uc($extension) =~ tr/A-Z//;\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension = $extension;\n            $strongest_extension_strength\
    \ = $extension_strength;\n        }\n    }\n    return $class_name . $strongest_extension;\n\
    }", "    my $strongest;\n    my $strength;\n    my $extension;\n    foreach $extension\
    \ (@$extensions) {\n        $strength = uc(substr($extension, 0, 1))-uc(substr($extension,\
    \ 0, 2));\n        if ($strength > $strongest) {\n            $strongest = $strength;\n\
    \            $extension = $extension;\n        }\n    }\n    return $class_name.$extension;\n\
    }", "    my $strongest_extension;\n    my $max_strength;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = uc($extension) =~ tr/A-Z//;\n\
    \        if ($extension_strength > $max_strength) {\n            $strongest_extension\
    \ = $extension;\n            $max_strength = $extension_strength;\n        }\n\
    \    }\n    return $class_name . '.' . $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_strength = uc($extension) =~ tr/A-Z//;\n        if\
    \ ($extension_strength > $strongest_extension_strength) {\n            $strongest_extension\
    \ = $extension;\n            $strongest_extension_strength = $extension_strength;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", " \
    \   my $strongest_extension = '';\n    my $num_upper = 0;\n    my $num_lower =\
    \ 0;\n    foreach my $extension (@$extensions) {\n        my $extension_length\
    \ = length($extension);\n        my $extension_upper = substr($extension, 0, $extension_length);\n\
    \        my $extension_lower = substr($extension, 0, $extension_length);\n   \
    \     $num_upper += $extension_upper =~ /[A-Z]/;\n        $num_lower += $extension_lower\
    \ =~ /[a-z]/;\n    }\n    my $strength = -1;\n    if ($num_upper == $num_lower)\
    \ {\n        $strength = 0;\n    } elsif ($num_upper > $num_lower) {\n       \
    \ $strength = $num_upper - $num_lower;\n    } else {\n        $strength = $num_lower\
    \ - $num_upper;\n    }\n    foreach my $extension (@$extensions) {\n        my\
    \ $extension_length = length($extension);\n        my $extension_upper = substr($extension,\
    \ 0, $extension_length);\n        my $extension_lower = substr($extension, 0,\
    \ $extension_length);\n        if ($extension_upper =~ /[A-Z]/) {\n          \
    \  $extension_upper =~ s/[A-Z]/-/g;\n        }\n        if ($extension_lower =~\
    \ /[a-z]/) {\n            $extension_lower =~ s/[a-z]/-/g;\n        }\n      \
    \  if ($extension_upper =~ /-/ && $extension_lower =~ /-/) {\n            $extension_upper\
    \ =~ s/-/+/g;\n            $extension_lower =~ s/-/+/g;\n        }\n        if\
    \ ($extension_upper =~ /-/ && $extension_lower =~ /-/ && $extension_upper =~ /-/\
    \ && $extension_lower =~ /-/) {\n            $extension_upper =~ s/-/+/g;\n  \
    \          $extension_lower =~ s/-/+/g;\n        }\n        if ($extension_upper\
    \ =~ /-/ && $extension_lower =~ /-/ && $extension_upper =~ /-/ && $extension_lower\
    \ =~ /-/ && $extension_upper =~ /-/ && $extension_lower =~ /-/) {\n          \
    \  $extension_upper =~ s/-/+/g;\n            $extension_lower =~ s/-/+/g;\n  \
    \      }\n        if ($extension_upper =~ /-/ && $extension_lower =~ /-/ && $extension_upper\
    \ =~ /-/ && $extension_lower ", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $number_of_uppercase_letters = 0;\n    my $number_of_lowercase_letters\
    \ = 0;\n    foreach my $extension (@$extensions) {\n        my $extension_class\
    \ = $class_name . '::' . $extension;\n        my $extension_strength = eval {\n\
    \            require $extension_class;\n            length($extension_class);\n\
    \        };\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n        if ($extension_strength\
    \ > 0) {\n            $number_of_uppercase_letters += length($extension_class);\n\
    \        }\n        if ($extension_strength > 0) {\n            $number_of_lowercase_letters\
    \ += length($extension_class);\n        }\n    }\n    if ($number_of_uppercase_letters\
    \ > $number_of_lowercase_letters) {\n        $strongest_extension = $class_name\
    \ . '::' . $strongest_extension;\n    }\n    return $strongest_extension;\n}",
  "    my $strongest_extension;\n    my $strongest_extension_strength;\n    my $extension_counter;\n\
    \    foreach my $extension (@$extensions) {\n        $extension_counter++;\n \
    \       $strongest_extension_strength = $extension_counter;\n        foreach my\
    \ $class_name (@$extension) {\n            my $class_name_length = length($class_name);\n\
    \            foreach my $extension_name (@$extensions) {\n                my $extension_name_length\
    \ = length($extension_name);\n                my $extension_strength = substr($extension_name,\
    \ $extension_name_length - $class_name_length + 1);\n                if ($extension_strength\
    \ > $strongest_extension_strength) {\n                    $strongest_extension_strength\
    \ = $extension_strength;\n                    $strongest_extension = $extension_name;\n\
    \                }\n            }\n        }\n    }\n    return $strongest_extension;\n\
    }", "    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my\
    \ $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my\
    \ $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n\
    \    my $j;\n    my $k;\n    ", "    my $strongest;\n    my $strength;\n    my\
    \ $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n\
    \    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my\
    \ $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n\
    \    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my\
    \ $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n\
    \    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my\
    \ $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n\
    \    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my\
    \ $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n\
    \    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my\
    \ $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n\
    \    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my\
    \ $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n\
    \    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my\
    \ $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n\
    \    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my\
    \ $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    ", "    my $strongest_extension\
    \ = '';\n    my $num_upper = 0;\n    my $num_lower = 0;\n    foreach my $extension\
    \ (@$extensions) {\n        my $num_upper = length($extension) - length($extension)\
    \ =~ tr/A-Z//;\n        my $num_lower = length($extension) - length($extension)\
    \ =~ tr/a-z//;\n        if ($num_upper > $num_lower) {\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }", "    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my\
    \ $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my\
    \ $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n\
    \    my $j;\n    my $k;\n    ", "    my $strongest_extension = '';\n    my $strength\
    \ = 0;\n    foreach my $extension (@$extensions) {\n        my $class_name_length\
    \ = length($class_name);\n        my $extension_length = length($extension);\n\
    \        my $fraction = $class_name_length - $extension_length;\n        if ($fraction\
    \ < 0) {\n            $fraction = 0;\n        }\n        $strength += $fraction;\n\
    \        if ($strength > 0) {\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $strongest_extension;\n}", "    my @extensions =\
    \ @$extensions;\n    my $strongest = undef;\n    my $strength = -1;\n    foreach\
    \ my $extension (@extensions) {\n        $strength = uc($extension) cmp uc($strongest);\n\
    \        if ($strength > 0) {\n            $strongest = $extension;\n        }\n\
    \    }\n    return $class_name . '.' . $strongest;\n}", "    my $strongest_extension;\n\
    \    my $strongest_strength;\n    my $class_name_length = length($class_name);\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_length = length($extension);\n\
    \        my $extension_strength = int(($extension_length - $class_name_length)\
    \ / 2);\n        if ($extension_strength > $strongest_strength) {\n          \
    \  $strongest_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . $strongest_extension;\n\
    }", "    my $strongest_extension;\n    my $strength;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my\
    \ $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    ", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_strength = uc($extension) =~ tr/A-Z//;\n        if\
    \ ($extension_strength > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", "  \
    \  my $strongest_extension;\n    my $strength;\n    my $cap;\n    my $sm;\n  \
    \  foreach my $extension (@$extensions) {\n        $cap = length($extension);\n\
    \        $sm = length($class_name);\n        $strength = $cap - $sm;\n       \
    \ if ($strength > 0) {\n            $strongest_extension = $extension;\n     \
    \   }\n    }\n    return $strongest_extension;\n}", "    my $strongest;\n    my\
    \ $max_strength;\n    foreach my $extension (@$extensions) {\n        my $strength\
    \ = uc($extension) =~ tr/A-Z//;\n        if ($strength > $max_strength) {\n  \
    \          $strongest = $extension;\n            $max_strength = $strength;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest;\n}", "    my $strongest;\n\
    \    my $strength;\n    my $extension;\n    my $i;\n    my $j;\n    my $k;\n \
    \   my $found;\n    my $max_strength;\n    my $max_extension;\n    my $max_index;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_",
  "    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n   \
    \ my $strongest_extension;\n    \n    foreach my $extension (@$extensions) {\n\
    \        $strength = -1;\n        $strongest = $extension;\n        $i = 0;\n\
    \        $j = 0;\n        $k = 0;\n        \n        foreach my $char (split(//,\
    \ $extension)) {\n            $strength += $char;\n            $i++;\n       \
    \ }\n        \n        foreach my $char (split(//, $extension)) {\n          \
    \  $strength -= $char;\n            $j++;\n        }\n        \n        if ($strength\
    \ > 0) {\n            $strongest = $extension;\n        }\n        \n        if\
    \ ($strength == 0) {\n            $strongest = $extension;\n        }\n      \
    \  \n        if ($strength < 0) {\n            $strongest = $extension;\n    \
    \    }\n        \n        if ($strength > 0) {\n            $strongest_extension\
    \ = $extension;\n        }\n        \n        if ($strength == 0) {\n        \
    \    $strongest_extension = $extension;\n        }\n        \n        if ($strength\
    \ < 0) {\n            $strongest_extension = $extension;\n        }\n        \n\
    \        if ($strength > 0) {\n            $strongest_extension = $extension;\n\
    \        }\n        \n        if ($strength == 0) {\n            $strongest_extension\
    \ = $extension;\n        }\n        \n        if ($strength < 0) {\n         \
    \   $strongest_extension = $extension;\n        }\n        \n        if ($strength\
    \ > 0) {\n            $strongest_extension = $extension;\n        }\n        \n\
    \        if ($strength == 0) {\n            $strongest_extension = $extension;\n\
    \        }\n        \n        if ($strength < 0) {\n            $strongest_extension\
    \ = $extension;\n        }\n        \n        if ($strength > 0) {\n         \
    \   $strongest_extension = $extension;\n        }\n        \n        if ($strength\
    \ == 0) {\n            $strongest_extension = $extension;\n        }\n       \
    \ \n        if ($strength < 0) {\n            $strongest_extension = $extension;\n\
    \        }\n        \n        if ($strength > 0) {\n            $strongest_extension\
    \ = $extension;\n        }\n        \n        if ($strength == 0) {\n        \
    \    $strongest_extension = $extension;\n        }\n        \n        if ($strength\
    \ < 0) {\n            $strongest_extension = $extension;\n        }\n        \n\
    \        if ($strength > 0) {\n            $strongest_extension = $extension;\n\
    \        }\n        \n        if ($strength == 0) {\n            $strongest_extension\
    \ = $extension;\n        }\n        \n        if ($strength < 0) {\n         \
    \   $strongest_extension = $extension;\n        }\n        \n        if ($strength\
    \ > ", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $extension_count;\n    my $extension_count_index;\n    my $extension_strength;\n\
    \    my $extension_strength_index;\n    my $extension_strength_sum;\n    my $extension_strength_sum_index;\n\
    \    my $extension_strength_sum_sum;\n    my $extension_strength_sum_sum_index;\n\
    \    my $extension_strength_sum_sum_sum;\n    my $extension_strength_sum_sum_sum_index;\n\
    \    my $extension_strength_sum_sum_sum_sum;\n    my $extension_strength_sum_sum_sum_sum_index;\n\
    \    my $extension_strength_sum_sum_sum_sum_sum;\n    my $extension_strength_sum_sum_sum_sum_sum_index;\n\
    \    my $extension_strength_sum_sum_sum_sum_sum_sum;\n    my $extension_strength_sum_sum_sum_sum_sum_sum_index;\n\
    \    my $extension_strength_sum_sum_sum_sum_sum_sum_sum;\n    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_index;\n\
    \    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum;\n    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_index;\n\
    \    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum;\n    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_index;\n\
    \    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum;\n    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_index;\n\
    \    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum;\n    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum_index;\n\
    \    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum;\n   \
    \ my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_index;\n    my\
    \ $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum;\n    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_index;\n\
    \    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum;\n\
    \    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_index;\n\
    \    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum;\n\
    \    my $extension_strength_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_", " \
    \   my @extensions = @$extensions;\n    my $strongest = undef;\n    my $strength\
    \ = -1;\n    my $i = 0;\n    foreach my $extension (@extensions) {\n        $strength\
    \ = uc(substr($extension, 0, 1)) - (uc(substr($extension, 0, 1)));\n        if\
    \ ($strength > $strongest) {\n            $strongest = $strength;\n        }\n\
    \        $i++;\n    }\n    if ($strongest == -1) {\n        return $class_name;\n\
    \    }\n    my $strongest_extension = $class_name . '.' . $strongest;\n    foreach\
    \ my $extension (@extensions) {\n        if ($extension =~ /^$strongest_extension/)\
    \ {\n            return $extension;\n        }\n    }\n    return $class_name;\n\
    }", "    my $strongest_extension = '';\n    my $max_strength = 0;\n    foreach\
    \ my $extension (@$extensions) {\n        my $extension_strength = uc($extension)\
    \ =~ tr/A-Z//;\n        if ($extension_strength > $max_strength) {\n         \
    \   $strongest_extension = $extension;\n            $max_strength = $extension_strength;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", " \
    \   my $strongest = -1;\n    my $extension;\n    foreach $extension (@$extensions)\
    \ {\n        my $c = ucfirst $extension;\n        my $s = lcfirst $extension;\n\
    \        $strongest = -1 if $strongest < $c if $c =~ /^[A-Z]/;\n        $strongest\
    \ = -1 if $strongest < $s if $s !~ /^[A-Z]/;\n    }\n    return $class_name .\
    \ '.' . $strongest;\n}", "    my $strongest_extension;\n    my $strongest_strength;\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_class = $class_name\
    \ . '::' . $extension;\n        my $extension_strength = Strongest_Extension_Strength($extension_class);\n\
    \        if ($extension_strength > $strongest_strength) {\n            $strongest_extension\
    \ = $extension;\n            $strongest_strength = $extension_strength;\n    \
    \    }\n    }\n    return $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    my $num_uppercase_letters = length($class_name);\n\
    \    my $num_lowercase_letters = length($class_name) - $num_uppercase_letters;\n\
    \    my $num_extensions = @$extensions;\n    my $num_extensions_strength;\n  \
    \  my $i;\n    my $j;\n    my $k;\n    my $strength;\n    my $strength_of_extension;\n\
    \    my $extensions_strength;\n    my $extensions_name;\n    my $extensions_name_strength;\n\
    \    my $extensions_name_strength_of_extension;\n    my $extensions_name_strength_of_extension_strength;\n\
    \    my $extensions_name_strength_of_extension_strength_of_extension;\n    my\
    \ $extensions_name_strength_of_extension_strength_of_extension_strength;\n   \
    \ my $extensions_name_strength_of_extension_strength_of_extension_strength_of_extension;\n\
    \    my $extensions_name_strength_of_extension_strength_of_extension_strength_of_extension_strength;\n\
    \    my $extensions_name_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension;\n\
    \    my $extensions_name_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength;\n\
    \    my $extensions_name_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension;\n\
    \    my $extensions_name_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength;\n\
    \    my $extensions_name_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension;\n\
    \    my $extensions_name_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength;\n\
    \    my $extensions_name_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension;\n\
    \    my $extensions_name_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength_of_extension_strength;\n\
    \    my $extensions_name_strength_of_extension_strength_of_extension_strength_of_extension_strength",
  "    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n   \
    \ my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n\
    \    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my\
    \ $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n\
    \    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my\
    \ $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n\
    \    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my\
    \ $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n\
    \    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n\
    \    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my\
    \ $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n\
    \    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my\
    \ $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n\
    \    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my\
    \ $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    ", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $num_uppercase_letters = 0;\n    my $num_lowercase_letters = 0;\n    foreach\
    \ my $extension (@$extensions) {\n        my $extension_class = $class_name .\
    \ '::' . $extension;\n        my $extension_strength = eval {\n            require\
    \ $extension_class;\n            length($extension_class);\n        };\n     \
    \   if ($extension_strength > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n        if ($extension_strength > 0) {\n            $num_uppercase_letters\
    \ += length($extension_class);\n            $num_lowercase_letters += length($extension_class);\n\
    \        }\n    }\n    if ($num_uppercase_letters > $num_lowercase_letters) {\n\
    \        $strongest_extension = $class_name . '::' . $strongest_extension;\n \
    \   }\n    return $strongest_extension;\n}", "    my $strongest_extension = '';\n\
    \    my $strongest_extension_strength = 0;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_strength = uc(substr($extension, 0, 1))-uc(substr($extension,\
    \ 0, 2));\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name.$strongest_extension;\n\
    }", "    my $strongest_extension = '';\n    my $strongest_extension_strength =\
    \ 0;\n    foreach my $extension (@$extensions) {\n        my $extension_strength\
    \ = length($extension) - length($extension =~ /[A-Z]/);\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", "  \
    \  my %extension_strength;\n    foreach my $extension (@$extensions) {\n     \
    \   my $extension_class = $class_name . '::' . $extension;\n        $extension_strength{$extension_class}\
    \ = $extension =~ tr/A-Z/a-z/;\n    }\n    my $max_strength = -1;\n    foreach\
    \ my $extension_class (keys %extension_strength) {\n        if ($extension_strength{$extension_class}\
    \ > $max_strength) {\n            $max_strength = $extension_strength{$extension_class};\n\
    \        }\n    }\n    return $class_name . '::' . $max_strength;\n}", "    my\
    \ $strongest_extension;\n    my $strongest_extension_strength;\n    foreach my\
    \ $extension (@$extensions) {\n        my $extension_strength = uc($extension)\
    \ =~ tr/A-Z//;\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return \"$class_name.$strongest_extension\"\
    ;\n}", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $class_name_length = length($class_name);\n    my $extensions_length =\
    \ length($extensions);\n    my $extensions_length_counter = 0;\n    my $extensions_length_counter_max\
    \ = length($extensions) - 1;\n    my $extensions_length_counter_min = 0;\n   \
    \ my $extensions_length_counter_max_counter = 0;\n    my $extensions_length_counter_min_counter\
    \ = 0;\n    my $extensions_length_counter_max_counter_counter = 0;\n    my $extensions_length_counter_min_counter_counter\
    \ = 0;\n    my $extensions_length_counter_max_counter_counter_counter = 0;\n \
    \   my $extensions_length_counter_min_counter_counter_counter = 0;\n    my $extensions_length_counter_max_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_min_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_max_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_min_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_max_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_min_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_max_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_min_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_max_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_min_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_max_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_min_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_max_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_min_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_max_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_min_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_max_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_min_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_max_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_min_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    my $extensions_length_counter_max_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    ", "    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my\
    \ $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my\
    \ $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my\
    \ $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n\
    \    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my\
    \ $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n\
    \    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    ", "    my $strongest_extension;\n  \
    \  my $strength;\n    foreach my $extension (@$extensions) {\n        $strength\
    \ = uc(substr($extension, 0, 1)) - (uc(substr($extension, 0, 1)));\n        if\
    \ ($strength > 0) {\n            $strongest_extension = $extension;\n        }\n\
    \    }\n    return $class_name . \".\" . $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    my $class_name_length = length($class_name);\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_length = length($extension);\n\
    \        my $extension_strength = int(($extension_length - $class_name_length)\
    \ / 2);\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $strongest_extension;\n\
    }", "    my $strongest_extension;\n    my $strongest_strength;\n    foreach my\
    \ $extension (@$extensions) {\n        my $extension_class = $class_name . '::'\
    \ . $extension;\n        my $strength = Strongest_Extension_Strength($extension_class);\n\
    \        if ($strength > $strongest_strength) {\n            $strongest_extension\
    \ = $extension;\n            $strongest_strength = $strength;\n        }\n   \
    \ }\n    return $strongest_extension;\n}", "    my $strongest_extension;\n   \
    \ my $strongest_strength;\n    foreach my $extension (@$extensions) {\n      \
    \  my $class_name_length = length($class_name);\n        my $extension_length\
    \ = length($extension);\n        my $strength = $class_name_length - $extension_length;\n\
    \        if ($strength > $strongest_strength) {\n            $strongest_strength\
    \ = $strength;\n            $strongest_extension = $extension;\n        }\n  \
    \  }\n    return \"$class_name.$strongest_extension\";\n}", "    my $strongest;\n\
    \    my $num_caps = 0;\n    my $num_sms = 0;\n    foreach my $extension (@$extensions)\
    \ {\n        my $name = $extension =~ /^[A-Z]+$/;\n        $num_caps += length($name);\n\
    \        $num_sms += length($name) - (length($name) - length($name =~ /[A-Z]/));\n\
    \    }\n    $strongest = \"$class_name.$extensions[0]\";\n    foreach my $extension\
    \ (@$extensions) {\n        my $name = $extension =~ /^[A-Z]+$/;\n        my $cap_diff\
    \ = length($name) - $num_caps;\n        my $sm_diff = length($name) - $num_sms;\n\
    \        if ($cap_diff > $sm_diff) {\n            $strongest = \"$class_name.$extension\"\
    ;\n        }\n    }\n    return $strongest;\n}", "    my $strongest;\n    my $cap;\n\
    \    my $sm;\n    foreach my $extension (@$extensions) {\n        $cap = length($extension);\n\
    \        $sm = length($extension) - $cap;\n        if ($cap > $sm) {\n       \
    \     $strongest = $extension;\n        }\n    }\n    return $class_name . '.'\
    \ . $strongest;\n}", "    my $strongest = undef;\n    my $strongest_extension\
    \ = undef;\n    my $strongest_strength = undef;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_class = $class_name . '::' . $extension;\n        my\
    \ $extension_strength = Strongest_Extension_Strength($extension_class);\n    \
    \    if ($extension_strength > $strongest_strength) {\n            $strongest_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $strongest_extension;\n}", "    my $strongest_extension\
    \ = '';\n    my $strongest_extension_strength = 0;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = uc($extension) =~ tr/A-Z/a-z/;\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }", "    my $strongest = -1;\n    foreach my $extension (@$extensions) {\n   \
    \     my $extension_class = $class_name . '_' . $extension;\n        my $extension_strength\
    \ = length($extension_class);\n        if ($extension_strength > $strongest) {\n\
    \            $strongest = $extension_strength;\n        }\n    }\n    return $class_name\
    \ . '_' . $strongest;\n}", "    my $strongest;\n    my $strength;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my\
    \ $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my\
    \ $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n\
    \    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my\
    \ $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n\
    \    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my\
    \ $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n\
    \    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my\
    \ $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n\
    \    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    ", "    my $strongest = -1;\n\
    \    my $strongest_extension;\n    foreach my $extension (@$extensions) {\n  \
    \      my $extension_class = $class_name . '_' . $extension;\n        my $extension_strength\
    \ = length($extension_class);\n        if ($extension_strength > $strongest) {\n\
    \            $strongest = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $strongest_extension;\n}", "   \
    \ my $strongest_extension;\n    my $strongest_extension_strength;\n    foreach\
    \ my $extension (@$extensions) {\n        my $extension_strength = uc($extension)\
    \ =~ tr/A-Z/a-z/;\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}", "    my $strongest;\n    my $strength;\n\
    \    foreach my $extension (@$extensions) {\n        my $class_name_length = length($class_name);\n\
    \        my $extension_length = length($extension);\n        $strength = int(($class_name_length\
    \ - $extension_length) / 2);\n        if ($strength > $strongest) {\n        \
    \    $strongest = $strength;\n        }\n    }\n    return $class_name . '.' .\
    \ $strongest;\n}", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $extension_count;\n    my $extension_count_strength;\n    my $extension_count_total;\n\
    \    my $extension_count_total_strength;\n    my $extension_count_total_max;\n\
    \    my $extension_count_total_max_strength;\n    my $extension_count_total_min;\n\
    \    my $extension_count_total_min_strength;\n    my $extension_count_total_avg;\n\
    \    my $extension_count_total_avg_strength;\n    my $extension_count_total_sum;\n\
    \    my $extension_count_total_sum_strength;\n    my $extension_count_total_count;\n\
    \    my $extension_count_total_count_strength;\n    my $extension_count_total_sum2;\n\
    \    my $extension_count_total_sum2_strength;\n    my $extension_count_total_sum3;\n\
    \    my $extension_count_total_sum3_strength;\n    my $extension_count_total_sum4;\n\
    \    my $extension_count_total_sum4_strength;\n    my $extension_count_total_sum5;\n\
    \    my $extension_count_total_sum5_strength;\n    my $extension_count_total_sum6;\n\
    \    my $extension_count_total_sum6_strength;\n    my $extension_count_total_sum7;\n\
    \    my $extension_count_total_sum7_strength;\n    my $extension_count_total_sum8;\n\
    \    my $extension_count_total_sum8_strength;\n    my $extension_count_total_sum9;\n\
    \    my $extension_count_total_sum9_strength;\n    my $extension_count_total_sum10;\n\
    \    my $extension_count_total_sum10_strength;\n    my $extension_count_total_sum11;\n\
    \    my $extension_count_total_sum11_strength;\n    my $extension_count_total_sum12;\n\
    \    my $extension_count_total_sum12_strength;\n    my $extension_count_total_sum13;\n\
    \    my $extension_count_total_sum13_strength;\n    my $extension_count_total_sum14;\n\
    \    my $extension_count_total_sum14_strength;\n    my $extension_count_total_sum15;\n\
    \    my $extension_count_total_sum15_strength;\n    my $extension_count_total_sum16;\n\
    \    my $extension_count_total_sum16_strength;\n    my $extension_count_total_sum17;\n\
    \    my $extension_count_total_sum17_strength;\n    my $extension_count_total_sum18;\n\
    \    my $extension_count_total_sum18_strength;\n    my $extension_count_total_sum19;\n\
    \    my $extension_count_total_sum19_strength;\n    my $extension_", "    my $strongest_extension;\n\
    \    my $strength;\n    my $cap;\n    my $sm;\n    foreach my $extension (@$extensions)\
    \ {\n        $cap = length($extension);\n        $sm = length($extension) - $cap;\n\
    \        $strength = int(($cap - $sm) / 2);\n        if ($strength > 0) {\n  \
    \          $strongest_extension = $extension;\n        }\n    }\n    return $strongest_extension;\n\
    }", "    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my\
    \ $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my\
    \ $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n\
    \    my $j;\n    my $k;\n    ", "    my $strongest = undef;\n    my $strongest_extension\
    \ = undef;\n    my $strongest_strength = undef;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_class = $class_name . '::' . $extension;\n        my\
    \ $extension_strength = eval {\n            require $extension_class;\n      \
    \      length($extension_class);\n        };\n        if ($extension_strength\
    \ > $strongest_strength) {\n            $strongest_strength = $extension_strength;\n\
    \            $strongest_extension = $extension;\n        }\n    }\n    return\
    \ $strongest_extension;\n}", "    my $strongest;\n    my $num_cap = 0;\n    my\
    \ $num_sm = 0;\n    foreach my $extension (@$extensions) {\n        my $name =\
    \ $extension =~ /^([A-Z]+)/;\n        $num_cap += length($1);\n        $num_sm\
    \ += length($1) - 1;\n    }\n    $strongest = \"$class_name.$extensions[0]\";\n\
    \    if ($num_cap > $num_sm) {\n        $strongest = \"$class_name.$extensions[0]\"\
    ;\n        foreach my $extension (@$extensions) {\n            my $name = $extension\
    \ =~ /^([A-Z]+)/;\n            $num_cap -= length($1);\n            $num_sm -=\
    \ length($1) - 1;\n            if ($num_cap <= $num_sm) {\n                $strongest\
    \ = \"$class_name.$extension\";\n            }\n        }\n    }\n    return $strongest;\n\
    }", "    my $strongest_extension;\n    my $strongest_extension_strength;\n   \
    \ foreach my $extension (@$extensions) {\n        my $extension_strength = uc($extension)\
    \ =~ tr/A-Z//;\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension = $extension;\n            $strongest_extension_strength\
    \ = $extension_strength;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }", "    my $strongest_extension = '';\n    my $extension_strength = 0;\n    foreach\
    \ my $extension (@$extensions) {\n        my $extension_class = $class_name .\
    \ '::' . $extension;\n        my $extension_strength = length($extension_class);\n\
    \        if ($extension_strength > $extension_strength) {\n            $strongest_extension\
    \ = $extension;\n            $extension_strength = $extension_strength;\n    \
    \    }\n    }\n    return $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    my $class_name_length = length($class_name);\n\
    \    my $extensions_length = length($extensions);\n    my $extensions_length_counter\
    \ = 0;\n    my $extensions_length_counter2 = 0;\n    my $extensions_length_counter3\
    \ = 0;\n    my $extensions_length_counter4 = 0;\n    my $extensions_length_counter5\
    \ = 0;\n    my $extensions_length_counter6 = 0;\n    my $extensions_length_counter7\
    \ = 0;\n    my $extensions_length_counter8 = 0;\n    my $extensions_length_counter9\
    \ = 0;\n    my $extensions_length_counter10 = 0;\n    my $extensions_length_counter11\
    \ = 0;\n    my $extensions_length_counter12 = 0;\n    my $extensions_length_counter13\
    \ = 0;\n    my $extensions_length_counter14 = 0;\n    my $extensions_length_counter15\
    \ = 0;\n    my $extensions_length_counter16 = 0;\n    my $extensions_length_counter17\
    \ = 0;\n    my $extensions_length_counter18 = 0;\n    my $extensions_length_counter19\
    \ = 0;\n    my $extensions_length_counter20 = 0;\n    my $extensions_length_counter21\
    \ = 0;\n    my $extensions_length_counter22 = 0;\n    my $extensions_length_counter23\
    \ = 0;\n    my $extensions_length_counter24 = 0;\n    my $extensions_length_counter25\
    \ = 0;\n    my $extensions_length_counter26 = 0;\n    my $extensions_length_counter27\
    \ = 0;\n    my $extensions_length_counter28 = 0;\n    my $extensions_length_counter29\
    \ = 0;\n    my $extensions_length_counter30 = 0;\n    my $extensions_length_counter31\
    \ = 0;\n    my $extensions_length_counter32 = 0;\n    my $extensions_length_counter33\
    \ = 0;\n    my $extensions_length_counter34 = 0;\n    my $extensions_length_counter35\
    \ = 0;\n    my $extensions_length_counter36 = 0;\n    my $extensions_length_counter37\
    \ = 0;\n    my $extensions_length_counter38 = 0;\n    my $extensions_length_counter39\
    \ = 0;\n    my $extensions_length_counter40 = 0;\n    my $extensions_length_counter41\
    \ = 0;\n    my $extensions_length_counter42 = 0;\n    my $extensions_length_counter43\
    \ = 0;\n    my $extensions_length_counter44 = 0;\n    my $extensions_length_counter45\
    \ = 0;\n    my $extensions_length_counter46 = 0;\n    my $extensions_length_counter47\
    \ = 0;\n    my $extensions_length_counter48 = 0;\n    my $extensions_length_counter49\
    \ = 0;\n    my $extensions_length_counter50 = 0;\n    my $extensions_length_counter51\
    \ = 0;\n    my $extensions_length_counter52 = 0;\n    my $extensions_length_counter53\
    \ = 0;\n    my $", "    my %extension_strengths;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_strength = uc($extension) =~ tr/A-Z//;\n        $extension_strengths{$extension_strength}\
    \ = $extension;\n    }\n    my $strongest_extension = delete $extension_strengths{-1};\n\
    \    return $class_name . '.' . $strongest_extension;\n}", "    my $strongest\
    \ = undef;\n    my $strongest_extension = undef;\n    foreach my $extension (@$extensions)\
    \ {\n        my $class_name_length = length($class_name);\n        my $extension_length\
    \ = length($extension);\n        my $strength = int(($class_name_length - $extension_length)\
    \ / 2);\n        if ($strength > 0) {\n            if ($strongest eq undef) {\n\
    \                $strongest = $strength;\n                $strongest_extension\
    \ = $extension;\n            }\n            elsif ($strongest > $strength) {\n\
    \                $strongest = $strength;\n                $strongest_extension\
    \ = $extension;\n            }\n        }\n    }\n    return $strongest_extension;\n\
    }", "    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my\
    \ $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my\
    \ $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n\
    \    my $j;\n    my $k;\n    ", "    my $strongest;\n    my $num_caps = 0;\n \
    \   my $num_sms = 0;\n    foreach my $extension (@$extensions) {\n        my $caps\
    \ = length($extension) - length($extension =~ /[A-Z]/);\n        my $sms = length($extension)\
    \ - length($extension =~ /[a-z]/);\n        $num_caps += $caps;\n        $num_sms\
    \ += $sms;\n        if ($num_caps > $num_sms) {\n            $strongest = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest;\n}", "    my $strongest\
    \ = undef;\n    foreach my $extension (@$extensions) {\n        my $class_name_length\
    \ = length($class_name);\n        my $extension_length = length($extension);\n\
    \        my $strength = int(($class_name_length - $extension_length) / 2);\n \
    \       if ($strength > 0) {\n            $strongest = $extension;\n        }\n\
    \    }\n    return $strongest;\n}", "    my $strongest = -1;\n    my $extension;\n\
    \    foreach $extension (@$extensions) {\n        my $c = uc($extension);\n  \
    \      my $s = uc($class_name);\n        my $cap = length($c);\n        my $sm\
    \ = length($s);\n        my $strength = $cap - $sm;\n        if ($strength > $strongest)\
    \ {\n            $strongest = $strength;\n            $extension = $c;\n     \
    \   }\n    }\n    return $class_name . $extension;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_strength = uc($extension) =~ tr/A-Z//;\n        if\
    \ ($extension_strength > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", "  \
    \  my $strongest = undef;\n    my $strongest_extension = undef;\n    foreach my\
    \ $extension (@$extensions) {\n        my $extension_class = $class_name . '::'\
    \ . $extension;\n        my $extension_strength = eval {\n            require\
    \ $extension_class;\n            length($extension_class);\n        };\n     \
    \   if ($extension_strength > 0) {\n            if ($extension_strength > $strongest)\
    \ {\n                $strongest = $extension_strength;\n                $strongest_extension\
    \ = $extension;\n            }\n        }\n    }\n    return $strongest_extension;\n\
    }", "    my @extensions = @$extensions;\n    my $strongest = undef;\n    my $strongest_extension\
    \ = undef;\n    my $strength = -1;\n    foreach my $extension (@extensions) {\n\
    \        my $c = uc($extension);\n        $strength += $c eq $class_name ? 1 :\
    \ 0;\n        if ($strength > 0) {\n            $strongest = $extension;\n   \
    \         $strongest_extension = $c;\n        }\n    }\n    return $strongest_extension\
    \ . $strongest;\n}", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $extensions_count = scalar @$extensions;\n    my $class_name_length =\
    \ length $class_name;\n    my $extensions_length = scalar @$extensions;\n    my\
    \ $extension_strength;\n    my $extension_strength_counter;\n    my $extension_strength_counter_max;\n\
    \    my $extension_strength_counter_max_index;\n    my $extension_strength_counter_max_value;\n\
    \    my $extension_strength_counter_max_value_counter;\n    my $extension_strength_counter_max_value_counter_index;\n\
    \    my $extension_strength_counter_max_value_counter_value;\n    my $extension_strength_counter_max_value_counter_value_counter;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_index;\n \
    \   my $extension_strength_counter_max_value_counter_value_counter_value;\n  \
    \  my $extension_strength_counter_max_value_counter_value_counter_value_counter;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_index;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter_index;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter_value;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter_index;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter_value;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter_index;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter_value;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter_index;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter_value;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter_index;\n\
    \    my $extension_strength_counter_max_value_counter_value_counter_value_counter_value_counter_value;\n\
    \    my $extension_", "    my $strongest_extension;\n    my $strongest_strength;\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_class = $class_name\
    \ . '::' . $extension;\n        my $extension_strength = Strongest_Extension_Strength($extension_class);\n\
    \        if ($extension_strength > $strongest_strength) {\n            $strongest_extension\
    \ = $extension;\n            $strongest_strength = $extension_strength;\n    \
    \    }\n    }\n    return $strongest_extension;\n}", "    my $strongest_extension\
    \ = '';\n    my $strongest_extension_strength = 0;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = uc($extension) =~ tr/A-Z//;\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }", "    my $strongest = undef;\n    my $strength;\n    foreach my $extension\
    \ (@$extensions) {\n        $strength = uc($extension) =~ tr/A-Z//;\n        if\
    \ ($strength > $strongest) {\n            $strongest = $extension;\n        }\n\
    \    }\n    return $class_name . '.' . $strongest;\n}", "    my $strongest = undef;\n\
    \    my $strength = -1;\n    foreach my $extension (@$extensions) {\n        my\
    \ $cap = length($extension);\n        my $sm = length($extension) - $cap;\n  \
    \      $strength = $strength if $strength < $cap - $sm;\n        $strongest =\
    \ $extension if $strength == $cap - $sm;\n    }\n    return $strongest if defined\
    \ $strongest;\n    return $class_name;\n}", "    my $strongest_extension = \"\"\
    ;\n    my $max_strength = 0;\n    foreach my $extension (@$extensions) {\n   \
    \     my $extension_strength = uc($extension) - uc($class_name);\n        if ($extension_strength\
    \ > $max_strength) {\n            $strongest_extension = $extension;\n       \
    \     $max_strength = $extension_strength;\n        }\n    }\n    return $strongest_extension;\n\
    }", "    my $strongest;\n    my $max_strength = 0;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = length($extension) - length($extension\
    \ =~ tr/A-Z//);\n        if ($extension_strength > $max_strength) {\n        \
    \    $strongest = $extension;\n            $max_strength = $extension_strength;\n\
    \        }\n    }\n    return $class_name . $strongest;\n}", "    my $strongest\
    \ = -1;\n    my $extension;\n    foreach $extension (@$extensions) {\n       \
    \ my $c = uc($extension);\n        my $s = uc($class_name);\n        my $c = $c\
    \ - $s;\n        if ($c > $strongest) {\n            $strongest = $c;\n      \
    \      $extension = $extension;\n        }\n    }\n    return $extension;\n}",
  "    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n   \
    \ my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n\
    \    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my\
    \ $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n\
    \    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my\
    \ $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n\
    \    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my\
    \ $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n\
    \    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n\
    \    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my\
    \ $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n\
    \    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my\
    \ $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n\
    \    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my\
    \ $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    ", "    my %extension_strengths;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = substr $extension, 0, 1;\n\
    \        $extension_strengths{$extension_strength} = $extension;\n    }\n    my\
    \ $strongest_extension = sort { $extension_strengths{$a} <=> $extension_strengths{$b}\
    \ } keys %extension_strengths;\n    return $extension_strengths{$strongest_extension};\n\
    }", "    my $strongest;\n    my $max_strength = -1;\n    foreach my $extension\
    \ (@$extensions) {\n        my $strength = uc($extension) =~ tr/A-Z/a-z/;\n  \
    \      if ($strength > $max_strength) {\n            $strongest = $extension;\n\
    \            $max_strength = $strength;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest;\n}", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $num_upper_case_letters = 0;\n    my $num_lower_case_letters = 0;\n  \
    \  foreach my $extension (@$extensions) {\n        $num_upper_case_letters +=\
    \ length($extension) - length($extension);\n        $num_lower_case_letters +=\
    \ length($extension) - length($extension);\n    }\n    $strongest_extension_strength\
    \ = \n        ($num_upper_case_letters - $num_lower_case_letters);\n    foreach\
    \ my $extension (@$extensions) {\n        if (length($extension) == length($extension))\
    \ {\n            $strongest_extension = substr($extension, 0, 1);\n        }\n\
    \    }\n    return $class_name . $strongest_extension . $strongest_extension_strength;\n\
    }", "    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $", "    my $strongest;\n  \
    \  my $strength;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my\
    \ $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my\
    \ $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n\
    \    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my\
    \ $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n\
    \    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my\
    \ $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n\
    \    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my\
    \ $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n\
    \    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my\
    \ $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n\
    \    ", "    my $strongest = -1;\n    my $extension;\n    foreach $extension (@$extensions)\
    \ {\n        my $c = ucfirst($extension);\n        my $s = lcfirst($extension);\n\
    \        my $c = uc($c);\n        my $s = lc($s);\n        my $c = $c - $s;\n\
    \        if ($c > $strongest) {\n            $strongest = $c;\n            $extension\
    \ = $s;\n        }\n    }\n    return \"$class_name.$extension\";\n}", "    my\
    \ $strongest_extension = \"\";\n    my $max_strength = 0;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = uc($extension) =~ tr/A-Z//;\n\
    \        if ($extension_strength > $max_strength) {\n            $strongest_extension\
    \ = $extension;\n            $max_strength = $extension_strength;\n        }\n\
    \    }\n    return $class_name . $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $num_caps = 0;\n    my $num_sms = 0;\n    foreach my $extension (@$extensions)\
    \ {\n        $num_caps += length($extension) =~ /[A-Z]/;\n        $num_sms +=\
    \ length($extension) =~ /[a-z]/;\n    }\n    $strongest_extension = $class_name\
    \ if $num_caps - $num_sms == 0;\n    foreach my $extension (@$extensions) {\n\
    \        $strongest_extension = $class_name if length($extension) =~ /[A-Z]/;\n\
    \    }\n    return $strongest_extension;\n}", "    my $strongest;\n    my $strength;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my\
    \ $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n\
    \    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my\
    \ $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n\
    \    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n\
    \    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my\
    \ $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n\
    \    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my\
    \ $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n\
    \    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    ", "    my %extension_strength;\n\
    \    my $strongest;\n    foreach my $extension (@$extensions) {\n        my $extension_class\
    \ = $class_name . '_' . $extension;\n        my $extension_strength = eval {\n\
    \            require $extension_class;\n            length($extension_class);\n\
    \        };\n        $extension_strength{$extension_strength} ||= $extension;\n\
    \    }\n    my $strength = -1;\n    foreach my $strength_key (keys %extension_strength)\
    \ {\n        if ($strength > $strength_key) {\n            $strongest = $extension_strength{$strength_key};\n\
    \        }\n    }\n    return $strongest;\n}", "    my @extensions = @$extensions;\n\
    \    my $strongest = -1;\n    my $strongest_extension;\n    foreach my $extension\
    \ (@extensions) {\n        my $extension_class = $class_name . '::' . $extension;\n\
    \        my $extension_strength = Strongest_Extension_Strength($extension_class);\n\
    \        if ($extension_strength > $strongest) {\n            $strongest = $extension_strength;\n\
    \            $strongest_extension = $extension;\n        }\n    }\n    return\
    \ $strongest_extension;\n}", "    my %extension_strength;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_class = $class_name . '_' . $extension;\n\
    \        my $extension_strength = substr($extension_class, length($class_name)\
    \ - length($extension), 1);\n        $extension_strength{$extension_strength}\
    \ = $extension;\n    }\n    my $max_strength = -1;\n    my $max_extension;\n \
    \   foreach my $strength (sort {$a <=> $b} keys %extension_strength) {\n     \
    \   if ($strength > $max_strength) {\n            $max_strength = $strength;\n\
    \            $max_extension = $extension_strength{$strength};\n        }\n   \
    \ }\n    return $max_extension;\n}", "    my $strongest;\n    my $max_strength;\n\
    \    my $max_index;\n    my $i;\n    my $j;\n    my $k;\n    my $strength;\n \
    \   foreach $i (0 .. length($class_name) - 1) {\n        foreach $j (0 .. length($extensions[$i])\
    \ - 1) {\n            foreach $k (0 .. length($class_name) - 1) {\n          \
    \      foreach $strength (0 .. length($extensions[$i]) - 1) {\n              \
    \      if ($class_name eq $extensions[$i][$j]) {\n                        $strongest\
    \ = $class_name . $extensions[$i][$j];\n                        $max_strength\
    \ = $strength;\n                        $max_index = $i;\n                   \
    \ }\n                }\n            }\n        }\n    }\n    return $strongest;\n\
    }", "    my %extensions_map = map { $_ => 1 } @$extensions;\n    my $strongest_extension;\n\
    \    my $max_strength = -1;\n    foreach my $extension (@$extensions) {\n    \
    \    my $extension_strength = uc($extension) =~ tr/A-Z//;\n        if ($extension_strength\
    \ > $max_strength) {\n            $strongest_extension = $extension;\n       \
    \     $max_strength = $extension_strength;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}", "    my $strongest_extension = '';\n    my\
    \ $strongest_extension_strength = 0;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_strength = uc($extension) - uc($extension_strength);\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension = $extension;\n            $strongest_extension_strength\
    \ = $extension_strength;\n        }\n    }\n    return $class_name.$strongest_extension;\n\
    }", "    my %extension_strength;\n    foreach my $extension (@$extensions) {\n\
    \        my $extension_class = $class_name . '_' . $extension;\n        $extension_strength{$extension_class}\
    \ = $extension =~ tr/A-Z//;\n    }\n    my $strongest = keys %extension_strength;\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_class = $class_name\
    \ . '_' . $extension;\n        if ($extension_strength{$extension_class} > $extension_strength{$strongest})\
    \ {\n            $strongest = $extension_class;\n        }\n    }\n    return\
    \ $strongest;\n}", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $class_name_length = length($class_name);\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_length = length($extension);\n        my $extension_strength\
    \ = substr($extension, 0, $class_name_length) - substr($extension, 0, $extension_length);\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $strongest_extension;\n}", "   \
    \ my $strongest_extension;\n    my $strongest_extension_strength;\n    foreach\
    \ my $extension (@$extensions) {\n        my $extension_strength = uc($extension)\
    \ =~ tr/A-Z//;\n        if ($strongest_extension_strength < $extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return \"$class_name.$strongest_extension\"\
    ;\n}", "    my $strongest_extension;\n    my $strength;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my\
    \ $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    ", "    my $strongest;\n\
    \    my $strength;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my\
    \ $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my\
    \ $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n\
    \    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my\
    \ $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n\
    \    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my\
    \ $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n\
    \    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my\
    \ $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n\
    \    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my\
    \ $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n\
    \    ", "    my $strongest;\n    my $strength;\n    foreach my $extension (@$extensions)\
    \ {\n        my $class_name_length = length($class_name);\n        my $extension_length\
    \ = length($extension);\n        $strength = -1;\n        if ($class_name_length\
    \ < $extension_length) {\n            $strength = $class_name_length - $extension_length;\n\
    \        }\n        elsif ($class_name_length > $extension_length) {\n       \
    \     $strength = $extension_length - $class_name_length;\n        }\n       \
    \ if ($strength > 0) {\n            $strongest = $extension;\n        }\n    }\n\
    \    return $strongest;\n}", "    my $strongest = -1;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_class = $class_name . '::' . $extension;\n\
    \        if ($extension_class =~ /^($class_name)/) {\n            $strongest =\
    \ $extension;\n            last;\n        }\n    }\n    return $strongest;\n}",
  "    my @extension_strengths;\n    foreach my $extension (@$extensions) {\n    \
    \    my $extension_strength = substr($extension, length($class_name));\n     \
    \   push(@extension_strengths, $extension_strength);\n    }\n    my $max_strength\
    \ = -1;\n    my $max_extension;\n    foreach my $strength (@extension_strengths)\
    \ {\n        if ($strength > $max_strength) {\n            $max_strength = $strength;\n\
    \            $max_extension = $extension;\n        }\n    }\n    return $max_extension;\n\
    }", "    my $strongest_extension;\n    my $extensions_count = scalar @$extensions;\n\
    \    my $class_name_length = length $class_name;\n    my $extensions_length =\
    \ scalar @$extensions;\n    my $extension_strength;\n    my $extension_strength_sum;\n\
    \    my $extension_strength_product;\n    my $extension_strength_product2;\n \
    \   my $extension_strength_product3;\n    my $extension_strength_product4;\n \
    \   my $extension_strength_product5;\n    my $extension_strength_product6;\n \
    \   my $extension_strength_product7;\n    my $extension_strength_product8;\n \
    \   my $extension_strength_product9;\n    my $extension_strength_product10;\n\
    \    my $extension_strength_product11;\n    my $extension_strength_product12;\n\
    \    my $extension_strength_product13;\n    my $extension_strength_product14;\n\
    \    my $extension_strength_product15;\n    my $extension_strength_product16;\n\
    \    my $extension_strength_product17;\n    my $extension_strength_product18;\n\
    \    my $extension_strength_product19;\n    my $extension_strength_product20;\n\
    \    my $extension_strength_product21;\n    my $extension_strength_product22;\n\
    \    my $extension_strength_product23;\n    my $extension_strength_product24;\n\
    \    my $extension_strength_product25;\n    my $extension_strength_product26;\n\
    \    my $extension_strength_product27;\n    my $extension_strength_product28;\n\
    \    my $extension_strength_product29;\n    my $extension_strength_product30;\n\
    \    my $extension_strength_product31;\n    my $extension_strength_product32;\n\
    \    my $extension_strength_product33;\n    my $extension_strength_product34;\n\
    \    my $extension_strength_product35;\n    my $extension_strength_product36;\n\
    \    my $extension_strength_product37;\n    my $extension_strength_product38;\n\
    \    my $extension_strength_product39;\n    my $extension_strength_product40;\n\
    \    my $extension_strength_product41;\n    my $extension_strength_product42;\n\
    \    my $extension_strength_product43;\n    my $extension_strength_product44;\n\
    \    my $extension_strength_product45;\n    my $extension_strength_product46;\n\
    \    my $extension_strength_product47;\n    my $extension_strength", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_strength = uc($extension) =~ tr/A-Z//;\n        if\
    \ ($extension_strength > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", "  \
    \  my $strongest_extension;\n    my $num_uppercase_letters = 0;\n    my $num_lowercase_letters\
    \ = 0;\n    foreach my $extension (@$extensions) {\n        my $num_uppercase_letters_extension\
    \ = uc($extension) =~ tr/A-Z//;\n        my $num_lowercase_letters_extension =\
    \ lc($extension) =~ tr/a-z//;\n        $num_uppercase_letters += $num_uppercase_letters_extension;\n\
    \        $num_lowercase_letters += $num_lowercase_letters_extension;\n    }\n\
    \    $strongest_extension = $class_name if $num_uppercase_letters == $num_lowercase_letters;\n\
    \    foreach my $extension (@$extensions) {\n        my $num_uppercase_letters_extension\
    \ = uc($extension) =~ tr/A-Z//;\n        my $num_lowercase_letters_extension =\
    \ lc($extension) =~ tr/a-z//;\n        if ($num_uppercase_letters > $num_lowercase_letters)\
    \ {\n            $strongest_extension = $class_name if $num_uppercase_letters_extension\
    \ < $num_lowercase_letters_extension;\n        }\n    }\n    return $strongest_extension;\n\
    }", "    my $strongest_extension;\n    my $strongest_extension_strength;\n   \
    \ foreach my $extension (@$extensions) {\n        my $extension_strength = substr($extension,\
    \ 0, 1);\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $extension_count;\n    foreach my $extension (@$extensions) {\n      \
    \  $extension_count++;\n        $strongest_extension_strength = $extension_count;\n\
    \        foreach my $char (split(//, $extension)) {\n            $strongest_extension_strength\
    \ = \n                $strongest_extension_strength * \n                substr($char,\
    \ 0, 1) ^ (substr($char, 1) =~ tr/A-Z//);\n        }\n        if ($strongest_extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension = $extension;\n\
    \            $strongest_extension_strength = $strongest_extension_strength;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", " \
    \   my $strongest_extension;\n    my $strength;\n    my $cap;\n    my $sm;\n \
    \   foreach my $extension (@$extensions) {\n        $cap = length($extension);\n\
    \        $sm = length($extension) - $cap;\n        $strength = $cap - $sm;\n \
    \       if ($strength > 0) {\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $strongest_extension;\n}", "    my $strongest =\
    \ undef;\n    my $strength;\n    foreach my $extension (@$extensions) {\n    \
    \    $strength = uc(substr($extension, 0, 1))-uc(substr($extension, 0, 2));\n\
    \        if ($strength > $strongest) {\n            $strongest = $strength;\n\
    \        }\n    }\n    return $class_name.$strongest;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    my $class_name_length = length($class_name);\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_length = length($extension);\n\
    \        my $extension_strength = substr($extension, 0, $class_name_length) -\
    \ substr($extension, $class_name_length);\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $strongest_extension;\n\
    }", "    my $strongest = -1;\n    my $strongest_extension = \"\";\n    foreach\
    \ my $extension (@$extensions) {\n        my $extension_length = length($extension);\n\
    \        my $extension_strength = substr($extension, 0, $extension_length) - substr($extension,\
    \ $extension_length);\n        if ($extension_strength > $strongest) {\n     \
    \       $strongest = $extension_strength;\n            $strongest_extension =\
    \ $extension;\n        }\n    }\n    return $class_name . $strongest_extension;\n\
    }", "    my $strongest_extension;\n    my $max_strength;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_class = $class_name . '::' . $extension;\n\
    \        my $extension_strength = Strongest_Extension_Strength($extension_class);\n\
    \        if ($extension_strength > $max_strength) {\n            $strongest_extension\
    \ = $extension_class;\n            $max_strength = $extension_strength;\n    \
    \    }\n    }\n    return $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    my $num_uppercase_letters = length($class_name)\
    \ - length($class_name =~ /[A-Z]/);\n    my $num_lowercase_letters = length($class_name)\
    \ - length($class_name =~ /[a-z]/);\n    my $strongest_extension_strength_numerator\
    \ = $num_uppercase_letters - $num_lowercase_letters;\n    my $strongest_extension_strength_denominator\
    \ = length($extensions[0]) - length($extensions[0] =~ /[A-Z]/);\n    my $strongest_extension_strength_numerator\
    \ = $strongest_extension_strength_numerator / $strongest_extension_strength_denominator;\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_strength =\
    \ length($extension) - length($extension =~ /[A-Z]/);\n        $strongest_extension_strength_numerator\
    \ = $strongest_extension_strength_numerator + $extension_strength;\n        $strongest_extension_strength_denominator\
    \ = $strongest_extension_strength_denominator + $extension_strength;\n    }\n\
    \    $strongest_extension_strength = $strongest_extension_strength_numerator /\
    \ $strongest_extension_strength_denominator;\n    foreach my $extension (@$extensions)\
    \ {\n        if ($strongest_extension_strength > length($extension) - length($extension\
    \ =~ /[A-Z]/)) {\n            $strongest_extension = $extension;\n           \
    \ $strongest_extension_strength = $strongest_extension_strength - length($extension)\
    \ - length($extension =~ /[A-Z]/);\n        }\n    }\n    return $class_name .\
    \ $strongest_extension;\n}", "    my $strongest_extension;\n    my $num_upper\
    \ = 0;\n    my $num_lower = 0;\n    foreach my $extension (@$extensions) {\n \
    \       my $num_upper = length($extension) - length($extension) =~ tr/A-Z//;\n\
    \        my $num_lower = length($extension) - length($extension) =~ tr/a-z//;\n\
    \        $strongest_extension = $class_name . '.' . $extension if $num_upper >\
    \ $num_lower;\n    }\n    return $strongest_extension;\n}", "    my $strongest_extension\
    \ = '';\n    my $max_strength = 0;\n    foreach my $extension (@$extensions) {\n\
    \        my $extension_strength = uc($extension) - uc($class_name);\n        if\
    \ ($extension_strength > $max_strength) {\n            $strongest_extension =\
    \ $extension;\n            $max_strength = $extension_strength;\n        }\n \
    \   }\n    return $strongest_extension;\n}", "    my $strongest_extension;\n \
    \   my $strongest_extension_strength;\n    my $extension_count;\n    my $extension_count_strength;\n\
    \    my $extension_strength;\n    my $extension_strength_strength;\n    my $extension_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength;\n    my $extension_strength_strength_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength_strength_strength;\n  \
    \  my $extension_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength",
  "    my $strongest_extension;\n    my $strongest_extension_strength;\n    my $extension_count;\n\
    \    foreach my $extension (@$extensions) {\n        $extension_count++;\n   \
    \     my $extension_class = $class_name . '_' . $extension;\n        my $extension_class_exists\
    \ = eval {\n            require $extension_class;\n            1;\n        };\n\
    \        if ($extension_class_exists) {\n            my $extension_class_strength\
    \ = eval {\n                my $class_name = $extension_class;\n             \
    \   my $class_name_length = length($class_name);\n                my $class_name_upper\
    \ = uc($class_name);\n                my $class_name_lower = lc($class_name);\n\
    \                my $class_name_strength = $class_name_upper - $class_name_lower;\n\
    \                return $class_name_strength;\n            };\n            if\
    \ ($extension_class_strength > $strongest_extension_strength) {\n            \
    \    $strongest_extension_strength = $extension_class_strength;\n            \
    \    $strongest_extension = $extension;\n            }\n        }\n    }\n   \
    \ return $strongest_extension . $strongest_extension_strength;\n}", "    my $strongest;\n\
    \    my $strength;\n    my $i;\n    my $j;\n    my $k;\n    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    my $strongest_extension_class;\n \
    \   my $strongest_extension_class_name;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_length;\n\
    \    my $strongest_extension_class_name_length;\n    my $strongest_extension_class_name_",
  "    my $strongest_extension;\n    my $strongest_strength;\n    my $class_name_length\
    \ = length($class_name);\n    foreach my $extension (@$extensions) {\n       \
    \ my $extension_length = length($extension);\n        my $extension_strength =\
    \ uc($extension) - uc($extension_length);\n        if ($extension_strength > $strongest_strength)\
    \ {\n            $strongest_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . $strongest_extension;\n\
    }", "    my $strongest_extension;\n    my $strongest_extension_strength;\n   \
    \ my $extension_counter;\n    my $extension_counter_strength;\n    my $extension_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_strength;\n    my $extension_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_strength;\n    my $extension_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_",
  "    my $strongest_extension;\n    my $strongest_extension_strength;\n    my $num_uppercase_letters\
    \ = length($class_name) - length($class_name =~ /[A-Z]/);\n    my $num_lowercase_letters\
    \ = length($class_name) - length($class_name =~ /[a-z]/);\n    my $num_letters\
    \ = $num_uppercase_letters + $num_lowercase_letters;\n    my $num_extensions =\
    \ @$extensions;\n    my $strength = $num_letters - $num_extensions;\n    if ($strength\
    \ > 0) {\n        foreach my $extension (@$extensions) {\n            my $extension_strength\
    \ = length($extension) - length($extension =~ /[A-Z]/) - length($extension =~\
    \ /[a-z]/);\n            if ($extension_strength > $strongest_extension_strength)\
    \ {\n                $strongest_extension_strength = $extension_strength;\n  \
    \              $strongest_extension = $extension;\n            }\n        }\n\
    \    }\n    return $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $max_strength = -1;\n    foreach my $extension (@$extensions) {\n    \
    \    my $strength = uc($extension) =~ tr/A-Z//;\n        if ($strength > $max_strength)\
    \ {\n            $strongest_extension = $extension;\n            $max_strength\
    \ = $strength;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }", "    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $found;\n    my $found2;\n    my $found3;\n    my $found4;\n    my $found5;\n\
    \    my $found6;\n    my $found7;\n    my $found8;\n    my $found9;\n    my $found10;\n\
    \    my $found11;\n    my $found12;\n    my $found13;\n    my $found14;\n    my\
    \ $found15;\n    my $found16;\n    my $found17;\n    my $found18;\n    my $found19;\n\
    \    my $found20;\n    my $found21;\n    my $found22;\n    my $found23;\n    my\
    \ $found24;\n    my $found25;\n    my $found26;\n    my $found27;\n    my $found28;\n\
    \    my $found29;\n    my $found30;\n    my $found31;\n    my $found32;\n    my\
    \ $found33;\n    my $found34;\n    my $found35;\n    my $found36;\n    my $found37;\n\
    \    my $found38;\n    my $found39;\n    my $found40;\n    my $found41;\n    my\
    \ $found42;\n    my $found43;\n    my $found44;\n    my $found45;\n    my $found46;\n\
    \    my $found47;\n    my $found48;\n    my $found49;\n    my $found50;\n    my\
    \ $found51;\n    my $found52;\n    my $found53;\n    my $found54;\n    my $found55;\n\
    \    my $found56;\n    my $found57;\n    my $found58;\n    my $found59;\n    my\
    \ $found60;\n    my $found61;\n    my $found62;\n    my $found63;\n    my $found64;\n\
    \    my $found65;\n    my $found66;\n    my $found67;\n    my $found68;\n    my\
    \ $found69;\n    my $found70;\n    my $found71;\n    my $found72;\n    my $found73;\n\
    \    my $found74;\n    my $found75;\n    my $found76;\n    my $found77;\n    my\
    \ $found78;\n    my $found79;\n    my $found80;\n    my $found81;\n    my $found82;\n\
    \    my $found83;\n    my $found84;\n    my $found", "    my $strongest_extension;\n\
    \    my $strength;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my\
    \ $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my\
    \ $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n\
    \    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my\
    \ $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n\
    \    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my\
    \ $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n\
    \    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my\
    \ $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n\
    \    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my\
    \ $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n",
  "    my %extension_strength;\n    foreach my $extension (@$extensions) {\n     \
    \   my $extension_strength = substr($extension, length($extension) - 1);\n   \
    \     $extension_strength{$extension_strength}++;\n    }\n    my $strength = -1;\n\
    \    foreach my $strength_key (sort {$a <=> $b} keys %extension_strength) {\n\
    \        if ($extension_strength{$strength_key} == 1) {\n            $strength\
    \ = $strength_key;\n            last;\n        }\n    }\n    return $class_name\
    \ . '.' . $extensions[0] . $strength;\n}", "    my $strongest;\n    my $strength;\n\
    \    foreach my $extension (@$extensions) {\n        $strength = uc(substr($extension,\
    \ 0, 1))-uc(substr($extension, 0, 2));\n        if ($strength > $strongest) {\n\
    \            $strongest = $strength;\n        }\n    }\n    return $class_name.$strongest;\n\
    }", "    my $strongest;\n    my $strength;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my\
    \ $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my\
    \ $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $num_uppercase_letters = length($class_name) - length($class_name =~ /[A-Z]/);\n\
    \    my $num_lowercase_letters = length($class_name) - length($class_name =~ /[a-z]/);\n\
    \    my $strongest_extension_strength_fraction = $num_uppercase_letters - $num_lowercase_letters;\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_strength =\
    \ length($extension) - length($extension =~ /[A-Z]/) - length($extension =~ /[a-z]/);\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension = $extension;\n            $strongest_extension_strength\
    \ = $extension_strength;\n        }\n    }\n    return $strongest_extension .\
    \ $strongest_extension_strength . \".\" . $strongest_extension_strength_fraction;\n\
    }", "    my $strongest_extension;\n    my $strength;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $found;\n    my $max_strength;\n    my $max_index;\n    my\
    \ $max_extension;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $max_extension_length;\n    my $max_extension_length;\n\
    \    my $max_extension_length;\n    my $", "    my $strongest_extension;\n   \
    \ my $strongest_strength;\n    my $num_upper = 0;\n    my $num_lower = 0;\n  \
    \  foreach my $extension (@$extensions) {\n        my $extension_upper = uc($extension);\n\
    \        my $extension_lower = lc($extension);\n        $num_upper += $extension_upper\
    \ =~ /[A-Z]/;\n        $num_lower += $extension_lower =~ /[a-z]/;\n    }\n   \
    \ $strongest_strength = $num_upper - $num_lower;\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_upper = uc($extension);\n        my $extension_lower\
    \ = lc($extension);\n        $strongest_extension .= $extension_upper if $extension_upper\
    \ =~ /[A-Z]/;\n        $strongest_extension .= $extension_lower if $extension_lower\
    \ =~ /[a-z]/;\n    }\n    return $class_name . '.' . $strongest_extension if $strongest_strength\
    \ > 0;\n    return $class_name;\n}", "    my $strongest_extension;\n    my $num_uppercase_letters\
    \ = length($class_name) - length($class_name =~ /[A-Z]/);\n    my $num_lowercase_letters\
    \ = length($class_name) - length($class_name =~ /[a-z]/);\n    my $strength =\
    \ -1;\n    foreach my $extension (@$extensions) {\n        my $num_uppercase_letters_extension\
    \ = length($extension) - length($extension =~ /[A-Z]/);\n        my $num_lowercase_letters_extension\
    \ = length($extension) - length($extension =~ /[a-z]/);\n        if ($num_uppercase_letters\
    \ > $num_lowercase_letters) {\n            $strength = $num_uppercase_letters\
    \ - $num_lowercase_letters;\n        } elsif ($num_uppercase_letters == $num_lowercase_letters)\
    \ {\n            $strength = $num_uppercase_letters;\n        } else {\n     \
    \       $strength = $num_lowercase_letters;\n        }\n        if ($strength\
    \ > 0) {\n            $strongest_extension = $extension;\n            last;\n\
    \        }\n    }\n    return $strongest_extension;\n}", "    my $strongest;\n\
    \    my $strength;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $found;\n    my $found2;\n    my $found3;\n    my $found4;\n    my $found5;\n\
    \    my $found6;\n    my $found7;\n    my $found8;\n    my $found9;\n    my $found10;\n\
    \    my $found11;\n    my $found12;\n    my $found13;\n    my $found14;\n    my\
    \ $found15;\n    my $found16;\n    my $found17;\n    my $found18;\n    my $found19;\n\
    \    my $found20;\n    my $found21;\n    my $found22;\n    my $found23;\n    my\
    \ $found24;\n    my $found25;\n    my $found26;\n    my $found27;\n    my $found28;\n\
    \    my $found29;\n    my $found30;\n    my $found31;\n    my $found32;\n    my\
    \ $found33;\n    my $found34;\n    my $found35;\n    my $found36;\n    my $found37;\n\
    \    my $found38;\n    my $found39;\n    my $found40;\n    my $found41;\n    my\
    \ $found42;\n    my $found43;\n    my $found44;\n    my $found45;\n    my $found46;\n\
    \    my $found47;\n    my $found48;\n    my $found49;\n    my $found50;\n    my\
    \ $found51;\n    my $found52;\n    my $found53;\n    my $found54;\n    my $found55;\n\
    \    my $found56;\n    my $found57;\n    my $found58;\n    my $found59;\n    my\
    \ $found60;\n    my $found61;\n    my $found62;\n    my $found63;\n    my $found64;\n\
    \    my $found65;\n    my $found66;\n    my $found67;\n    my $found68;\n    my\
    \ $found69;\n    my $found70;\n    my $found71;\n    my $found72;\n    my $found73;\n\
    \    my $found74;\n    my $found75;\n    my $found76;\n    my $found77;\n    my\
    \ $found78;\n    my $found79;\n    my $found80;\n    my $found81;\n    my $found82;\n\
    \    my $found83;\n    my $found84;", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $extension_count;\n    foreach my $extension (@$extensions) {\n      \
    \  $extension_count++;\n        $strongest_extension_strength = -1;\n        foreach\
    \ my $extension_name (@$extension) {\n            my $extension_class = $class_name\
    \ . '_' . $extension_name;\n            my $extension_class_exists = eval {\n\
    \                require $extension_class;\n                1;\n            };\n\
    \            if ($extension_class_exists) {\n                $strongest_extension_strength\
    \ = \n                    $extension_name =~ tr/A-Z/a-z/;\n                if\
    \ ($strongest_extension_strength > $extension_strength) {\n                  \
    \  $strongest_extension = $extension_class;\n                    $strongest_extension_strength\
    \ = $extension_strength;\n                }\n            }\n        }\n    }\n\
    \    return $strongest_extension;\n}", "    my $strongest;\n    my $strength;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my\
    \ $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n\
    \    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my\
    \ $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n\
    \    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n\
    \    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my\
    \ $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n\
    \    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my\
    \ $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n\
    \    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    ", "    my $strongest_extension;\n\
    \    my $strength;\n    foreach my $extension (@$extensions) {\n        my $class_name_length\
    \ = length($class_name);\n        my $extension_length = length($extension);\n\
    \        my $fraction = $class_name_length - $extension_length;\n        if ($fraction\
    \ == 0) {\n            $strongest_extension = $extension;\n            $strength\
    \ = -1;\n        } elsif ($fraction > 0) {\n            $strongest_extension =\
    \ $extension;\n            $strength = -1;\n        } elsif ($fraction < 0) {\n\
    \            $strongest_extension = $extension;\n            $strength = 0;\n\
    \        }\n    }\n    return $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $strongest_strength = -1;\n    foreach my $extension (@$extensions) {\n\
    \        my $extension_class = $class_name . '::' . $extension;\n        my $extension_strength\
    \ = Strongest_Extension_Strength($extension_class);\n        if ($extension_strength\
    \ > $strongest_strength) {\n            $strongest_strength = $extension_strength;\n\
    \            $strongest_extension = $extension;\n        }\n    }\n    return\
    \ $strongest_extension;\n}", "    my $strongest;\n    my $strongest_extension;\n\
    \    my $extension_strength;\n    foreach my $extension (@$extensions) {\n   \
    \     $extension_strength = uc(substr($extension, 0, 1))-uc(substr($extension,\
    \ 1, 1));\n        if ($extension_strength > $strongest) {\n            $strongest\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name.$strongest_extension;\n}", "    my $strongest;\n\
    \    my $strength;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my\
    \ $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my\
    \ $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n\
    \    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my\
    \ $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n\
    \    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my\
    \ $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n\
    \    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my\
    \ $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n\
    \    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my\
    \ $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n\
    \    ", "    my $strongest = -1;\n    foreach my $extension (@$extensions) {\n\
    \        my $c = uc($extension);\n        my $s = length($extension) - length($c);\n\
    \        if ($strongest < $s) {\n            $strongest = $s;\n        }\n   \
    \ }\n    return \"$class_name.$strongest\";\n}", "    my $strongest;\n    my $strength;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my\
    \ $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n\
    \    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my\
    \ $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n\
    \    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n\
    \    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my\
    \ $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n\
    \    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my\
    \ $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n\
    \    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    ", "    my $strongest;\n\
    \    my $num_caps = 0;\n    my $num_sms = 0;\n    foreach my $extension (@$extensions)\
    \ {\n        $num_caps += length($extension) - length($extension =~ tr/A-Z//);\n\
    \        $num_sms += length($extension) - length($extension =~ tr/a-z//);\n  \
    \  }\n    $strongest = \"$class_name.$extensions[0]\";\n    if ($num_caps > $num_sms)\
    \ {\n        $strongest = \"$class_name.$extensions[0]\";\n    }\n    foreach\
    \ my $extension (@$extensions) {\n        my $cap_diff = length($extension) -\
    \ length($extension =~ tr/A-Z//);\n        my $sm_diff = length($extension) -\
    \ length($extension =~ tr/a-z//);\n        if ($cap_diff > $sm_diff) {\n     \
    \       $strongest = \"$class_name.$extension\";\n        }\n    }\n    return\
    \ $strongest;\n}", "    my $strongest_extension = \"\";\n    my $strongest_extension_strength\
    \ = 0;\n    foreach my $extension (@$extensions) {\n        my $extension_strength\
    \ = uc($extension) =~ tr/A-Z//;\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . $strongest_extension;\n}", "    my $strongest_extension;\n    my $num_upper\
    \ = 0;\n    my $num_lower = 0;\n    foreach my $extension (@$extensions) {\n \
    \       my $num_upper = length($extension) - length($extension) =~ tr/A-Z//;\n\
    \        my $num_lower = length($extension) - length($extension) =~ tr/a-z//;\n\
    \        if ($num_upper > $num_lower) {\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", " \
    \   my $strongest = -1;\n    foreach my $extension (@$extensions) {\n        my\
    \ $extension_class = $class_name . '::' . $extension;\n        if ($extension_class\
    \ =~ /[A-Z]/g) {\n            my $cap = length($extension) - length($extension\
    \ =~ /[A-Z]/);\n            my $sm = length($extension) - length($extension =~\
    \ /[a-z]/);\n            $strongest = $strongest if $strongest < $cap - $sm;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest . $extensions[-1];\n\
    }", "    my $strongest_extension;\n    my $strongest_extension_strength;\n   \
    \ foreach my $extension (@$extensions) {\n        my $extension_strength = substr($extension,\
    \ 0, 1) . substr($extension, 1, 1) . substr($extension, 2, 1);\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", "  \
    \  my $strongest;\n    my $extensions_count = scalar @$extensions;\n    my $class_name_count\
    \ = scalar @$class_name;\n    my $extension_strength;\n    my $class_name_strength;\n\
    \    my $extension_strength_sum;\n    my $class_name_strength_sum;\n    my $extension_strength_product;\n\
    \    my $class_name_strength_product;\n    my $extension_strength_product2;\n\
    \    my $class_name_strength_product2;\n    my $extension_strength_product3;\n\
    \    my $class_name_strength_product3;\n    my $extension_strength_product4;\n\
    \    my $class_name_strength_product4;\n    my $extension_strength_product5;\n\
    \    my $class_name_strength_product5;\n    my $extension_strength_product6;\n\
    \    my $class_name_strength_product6;\n    my $extension_strength_product7;\n\
    \    my $class_name_strength_product7;\n    my $extension_strength_product8;\n\
    \    my $class_name_strength_product8;\n    my $extension_strength_product9;\n\
    \    my $class_name_strength_product9;\n    my $extension_strength_product10;\n\
    \    my $class_name_strength_product10;\n    my $extension_strength_product11;\n\
    \    my $class_name_strength_product11;\n    my $extension_strength_product12;\n\
    \    my $class_name_strength_product12;\n    my $extension_strength_product13;\n\
    \    my $class_name_strength_product13;\n    my $extension_strength_product14;\n\
    \    my $class_name_strength_product14;\n    my $extension_strength_product15;\n\
    \    my $class_name_strength_product15;\n    my $extension_strength_product16;\n\
    \    my $class_name_strength_product16;\n    my $extension_strength_product17;\n\
    \    my $class_name_strength_product17;\n    my $extension_strength_product18;\n\
    \    my $class_name_strength_product18;\n    my $extension_strength_product19;\n\
    \    my $class_name_strength_product19;\n    my $extension_strength_product20;\n\
    \    my $class_name_strength_product20;\n    my $extension_strength_product21;\n\
    \    my $class_name_strength_product21;\n    my $extension_strength_product22;\n\
    \    my $class_name_strength_product22;\n    my $extension_strength_product23;\n\
    \    my $class_name_strength_product23;\n    my $extension_strength_product24;\n\
    \    my $class_name_strength_product24;\n    my $extension_strength", "    my\
    \ $strongest = -1;\n    foreach my $extension (@$extensions) {\n        my $c\
    \ = uc($extension);\n        my $s = uc($class_name);\n        my $c = $c - $s;\n\
    \        if ($c > $strongest) {\n            $strongest = $c;\n        }\n   \
    \ }\n    return $class_name . '.' . $strongest;\n}", "    my $strongest = -1;\n\
    \    my $extension;\n    foreach $extension (@$extensions) {\n        my $c =\
    \ uc($extension);\n        my $s = uc($class_name);\n        my $c = $c - $s;\n\
    \        if ($c > $strongest) {\n            $strongest = $c;\n            $extension\
    \ = $extension;\n        }\n    }\n    return $extension;\n}", "    my $strongest;\n\
    \    my $strength;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my\
    \ $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my\
    \ $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n\
    \    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my\
    \ $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n\
    \    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my\
    \ $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n\
    \    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my\
    \ $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n\
    \    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my\
    \ $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n\
    \    ", "    my $strongest_extension;\n    my $strongest_extension_strength;\n\
    \    my $extension_counter;\n    my $extension_counter_strength;\n    foreach\
    \ my $extension (@$extensions) {\n        $extension_counter++;\n        $extension_counter_strength\
    \ = substr($extension, 0, 1);\n        if ($extension_counter_strength == substr($extension,\
    \ 0, 1)) {\n            $strongest_extension = $extension;\n            $strongest_extension_strength\
    \ = $extension_counter_strength;\n        }\n    }\n    if ($strongest_extension_strength\
    \ != -1) {\n        $strongest_extension .= \".\" . $strongest_extension_strength;\n\
    \    }\n    return $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    foreach my $extension (@$extensions)\
    \ {\n        my $class_name_length = length($class_name);\n        my $extension_length\
    \ = length($extension);\n        my $strength = int(($class_name_length - $extension_length)\
    \ / 2);\n        if ($strength > $strongest_extension_strength) {\n          \
    \  $strongest_extension_strength = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $strongest_extension;\n}", "   \
    \ my $strongest;\n    my $strength;\n    foreach my $extension (@$extensions)\
    \ {\n        my $name = $extension =~ s/^([A-Z]+)([A-Z]*)$/$1.Strongest$2/r;\n\
    \        $strength = length($name) - length($extension);\n        if ($strength\
    \ > $strongest) {\n            $strongest = $extension;\n        }\n    }\n  \
    \  return $class_name . '.' . $strongest;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    my $extension_count;\n    my $extension_strength;\n\
    \    my $extension_class;\n    my $extension_class_name;\n    foreach my $extension\
    \ (@$extensions) {\n        $extension_count++;\n        $extension_strength =\
    \ uc($extension) - uc($extension_count);\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    $extension_class\
    \ = $class_name . \"_\" . $strongest_extension;\n    $extension_class_name = $extension_class\
    \ . \"_\" . $strongest_extension_strength;\n    return $extension_class_name;\n\
    }", "    my $strongest_extension = '';\n    my $strength = 0;\n    foreach my\
    \ $extension (@$extensions) {\n        my $class_name_length = length($class_name);\n\
    \        my $extension_length = length($extension);\n        my $extension_strength\
    \ = substr($extension, 0, $class_name_length - $extension_length);\n        if\
    \ ($extension_strength > $strength) {\n            $strongest_extension = $extension;\n\
    \            $strength = $extension_strength;\n        }\n    }\n    return $strongest_extension;\n\
    }", "    my $strongest_extension;\n    my $strongest_extension_strength;\n   \
    \ my $class_name_length = length($class_name);\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_length = length($extension);\n        my $extension_strength\
    \ = int(($extension_length - $class_name_length) / 2);\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension = $extension;\n\
    \            $strongest_extension_strength = $extension_strength;\n        }\n\
    \    }\n    return $class_name . $strongest_extension;\n}", "    my $strongest_extension;\n\
    \    my $strongest_extension_strength;\n    my $extensions_length = @$extensions;\n\
    \    my $class_length = length($class_name);\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $A;\n    my $B;\n    my $C;\n    my $", "    my\
    \ $strongest;\n    my $strongest_index;\n    my $strongest_extension;\n    my\
    \ $strongest_extension_index;\n    my $strongest_extension_strength;\n    my $strongest_extension_strength_index;\n\
    \    my $strongest_extension_strength_strength;\n    my $strongest_extension_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength;\n    my $strongest_extension_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength;\n    my $strongest_extension_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength;\n \
    \   my $strongest_extension_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_index;\n\
    \    my $strongest_extension_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength_strength;\n\
    \    my $strongest_extension_strength_strength_strength", "    my $strongest;\n\
    \    my $num_caps = 0;\n    my $num_sms = 0;\n    foreach my $extension (@$extensions)\
    \ {\n        my $caps = length($extension) - length($extension =~ /[A-Z]/);\n\
    \        $num_caps += $caps;\n        my $sms = length($extension) - length($extension\
    \ =~ /[a-z]/);\n        $num_sms += $sms;\n    }\n    my $strength = $num_caps\
    \ - $num_sms;\n    if ($strength == 0) {\n        $strongest = $class_name;\n\
    \    } else {\n        foreach my $extension (@$extensions) {\n            if\
    \ ($extension =~ /[A-Z]/) {\n                if ($num_caps > $num_sms) {\n   \
    \                 $strongest = $class_name . $extension;\n                }\n\
    \            }\n        }\n    }\n    return $strongest;\n}", "    my $strongest_extension;\n\
    \    my $strongest_strength;\n    my $extension_count;\n    foreach my $extension\
    \ (@$extensions) {\n        $extension_count++;\n        my $extension_class =\
    \ $class_name . '_' . $extension;\n        my $extension_strength = &get_extension_strength($extension_class);\n\
    \        if ($extension_strength > $strongest_strength) {\n            $strongest_extension\
    \ = $extension;\n            $strongest_strength = $extension_strength;\n    \
    \    }\n    }\n    return $strongest_extension . '.' . $strongest_strength;\n}",
  "    my $strongest;\n    my $max_strength;\n    my $max_index;\n    my $i;\n   \
    \ my $j;\n    my $k;\n    my $strength;\n    my $index;\n    my $class_name_length\
    \ = length($class_name);\n    foreach $i (0 .. $class_name_length-1) {\n     \
    \   $strongest = $class_name;\n        $max_strength = 0;\n        $max_index\
    \ = 0;\n        foreach $j (0 .. $class_name_length-1) {\n            $strength\
    \ = substr($class_name, $i, 1) =~ tr/A-Z//cd;\n            if ($strength > $max_strength)\
    \ {\n                $strongest = $class_name;\n                $max_strength\
    \ = $strength;\n                $max_index = $j;\n            }\n        }\n \
    \       foreach $k (0 .. $class_name_length-1) {\n            $strength = substr($class_name,\
    \ $i, 1) =~ tr/a-z//cd;\n            if ($strength > $max_strength) {\n      \
    \          $strongest = $class_name;\n                $max_strength = $strength;\n\
    \                $max_index = $k;\n            }\n        }\n        if ($max_strength\
    \ > 0) {\n            $class_name = substr($class_name, 0, $max_index) . $extensions[$max_index];\n\
    \        }\n    }\n    return $class_name;\n}", "    my @extensions = @$extensions;\n\
    \    my $strongest = -1;\n    my $strongest_extension;\n    my $i = 0;\n    foreach\
    \ my $extension (@extensions) {\n        my $c = uc(substr($extension, 0, 1));\n\
    \        my $s = uc(substr($extension, 1, 1));\n        my $d = $c - $s;\n   \
    \     if ($d > $strongest) {\n            $strongest = $d;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }", "    my $strongest = undef;\n    my $i = 0;\n    foreach my $extension (@$extensions)\
    \ {\n        my $c = uc(substr($extension, 0, 1));\n        my $s = uc(substr($extension,\
    \ 1, 1));\n        my $strength = int(($c - $s) / 2);\n        if ($strength >\
    \ 0) {\n            if ($strongest eq undef) {\n                $strongest = $extension;\n\
    \            }\n            elsif ($strength > $strongest->{strength}) {\n   \
    \             $strongest->{extension} = $extension;\n                $strongest->{strength}\
    \ = $strength;\n            }\n        }\n        $i++;\n    }\n    return $strongest;\n\
    }", "    my @extensions_sorted = sort {$a <=> $b} @$extensions;\n    my $strongest\
    \ = pop @extensions_sorted;\n    my $class_name_with_strongest = $class_name .\
    \ \".\" . $strongest;\n    return $class_name_with_strongest;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

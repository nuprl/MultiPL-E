name: HumanEval_35_max_element
language: pl
prompt: "# Return maximum element in the list.\nsub max_element {\n    my($l) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_element;\n\
  \        if(eq_deeply($candidate->([1, 2, 3]),3)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([5, 3, -5, 2, -3,\
  \ 3, 9, 0, 124, 1, -10]),124)) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n}\n\ntesthumaneval();"
completions: ["    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined\
    \ $max) {\n            if ($x > $max) {\n                $max = $x;\n        \
    \    }\n        } else {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined\
    \ $max) {\n            if ($x > $max) {\n                $max = $x;\n        \
    \    }\n        } else {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if\
    \ ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $elem (@$l) {\n        if (defined\
    \ $max and $max > $elem) {\n            $max = $elem;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined\
    \ $max and $max < $x) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    my $maxi = 0;\n    foreach my $i (0 ..\
    \ $#$l) {\n        my $e = $l->[$i];\n        if (defined $max) {\n          \
    \  if ($e > $max) {\n                $max = $e;\n                $maxi = $i;\n\
    \            }\n        } else {\n            $max = $e;\n            $maxi =\
    \ $i;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n    foreach\
    \ my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n        }\n\
    \    }\n    return $max;\n}", "    my $max;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $max;\n    my $maxi;\n    my $maxj;\n    my $maxk;\n    my $max;\n   \
    \ my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max",
  "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i] > $max)\
    \ {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}", " \
    \   my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max) {\n\
    \            if ($x > $max) {\n                $max = $x;\n            }\n   \
    \     } else {\n            $max = $x;\n        }\n    }\n    return $max;\n}",
  "    my $max;\n    my $maxidx = 0;\n    my $maxval = $l->[0];\n    foreach my $i\
    \ (1 .. $#$l) {\n        my $val = $l->[$i];\n        if ($val > $maxval) {\n\
    \            $maxval = $val;\n            $maxidx = $i;\n        }\n    }\n  \
    \  return $maxval;\n}", "    my $max = $l->[0];\n    my $i;\n    for ($i = 1;\
    \ $i < @$l; $i++) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x\
    \ (@$l) {\n        $max = $x if $x > $max;\n    }\n    return $max;\n}", "   \
    \ my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i] > $max)\
    \ {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}", " \
    \   my $max = undef;\n    foreach my $elem (@$l) {\n        if (defined $max and\
    \ $max > $elem) {\n            $max = $elem;\n        }\n    }\n    return $max;\n\
    }", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max)\
    \ {\n            if ($x > $max) {\n                $max = $x;\n            }\n\
    \        } else {\n            $max = $x;\n        }\n    }\n    return $max;\n\
    }", "    my $max;\n    my $i;\n    my $j;\n    for ($i = 0; $i < @$l; $i++) {\n\
    \        $max = $l->[$i] if $l->[$i] > $max;\n    }\n    for ($i = 0; $i < @$l;\
    \ $i++) {\n        $j = $i;\n        while ($j < @$l && $l->[$j] > $l->[$j + 1])\
    \ {\n            $j++;\n        }\n        $l->[$i] = $l->[$j];\n    }\n    return\
    \ $max;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if\
    \ ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = $l->[0];\n    my $index = 0;\n    foreach my $i (@$l)\
    \ {\n        if ($i > $max) {\n            $max = $i;\n            $index = $i;\n\
    \        }\n    }\n    return $index;\n}", "    my $max = -1;\n    foreach my\
    \ $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n        }\n  \
    \  }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n\
    \    }\n    return $max;\n}", "    my $max = undef;\n    my $maxi = 0;\n    foreach\
    \ my $i (@$l) {\n        if (defined $max) {\n            if ($max < $i) {\n \
    \               $max = $i;\n                $maxi = $i;\n            }\n     \
    \   }\n        else {\n            $max = $i;\n            $maxi = $i;\n     \
    \   }\n    }\n    return $max;\n}", "    my $max = undef;\n    my $maxi = 0;\n\
    \    foreach my $i (@$l) {\n        if (defined $max and $max < $i) {\n      \
    \      $max = $i;\n            $maxi = $i;\n        } elsif (defined $max) {\n\
    \            $max = $i;\n            $maxi = $i;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $e (@$l) {\n        if (defined\
    \ $max) {\n            if ($e > $max) {\n                $max = $e;\n        \
    \    }\n        } else {\n            $max = $e;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max)\
    \ {\n            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = undef;\n    foreach my $x (@$l) {\n        if (defined $max) {\n         \
    \   if ($x > $max) {\n                $max = $x;\n            }\n        } else\
    \ {\n            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = @$l > 0 ? $l->[-1] : undef;\n    foreach my $e (@$l) {\n        if ($e > $max)\
    \ {\n            $max = $e;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = undef;\n    foreach my $x (@$l) {\n        if (defined $max and $max > $x)\
    \ {\n            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n\
    \            $max = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = -1;\n    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n   \
    \ }\n    return $max;\n}", "    my $max = undef;\n    foreach my $elem (@$l) {\n\
    \        if (defined $max) {\n            if ($elem > $max) {\n              \
    \  $max = $elem;\n            }\n        } else {\n            $max = $elem;\n\
    \        }\n    }\n    return $max;\n}", "    my $max;\n    foreach my $x (@$l)\
    \ {\n        if (defined $max) {\n            if ($x > $max) {\n             \
    \   $max = $x;\n            }\n        }\n        else {\n            $max = $x;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : undef;\n\
    \    foreach my $ele (@$l) {\n        if ($ele > $max) {\n            $max = $ele;\n\
    \        }\n    }\n    return $max;\n}", "    my $max;\n    my $maxidx = 0;\n\
    \    foreach my $i (0..$#$l) {\n        if ($l->[$i] > $max) {\n            $max\
    \ = $l->[$i];\n            $maxidx = $i;\n        }\n    }\n    return $maxidx;\n\
    }", "    my $max;\n    my $maxidx;\n    my $i;\n    for ($i = 0; $i < @$l; $i++)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n          \
    \  $maxidx = $i;\n        }\n    }\n    return $l->[$maxidx];\n}", "    my $max\
    \ = undef;\n    foreach my $elem (@$l) {\n        if (defined $max) {\n      \
    \      if ($elem > $max) {\n                $max = $elem;\n            }\n   \
    \     } else {\n            $max = $elem;\n        }\n    }\n    return $max;\n\
    }", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max)\
    \ {\n            if ($x > $max) {\n                $max = $x;\n            }\n\
    \        } else {\n            $max = $x;\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach my $i (1..$l->[0]) {\n        my $cmp\
    \ = $l->[$i];\n        if ($cmp > $max) {\n            $max = $cmp;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n\
    \        if (defined $max) {\n            if ($x > $max) {\n                $max\
    \ = $x;\n            }\n        } else {\n            $max = $x;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n\
    \        if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined\
    \ $max and $max < $x) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max)\
    \ {\n            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = -1;\n    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n    }\n \
    \   return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n        $max\
    \ = $x if $x > $max;\n    }\n    return $max;\n}", "    my $max;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $max;\n    my $min;\n    my $min_index;\n    my\
    \ $max_index;\n    my $min_value;\n    my $max_value;\n    my $min_key;\n    my\
    \ $max_key;\n    my $min_hash;\n    my $max_hash;\n    my $min_hash_element;\n\
    \    my $max_hash_element;\n    my $min_hash_element_key;\n    my $max_hash_element_key;\n\
    \    my $min_hash_element_value;\n    my $max_hash_element_value;\n    my $min_hash_element_hash;\n\
    \    my $max_hash_element_hash;\n    my $min_hash_element_hash_element;\n    my\
    \ $max_hash_element_hash_element;\n    my $min_hash_element_hash_element_key;\n\
    \    my $max_hash_element_hash_element_key;\n    my $min_hash_element_hash_element_value;\n\
    \    my $max_hash_element_hash_element_value;\n    my $min_hash_element_hash_element_hash;\n\
    \    my $max_hash_element_hash_element_hash;\n    my $min_hash_element_hash_element_hash_element;\n\
    \    my $max_hash_element_hash_element_hash_element;\n    my $min_hash_element_hash_element_hash_element_key;\n\
    \    my $max_hash_element_hash_element_hash_element_key;\n    my $min_hash_element_hash_element_hash_element_value;\n\
    \    my $max_hash_element_hash_element_hash_element_value;\n    my $min_hash_element_hash_element_hash_element_hash;\n\
    \    my $max_hash_element_hash_element_hash_element_hash;\n    my $min_hash_element_hash_element_hash_element_hash_element;\n\
    \    my $max_hash_element_hash_element_hash_element_hash_element;\n    my $min_hash_element_hash_element_hash_element_hash_element_key;\n\
    \    my $max_hash_element_hash_element_hash_element_hash_element_key;\n    my\
    \ $min_hash_element_hash_element_hash_element_hash_element_value;\n    my $max_hash_element_hash_element_hash_element_hash_element_value;\n\
    \    my $min_hash_element_hash_element_hash_element_hash_element_hash;\n    my\
    \ $max_hash_element_hash_element_hash_element_hash_element_hash;\n    my $min_hash_element_hash_element_hash_element_hash_element_hash_element;\n\
    \    my $max_hash_element_hash_element_hash_element_hash_element_hash_element;\n\
    \    my $min_hash_element_hash_element_hash_element_hash_element_hash_element_key;\n\
    \    my $max_hash_element_hash_element_hash_element_hash_element_hash_element_key;\n\
    \    my $min_hash_element_hash_element_hash_element_hash_element_hash_element_value;\n\
    \    my $max_hash_element_hash_element_hash_element_hash_element_hash_element_value;\n\
    \    my $min_hash_element_hash_element_hash_element_hash_element_hash_element_hash;\n\
    \    my $max_hash_element_hash_element_", "    my $max = @$l > 0 ? $l->[-1] :\
    \ undef;\n    foreach my $e (@$l) {\n        if ($e > $max) {\n            $max\
    \ = $e;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n    foreach\
    \ my $e (@$l) {\n        if (defined $max) {\n            if ($e > $max) {\n \
    \               $max = $e;\n            }\n        } else {\n            $max\
    \ = $e;\n        }\n    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1]\
    \ : undef;\n    foreach my $i (@$l) {\n        if ($i eq $max) {\n           \
    \ return $i;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n   \
    \ my $i = 0;\n    foreach my $e ($l) {\n        if ($e > $max) {\n           \
    \ $max = $e;\n        }\n        $i = $i;\n    }\n    return $max;\n}", "    my\
    \ $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        my $cmp = $l->[$i] <=>\
    \ $max;\n        if ($cmp == 0) {\n            $max = $l->[$i];\n        }\n \
    \   }\n    return $max;\n}", "    my $max = $l->[0];\n    my $index = 0;\n   \
    \ foreach my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n  \
    \          $index = $i;\n        }\n    }\n    return $index;\n}", "    my $max\
    \ = undef;\n    foreach my $x (@$l) {\n        if (defined $max) {\n         \
    \   if ($x > $max) {\n                $max = $x;\n            }\n        } else\
    \ {\n            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = @$l > 0 ? $l->[-1] : 0;\n    foreach my $i (reverse @$l) {\n        $max =\
    \ $i if $i > $max;\n    }\n    return $max;\n}", "    my $max = undef;\n    foreach\
    \ my $elem (@$l) {\n        if (defined $max) {\n            if ($elem > $max)\
    \ {\n                $max = $elem;\n            }\n        } else {\n        \
    \    $max = $elem;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n\
    \    foreach my $x (@$l) {\n        if (defined $max) {\n            if ($x >\
    \ $max) {\n                $max = $x;\n            }\n        } else {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n\
    \    foreach my $e (@$l) {\n        if (defined $max and $max < $e) {\n      \
    \      $max = $e;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n\
    \    foreach my $x (@$l) {\n        if ($x > $max) {\n            $max = $x;\n\
    \        }\n    }\n    return $max;\n}", "    my $max;\n    my $maxel;\n    foreach\
    \ my $el (@$l) {\n        if (defined $maxel) {\n            if ($el > $maxel)\
    \ {\n                $maxel = $el;\n            }\n        } else {\n        \
    \    $maxel = $el;\n        }\n    }\n    return $maxel;\n}", "    my $max = @$l\
    \ > 0 ? $l->[-1] : undef;\n    foreach my $i (reverse @$l) {\n        if ($i eq\
    \ $max) {\n            return $i;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max) {\n\
    \            if ($x > $max) {\n                $max = $x;\n            }\n   \
    \     } else {\n            $max = $x;\n        }\n    }\n    return $max;\n}",
  "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max and $max\
    \ ne $x) {\n            die \"List contains different elements\";\n        }\n\
    \        $max = $x;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n  \
    \  my $i = 0;\n    foreach my $e ($l->[1..$#$l]) {\n        if ($e > $max) {\n\
    \            $max = $e;\n        }\n        $i++;\n    }\n    return $max;\n}",
  "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max) {\n\
    \            if ($x > $max) {\n                $max = $x;\n            }\n   \
    \     } else {\n            $max = $x;\n        }\n    }\n    return $max;\n}",
  "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i] > $max)\
    \ {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}", " \
    \   my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = @$l\
    \ > 0 ? $l->[-1] : undef;\n    foreach my $i (reverse @$l) {\n        if ($max\
    \ < $i) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = undef;\n    foreach my $e (@$l) {\n        if (defined $max and\
    \ $max < $e) {\n            $max = $e;\n        }\n    }\n    return $max;\n}",
  "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max) {\n\
    \            if ($x > $max) {\n                $max = $x;\n            }\n   \
    \     } else {\n            $max = $x;\n        }\n    }\n    return $max;\n}",
  "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max) {\n\
    \            if ($x > $max) {\n                $max = $x;\n            }\n   \
    \     }\n        else {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : undef;\n    foreach my $i (reverse\
    \ 0 .. @$l - 1) {\n        if ($l->[$i] >= $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my $max = undef;\n    foreach my\
    \ $x (@$l) {\n        if (defined $max) {\n            if ($x > $max) {\n    \
    \            $max = $x;\n            }\n        }\n        else {\n          \
    \  $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n  \
    \  foreach my $x (@$l) {\n        if ($x > $max) {\n            $max = $x;\n \
    \       }\n    }\n    return $max;\n}", "    my $max;\n    my $maxidx;\n    my\
    \ $maxval;\n    my $idx;\n    my $val;\n    my $i;\n    my $j;\n    my $k;\n \
    \   my $maxidx2;\n    my $maxval2;\n    my $idx2;\n    my $val2;\n    my $maxidx3;\n\
    \    my $maxval3;\n    my $idx3;\n    my $val3;\n    my $maxidx4;\n    my $maxval4;\n\
    \    my $idx4;\n    my $val4;\n    my $maxidx5;\n    my $maxval5;\n    my $idx5;\n\
    \    my $val5;\n    my $maxidx6;\n    my $maxval6;\n    my $idx6;\n    my $val6;\n\
    \    my $maxidx7;\n    my $maxval7;\n    my $idx7;\n    my $val7;\n    my $maxidx8;\n\
    \    my $maxval8;\n    my $idx8;\n    my $val8;\n    my $maxidx9;\n    my $maxval9;\n\
    \    my $idx9;\n    my $val9;\n    my $maxidx10;\n    my $maxval10;\n    my $idx10;\n\
    \    my $val10;\n    my $maxidx11;\n    my $maxval11;\n    my $idx11;\n    my\
    \ $val11;\n    my $maxidx12;\n    my $maxval12;\n    my $idx12;\n    my $val12;\n\
    \    my $maxidx13;\n    my $maxval13;\n    my $idx13;\n    my $val13;\n    my\
    \ $maxidx14;\n    my $maxval14;\n    my $idx14;\n    my $val14;\n    my $maxidx15;\n\
    \    my $maxval15;\n    my $idx15;\n    my $val15;\n    my $maxidx16;\n    my\
    \ $maxval16;\n    my $idx16;\n    my $val16;\n    my $maxidx17;\n    my $maxval17;\n\
    \    my $idx17;\n    my $val17;\n    my $maxidx18;\n    my $maxval18;\n    my\
    \ $idx18;\n    my $val18;\n    my $maxidx19;\n    my $maxval19;\n    my $idx19;\n\
    \    my $val19;\n    my $maxidx20;\n    my $maxval20;\n    my $idx20;\n    my\
    \ $val20;\n    my $maxidx21;\n    my $maxval21;\n    my $idx21;\n    my $val21;\n\
    \    my $maxidx22;\n    my $maxval22;\n    my $idx22", "    my $max = @$l > 0\
    \ ? $l->[-1] : undef;\n    foreach my $i (reverse 0..$#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max)\
    \ {\n            if ($x > $max) {\n                $max = $x;\n            }\n\
    \        } else {\n            $max = $x;\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n\
    \            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = $l->[0];\n    foreach my $i (1..$#$l) {\n        my $cmp = $l->[$i];\n   \
    \     if ($cmp > $max) {\n            $max = $cmp;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n        $max = $x\
    \ if $x > $max;\n    }\n    return $max;\n}", "    my $max = undef;\n    foreach\
    \ my $x (@$l) {\n        if (defined $max and $max > $x) {\n            $max =\
    \ $x;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n    foreach\
    \ my $x (@$l) {\n        if (defined $max and $max > $x) {\n            $max =\
    \ $x;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n    my $maxel;\n\
    \    foreach my $el (@$l) {\n        if ($el > $max) {\n            $max = $el;\n\
    \            $maxel = $el;\n        }\n    }\n    return $maxel;\n}", "    my\
    \ $max = $l->[0];\n    my $index = 0;\n    foreach my $i (@$l) {\n        if ($i\
    \ > $max) {\n            $max = $i;\n            $index = $i;\n        }\n   \
    \ }\n    return $index;\n}", "    my $max = @$l > 0 ? $l->[-1] : undef;\n    foreach\
    \ my $i (reverse 0 .. @$l - 1) {\n        my $e = $l->[$i];\n        if ($e >\
    \ $max) {\n            $max = $e;\n        }\n    }\n    return $max;\n}", " \
    \   my $max;\n    my $maxidx = 0;\n    my $i;\n    for ($i = 0; $i < @$l; $i++)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n          \
    \  $maxidx = $i;\n        }\n    }\n    return $l->[$maxidx];\n}", "    my $max;\n\
    \    my $maxidx = 0;\n    my $i;\n    for ($i = 0; $i < @$l; $i++) {\n       \
    \ if ($maxidx < $i) {\n            $max = $l->[$maxidx];\n            $maxidx\
    \ = $i;\n        }\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \            $maxidx = $i;\n        }\n    }\n    return $l->[$maxidx];\n}", " \
    \   my $max;\n    my $i;\n    my $j;\n    my $k;\n    my $maxi;\n    my $maxj;\n\
    \    my $maxk;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max", "    my $max = -1;\n    foreach\
    \ my $x (@$l) {\n        if ($x > $max) {\n            $max = $x;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n\
    \        if (defined $max) {\n            if ($x > $max) {\n                $max\
    \ = $x;\n            }\n        } else {\n            $max = $x;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n\
    \        if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : undef;\n    foreach my $ele (@$l)\
    \ {\n        if ($ele > $max) {\n            $max = $ele;\n        }\n    }\n\
    \    return $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n    \
    \    if (defined $max) {\n            if ($x > $max) {\n                $max =\
    \ $x;\n            }\n        } else {\n            $max = $x;\n        }\n  \
    \  }\n    return $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n\
    \        if (defined $max) {\n            if ($x > $max) {\n                $max\
    \ = $x;\n            }\n        } else {\n            $max = $x;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n\
    \    }\n    return $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n\
    \        if (defined $max) {\n            if ($x > $max) {\n                $max\
    \ = $x;\n            }\n        }\n        else {\n            $max = $x;\n  \
    \      }\n    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : undef;\n\
    \    foreach my $e (@$l) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x\
    \ (@$l) {\n        $max = $x if $x > $max;\n    }\n    return $max;\n}", "   \
    \ my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max and $max\
    \ < $x) {\n            $max = $x;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = -1;\n    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n\
    \    }\n    return $max;\n}", "    my $max;\n    my $maxel;\n    foreach my $el\
    \ (@$l) {\n        if ($el > $max) {\n            $max = $el;\n            $maxel\
    \ = $el;\n        }\n    }\n    return $maxel;\n}", "    my $max = undef;\n  \
    \  foreach my $x (@$l) {\n        if (defined $max and $max < $x) {\n        \
    \    $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n\
    \    foreach my $x (@$l) {\n        if (defined $max) {\n            if ($x >\
    \ $max) {\n                $max = $x;\n            }\n        } else {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = @$l\
    \ > 0 ? $l->[-1] : undef;\n    foreach my $v (@$l) {\n        if ($v > $max) {\n\
    \            $max = $v;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = @$l > 0 ? $l->[-1] : undef;\n    foreach my $i (@$l) {\n        if ($i < $max)\
    \ {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n            $max\
    \ = $x;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n    foreach\
    \ my $x (@$l) {\n        if ($x > $max) {\n            $max = $x;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach\
    \ my $i (reverse 0..$#$l) {\n        my $x = $l->[$i];\n        if ($x > $max)\
    \ {\n            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = -1;\n    foreach my $elem (@$l) {\n        if ($elem > $max) {\n         \
    \   $max = $elem;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n\
    \    foreach my $x (@$l) {\n        if (defined $max) {\n            if ($x >\
    \ $max) {\n                $max = $x;\n            }\n        } else {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n\
    \    foreach my $x (@$l) {\n        if ($x > $max) {\n            $max = $x;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n\
    \    foreach my $i (reverse @$l) {\n        if ($i > $max) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n    my $maxi\
    \ = 0;\n    foreach my $i (@$l) {\n        if ($i > $max) {\n            $max\
    \ = $i;\n            $maxi = $i;\n        }\n    }\n    return $maxi;\n}", " \
    \   my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max) {\n\
    \            if ($x > $max) {\n                $max = $x;\n            }\n   \
    \     } else {\n            $max = $x;\n        }\n    }\n    return $max;\n}",
  "    my $max = undef;\n    foreach my $elem (@$l) {\n        if (defined $max and\
    \ $max < $elem) {\n            $max = $elem;\n        }\n    }\n    return $max;\n\
    }", "    my $max = @$l > 0 ? $l->[-1] : undef;\n    foreach my $e (@$l) {\n  \
    \      if ($e > $max) {\n            $max = $e;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined\
    \ $max) {\n            if ($x > $max) {\n                $max = $x;\n        \
    \    }\n        } else {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined\
    \ $max and $max < $x) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max;\n    my $maxidx;\n    my $i;\n    for ($i = 0; $i <\
    \ @$l; $i++) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \            $maxidx = $i;\n        }\n    }\n    return $l->[$maxidx];\n}", " \
    \   my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i] >\
    \ $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}",
  "    my $max = $l->[0];\n    my $max_index = 0;\n    foreach my $i (1..$#$l) {\n\
    \        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n            $max_index\
    \ = $i;\n        }\n    }\n    return $max_index;\n}", "    my $max = undef;\n\
    \    foreach my $x (@$l) {\n        if (defined $max) {\n            if ($x >\
    \ $max) {\n                $max = $x;\n            }\n        } else {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n\
    \    foreach my $x (@$l) {\n        if (defined $max) {\n            if ($x >\
    \ $max) {\n                $max = $x;\n            }\n        } else {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max;\n  \
    \  my $maxidx;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($maxidx < $i)\
    \ {\n            $max = $l->[$maxidx];\n            $maxidx = $i;\n        }\n\
    \        elsif ($l->[$i] > $max) {\n            $max = $l->[$i];\n           \
    \ $maxidx = $i;\n        }\n    }\n    return $l->[$maxidx];\n}", "    my $max;\n\
    \    my $maxidx;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($maxidx <\
    \ $i) {\n            $max = $l->[$maxidx];\n            $maxidx = $i;\n      \
    \  }\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n         \
    \   $maxidx = $i;\n        }\n    }\n    return $l->[$maxidx];\n}", "    my $max\
    \ = undef;\n    foreach my $x (@$l) {\n        if (defined $max) {\n         \
    \   if ($x > $max) {\n                $max = $x;\n            }\n        } else\
    \ {\n            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = undef;\n    foreach my $x (@$l) {\n        if (defined $max) {\n         \
    \   if ($x > $max) {\n                $max = $x;\n            }\n        } else\
    \ {\n            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = undef;\n    foreach my $x (@$l) {\n        if (defined $max) {\n         \
    \   if ($x > $max) {\n                $max = $x;\n            }\n        } else\
    \ {\n            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max;\n\
    \    my $maxidx;\n    my $i;\n    my $j;\n    my $k;\n    my $maxval;\n    my\
    \ $maxidxval;\n    my $maxidxval;\n    my $maxidxval2;\n    my $maxidxval3;\n\
    \    my $maxidxval4;\n    my $maxidxval5;\n    my $maxidxval6;\n    my $maxidxval7;\n\
    \    my $maxidxval8;\n    my $maxidxval9;\n    my $maxidxval10;\n    my $maxidxval11;\n\
    \    my $maxidxval12;\n    my $maxidxval13;\n    my $maxidxval14;\n    my $maxidxval15;\n\
    \    my $maxidxval16;\n    my $maxidxval17;\n    my $maxidxval18;\n    my $maxidxval19;\n\
    \    my $maxidxval20;\n    my $maxidxval21;\n    my $maxidxval22;\n    my $maxidxval23;\n\
    \    my $maxidxval24;\n    my $maxidxval25;\n    my $maxidxval26;\n    my $maxidxval27;\n\
    \    my $maxidxval28;\n    my $maxidxval29;\n    my $maxidxval30;\n    my $maxidxval31;\n\
    \    my $maxidxval32;\n    my $maxidxval33;\n    my $maxidxval34;\n    my $maxidxval35;\n\
    \    my $maxidxval36;\n    my $maxidxval37;\n    my $maxidxval38;\n    my $maxidxval39;\n\
    \    my $maxidxval40;\n    my $maxidxval41;\n    my $maxidxval42;\n    my $maxidxval43;\n\
    \    my $maxidxval44;\n    my $maxidxval45;\n    my $maxidxval46;\n    my $maxidxval47;\n\
    \    my $maxidxval48;\n    my $maxidxval49;\n    my $maxidxval50;\n    my $maxidxval51;\n\
    \    my $maxidxval52;\n    my $maxidxval53;\n    my $maxidxval54;\n    my $maxidxval55;\n\
    \    my $maxidxval56;\n    my $maxidxval57;\n    my $maxidxval58;\n    my $maxidxval59;\n\
    \    my $maxidxval60;\n    my $maxidxval61;\n    my $maxidxval62;\n    my $",
  "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max and $max\
    \ > $x) {\n            $max = $x;\n        }\n    }\n    return $max;\n}", " \
    \   my $max;\n    foreach my $x (@$l) {\n        if (defined $max and $max > $x)\
    \ {\n            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = undef;\n    foreach my $e (@$l) {\n        if (defined $max and $max > $e)\
    \ {\n            $max = $e;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = undef;\n    foreach my $e (@$l) {\n        if (defined $max) {\n         \
    \   if ($e > $max) {\n                $max = $e;\n            }\n        } else\
    \ {\n            $max = $e;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = undef;\n    foreach my $x (@$l) {\n        if (defined $max and $max < $x)\
    \ {\n            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = undef;\n    foreach my $x (@$l) {\n        if (defined $max) {\n         \
    \   if ($x > $max) {\n                $max = $x;\n            }\n        }\n \
    \       else {\n            $max = $x;\n        }\n    }\n    return $max;\n}",
  "    my $max = -1;\n    foreach my $i (@$l) {\n        if ($i > $max) {\n      \
    \      $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n\
    \    foreach my $x (@$l) {\n        if (defined $max) {\n            if ($x >\
    \ $max) {\n                $max = $x;\n            }\n        } else {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n\
    \    foreach my $x (@$l) {\n        if (defined $max) {\n            if ($x >\
    \ $max) {\n                $max = $x;\n            }\n        } else {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n\
    \    foreach my $x (@$l) {\n        if (defined $max) {\n            if ($x >\
    \ $max) {\n                $max = $x;\n            }\n        } else {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n\
    \    foreach my $x (@$l) {\n        if (defined $max) {\n            if ($x >\
    \ $max) {\n                $max = $x;\n            }\n        } else {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n\
    \    my $i = 0;\n    for(my $i = 1; $i < @$l; $i++) {\n        if($l->[$i] > $max)\
    \ {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}", " \
    \   my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max and\
    \ $x > $max) {\n            $max = $x;\n        }\n    }\n    return $max;\n}",
  "    my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n      \
    \      $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max;\n   \
    \ my $maxidx = 0;\n    my $maxval = $l->[0];\n    for my $i (1..$#$l) {\n    \
    \    my $val = $l->[$i];\n        if ($val > $maxval) {\n            $maxval =\
    \ $val;\n            $maxidx = $i;\n        }\n    }\n    return $maxval;\n}",
  "    my $max = @$l > 0 ? $l->[-1] : undef;\n    foreach my $e (@$l) {\n        if\
    \ ($e > $max) {\n            $max = $e;\n        }\n    }\n    return $max;\n}",
  "    my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n      \
    \      $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = @$l\
    \ > 0 ? $l->[-1] : undef;\n    foreach my $i (reverse 0 .. $#l) {\n        if\
    \ ($l->[$i] >= $max) {\n            $max = $l->[$i];\n        }\n    }\n    return\
    \ $max;\n}", "    my $max;\n    my $i;\n    for ($i = 0; $i < @$l; $i++) {\n \
    \       if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n    }\n\
    \    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : undef;\n    foreach\
    \ my $e (@$l) {\n        if ($e > $max) {\n            $max = $e;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = undef;\n    foreach my $e ($l) {\n\
    \        if (defined $max and $max < $e) {\n            $max = $e;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n\
    \        if (defined $max) {\n            if ($x > $max) {\n                $max\
    \ = $x;\n            }\n        } else {\n            $max = $x;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n\
    \        if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = $l->[0];\n    my $i = 0;\n    foreach my $x (@$l)\
    \ {\n        if ($x > $max) {\n            $max = $x;\n        }\n        $i++;\n\
    \    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach\
    \ my $e ($l->[-2..-1]) {\n        if ($e > $max) {\n            $max = $e;\n \
    \       }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my\
    \ $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    my $i =\
    \ 0;\n    foreach my $e ($l->[1..$#$l]) {\n        if ($e > $max) {\n        \
    \    $max = $e;\n        }\n        $i++;\n    }\n    return $max;\n}", "    my\
    \ $max = @$l > 0 ? $l->[-1] : undef;\n    foreach my $i (reverse 0 .. $#$l) {\n\
    \        if ($l->[$i] >= $max) {\n            $max = $l->[$i];\n        }\n  \
    \  }\n    return $max;\n}", "    my $max;\n    my $maxidx = 0;\n    for (my $i\
    \ = 0; $i < @$l; $i++) {\n        if ($maxidx < $i) {\n            $max = $l->[$maxidx];\n\
    \            $maxidx = $i;\n        }\n        if ($l->[$i] > $max) {\n      \
    \      $max = $l->[$i];\n            $maxidx = $i;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $e (@$l) {\n        if (defined\
    \ $max and $max > $e) {\n            $max = $e;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined\
    \ $max) {\n            if ($x > $max) {\n                $max = $x;\n        \
    \    }\n        } else {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined\
    \ $max) {\n            if ($x > $max) {\n                $max = $x;\n        \
    \    }\n        } else {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined\
    \ $max) {\n            if ($x > $max) {\n                $max = $x;\n        \
    \    }\n        } else {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = $l->[0];\n    my $i;\n    for ($i = 1; $i < @$l; $i++)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n\
    \    }\n    return $max;\n}", "    my $max;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $maxi;\n    my $maxj;\n    my $maxk;\n    my $max;\n    my $max;\n   \
    \ my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n\
    \    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my\
    \ $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max;\n    my $max",
  "    my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n      \
    \      $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n\
    \    foreach my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max\
    \ = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n\
    \    my $i;\n    for ($i = 1; $i < @$l; $i++) {\n        if ($l->[$i] > $max)\
    \ {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}", " \
    \   my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        my $cmp = $l->[$i]\
    \ <=> $max;\n        if ($cmp < 0) {\n            $max = $l->[$i];\n        }\n\
    \    }\n    return $max;\n}", "    my $max;\n    my $maxidx;\n    my $maxval;\n\
    \    my $i;\n    for ($i = 0; $i < @$l; $i++) {\n        if ($l->[$i] > $max)\
    \ {\n            $max = $l->[$i];\n            $maxidx = $i;\n        }\n    }\n\
    \    return $l->[$maxidx];\n}", "    my $max = -1;\n    foreach my $i (@$l) {\n\
    \        if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined\
    \ $max) {\n            if ($x > $max) {\n                $max = $x;\n        \
    \    }\n        } else {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $elem (@$l) {\n        if (defined\
    \ $max and $max < $elem) {\n            $max = $elem;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if\
    \ ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $elem (@$l) {\n        if (defined\
    \ $max and $elem > $max) {\n            $max = $elem;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = -1;\n    my $maxel;\n    foreach my $el (@$l) {\n\
    \        if ($el > $max) {\n            $max = $el;\n            $maxel = $el;\n\
    \        }\n    }\n    return $maxel;\n}", "    my $max;\n    my $maxidx;\n  \
    \  for (my $i = 0; $i < @$l; $i++) {\n        if ($maxidx < $i) {\n          \
    \  $max = $l->[$maxidx];\n            $maxidx = $i;\n        }\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n            $maxidx = $i;\n       \
    \ }\n    }\n    return $max;\n}", "    my $max = undef;\n    my $maxi = 0;\n \
    \   foreach my $i (0..$#$l) {\n        if ($l->[$i] > $max) {\n            $max\
    \ = $l->[$i];\n            $maxi = $i;\n        }\n    }\n    return $max;\n}",
  "    my $max = undef;\n    foreach my $e ($l) {\n        if (defined $max) {\n \
    \           if ($e > $max) {\n                $max = $e;\n            }\n    \
    \    } else {\n            $max = $e;\n        }\n    }\n    return $max;\n}",
  "    my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n      \
    \      $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n\
    \    foreach my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max\
    \ = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my $max;\n    my $maxidx\
    \ = 0;\n    my $idx = 0;\n    foreach my $i (0 .. $#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n            $maxidx = $i;\n       \
    \ }\n    }\n    return $l->[$maxidx];\n}", "    my $max;\n    my $maxidx;\n  \
    \  for(my $i = 0; $i < @$l; $i++) {\n        if($maxidx < $i) {\n            $max\
    \ = $l->[$maxidx];\n            $maxidx = $i;\n        }\n        if($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n            $maxidx = $i;\n       \
    \ }\n    }\n    return $l->[$maxidx];\n}", "    my $max;\n    my $maxidx = 0;\n\
    \    my $i;\n    for ($i = 0; $i < @$l; $i++) {\n        if ($maxidx < $i) {\n\
    \            $max = $l->[$maxidx];\n            $maxidx = $i;\n        }\n   \
    \     if ($l->[$i] > $max) {\n            $max = $l->[$i];\n            $maxidx\
    \ = $i;\n        }\n    }\n    return $l->[$maxidx];\n}", "    my $max = undef;\n\
    \    foreach my $x (@$l) {\n        if (defined $max) {\n            if ($x >\
    \ $max) {\n                $max = $x;\n            }\n        } else {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n\
    \    foreach my $x (@$l) {\n        if (defined $max) {\n            if ($x >\
    \ $max) {\n                $max = $x;\n            }\n        } else {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = undef;\n\
    \    foreach my $x (@$l) {\n        if (defined $max and $max > $x) {\n      \
    \      $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = @$l\
    \ > 0 ? $l->[-1] : undef;\n    foreach my $e (reverse @$l) {\n        if ($e >\
    \ $max) {\n            $max = $e;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i] >\
    \ $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}",
  "    my $max = undef;\n    foreach my $elem (@$l) {\n        if (defined $max and\
    \ $elem > $max) {\n            $max = $elem;\n        }\n    }\n    return $max;\n\
    }", "    my $max = undef;\n    foreach my $x (@$l) {\n        if (defined $max)\
    \ {\n            if ($x > $max) {\n                $max = $x;\n            }\n\
    \        } else {\n            $max = $x;\n        }\n    }\n    return $max;\n\
    }", "    my $max = undef;\n    foreach my $e (@$l) {\n        if (defined $max)\
    \ {\n            if ($e > $max) {\n                $max = $e;\n            }\n\
    \        } else {\n            $max = $e;\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    my $i = 0;\n    foreach my $e ($l->[1..$#$l])\
    \ {\n        if ($e > $max) {\n            $max = $e;\n        }\n        $i++;\n\
    \    }\n    return $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n\
    \        if (defined $max) {\n            if ($x > $max) {\n                $max\
    \ = $x;\n            }\n        } else {\n            $max = $x;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n\
    \        if (defined $max) {\n            if ($x > $max) {\n                $max\
    \ = $x;\n            }\n        } else {\n            $max = $x;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n\
    \        if (defined $max and $max < $x) {\n            $max = $x;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n\
    \        if (defined $max) {\n            if ($x > $max) {\n                $max\
    \ = $x;\n            }\n        }\n        else {\n            $max = $x;\n  \
    \      }\n    }\n    return $max;\n}", "    my $max = undef;\n    foreach my $x\
    \ (@$l) {\n        if (defined $max) {\n            if ($x > $max) {\n       \
    \         $max = $x;\n            }\n        } else {\n            $max = $x;\n\
    \        }\n    }\n    return $max;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

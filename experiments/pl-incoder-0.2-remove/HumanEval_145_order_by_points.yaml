name: HumanEval_145_order_by_points
language: pl
prompt: "# Write a function which sorts the given list of integers\n# in ascending\
  \ order according to the sum of their digits.\n# Note: if there are several items\
  \ with similar sum of their digits,\n# order them based on their index in original\
  \ list.\n# For example:\nsub order_by_points {\n    my($nums) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&order_by_points;\n\
  \        if(eq_deeply($candidate->([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1234,\
  \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
  \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54])) {\n       \
  \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([0,\
  \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6])) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num}\
    \ = 0;\n        foreach my $digit (split(//, $num)) {\n            $sums{$num}\
    \ += $digit;\n        }\n    }\n    foreach my $num (@$nums) {\n        my $sum\
    \ = $sums{$num};\n        foreach my $digit (split(//, $num)) {\n            $sum\
    \ -= $digit;\n        }\n        if ($sum == 0) {\n            return $num;\n\
    \        }\n    }\n}", "    my $sum = 0;\n    my @nums_sorted = ();\n    foreach\
    \ my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted, $num if\
    \ $sum > 0;\n    }\n    return @nums_sorted;\n}", "    my %sums;\n    foreach\
    \ my $num (@$nums) {\n        $sums{$num} = $num->{sum}\n    }\n    foreach my\
    \ $num (sort {$sums{$b} <=> $sums{$a}} keys %sums) {\n        my $index = $num;\n\
    \        foreach my $num (@$nums) {\n            if ($num->{sum} == $sums{$index})\
    \ {\n                $index = $num;\n            }\n        }\n        push @$nums,\
    \ $index;\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num\
    \ (@$nums) {\n        $sums{$num} = 0;\n        foreach my $digit (split(//, $num))\
    \ {\n            $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach\
    \ my $num (@$nums) {\n        $num = $num - $sums{$num};\n    }\n    return $nums;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n\
    \        foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit\
    \ * $digit;\n        }\n    }\n    foreach my $num (@$nums) {\n        $num->[0]\
    \ = $sums{$num};\n    }\n    foreach my $num (@$nums) {\n        foreach my $digit\
    \ (split(//, $num->[0])) {\n            $num->[0] -= $digit * $digit;\n      \
    \  }\n    }\n    return @$nums;\n}", "    my $sum = 0;\n    my @nums_sorted =\
    \ ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n        push (@nums_sorted,\
    \ $num) if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my $sum =\
    \ 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum\
    \ += $num;\n        push (@nums_sorted, $num) if $sum == $num;\n    }\n    return\
    \ @nums_sorted;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num}\
    \ = 0;\n        foreach my $digit (split(//, $num)) {\n            $sums{$num}\
    \ += $digit * $digit;\n        }\n    }\n    foreach my $num (@$nums) {\n    \
    \    $num->[0] = $sums{$num};\n    }\n    foreach my $num (@$nums) {\n       \
    \ foreach my $digit (split(//, $num->[0])) {\n            $num->[0] -= $digit\
    \ * $digit;\n        }\n    }\n    return @$nums;\n}", "    my %nums_by_digit;\n\
    \    foreach my $num (@$nums) {\n        $nums_by_digit{$num}++;\n    }\n    foreach\
    \ my $digit (sort {$a <=> $b} keys %nums_by_digit) {\n        foreach my $index\
    \ (sort {$a <=> $b} keys %nums_by_digit) {\n            next if $index >= $digit;\n\
    \            next if $nums[$index] == $nums[$digit];\n            $nums[$index]\
    \ = $nums[$digit];\n            $nums[$digit] = $nums[$index];\n        }\n  \
    \  }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n\
    \        $sums{$num} = $num->{sum};\n    }\n    foreach my $num (sort {$sums{$b}\
    \ <=> $sums{$a}} keys %sums) {\n        my $index = $num;\n        foreach my\
    \ $num (@$nums) {\n            next if $num->{sum} != $sums{$index};\n       \
    \     $index = $num;\n        }\n        push @$nums, $index;\n    }\n    return\
    \ @$nums;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num}\
    \ = 0;\n        foreach my $digit (split(//, $num)) {\n            $sums{$num}\
    \ += $digit * $digit;\n        }\n    }\n    foreach my $num (@$nums) {\n    \
    \    $num = $num + $sums{$num};\n    }\n    return @$nums;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum};\n    }\n \
    \   foreach my $num (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n        my\
    \ $point = $sums{$num};\n        my $index = $num->{index};\n        my $num =\
    \ $nums->[$index];\n        $num->{sum} = $point;\n        $num->{index} = $index;\n\
    \    }\n}", "    my %nums_sum;\n    foreach my $num (@$nums) {\n        $nums_sum{$num}\
    \ = $nums_sum{$num} + $num;\n    }\n    foreach my $num (sort { $nums_sum{$b}\
    \ <=> $nums_sum{$a} } keys %nums_sum) {\n        push, $num;\n    }\n    return;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n\
    \        foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit;\n\
    \        }\n    }\n    foreach my $num (@$nums) {\n        my $sum = $sums{$num};\n\
    \        foreach my $digit (split(//, $num)) {\n            $sum -= $digit;\n\
    \        }\n        if ($sum < 0) {\n            my $i = $num;\n            foreach\
    \ my $digit (split(//, $num)) {\n                $i -= $digit;\n            }\n\
    \            $num = $i;\n        }\n    }\n    return @$nums;\n}", "    my %nums_sum;\n\
    \    foreach my $num (@$nums) {\n        $nums_sum{$num} = $nums_sum{$num} + $num;\n\
    \    }\n    foreach my $num (sort { $nums_sum{$b} <=> $nums_sum{$a} } keys %nums_sum)\
    \ {\n        push, $num;\n    }\n    return;\n}", "    my $sum = 0;\n    my @nums_sorted\
    \ = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my $sum = 0;\n\
    \    my @sorted_nums;\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        push @sorted_nums, $num if $sum == $num;\n    }\n    return @sorted_nums;\n\
    }", "    my %nums_sum;\n    foreach my $num (@$nums) {\n        $nums_sum{$num}\
    \ = $num->{sum};\n    }\n    foreach my $num (sort { $nums_sum{$b} <=> $nums_sum{$a}\
    \ } keys %nums_sum) {\n        my $index = $nums_sum{$num};\n        my $num =\
    \ $nums[$index];\n        $nums[$index] = $num;\n    }\n    return @$nums;\n}",
  "    my %nums_by_digit;\n    foreach my $num (@$nums) {\n        my $digits = $num\
    \ / 10;\n        $nums_by_digit{$digits} = $num;\n    }\n    my @sorted_nums =\
    \ ();\n    foreach my $digit (sort keys %nums_by_digit) {\n        push(@sorted_nums,\
    \ $nums_by_digit{$digit});\n    }\n    return @sorted_nums;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my\
    \ $digit (split(//, $num)) {\n            $sums{$num} += $digit * $digit;\n  \
    \      }\n    }\n    foreach my $num (sort { $sums{$b} <=> $sums{$a} } keys %sums)\
    \ {\n        push, $num;\n    }\n    return @$nums;\n}", "    my $sum = 0;\n \
    \   foreach my $num (@$nums) {\n        $sum += $num;\n    }\n    foreach my $num\
    \ (@$nums) {\n        my $point = $num / $sum;\n        my $index = $num - $point\
    \ * $sum;\n        $nums[$index] = $num;\n    }\n    return @$nums;\n}", "   \
    \ my $sum = 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n  \
    \      $sum += $num;\n        push (@nums_sorted, $num) if $sum == $num;\n   \
    \ }\n    return @nums_sorted;\n}", "    my %sums;\n    foreach my $num (@$nums)\
    \ {\n        $sums{$num} = $num->{sum}\n    }\n    foreach my $num (sort { $sums{$a}\
    \ <=> $sums{$b} } keys %sums) {\n        my $index = $num;\n        $index->{index}\
    \ = $nums->[$index];\n    }\n    return @$nums;\n}", "    my %nums_by_digit;\n\
    \    foreach my $num (@$nums) {\n        $nums_by_digit{$num}++;\n    }\n    my\
    \ @sorted_nums = ();\n    foreach my $num (keys %nums_by_digit) {\n        my\
    \ $digit = substr($num, 0, 1);\n        my $num_with_digit = $num + $digit;\n\
    \        my $num_without_digit = $num - $digit;\n        my $num_with_digit_in_sorted_nums\
    \ = $num_with_digit + $num_without_digit;\n        push @sorted_nums, $num_with_digit_in_sorted_nums\
    \ if $num_with_digit_in_sorted_nums > $nums_by_digit{$num};\n    }\n    return\
    \ @sorted_nums;\n}", "    my $sum = 0;\n    foreach my $num (@$nums) {\n     \
    \   $sum += $num;\n    }\n    my @sorted_nums = ();\n    foreach my $num (@$nums)\
    \ {\n        my $digit = $num % 10;\n        my $pos = $sum - $digit;\n      \
    \  push @sorted_nums, $num if $pos == 0;\n    }\n    return @sorted_nums;\n}",
  "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n     \
    \   foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit *\
    \ $digit;\n        }\n    }\n    foreach my $num (@$nums) {\n        $num = $num\
    \ if $sums{$num} <= $sums{$num}{0};\n    }\n    return @$nums;\n}", "    my $sum\
    \ = 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum\
    \ += $num;\n        push @nums_sorted, $num if $sum == $num;\n    }\n    return\
    \ @nums_sorted;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num}\
    \ = $num->{sum};\n    }\n    foreach my $num (sort {$sums{$b} <=> $sums{$a}} keys\
    \ %sums) {\n        my $index = $num;\n        foreach my $num (@$nums) {\n  \
    \          if ($num->{sum} eq $sums{$index}) {\n                $index = $num;\n\
    \            }\n        }\n        push (@$nums, $index);\n    }\n    return @$nums;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n\
    \        foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit\
    \ * $digit;\n        }\n    }\n    foreach my $num (@$nums) {\n        $num =\
    \ $num if $sums{$num} <= $sums{$num}{0};\n    }\n    return @$nums;\n}", "   \
    \ my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum};\n\
    \    }\n    foreach my $num (sort { $sums{$a} <=> $sums{$b} } keys %sums) {\n\
    \        my $i = $num;\n        foreach my $num (@$nums) {\n            next if\
    \ $num->{sum} != $sums{$i};\n            $i = $num;\n        }\n        my $index\
    \ = $num->{index};\n        foreach my $num (@$nums) {\n            next if $num->{index}\
    \ != $index;\n            $num->{index} = $index;\n        }\n    }\n}", "   \
    \ my $sum = 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n  \
    \      $sum += $num;\n        push @nums_sorted, $num if $sum > 0;\n    }\n  \
    \  return @nums_sorted;\n}", "    my %nums_sum;\n    foreach my $num (@$nums)\
    \ {\n        $nums_sum{$num} = $nums_sum{$num} + $num;\n    }\n    foreach my\
    \ $num (sort { $nums_sum{$a} <=> $nums_sum{$b} } keys %nums_sum) {\n        my\
    \ $index = $nums_sum{$num};\n        splice(@$nums, $index, 1);\n        splice(@$nums,\
    \ 0, $num);\n    }\n}", "    my $sum = 0;\n    my @nums_sorted = ();\n    foreach\
    \ my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted, $num if\
    \ $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my %sums;\n    foreach\
    \ my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my $digit (split(//,\
    \ $num)) {\n            $sums{$num} += $digit * $digit;\n        }\n    }\n  \
    \  foreach my $num (@$nums) {\n        $num = $num if $sums{$num} <= $sums{$num}{0};\n\
    \    }\n    return @$nums;\n}", "    my $sum = 0;\n    my @nums_sorted = ();\n\
    \    foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my %nums_by_digit;\n\
    \    foreach my $num (@$nums) {\n        $nums_by_digit{$num}++;\n    }\n    foreach\
    \ my $digit (sort {$a <=> $b} keys %nums_by_digit) {\n        foreach my $num\
    \ (@$nums) {\n            if ($nums_by_digit{$num} eq $digit) {\n            \
    \    push (@$nums, $num);\n                delete $nums_by_digit{$num};\n    \
    \        }\n        }\n    }\n    return @$nums;\n}", "    my %nums_by_digit;\n\
    \    foreach my $num (@$nums) {\n        my $digits = $num / 10;\n        $nums_by_digit{$digits}\
    \ = $num;\n    }\n    my @sorted_nums = ();\n    foreach my $num (sort { $nums_by_digit{$a}\
    \ <=> $nums_by_digit{$b} } keys %nums_by_digit) {\n        push @sorted_nums,\
    \ $nums_by_digit{$num};\n    }\n    return @sorted_nums;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my\
    \ $digit (split(//, $num)) {\n            $sums{$num} += $digit * $digit;\n  \
    \      }\n    }\n    foreach my $num (@$nums) {\n        my $sum = $sums{$num};\n\
    \        my $index = 0;\n        foreach my $digit (split(//, $num)) {\n     \
    \       $sum -= $digit * $digit;\n            if ($sum < 0) {\n              \
    \  $sum = 0;\n                $index++;\n            }\n        }\n        $nums[$index]\
    \ = $num;\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num\
    \ (@$nums) {\n        $sums{$num} = 0;\n        foreach my $digit (split(//, $num))\
    \ {\n            $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach\
    \ my $num (@$nums) {\n        my $sum = $sums{$num};\n        foreach my $digit\
    \ (split(//, $num)) {\n            $sum -= $digit * $digit;\n        }\n     \
    \   if ($sum < 0) {\n            ($sum, $num) = (-$sum, $num);\n        }\n  \
    \  }\n    return $nums;\n}", "    my $sum = 0;\n    my @nums_sorted = ();\n  \
    \  foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my $sum = 0;\n\
    \    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        push @nums_sorted, $num if $sum == $num;\n    }\n    return @nums_sorted;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n\
    \        foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit\
    \ * $digit;\n        }\n    }\n    foreach my $num (@$nums) {\n        my $sum\
    \ = $sums{$num};\n        foreach my $digit (split(//, $num)) {\n            $sum\
    \ -= $digit * $digit;\n        }\n        if ($sum < 0) {\n            $sum =\
    \ -$sum;\n        }\n        my $index = 0;\n        foreach my $digit (split(//,\
    \ $num)) {\n            $index += $digit * $digit;\n        }\n        $index\
    \ *= -1;\n        $index += $sum;\n        my $new_num = $num;\n        $new_num\
    \ =~ s/^([-+]?)(\\d+)/$2$index/;\n        push(@$nums, $new_num);\n    }\n}",
  "    my %nums_sum;\n    foreach my $num (@$nums) {\n        $nums_sum{$num} = $nums_sum{$num}\
    \ + $num;\n    }\n    foreach my $num (sort { $nums_sum{$b} <=> $nums_sum{$a}\
    \ } keys %nums_sum) {\n        push, $num;\n    }\n    return @nums;\n}", "  \
    \  my %sums;\n    my $sum;\n    my $i;\n    my $j;\n    my $k;\n    my $tmp;\n\
    \    foreach $i (@$nums) {\n        $sums{$i} = 0;\n    }\n    foreach $i (@$nums)\
    \ {\n        $sums{$i} += $i;\n    }\n    foreach $i (sort keys %sums) {\n   \
    \     $sum = $sums{$i};\n        $tmp = $i;\n        $j = 0;\n        while ($tmp\
    \ > 0) {\n            $tmp /= 10;\n            $j++;\n        }\n        $k =\
    \ $j;\n        while ($sum > 0) {\n            $sum -= $tmp * $k;\n          \
    \  $k--;\n        }\n        $tmp = $i;\n        $j = 0;\n        while ($tmp\
    \ > 0) {\n            $tmp /= 10;\n            $j++;\n        }\n        $k =\
    \ $j;\n        $tmp = $i;\n        $j = 0;\n        while ($sum > 0) {\n     \
    \       $sum -= $tmp * $k;\n            $k--;\n        }\n        $tmp = $i;\n\
    \        $j = 0;\n        while ($tmp > 0) {\n            $tmp /= 10;\n      \
    \      $j++;\n        }\n        $k = $j;\n        $tmp = $i;\n        $j = 0;\n\
    \        while ($sum > 0) {\n            $sum -= $tmp * $k;\n            $k--;\n\
    \        }\n        $tmp = $i;\n        $j = 0;\n        while ($sum > 0) {\n\
    \            $sum -= $tmp * $k;\n            $k--;\n        }\n        $tmp =\
    \ $i;\n        $j = 0;\n        while ($sum > 0) {\n            $sum -= $tmp *\
    \ $k;\n            $k--;\n        }\n        $tmp = $i;\n        $j = 0;\n   \
    \     while ($sum > 0) {\n            $sum -= $tmp * $k;\n            $k--;\n\
    \        }\n        $tmp = $i;\n        $j = 0;\n        while ($sum > 0) {\n\
    \            $sum -= $tmp * $k;\n            $k--;\n        }\n        $tmp =\
    \ $i;\n        $j = 0;\n        while ($sum > 0) {\n            $sum -= $tmp *\
    \ $k;\n            $k--;\n        }\n        $tmp = $i;\n        $j = 0;\n   \
    \     while ($sum > 0) {\n            $sum -= $tmp * $k;\n            $k--;\n\
    \        }\n        $tmp = $i;\n        $j = 0;\n        while ($sum > 0) {\n\
    \            $sum -= $tmp * $k;\n            $k--;\n        }\n        $tmp =\
    \ $i;\n        $j = 0;\n        while ($sum > 0) {\n            $sum -= $tmp *\
    \ $k;\n            $k--;\n        }\n        $", "    my %sums;\n    foreach my\
    \ $num (@$nums) {\n        $sums{$num} = $num->{sum}\n    }\n    foreach my $num\
    \ (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n        my $index = $num;\n\
    \        foreach my $num (@$nums) {\n            next if $num->{sum} eq $sums{$index};\n\
    \            $index = $num;\n        }\n        my $tmp = $num;\n        $num\
    \ = $num->{index};\n        $num = $tmp;\n    }\n    return $nums;\n}", "    my\
    \ %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach\
    \ my $digit (split(//, $num)) {\n            $sums{$num} += $digit * $digit;\n\
    \        }\n    }\n    foreach my $num (@$nums) {\n        my $key = $sums{$num};\n\
    \        my $index = $nums->index($num);\n        my $tmp = $nums->[$index];\n\
    \        $nums->[$index] = $num;\n        $nums->[$key] = $tmp;\n    }\n}", " \
    \   my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\n\
    \    }\n    foreach my $num (sort { $sums{$a} <=> $sums{$b} } keys %sums) {\n\
    \        my $index = grep { $sums{$_} eq $sums{$num} } keys %sums;\n        splice(@$nums,\
    \ $index, 0, $num);\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach\
    \ my $num (@$nums) {\n        $sums{$num} = $num->{sum} if $num->{sum};\n    }\n\
    \    foreach my $num (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n       \
    \ my $index = $num;\n        $index = $nums->[$index] if $nums->[$index];\n  \
    \      $num->{index} = $index;\n    }\n    return @$nums;\n}", "    my %nums_by_digit;\n\
    \    foreach my $num (@$nums) {\n        $nums_by_digit{$num}++;\n    }\n    my\
    \ @sorted_nums = ();\n    foreach my $num (sort {$nums_by_digit{$b} <=> $nums_by_digit{$a}}\
    \ keys %nums_by_digit) {\n        push @sorted_nums, $num;\n    }\n    return\
    \ @sorted_nums;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num}\
    \ = $num->{sum}\n    }\n    foreach my $num (sort { $sums{$a} <=> $sums{$b} }\
    \ keys %sums) {\n        my $index = $num;\n        foreach my $num (@$nums) {\n\
    \            if ($num->{sum} eq $sums{$index}) {\n                $index = $num;\n\
    \            }\n        }\n        my $tmp = $num;\n        $num = $index;\n \
    \       $num->{index} = $tmp->{index};\n    }\n}", "    my $sum = 0;\n    my @nums_sorted\
    \ = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my\
    \ $digit (split(//, $num)) {\n            $sums{$num} += $digit * $digit;\n  \
    \      }\n    }\n    foreach my $num (sort { $sums{$b} <=> $sums{$a} } keys %sums)\
    \ {\n        my $index = $num;\n        foreach my $digit (split(//, $num)) {\n\
    \            $index *= 10;\n            $index += $digit;\n        }\n       \
    \ push, $index;\n    }\n    return @nums;\n}", "    my $sum = 0;\n    my @nums_sorted\
    \ = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my $sum = 0;\n\
    \    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        push @nums_sorted, $num if $sum > 0;\n    }\n    return @nums_sorted;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n\
    \        foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit;\n\
    \        }\n    }\n    foreach my $num (@$nums) {\n        my $sum = $sums{$num};\n\
    \        foreach my $digit (split(//, $num)) {\n            $sum -= $digit;\n\
    \        }\n        if ($sum == 0) {\n            return $num;\n        }\n  \
    \  }\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num}\
    \ = $num->{sum}\n            if !defined $sums{$num};\n    }\n    foreach my $num\
    \ (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n        my $sum = $sums{$num};\n\
    \        my $index = $num->{index};\n        foreach my $num (@$nums) {\n    \
    \        next unless $num->{index} eq $index;\n            $num->{sum} = $sum;\n\
    \        }\n    }\n}", "    my %sums;\n    foreach my $num (@$nums) {\n      \
    \  $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n         \
    \   $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach my $num (@$nums)\
    \ {\n        my $sum = $sums{$num};\n        my $pos = $sums{$num} % $sum;\n \
    \       my $tmp = $num;\n        $num = $num - $pos;\n        $num = $tmp + $num;\n\
    \    }\n    return @$nums;\n}", "    my %nums_by_digit;\n    foreach my $num (@$nums)\
    \ {\n        $nums_by_digit{$num}++;\n    }\n    foreach my $num (keys %nums_by_digit)\
    \ {\n        my $num_with_digit = $num;\n        $num_with_digit =~ s/^0+//;\n\
    \        $num_with_digit =~ s/^0+//;\n        my $num_with_digit_as_int = int($num_with_digit);\n\
    \        my $num_with_digit_as_string = $num_with_digit;\n        $num_with_digit_as_string\
    \ =~ s/^0+//;\n        $num_with_digit_as_string =~ s/^0+//;\n        my $num_with_digit_as_string_in_int\
    \ = int($num_with_digit_as_string);\n        if ($num_with_digit_as_int > $num_with_digit_as_string_in_int)\
    \ {\n            $num_with_digit = $num_with_digit_as_string;\n        }\n   \
    \     $nums[$num] = $num_with_digit;\n    }\n    return @$nums;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my\
    \ $digit (split(//, $num)) {\n            $sums{$num} += $digit;\n        }\n\
    \    }\n    foreach my $num (@$nums) {\n        my $sum = $sums{$num};\n     \
    \   foreach my $digit (split(//, $num)) {\n            $sum -= $digit;\n     \
    \   }\n        if ($sum < 0) {\n            my $i = $num;\n            foreach\
    \ my $digit (split(//, $num)) {\n                $i /= 10;\n                $i\
    \ *= 10;\n                $i -= $digit;\n            }\n            $num = $i;\n\
    \        }\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num\
    \ (@$nums) {\n        $sums{$num} = 0;\n        foreach my $digit (split(//, $num))\
    \ {\n            $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach\
    \ my $num (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n        my $index =\
    \ $num;\n        foreach my $digit (split(//, $num)) {\n            $index *=\
    \ 10;\n            $index += $digit;\n        }\n        return $index;\n    }\n\
    }", "    my %nums_by_digit;\n    foreach my $num (@$nums) {\n        $nums_by_digit{$num}++;\n\
    \    }\n    foreach my $num (sort { $nums_by_digit{$a} <=> $nums_by_digit{$b}\
    \ } keys %nums_by_digit) {\n        my $index = $nums_by_digit{$num};\n      \
    \  my $new_num = $nums[$index];\n        $nums[$index] = $num;\n        $nums[$new_num]\
    \ = $num;\n    }\n    return @$nums;\n}", "    my %nums_sum;\n    foreach my $num\
    \ (@$nums) {\n        $nums_sum{$num} = $num->{sum};\n    }\n    foreach my $num\
    \ (sort { $nums_sum{$a} <=> $nums_sum{$b} } keys %nums_sum) {\n        my $index\
    \ = $nums_sum{$num};\n        my $num = $nums[$index];\n        $nums[$index]\
    \ = $num;\n    }\n}", "    my %sums;\n    foreach my $num (@$nums) {\n       \
    \ $sums{$num} = $num->{sum}\n    }\n    foreach my $num (sort { $sums{$a} <=>\
    \ $sums{$b} } keys %sums) {\n        my $index = $nums{$num};\n        my $num\
    \ = $nums{$num};\n        splice(@$nums, $index, 1);\n        splice(@$nums, 0,\
    \ $num);\n    }\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num}\
    \ = 0;\n        foreach my $digit (split(//, $num)) {\n            $sums{$num}\
    \ += $digit * $digit;\n        }\n    }\n    foreach my $num (keys %sums) {\n\
    \        my $sum = $sums{$num};\n        foreach my $i (sort {$sums{$b} <=> $sums{$a}}\
    \ keys %$sums) {\n            my $a = $sums{$i};\n            my $b = $sums{$num};\n\
    \            if ($a > $b) {\n                my $tmp = $a;\n                $a\
    \ = $b;\n                $b = $tmp;\n            }\n        }\n        push @$nums,\
    \ $num;\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num (@$nums)\
    \ {\n        $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n\
    \            $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach my\
    \ $num (@$nums) {\n        my $key = $sums{$num};\n        my $index = $num;\n\
    \        foreach my $i (keys %sums) {\n            my $sum = $sums{$i};\n    \
    \        if ($sum == $key) {\n                $index = $i;\n            }\n  \
    \      }\n        $nums[$index] = $num;\n    }\n    return @$nums;\n}", "    my\
    \ %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach\
    \ my $digit (split(//, $num)) {\n            $sums{$num} += $digit;\n        }\n\
    \    }\n    foreach my $num (keys %sums) {\n        my $sum = $sums{$num};\n \
    \       foreach my $i (0 .. $#{$nums}) {\n            my $n = $nums{$i};\n   \
    \         next unless $n == $sum;\n            my $diff = $n - $sum;\n       \
    \     next if $diff == 0;\n            my $pos = $i;\n            my $tmp = $nums{$pos};\n\
    \            $nums{$pos} = $n;\n            $sums{$pos} = $sum;\n            $nums{$i}\
    \ = $tmp;\n        }\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach\
    \ my $num (@$nums) {\n        $sums{$num} = $num->{sum} if $num->{sum};\n    }\n\
    \    foreach my $num (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n       \
    \ my $sum = $sums{$num};\n        foreach my $i (0..$#$nums) {\n            my\
    \ $num = $nums->[$i];\n            if ($num->{sum} != $sum) {\n              \
    \  my $j = $i;\n                while ($j > 0 && $nums->[$j-1]->{sum} != $sum)\
    \ {\n                    $nums->[$j] = $nums->[$j-1];\n                    $j--;\n\
    \                }\n                $nums->[$j] = $num;\n            }\n     \
    \   }\n    }\n}", "    my %nums_sum;\n    foreach my $num (@$nums) {\n       \
    \ $nums_sum{$num} = $nums_sum{$num} + $num;\n    }\n    foreach my $num (sort\
    \ {$nums_sum{$b} <=> $nums_sum{$a}} keys %nums_sum) {\n        push(@$nums, $num);\n\
    \    }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n\
    \        $sums{$num} = $num->{sum}\n    }\n    foreach my $num (sort { $sums{$b}\
    \ <=> $sums{$a} } keys %sums) {\n        my $index = $num;\n        foreach my\
    \ $num (@$nums) {\n            if ($num->{sum} eq $sums{$index}) {\n         \
    \       $index = $num;\n            }\n        }\n        my $tmp = $num;\n  \
    \      $num = $index;\n        $num->{index} = $tmp->{index};\n    }\n}", "  \
    \  my %nums_by_digit;\n    foreach my $num (@$nums) {\n        my $digits = $num\
    \ / 10;\n        $nums_by_digit{$digits} = $num;\n    }\n    my @sorted_nums =\
    \ ();\n    foreach my $digit (sort keys %nums_by_digit) {\n        push @sorted_nums,\
    \ $nums_by_digit{$digit};\n    }\n    return @sorted_nums;\n}", "    my $sum =\
    \ 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum\
    \ += $num;\n        push @nums_sorted, $num if $sum == $num;\n    }\n    return\
    \ @nums_sorted;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num}\
    \ = 0;\n        foreach my $digit (split(//, $num)) {\n            $sums{$num}\
    \ += $digit * $digit;\n        }\n    }\n    foreach my $num (sort { $sums{$b}\
    \ <=> $sums{$a} } keys %sums) {\n        my $index = grep { $sums{$_} eq $sums{$num}\
    \ } @$nums;\n        splice(@$nums, $index, 1);\n        push(@$nums, $num);\n\
    \    }\n    return $nums;\n}", "    my $sum = 0;\n    my @nums_sorted = ();\n\
    \    foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum};\n    }\n \
    \   foreach my $key (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n        my\
    \ $num = $sums{$key};\n        my $index = $key;\n        foreach my $num (@$nums)\
    \ {\n            next unless $num->{sum} eq $num;\n            my $diff = $num->{sum}\
    \ - $num;\n            if ($diff == 0) {\n                next;\n            }\n\
    \            if ($diff < 0) {\n                $index = $num;\n            }\n\
    \        }\n        my $new_num = $nums->[$index];\n        $nums->[$index] =\
    \ $nums->[$index + 1];\n        $nums->[$index + 1] = $new_num;\n    }\n}", " \
    \   my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\n\
    \    }\n    foreach my $num (sort {$sums{$b} <=> $sums{$a}} keys %sums) {\n  \
    \      push @$nums, $num;\n    }\n    return @$nums;\n}", "    my %sums;\n   \
    \ foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\n    }\n    foreach\
    \ my $num (sort {$sums{$b} <=> $sums{$a}} keys %sums) {\n        my $index = $num;\n\
    \        foreach my $num (@$nums) {\n            if ($num->{sum} eq $sums{$index})\
    \ {\n                $index = $num;\n            }\n        }\n        my $tmp\
    \ = $num;\n        $num = $index;\n        $num->{index} = $tmp;\n    }\n}", " \
    \   my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\
    \ if $num->{sum};\n    }\n    foreach my $num (sort {$sums{$b} <=> $sums{$a}}\
    \ keys %sums) {\n        my $index = $num;\n        foreach my $num (@$nums) {\n\
    \            next if $num->{sum} != $sums{$index};\n            $index++;\n  \
    \      }\n        push @$nums, $num;\n    }\n    return @$nums;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\n    }\n  \
    \  foreach my $num (sort { $sums{$a} <=> $sums{$b} } keys %sums) {\n        my\
    \ $index = $nums{$num};\n        splice(@$nums, $index, 1);\n        splice(@$nums,\
    \ 0, $num);\n    }\n}", "    my %sums;\n    foreach my $num (@$nums) {\n     \
    \   $sums{$num} = $num->{sum};\n    }\n    foreach my $num (sort {$sums{$b} <=>\
    \ $sums{$a}} keys %sums) {\n        push @$nums, $num->{num};\n    }\n    return\
    \ @$nums;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num}\
    \ = 0;\n        foreach my $digit (split(//, $num)) {\n            $sums{$num}\
    \ += $digit * $digit;\n        }\n    }\n    foreach my $num (sort { $sums{$b}\
    \ <=> $sums{$a} } keys %sums) {\n        my $index = 0;\n        foreach my $digit\
    \ (split(//, $num)) {\n            $index += $digit * $digit;\n        }\n   \
    \     my $new_num = $nums[$index];\n        $nums[$index] = $num;\n        $nums[$index\
    \ + 1] = $new_num;\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach\
    \ my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my $digit (split(//,\
    \ $num)) {\n            $sums{$num} += $digit;\n        }\n    }\n    foreach\
    \ my $num (@$nums) {\n        $num->[0] = $sums{$num};\n    }\n    foreach my\
    \ $num (@$nums) {\n        my $sum = 0;\n        foreach my $digit (split(//,\
    \ $num->[0])) {\n            $sum += $digit;\n        }\n        $num->[0] = $sum;\n\
    \    }\n    return sort { $a->[0] <=> $b->[0] } @$nums;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum};\n    }\n \
    \   foreach my $num (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n        my\
    \ $index = $num;\n        foreach my $num (@$nums) {\n            if ($num->{sum}\
    \ eq $sums{$index}) {\n                $index = $num;\n            }\n       \
    \ }\n        my $tmp = $num;\n        $num = $index;\n        $num = $tmp;\n \
    \   }\n    return @$nums;\n}", "    my %nums_sum;\n    foreach my $num (@$nums)\
    \ {\n        $nums_sum{$num} = $num->{sum};\n    }\n    foreach my $num (sort\
    \ { $nums_sum{$a} <=> $nums_sum{$b} } keys %nums_sum) {\n        my $index = $nums_sum{$num};\n\
    \        my $num = $nums[$index];\n        $nums[$index] = $num;\n    }\n}", " \
    \   my $sum = 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n\
    \        $sum += $num;\n        push @nums_sorted, $num if $sum == $num;\n   \
    \ }\n    return @nums_sorted;\n}", "    my %sums;\n    foreach my $num (@$nums)\
    \ {\n        $sums{$num} = $num->{sum};\n    }\n    foreach my $num (sort {$sums{$b}\
    \ <=> $sums{$a}} keys %sums) {\n        my $index = $num;\n        foreach my\
    \ $num (@$nums) {\n            next unless $num->{sum} eq $sums{$index};\n   \
    \         $index = $num;\n        }\n        my $new_num = $nums->[$index];\n\
    \        $new_num->{index} = $index;\n        $new_num->{sum} = $sums{$index};\n\
    \        $new_num->{value} = $num->{value};\n        $new_num->{count} = $num->{count};\n\
    \        $new_num->{sum} = $sums{$index};\n        push, $new_num;\n    }\n}",
  "    my $sum = 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n \
    \       $sum += $num;\n        push @nums_sorted, $num if $sum == $num;\n    }\n\
    \    return @nums_sorted;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n\
    \        $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n   \
    \         $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach my $num\
    \ (@$nums) {\n        my $sum = $sums{$num};\n        my $index = 0;\n       \
    \ foreach my $digit (split(//, $num)) {\n            $sum -= $digit * $digit;\n\
    \            $sums{$num} = $sum;\n            $index++;\n        }\n        $nums[$index]\
    \ = $num;\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num\
    \ (@$nums) {\n        $sums{$num} = $num->{sum};\n    }\n    foreach my $num (sort\
    \ {$sums{$b} <=> $sums{$a}} keys %sums) {\n        push, $num;\n    }\n    return;\n\
    }", "    my $sum = 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums)\
    \ {\n        $sum += $num;\n        push @nums_sorted, $num if $sum == $num;\n\
    \    }\n    return @nums_sorted;\n}", "    my %sums;\n    foreach my $num (@$nums)\
    \ {\n        $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n\
    \            $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach my\
    \ $num (@$nums) {\n        $num->[0] = $sums{$num};\n    }\n    foreach my $num\
    \ (@$nums) {\n        $num->[0] <=> $num->[1];\n    }\n}", "    my $sum = 0;\n\
    \    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        push (@nums_sorted, $num) if $sum == $num;\n    }\n    return @nums_sorted;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\n\
    \    }\n    foreach my $num (sort {$sums{$b} <=> $sums{$a}} keys %sums) {\n  \
    \      my $index = $num;\n        foreach my $num (@$nums) {\n            if ($num->{sum}\
    \ eq $sums{$index}) {\n                $index = $num;\n            }\n       \
    \ }\n        push @$nums, $index;\n    }\n    return @$nums;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my\
    \ $digit (split(//, $num)) {\n            $sums{$num} += $digit * $digit;\n  \
    \      }\n    }\n    foreach my $num (@$nums) {\n        my $sum = $sums{$num};\n\
    \        foreach my $digit (split(//, $num)) {\n            $sum -= $digit * $digit;\n\
    \        }\n        if ($sum < 0) {\n            my $tmp = $num;\n           \
    \ $num = $sum;\n            $sum = $tmp;\n        }\n        $nums{$sum} = $num;\n\
    \    }\n    return sort { $a <=> $b } keys %sums;\n}", "    my %nums_sum;\n  \
    \  foreach my $num (@$nums) {\n        $nums_sum{$num} = $nums_sum{$num} + $num;\n\
    \    }\n    foreach my $num (sort { $nums_sum{$a} <=> $nums_sum{$b} } keys %nums_sum)\
    \ {\n        push, $num;\n    }\n    return;\n}", "    my %nums_sum;\n    foreach\
    \ my $num (@$nums) {\n        $nums_sum{$num} = $num->{sum};\n    }\n    foreach\
    \ my $num (sort { $nums_sum{$a} <=> $nums_sum{$b} } keys %nums_sum) {\n      \
    \  my $index = $nums_sum{$num};\n        my $num = $nums[$index];\n        $nums[$index]\
    \ = $num;\n    }\n    return @$nums;\n}", "    my $sum = 0;\n    my @nums_sorted\
    \ = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my\
    \ $digit (split(//, $num)) {\n            $sums{$num} += $digit;\n        }\n\
    \    }\n    foreach my $num (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n\
    \        my $index = $num;\n        foreach my $digit (split(//, $num)) {\n  \
    \          $index -= $digit * $digit;\n        }\n        return $index;\n   \
    \ }\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} =\
    \ 0;\n        foreach my $digit (split(//, $num)) {\n            $sums{$num} +=\
    \ $digit;\n        }\n    }\n    foreach my $num (keys %sums) {\n        my $sum\
    \ = $sums{$num};\n        foreach my $i (sort {$sum <=> $sums{$b}} keys %$sums)\
    \ {\n            my $a = $sums{$i};\n            my $b = $sums{$num};\n      \
    \      if ($a < $b) {\n                my $tmp = $a;\n                $a = $b;\n\
    \                $b = $tmp;\n            }\n        }\n        push, $num;\n \
    \   }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n\
    \        $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n   \
    \         $sums{$num} += $digit;\n        }\n    }\n    foreach my $num (@$nums)\
    \ {\n        $num->[0] = $sums{$num};\n    }\n    foreach my $num (@$nums) {\n\
    \        $num->[0] = $num->[0] < 0 ? $num->[0]*-1 : $num->[0];\n    }\n    foreach\
    \ my $num (@$nums) {\n        my $sum = 0;\n        foreach my $digit (split(//,\
    \ $num->[0])) {\n            $sum += $digit;\n        }\n        $num->[0] = $sum;\n\
    \    }\n    return @$nums;\n}", "    my $sum = 0;\n    my @nums_sorted = ();\n\
    \    foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum > 0;\n    }\n    return @nums_sorted;\n}", "    my %sums;\n   \
    \ foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\n    }\n    foreach\
    \ my $num (sort {$sums{$b} <=> $sums{$a}} keys %sums) {\n        push(@$nums,\
    \ $num);\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num (@$nums)\
    \ {\n        $sums{$num} = $num->{sum}\n    }\n    foreach my $num (sort { $sums{$a}\
    \ <=> $sums{$b} } keys %sums) {\n        my $index = $num;\n        $index = $index->{index};\n\
    \        my $sum = $sums{$num};\n        foreach my $num (@$nums) {\n        \
    \    if ($num->{index} eq $index) {\n                $num->{sum} = $sum;\n   \
    \         }\n        }\n    }\n}", "    my %nums_by_point;\n    foreach my $num\
    \ (@$nums) {\n        $nums_by_point{$num}++;\n    }\n    foreach my $num (keys\
    \ %nums_by_point) {\n        my $point = $nums_by_point{$num};\n        foreach\
    \ my $i (0 .. $point) {\n            my $j = 1 + $i;\n            my $tmp = $nums[$j];\n\
    \            $nums[$j] = $nums[$i];\n            $nums[$i] = $tmp;\n        }\n\
    \    }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n\
    \        $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n   \
    \         $sums{$num} += $digit;\n        }\n    }\n    foreach my $num (sort\
    \ { $sums{$b} <=> $sums{$a} } keys %sums) {\n        my $index = grep { $sums{$_}\
    \ == $sums{$num} } keys %sums;\n        splice(@$nums, $index, 0, $num);\n   \
    \ }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n\
    \        $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n   \
    \         $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach my $num\
    \ (@$nums) {\n        $num->[0] = $sums{$num};\n    }\n    return sort { $a->[0]\
    \ <=> $b->[0] } @$nums;\n}", "    my %nums_sum;\n    foreach my $num (@$nums)\
    \ {\n        $nums_sum{$num} = $num->{sum};\n    }\n    foreach my $num (sort\
    \ { $nums_sum{$b} <=> $nums_sum{$a} } keys %nums_sum) {\n        my $index = $nums_sum{$num};\n\
    \        $nums[$index] = $num;\n    }\n    return @$nums;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\n    }\n  \
    \  foreach my $num (sort { $sums{$a} <=> $sums{$b} } keys %sums) {\n        my\
    \ $index = $num;\n        $index->{index} = $nums->[$index];\n    }\n    return\
    \ map { $_->{index} } (sort { $a->{sum} <=> $b->{sum} } @$nums);\n}", "    my\
    \ %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum};\n\
    \    }\n    foreach my $num (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n\
    \        my $index = $num;\n        foreach my $num (@$nums) {\n            if\
    \ ($num->{sum} eq $sums{$index}) {\n                $index = $num;\n         \
    \   }\n        }\n        push, $num;\n    }\n}", "    my %sums;\n    foreach\
    \ my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my $digit (split(//,\
    \ $num)) {\n            $sums{$num} += $digit * $digit;\n        }\n    }\n  \
    \  foreach my $num (@$nums) {\n        $num->[0] = $sums{$num};\n    }\n    foreach\
    \ my $num (@$nums) {\n        $num->[0] <=> $num->[1];\n    }\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my\
    \ $digit (split(//, $num)) {\n            $sums{$num} += $digit;\n        }\n\
    \    }\n    foreach my $num (@$nums) {\n        $num->[0] = $sums{$num};\n   \
    \ }\n    foreach my $num (@$nums) {\n        foreach my $digit (split(//, $num->[0]))\
    \ {\n            $num->[0] -= $digit;\n        }\n    }\n    return $nums;\n}",
  "    my %nums_by_digit;\n    foreach my $num (@$nums) {\n        my $digits = $num\
    \ / 10;\n        $nums_by_digit{$digits} = $num;\n    }\n    my @sorted_nums =\
    \ ();\n    foreach my $digit (sort {$a <=> $b} keys %nums_by_digit) {\n      \
    \  push @sorted_nums, $nums_by_digit{$digit};\n    }\n    return @sorted_nums;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n\
    \        foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit\
    \ * $digit;\n        }\n    }\n    foreach my $num (@$nums) {\n        $num->[0]\
    \ = $sums{$num};\n    }\n    foreach my $num (@$nums) {\n        foreach my $digit\
    \ (split(//, $num->[0])) {\n            $num->[0] -= $digit * $digit;\n      \
    \  }\n    }\n    return $nums;\n}", "    my %sums;\n    foreach my $num (@$nums)\
    \ {\n        $sums{$num} = $num->{sum};\n    }\n    foreach my $num (sort { $sums{$a}\
    \ <=> $sums{$b} } keys %sums) {\n        my $index = $num;\n        foreach my\
    \ $num (@$nums) {\n            if ($num->{sum} eq $sums{$index}) {\n         \
    \       $index = $num;\n            }\n        }\n        push @$nums, $index;\n\
    \    }\n    return @$nums;\n}", "    my %nums_by_digit;\n    foreach my $num (@$nums)\
    \ {\n        my $digits = $num / 10;\n        $nums_by_digit{$digits} = $num;\n\
    \    }\n    foreach my $digit (sort {$a <=> $b} keys %nums_by_digit) {\n     \
    \   my $num = $nums_by_digit{$digit};\n        push @$nums, $num;\n    }\n   \
    \ return @$nums;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n       \
    \ $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n          \
    \  $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach my $num (@$nums)\
    \ {\n        $num->[0] = $sums{$num};\n    }\n    foreach my $num (@$nums) {\n\
    \        my $sum = 0;\n        foreach my $digit (split(//, $num->[0])) {\n  \
    \          $sum += $digit;\n        }\n        $num->[0] = $sum;\n    }\n    return\
    \ @$nums;\n}", "    my %nums_sum;\n    foreach my $num (@$nums) {\n        $nums_sum{$num}\
    \ = $num->{sum}\n    }\n    foreach my $num (sort {$nums_sum{$b} <=> $nums_sum{$a}}\
    \ keys %nums_sum) {\n        push(@$nums, $num);\n    }\n    return $nums;\n}",
  "    my $sum = 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n \
    \       $sum += $num;\n        push @nums_sorted, $num if $sum == $num;\n    }\n\
    \    return @nums_sorted;\n}", "    my %nums_sum;\n    foreach my $num (@$nums)\
    \ {\n        $nums_sum{$num} = $nums_sum{$num} + $num;\n    }\n    foreach my\
    \ $num (sort { $nums_sum{$b} <=> $nums_sum{$a} } keys %nums_sum) {\n        my\
    \ $index = $nums_sum{$num};\n        my $tmp = $nums[$index];\n        $nums[$index]\
    \ = $num;\n        $nums[$tmp] = $index;\n    }\n    return @$nums;\n}", "   \
    \ my $sum = 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n  \
    \      $sum += $num;\n        push @nums_sorted, $num if $sum == $num;\n    }\n\
    \    return @nums_sorted;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n\
    \        $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n   \
    \         $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach my $num\
    \ (@$nums) {\n        my $sum = $sums{$num};\n        foreach my $digit (split(//,\
    \ $num)) {\n            $sum -= $digit * $digit;\n        }\n        if ($sum\
    \ < 0) {\n            $sum = -$sum;\n        }\n        my $index = 0;\n     \
    \   foreach my $digit (split(//, $num)) {\n            $index += $digit * $digit;\n\
    \        }\n        $index += $sum;\n        $index = int($index / 10);\n    \
    \    $index += 1;\n        my $tmp = $nums[$index];\n        $nums[$index] = $num;\n\
    \        $nums[$index + 1] = $tmp;\n    }\n    return @$nums;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my\
    \ $digit (split(//, $num)) {\n            $sums{$num} += $digit * $digit;\n  \
    \      }\n    }\n    foreach my $num (@$nums) {\n        $num->[0] = $sums{$num};\n\
    \    }\n    return sort { $a->[0] <=> $b->[0] } @$nums;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my\
    \ $digit (split(//, $num)) {\n            $sums{$num} += $digit * $digit;\n  \
    \      }\n    }\n    foreach my $num (@$nums) {\n        my $sum = $sums{$num};\n\
    \        foreach my $digit (split(//, $num)) {\n            $sum -= $digit * $digit;\n\
    \        }\n        if ($sum == 0) {\n            return $num;\n        }\n  \
    \  }\n}", "    my $sum = 0;\n    my @nums_sorted = ();\n    my $index = 0;\n \
    \   foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $index;\n        $index++;\n    }\n    return @nums_sorted;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n\
    \        foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit\
    \ * $digit;\n        }\n    }\n    foreach my $num (@$nums) {\n        $num->[0]\
    \ = $sums{$num};\n    }\n    foreach my $num (@$nums) {\n        my $sum = 0;\n\
    \        foreach my $digit (split(//, $num->[0])) {\n            $sum += $digit\
    \ * $digit;\n        }\n        $num->[0] = $sum;\n    }\n    return @$nums;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n\
    \        foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit\
    \ * $digit;\n        }\n    }\n    foreach my $num (@$nums) {\n        my $sum\
    \ = $sums{$num};\n        foreach my $digit (split(//, $num)) {\n            $sum\
    \ -= $digit * $digit;\n        }\n        if ($sum < 0) {\n            $sum =\
    \ -$sum;\n        }\n        my $index = $num;\n        $index -= $sum;\n    \
    \    $index *= 10;\n        $index += $sum;\n        $index -= $sum;\n       \
    \ $index *= 10;\n        $index += $sum;\n        $index -= $sum;\n        $index\
    \ *= 10;\n        $index += $sum;\n        $index -= $sum;\n        $index *=\
    \ 10;\n        $index += $sum;\n        $index -= $sum;\n        $index *= 10;\n\
    \        $index += $sum;\n        $index -= $sum;\n        $index *= 10;\n   \
    \     $index += $sum;\n        $index -= $sum;\n        $index *= 10;\n      \
    \  $index += $sum;\n        $index -= $sum;\n        $index *= 10;\n        $index\
    \ += $sum;\n        $index -= $sum;\n        $index *= 10;\n        $index +=\
    \ $sum;\n        $index -= $sum;\n        $index *= 10;\n        $index += $sum;\n\
    \        $index -= $sum;\n        $index *= 10;\n        $index += $sum;\n   \
    \     $index -= $sum;\n        $index *= 10;\n        $index += $sum;\n      \
    \  $index -= $sum;\n        $index *= 10;\n        $index += $sum;\n        $index\
    \ -= $sum;\n        $index *= 10;\n        $index += $sum;\n        $index -=\
    \ $sum;\n        $index *= 10;\n        $index += $sum;\n        $index -= $sum;\n\
    \        $index *= 10;\n        $index += $sum;\n        $index -= $sum;\n   \
    \     $index *= 10;\n        $index += $sum;\n        $index -= $sum;\n      \
    \  $index *= 10;\n        $index += $sum;\n        $index -= $sum;\n        $index\
    \ *= 10;\n        $index += $sum;\n        $index -= $sum;\n        $index *=\
    \ 10;\n        $index += $sum;\n        $index -= $sum;\n        $index *= 10;",
  "    my $sum = 0;\n    my @nums_sorted = ();\n    my $index = 0;\n    foreach my\
    \ $num (@$nums) {\n        $sum += $num;\n        $nums_sorted[$index] = $num\
    \ if $sum == $num;\n        $index++;\n    }\n    return @nums_sorted;\n}", " \
    \   my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n    \
    \    foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit\
    \ * $digit;\n        }\n    }\n    foreach my $num (keys %sums) {\n        my\
    \ $sum = $sums{$num};\n        foreach my $i (sort {$sum <=> $sums{$b}} keys %sums)\
    \ {\n            my $a = $sums{$i};\n            my $b = $sums{$num};\n      \
    \      if ($a < $b) {\n                my ($i, $j) = @{$nums}[$i..$j];\n     \
    \           @$nums[$i..$j] = @$nums[$j..$i];\n                @$nums[$j..$i] =\
    \ @$nums[$i..$j];\n                @$nums[$i..$j] = ($i, $j);\n            }\n\
    \        }\n    }\n    return @$nums;\n}", "    my $sum = 0;\n    my @nums_sorted\
    \ = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n        push (@nums_sorted,\
    \ $num) if $sum > 0;\n    }\n    return @nums_sorted;\n}", "    my %sums;\n  \
    \  foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\n    }\n    foreach\
    \ my $num (sort {$sums{$b} <=> $sums{$a}} keys %sums) {\n        push(@$nums,\
    \ $num);\n    }\n    return $nums;\n}", "    my %sums;\n    foreach my $num (@$nums)\
    \ {\n        $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n\
    \            $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach my\
    \ $num (@$nums) {\n        $num->[0] = $sums{$num};\n    }\n    return sort {\
    \ $a->[0] <=> $b->[0] } @$nums;\n}", "    my $sum = 0;\n    my @nums_sorted =\
    \ ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\n    }\n  \
    \  foreach my $num (sort { $sums{$a} <=> $sums{$b} } keys %sums) {\n        my\
    \ $index = $num;\n        foreach my $num (@$nums) {\n            if ($num->{sum}\
    \ eq $sums{$index}) {\n                $index = $num;\n            }\n       \
    \ }\n        my $tmp = $num;\n        $num = $index;\n        $num = $tmp;\n \
    \   }\n    return @$nums;\n}", "    my %nums_sum;\n    foreach my $num (@$nums)\
    \ {\n        $nums_sum{$num} = $num->{sum};\n    }\n    foreach my $num (sort\
    \ { $nums_sum{$a} <=> $nums_sum{$b} } keys %nums_sum) {\n        my $index = $nums_sum{$num};\n\
    \        my $num = $nums[$index];\n        $nums[$index] = $num;\n    }\n}", " \
    \   my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\
    \ if $num->{sum};\n    }\n    foreach my $num (sort { $sums{$b} <=> $sums{$a}\
    \ } keys %sums) {\n        my $sum = $sums{$num};\n        my $index = $num;\n\
    \        foreach my $num (@$nums) {\n            next if $num->{sum} != $sum;\n\
    \            $index = $num;\n        }\n        my $new_num = $nums[$index];\n\
    \        $new_num->{sum} = $sum;\n        $new_num->{index} = $index;\n    }\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n\
    \        foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit;\n\
    \        }\n    }\n    foreach my $num (@$nums) {\n        my $sum = $sums{$num};\n\
    \        foreach my $digit (split(//, $num)) {\n            $sum -= $digit;\n\
    \        }\n        if ($sum < 0) {\n            ($sum, $num) = (-$sum, $num);\n\
    \        }\n    }\n    return $nums;\n}", "    my %sums;\n    foreach my $num\
    \ (@$nums) {\n        $sums{$num} = 0;\n        foreach my $digit (split(//, $num))\
    \ {\n            $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach\
    \ my $num (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n        my $index =\
    \ $num;\n        foreach my $digit (split(//, $num)) {\n            $index -=\
    \ $digit * $digit;\n        }\n        return $index;\n    }\n    return -1;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum};\n\
    \    }\n    foreach my $num (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n\
    \        my $index = $num;\n        $index = $nums->[$index]{index} if $nums->[$index]{index};\n\
    \        my $sum = $sums{$num};\n        foreach my $num (@$nums) {\n        \
    \    $num->{sum} = $sum;\n        }\n    }\n}", "    my %nums_sum;\n    foreach\
    \ my $num (@$nums) {\n        $nums_sum{$num} = $num->{sum};\n    }\n    foreach\
    \ my $num (sort { $nums_sum{$a} <=> $nums_sum{$b} } keys %nums_sum) {\n      \
    \  my $index = $nums_sum{$num};\n        my $num = $nums[$index];\n        $nums[$index]\
    \ = $num;\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num\
    \ (@$nums) {\n        $sums{$num} = 0;\n        foreach my $digit (split(//, $num))\
    \ {\n            $sums{$num} += $digit;\n        }\n    }\n    foreach my $num\
    \ (@$nums) {\n        $num->[0] = $sums{$num};\n    }\n    foreach my $num (@$nums)\
    \ {\n        $num->[0] <=> $num->[1];\n    }\n}", "    my %nums_by_digit;\n  \
    \  foreach my $num (@$nums) {\n        $nums_by_digit{$num}++;\n    }\n    foreach\
    \ my $num (sort { $nums_by_digit{$b} <=> $nums_by_digit{$a} } keys %nums_by_digit)\
    \ {\n        my $digit = $nums_by_digit{$num};\n        my $index = $num - $digit;\n\
    \        my $new_num = $nums[$index];\n        $nums[$index] = $num;\n       \
    \ $nums[$new_num] = $num;\n    }\n    return @$nums;\n}", "    my $sum = 0;\n\
    \    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        push @nums_sorted, $num if $sum == $num;\n    }\n    return @nums_sorted;\n\
    }", "    my %nums_sum;\n    foreach my $num (@$nums) {\n        $nums_sum{$num}\
    \ = $num->{sum}\n    }\n    foreach my $num (sort {$nums_sum{$b} <=> $nums_sum{$a}}\
    \ keys %nums_sum) {\n        my $index = $nums_sum{$num};\n        $num->{index}\
    \ = $index;\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num\
    \ (@$nums) {\n        $sums{$num} = 0;\n        foreach my $digit (split(//, $num))\
    \ {\n            $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach\
    \ my $num (@$nums) {\n        my $sum = $sums{$num};\n        foreach my $digit\
    \ (split(//, $num)) {\n            $sum -= $digit * $digit;\n        }\n     \
    \   if ($sum < 0) {\n            $sum = -$sum;\n        }\n        my $index =\
    \ 0;\n        foreach my $digit (split(//, $num)) {\n            $sum -= $digit\
    \ * $digit;\n            if ($sum < 0) {\n                $sum = -$sum;\n    \
    \        }\n            $index++;\n        }\n        $nums[$index] = $num;\n\
    \    }\n    return @$nums;\n}", "    my %sums;\n    my $sum = 0;\n    foreach\
    \ my $num (@$nums) {\n        $sum += $num;\n        $sums{$sum} = $num;\n   \
    \ }\n    foreach my $sum (sort keys %sums) {\n        my $num = $sums{$sum};\n\
    \        push, $num;\n    }\n    return @nums;\n}", "    my %nums_sum;\n    foreach\
    \ my $num (@$nums) {\n        $nums_sum{$num} = $num->{sum};\n    }\n    foreach\
    \ my $num (sort {$nums_sum{$b} <=> $nums_sum{$a}} keys %nums_sum) {\n        my\
    \ $index = $nums_sum{$num};\n        my $num = $nums[$index];\n        $nums[$index]\
    \ = $num;\n    }\n}", "    my %sums;\n    foreach my $num (@$nums) {\n       \
    \ $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n          \
    \  $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach my $num (sort\
    \ { $sums{$b} <=> $sums{$a} } keys %sums) {\n        my $sum = $sums{$num};\n\
    \        foreach my $digit (split(//, $num)) {\n            $sum -= $digit * $digit;\n\
    \        }\n        if ($sum == 0) {\n            return $num;\n        }\n  \
    \  }\n    return undef;\n}", "    my %nums_sum;\n    foreach my $num (@$nums)\
    \ {\n        $nums_sum{$num} = $nums_sum{$num} + $num;\n    }\n    foreach my\
    \ $num (sort { $nums_sum{$b} <=> $nums_sum{$a} } keys %nums_sum) {\n        push\
    \ @$nums, $num;\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach my\
    \ $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my $digit (split(//,\
    \ $num)) {\n            $sums{$num} += $digit * $digit;\n        }\n    }\n  \
    \  foreach my $num (@$nums) {\n        my $sum = $sums{$num};\n        foreach\
    \ my $digit (split(//, $num)) {\n            $sum -= $digit * $digit;\n      \
    \  }\n        if ($sum == 0) {\n            return $num;\n        }\n    }\n}",
  "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum};\n\
    \    }\n    foreach my $num (sort { $sums{$a} <=> $sums{$b} } keys %sums) {\n\
    \        my $index = $num;\n        $index = $nums{$index};\n        $num->{index}\
    \ = $index;\n    }\n    return @$nums;\n}", "    my %nums_sum;\n    foreach my\
    \ $num (@$nums) {\n        $nums_sum{$num} = $nums_sum{$num} + $num;\n    }\n\
    \    foreach my $num (sort { $nums_sum{$a} <=> $nums_sum{$b} } keys %nums_sum)\
    \ {\n        push, $num;\n    }\n    return;\n}", "    my $sum = 0;\n    my @nums_sorted\
    \ = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my %nums_sum;\n\
    \    foreach my $num (@$nums) {\n        $nums_sum{$num} = $nums_sum{$num} + $num;\n\
    \    }\n    foreach my $num (sort { $nums_sum{$a} <=> $nums_sum{$b} } keys %nums_sum)\
    \ {\n        my $index = grep { $nums_sum{$_} eq $nums_sum{$num} } @$nums;\n \
    \       splice(@$nums, $index, 1);\n        push(@$nums, $num);\n    }\n}", " \
    \   my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n    \
    \    foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit\
    \ * $digit;\n        }\n    }\n    foreach my $num (@$nums) {\n        my $sum\
    \ = $sums{$num};\n        my $index = grep { $sums{$_} >= $sum } keys %sums;\n\
    \        my $pos = $index - 1;\n        my $tmp = $num;\n        $num = $nums[$pos];\n\
    \        $nums[$pos] = $tmp;\n    }\n    return @$nums;\n}", "    my $sum = 0;\n\
    \    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        push @nums_sorted, $num if $sum == $num;\n    }\n    return @nums_sorted;\n\
    }", "    my %nums_by_digit;\n    foreach my $num (@$nums) {\n        my $digits\
    \ = $num / 10;\n        my $sum = $num % 10;\n        $nums_by_digit{$digits}\
    \ = $sum;\n    }\n    foreach my $digit (sort keys %nums_by_digit) {\n       \
    \ my $sum = $nums_by_digit{$digit};\n        my $index = $nums{$digit};\n    \
    \    my $num = $nums{$digit};\n        my $new_num = $sum * 10 + $index;\n   \
    \     $nums{$digit} = $new_num;\n    }\n    return \\%nums;\n}", "    my $sum\
    \ = 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum\
    \ += $num;\n        push(@nums_sorted, $num) if $sum == $num;\n    }\n    return\
    \ @nums_sorted;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num}\
    \ = $num->digits;\n    }\n    foreach my $num (sort { $sums{$a} <=> $sums{$b}\
    \ } keys %sums) {\n        my $sum = $sums{$num};\n        my $index = $num->index;\n\
    \        splice(@$nums, $index, 0, $num);\n        splice(@$nums, $index, 1, $num);\n\
    \    }\n    return @$nums;\n}", "    my %sums;\n    my $sum;\n    foreach my $num\
    \ (@$nums) {\n        $sum = $num->{sum};\n        $sums->{$sum}++;\n    }\n \
    \   foreach my $sum (sort keys %sums) {\n        my $num = $sums->{$sum};\n  \
    \      my $index = 0;\n        foreach my $num (@$nums) {\n            $index++;\n\
    \            if ($num->{sum} eq $sum) {\n                my $tmp = $num;\n   \
    \             $num = $nums->[$index];\n                $nums->[$index] = $tmp;\n\
    \            }\n        }\n    }\n    return @$nums;\n}", "    my %nums_by_digit;\n\
    \    foreach my $num (@$nums) {\n        my $digits = $num / 10;\n        $nums_by_digit{$digits}\
    \ = $num;\n    }\n    foreach my $digit (sort keys %nums_by_digit) {\n       \
    \ my $num = $nums_by_digit{$digit};\n        push @$nums, $num;\n    }\n    return\
    \ @$nums;\n}", "    my $sum = 0;\n    my @nums_sorted = ();\n    foreach my $num\
    \ (@$nums) {\n        $sum += $num;\n        push @nums_sorted, $num if $sum ==\
    \ $num;\n    }\n    return @nums_sorted;\n}", "    my %nums_by_digit;\n    foreach\
    \ my $num (@$nums) {\n        my $digits = $num / 10;\n        my $sum = $num\
    \ % 10;\n        $nums_by_digit{$digits} = $sum;\n    }\n    foreach my $key (sort\
    \ { $nums_by_digit{$a} <=> $nums_by_digit{$b} } keys %nums_by_digit) {\n     \
    \   my $sum = $nums_by_digit{$key};\n        my $index = $key - 1;\n        my\
    \ $num = $nums[$index];\n        $nums[$index] = $num;\n        $nums[$index]\
    \ += $sum;\n    }\n    return @$nums;\n}", "    my $sum = 0;\n    my @nums_sorted\
    \ = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my $sum = 0;\n\
    \    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        push (@nums_sorted, $num) if $sum == $num;\n    }\n    return @nums_sorted;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n\
    \        foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit\
    \ * $digit;\n        }\n    }\n    foreach my $num (sort { $sums{$b} <=> $sums{$a}\
    \ } keys %sums) {\n        my $index = $num;\n        foreach my $digit (split(//,\
    \ $num)) {\n            $index *= 10;\n            $index += $digit;\n       \
    \ }\n        push, $index;\n    }\n    return;\n}", "    my %nums_sum;\n    foreach\
    \ my $num (@$nums) {\n        $nums_sum{$num} = $nums_sum{$num} + $num;\n    }\n\
    \    foreach my $num (sort { $nums_sum{$a} <=> $nums_sum{$b} } keys %nums_sum)\
    \ {\n        push(@$nums, $num);\n    }\n    return $nums;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my\
    \ $digit (split(//, $num)) {\n            $sums{$num} += $digit * $digit;\n  \
    \      }\n    }\n    foreach my $num (keys %sums) {\n        my $sorted = $nums{$num};\n\
    \        foreach my $i (sort {$sums{$a} <=> $sums{$b}} keys %$nums) {\n      \
    \      next if $i == $num;\n            $sorted = $i if $sorted > $i;\n      \
    \  }\n        $nums{$num} = $sorted;\n    }\n    return @$nums;\n}", "    my %nums_sum;\n\
    \    foreach my $num (@$nums) {\n        $nums_sum{$num} = $nums_sum{$num} + $num;\n\
    \    }\n    foreach my $num (sort {$nums_sum{$b} <=> $nums_sum{$a}} keys %nums_sum)\
    \ {\n        push, $num;\n    }\n    return @nums;\n}", "    my $sum = 0;\n  \
    \  my @nums_sorted = ();\n    my $index = 0;\n    foreach my $num (@$nums) {\n\
    \        $sum += $num;\n        $nums_sorted[$index++] = $num;\n    }\n    foreach\
    \ my $num (@nums_sorted) {\n        $num->[0] = $sum - $num->[0];\n    }\n   \
    \ return @nums_sorted;\n}", "    my $sum = 0;\n    my @nums_sorted = ();\n   \
    \ foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my $sum = 0;\n\
    \    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        push @nums_sorted, $num if $sum == $num;\n    }\n    return @nums_sorted;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n\
    \        foreach my $digit (split(//, $num)) {\n            $sums{$num} += $digit\
    \ * $digit;\n        }\n    }\n    foreach my $num (sort { $sums{$b} <=> $sums{$a}\
    \ } keys %sums) {\n        my $index = $num;\n        foreach my $digit (split(//,\
    \ $num)) {\n            $index -= $digit * $digit;\n        }\n        push @$nums,\
    \ $index;\n    }\n    return @$nums;\n}", "    my %nums_by_digit;\n    foreach\
    \ my $num (@$nums) {\n        my $digits = $num / 10;\n        $nums_by_digit{$digits}\
    \ = $num;\n    }\n    my @sorted_nums = ();\n    foreach my $num (sort { $nums_by_digit{$a}\
    \ <=> $nums_by_digit{$b} } keys %nums_by_digit) {\n        push(@sorted_nums,\
    \ $nums_by_digit{$num});\n    }\n    return @sorted_nums;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum} if $num->{sum};\n\
    \    }\n    foreach my $num (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n\
    \        my $index = $num;\n        $index = $nums->[$index] if $sums{$num} >\
    \ $sums{$nums->[$index]};\n        push @$nums, $nums->[$index];\n    }\n    return\
    \ $nums;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num}\
    \ = 0;\n        foreach my $digit (split(//, $num)) {\n            $sums{$num}\
    \ += $digit * $digit;\n        }\n    }\n    foreach my $num (sort { $sums{$b}\
    \ <=> $sums{$a} } keys %sums) {\n        my $index = $num;\n        foreach my\
    \ $digit (split(//, $num)) {\n            $index *= 10;\n            $index +=\
    \ $digit;\n        }\n        push, $index;\n    }\n    return @nums;\n}", " \
    \   my $sum = 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n\
    \        $sum += $num;\n        push (@nums_sorted, $num) if $sum == $num;\n \
    \   }\n    return @nums_sorted;\n}", "    my %sums;\n    foreach my $num (@$nums)\
    \ {\n        $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n\
    \            $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach my\
    \ $num (sort {$sums{$b} <=> $sums{$a}} keys %sums) {\n        my $sum = $sums{$num};\n\
    \        foreach my $i (0 .. $#{$nums}) {\n            next if $sum == $sums{$nums}[$i];\n\
    \            last if $sum > $sums{$nums}[$i];\n            $nums[$i] = $nums[$i];\n\
    \        }\n    }\n    return @$nums;\n}", "    my %sums;\n    foreach my $num\
    \ (@$nums) {\n        $sums{$num} = $num->{sum};\n    }\n    foreach my $num (sort\
    \ { $sums{$b} <=> $sums{$a} } keys %sums) {\n        my $index = $num;\n     \
    \   foreach my $num (@$nums) {\n            if ($num->{sum} eq $sums{$index})\
    \ {\n                $index = $num;\n            }\n        }\n        my $temp\
    \ = @$nums;\n        @$nums = @$nums[0..$index-1];\n        @$nums = @$temp;\n\
    \    }\n}", "    my %nums_by_digit;\n    foreach my $num (@$nums) {\n        $nums_by_digit{$num}++;\n\
    \    }\n    my @sorted_nums = ();\n    foreach my $num (keys %nums_by_digit) {\n\
    \        my $num_with_digit = $num + 0;\n        my $num_with_digit_in_sorted_nums\
    \ = $num_with_digit + 0;\n        my $sorted_num = $num_with_digit_in_sorted_nums\
    \ + 0;\n        push @sorted_nums, $sorted_num;\n    }\n    return @sorted_nums;\n\
    }", "    my %nums_sum;\n    foreach my $num (@$nums) {\n        $nums_sum{$num}\
    \ = $num->{sum}\n    }\n    foreach my $num (sort { $nums_sum{$a} <=> $nums_sum{$b}\
    \ } keys %nums_sum) {\n        my $index = $nums_sum{$num};\n        $nums[$index]\
    \ = $num;\n    }\n    return @$nums;\n}", "    my $sum = 0;\n    my @nums_sorted\
    \ = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n        push (@nums_sorted,\
    \ $num) if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my %nums_sum;\n\
    \    foreach my $num (@$nums) {\n        $nums_sum{$num} = $nums_sum{$num} + $num;\n\
    \    }\n    foreach my $num (sort { $nums_sum{$b} <=> $nums_sum{$a} } keys %nums_sum)\
    \ {\n        push, $num;\n    }\n    return @nums;\n}", "    my $sum = 0;\n  \
    \  my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        push (@nums_sorted, $num) if $sum == $num;\n    }\n    return @nums_sorted;\n\
    }", "    my %nums_sum;\n    foreach my $num (@$nums) {\n        $nums_sum{$num}\
    \ = $num->{sum};\n    }\n    foreach my $num (sort { $nums_sum{$a} <=> $nums_sum{$b}\
    \ } keys %nums_sum) {\n        my $index = $nums_sum{$num};\n        my $num =\
    \ $nums[$index];\n        $nums[$index] = $num;\n    }\n    return @$nums;\n}",
  "    my %nums_sum;\n    foreach my $num (@$nums) {\n        $nums_sum{$num} = $num->{sum};\n\
    \    }\n    foreach my $num (sort { $nums_sum{$a} <=> $nums_sum{$b} } keys %nums_sum)\
    \ {\n        my $index = $nums_sum{$num};\n        $num->{index} = $index;\n \
    \   }\n}", "    my $sum = 0;\n    my @nums_sorted = ();\n    my $index = 0;\n\
    \    foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $index;\n        $index++;\n    }\n    return @nums_sorted;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\n\
    \    }\n    foreach my $num (sort { $sums{$a} <=> $sums{$b} } keys %sums) {\n\
    \        my $index = $num;\n        foreach my $num (@$nums) {\n            next\
    \ if $num->{sum} eq $sums{$index};\n            $index = $num;\n        }\n  \
    \      push @$nums, $index;\n    }\n    return @$nums;\n}", "    my $sum = 0;\n\
    \    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        push (@nums_sorted, $num) if $sum == $num;\n    }\n    return @nums_sorted;\n\
    }", "    my %nums_by_digit = ();\n    foreach my $num (@$nums) {\n        my $digits\
    \ = $num / 10;\n        my $sum = $num % 10;\n        $nums_by_digit{$digits}\
    \ = $sum;\n    }\n    my @sorted_nums = ();\n    foreach my $digit (sort keys\
    \ %nums_by_digit) {\n        push @sorted_nums, $nums_by_digit{$digit};\n    }\n\
    \    return @sorted_nums;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n\
    \        $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n   \
    \         $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach my $num\
    \ (@$nums) {\n        $num->[0] = $sums{$num};\n    }\n    foreach my $num (@$nums)\
    \ {\n        foreach my $digit (split(//, $num->[0])) {\n            $num->[0]\
    \ -= $digit * $digit;\n        }\n    }\n    return @$nums;\n}", "    my $sum\
    \ = 0;\n    my @nums_sorted = ();\n    foreach my $num (@$nums) {\n        $sum\
    \ += $num;\n        push @nums_sorted, $num if $sum == $num;\n    }\n    return\
    \ @nums_sorted;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num}\
    \ = $num->{sum}\n    }\n    foreach my $num (sort { $sums{$a} <=> $sums{$b} }\
    \ keys %sums) {\n        my $index = $num;\n        foreach my $num (@$nums) {\n\
    \            if ($num->{sum} eq $sums{$index}) {\n                $index = $num;\n\
    \            }\n        }\n        my $tmp = @$nums;\n        @$nums = @$nums[0..$index-1];\n\
    \        @$nums[0..$index-1] = $tmp;\n    }\n}", "    my $sum = 0;\n    my @nums_sorted\
    \ = ();\n    foreach my $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted,\
    \ $num if $sum == $num;\n    }\n    return @nums_sorted;\n}", "    my %sums;\n\
    \    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach my\
    \ $digit (split(//, $num)) {\n            $sums{$num} += $digit * $digit;\n  \
    \      }\n    }\n    foreach my $num (@$nums) {\n        $num->[0] = $sums{$num};\n\
    \    }\n    foreach my $num (@$nums) {\n        $num->[0] <=> $num->[1];\n   \
    \ }\n}", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} =\
    \ 0;\n        foreach my $digit (split(//, $num)) {\n            $sums{$num} +=\
    \ $digit * $digit;\n        }\n    }\n    foreach my $num (@$nums) {\n       \
    \ $num->[0] = $sums{$num};\n    }\n    foreach my $num (@$nums) {\n        my\
    \ $sum = 0;\n        foreach my $digit (split(//, $num->[0])) {\n            $sum\
    \ += $digit * $digit;\n        }\n        $num->[0] = $sum;\n    }\n    return\
    \ @$nums;\n}", "    my %nums_by_digit;\n    foreach my $num (@$nums) {\n     \
    \   $nums_by_digit{$num}++;\n    }\n    my @sorted_nums = ();\n    foreach my\
    \ $num (keys %nums_by_digit) {\n        my $num_with_digit = $num;\n        $num_with_digit\
    \ .= $nums_by_digit{$num};\n        push @sorted_nums, $num_with_digit;\n    }\n\
    \    return @sorted_nums;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n\
    \        $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n   \
    \         $sums{$num} += $digit * $digit % 10;\n        }\n    }\n    foreach\
    \ my $num (keys %sums) {\n        my $sum = $sums{$num};\n        foreach my $i\
    \ (sort {$sum <=> $sums{$b}} keys %sums) {\n            last if $sums{$i} != $sum;\n\
    \            $sums{$i} = $sum;\n        }\n    }\n    return @$nums;\n}", "  \
    \  my $sum = 0;\n    my @nums_sorted = ();\n    my $index = 0;\n    foreach my\
    \ $num (@$nums) {\n        $sum += $num;\n        push @nums_sorted, $num if $sum\
    \ == $index;\n        $index++;\n    }\n    return @nums_sorted;\n}", "    my\
    \ %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = 0;\n        foreach\
    \ my $digit (split(//, $num)) {\n            $sums{$num} += $digit * $digit;\n\
    \        }\n    }\n    foreach my $num (keys %sums) {\n        my $sum = $sums{$num};\n\
    \        foreach my $i (sort {$sum <=> $sums{$b}} keys %$sums) {\n           \
    \ my $a = $sums{$i};\n            my $b = $sums{$num};\n            next if $a\
    \ < $b;\n            last if $a > $b;\n            return $i;\n        }\n   \
    \ }\n    return undef;\n}", "    my %sums;\n    foreach my $num (@$nums) {\n \
    \       $sums{$num} = 0;\n        foreach my $digit (split(//, $num)) {\n    \
    \        $sums{$num} += $digit * $digit;\n        }\n    }\n    foreach my $num\
    \ (sort { $sums{$b} <=> $sums{$a} } keys %sums) {\n        my $index = $num;\n\
    \        foreach my $digit (split(//, $num)) {\n            $index -= $digit *\
    \ $digit;\n        }\n        push @$nums, $index;\n    }\n    return @$nums;\n\
    }", "    my %sums;\n    foreach my $num (@$nums) {\n        $sums{$num} = $num->{sum}\
    \ if $num->{sum};\n    }\n    foreach my $num (sort {$sums{$b} <=> $sums{$a}}\
    \ keys %sums) {\n        my $i = $num;\n        my $sum = $sums{$num};\n     \
    \   foreach my $num (@$nums) {\n            next if $num->{sum} != $sum;\n   \
    \         $num->{index} = $i;\n            $i = $i + 1;\n        }\n    }\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

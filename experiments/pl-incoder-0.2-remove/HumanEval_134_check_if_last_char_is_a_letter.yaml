name: HumanEval_134_check_if_last_char_is_a_letter
language: pl
prompt: "# Create a function that returns True if the last character\n# of a given\
  \ string is an alphabetical character and is not\n# a part of a word, and False\
  \ otherwise.\n# Note: \"word\" is a group of characters separated by space.\n# Examples:\n\
  sub check_if_last_char_is_a_letter {\n    my($txt) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_if_last_char_is_a_letter;\n\
  \        if(eq_deeply($candidate->(\"apple\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"apple pi e\"),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  eeeee\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->(\"A\"),1)) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"Pumpkin pie \"),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  Pumpkin pie 1\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"eeeee e \"),\"\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  apple pie\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"apple pi e \"),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my($last_char) = substr($txt, length($txt)-1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char =\
    \ substr($txt, -1, 1);\n    my $is_letter = is_alpha($last_char);\n    my $is_word\
    \ = ($txt =~ /\\w$/);\n    return $is_letter && !$is_word;\n}", "    my $last_char\
    \ = substr($txt, length($txt)-1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = ($txt =~ /\\w$/);\n    return $is_letter && !$is_word;\n}",
  "    return $txt =~ /^[^A-Za-z]*$/ && $txt !~ /[^A-Za-z]+$/;\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, -1, 1);\n\
    \    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "   \
    \ my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my $last_char = $txt->[$txt->length - 1];\n    my $is_letter = lc($last_char)\
    \ =~ /[a-z]/i;\n    my $is_word = $last_char =~ /[a-z]/i && !$is_letter;\n   \
    \ return $is_letter && !$is_word;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ -1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt)-1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n\
    \    return $is_letter;\n}", "    my $last_char = substr($txt, length($txt)-1,\
    \ 1);\n    return $last_char !~ /\\w/;\n}", "    my $last_char = substr($txt,\
    \ length($txt) - 1, 1);\n    return $last_char =~ /[a-zA-Z]/ && ! /\\w$/;\n}",
  "    return $txt =~ /([a-zA-Z])\\z/;\n}", "    return $txt =~ /^[a-z]+$/i && ! $txt\
    \ =~ /[a-z]+\\W+$/i;\n}", "    my $last_char = substr($txt, length($txt)-1, 1);\n\
    \    return $last_char =~ /[A-Za-z]/ && ! $last_char =~ /\\w/;\n}", "    my $last_char\
    \ = $txt->[-1];\n    my $is_letter = lc $last_char =~ /[a-z]/i;\n    return $is_letter;\n\
    }", "    my $last_char = $txt->[-1];\n    return $last_char =~ /[A-Za-z]/ && !\
    \ $last_char =~ /\\w/;\n}", "    my($last_char) = substr($txt, length($txt) -\
    \ 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char =\
    \ substr($txt, length($txt)-1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = ($txt =~ /\\w/);\n    return ($is_letter && !$is_word);\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char =\
    \ substr($txt, -1, 1);\n    my $is_letter = is_alpha($last_char);\n    my $is_word\
    \ = !$is_letter;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my $last_char = $txt->[-1];\n    return $last_char =~\
    \ /[a-zA-Z]/ && ! $last_char =~ /\\w/;\n}", "    my $last_char = substr($txt,\
    \ -1, 1);\n    my $is_letter = is_alpha($last_char);\n    my $is_word = ($txt\
    \ =~ /\\b(\\w+)\\b/);\n    return $is_letter && !$is_word;\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    return $txt =~ /^[a-z]$/i && ! $txt =~ /\\w$/i;\n}", "    my $last_char\
    \ = $txt->[-1];\n    return $last_char =~ /[a-zA-Z]/ and not $last_char =~ /\\\
    w/;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt)-1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n\
    \    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) -\
    \ 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    return $txt =~ /\\w/ and $txt !~ /\\w$/;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n\
    \    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}", " \
    \   my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) =\
    \ !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char = substr($txt,\
    \ length($txt)-1, 1);\n    return $last_char !~ /\\w/;\n}", "    my $last_char\
    \ = substr($txt, length($txt)-1, 1);\n    return $last_char =~ /[a-zA-Z]/ && !\
    \ /\\w$/;\n}", "    my $last_char = substr($txt, length($txt)-1, 1);\n    return\
    \ $last_char =~ /[a-zA-Z]/ && ! is_part_of_word($txt);\n}", "    my($last_char)\
    \ = substr($txt, -1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my $last_char = substr($txt, length($txt) - 1, 1);\n \
    \   my $is_letter = is_alpha($last_char);\n    my $is_word = ($txt =~ /\\w$/);\n\
    \    return $is_letter && !$is_word;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    return $txt =~ /^[a-zA-Z]$/;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n\
    \    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "   \
    \ my $last_char = substr($txt, length($txt)-1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = ($txt =~ /\\w/);\n    return ($is_letter && !$is_word);\n}",
  "    my($last_char) = substr($txt, -1, 1);\n    my($is_letter) = !($last_char =~\
    \ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, -1,\
    \ 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}",
  "    my($last_char) = substr($txt, length($txt)-1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char = substr($txt, length($txt)\
    \ - 1, 1);\n    return $last_char =~ /^[A-Za-z]$/;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    return $txt =~ /^[A-Za-z]$/;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    return $txt =~ /^[a-zA-Z]$/;\n}", "    my $last_char =\
    \ substr($txt, length($txt)-1, 1);\n    return $last_char !~ /\\w/;\n}", "   \
    \ return $txt =~ /[^A-Za-z]$/;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt)-1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n\
    \    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) -\
    \ 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char =\
    \ substr($txt, length($txt)-1, 1);\n    return $last_char =~ /[a-zA-Z]/ && ! $last_char\
    \ =~ /\\w/;\n}", "    my $last_char = substr($txt, length($txt)-1, 1);\n    return\
    \ $last_char !~ /\\w/;\n}", "    my $last_char = $txt->[-1];\n    return $last_char\
    \ =~ /\\w/;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n  \
    \  my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "   \
    \ my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char = substr($txt, length($txt)-1,\
    \ 1);\n    return $last_char =~ /[a-zA-Z]/ && !$last_char =~ /\\w/;\n}", "   \
    \ my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt)-1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n\
    \    return $is_letter;\n}", "    return $txt =~ /^[a-z]$/i && ! $txt =~ /[a-z]+/i;\n\
    }", "    my $last_char = substr($txt, length($txt) - 1, 1);\n    my $is_letter\
    \ = is_alpha($last_char);\n    my $is_word = ($txt =~ /\\w/);\n    return $is_letter\
    \ && !$is_word;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n\
    \    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}", " \
    \   return $txt =~ /^[^A-Za-z]$/;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char =\
    \ substr($txt, length($txt)-1, 1);\n    return $last_char !~ /\\w/;\n}", "   \
    \ my($last_char) = substr($txt, length($txt)-1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n \
    \   my $is_letter = lc($last_char) =~ /[a-z]/i;\n    return !$is_letter;\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)-1,\
    \ 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}",
  "    my $last_char = substr($txt, -1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = $is_letter && $last_char !~ /\\w/;\n    return $is_word;\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    return $txt =~ /^[a-z]$/i\
    \ && !$txt =~ /[a-z]+/i;\n}", "    my($last_char) = substr($txt, length($txt)-1,\
    \ 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}",
  "    my $last_char = substr($txt, length($txt)-1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = $is_letter && !is_word($last_char);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt)-1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n\
    \    return $is_letter;\n}", "    my $last_char = substr($txt, length($txt)-1,\
    \ 1);\n    return $last_char =~ /[A-Za-z]/;\n}", "    my($last_char) = substr($txt,\
    \ -1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my $last_char = substr($txt, length($txt)-1, 1);\n    my $is_letter =\
    \ is_alpha($last_char);\n    my $is_word = ($txt =~ /\\w/);\n    return $is_letter\
    \ && !$is_word;\n}", "    my($last_char) = substr($txt, -1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, -1, 1);\n\
    \    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}", " \
    \   my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) =\
    \ !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my $last_char = substr($txt, length($txt)-1, 1);\n   \
    \ my $is_letter = is_alpha($last_char);\n    my $is_word = ($txt =~ /^[a-zA-Z]+$/);\n\
    \    return $is_letter && !$is_word;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n\
    \    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}", " \
    \   my $last_char = substr($txt, length($txt)-1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = ($txt =~ /\\b$last_char\\b/);\n    return $is_letter && !$is_word;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt)-1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    return $txt =~ /^[^A-Za-z]$/;\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my $last_char = substr($txt, -1, 1);\n\
    \    return $last_char !~ /\\w/;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my $last_char = substr($txt, length($txt)-1, 1);\n    my $is_letter =\
    \ is_alpha($last_char);\n    my $is_word = ($txt =~ /\\b(\\w+)\\b/);\n    return\
    \ $is_letter && !$is_word;\n}", "    return $txt =~ /^[a-zA-Z]$/;\n}", "    my\
    \ $last_char = substr($txt, length($txt)-1, 1);\n    return $last_char =~ /[a-z]/i\
    \ && !$last_char =~ /\\w/i;\n}", "    my $last_char = $txt->[-1];\n    return\
    \ $last_char =~ /\\w/;\n}", "    my($last_char) = substr($txt, length($txt) -\
    \ 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char =\
    \ substr($txt, length($txt)-1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = !$is_letter;\n    return $is_letter;\n}", "    my $last_char\
    \ = substr($txt, length($txt) - 1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = ($txt =~ /\\w$/);\n    return $is_letter && !$is_word;\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, -1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my $last_char = substr($txt, -1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = ($txt =~ /\\w$/);\n    return $is_letter && !$is_word;\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, -1,\
    \ 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my $last_char = substr($txt, length($txt) - 1, 1);\n    return $last_char\
    \ =~ /\\w/;\n}", "    return $txt =~ /^[a-zA-Z]$/;\n}", "    my($last_char) =\
    \ substr($txt, length($txt)-1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n\
    \    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) -\
    \ 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$is_word{$last_char};\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt)-1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char =\
    \ substr($txt, length($txt)-1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = ($txt =~ /\\w/);\n    return $is_letter && !$is_word;\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char = substr($txt, length($txt)-1,\
    \ 1);\n    return $last_char !~ /\\w/;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my $last_char = substr($txt, length($txt)-1, 1);\n   \
    \ my $is_letter = is_alpha($last_char);\n    my $is_word = ($txt =~ /\\w$/);\n\
    \    return ($is_letter && !$is_word);\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my $last_char = $txt->[-1];\n    my $is_letter = $last_char\
    \ =~ /[A-Za-z]/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my $last_char = substr($txt, length($txt) - 1, 1);\n \
    \   return $last_char =~ /[A-Za-z]/;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    return $txt =~ /^[a-z]$/i && ! $txt =~ /[a-z][a-z]/i;\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my $last_char = substr($txt, length($txt)-1,\
    \ 1);\n    my $is_letter = lc($last_char) =~ /[a-z]/i;\n    my $is_word = lc($last_char)\
    \ =~ /[a-z0-9]/i;\n    return $is_letter && !$is_word;\n}", "    my($last_char)\
    \ = substr($txt, length($txt)-1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    return $txt =~ /^[^A-Za-z]+$/;\n}", "    my($last_char) = substr($txt,\
    \ length($txt)-1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my $last_char = substr($txt, length($txt)-1, 1);\n   \
    \ return $last_char =~ /[A-Za-z]/ && !$txt =~ /[A-Za-z]/ ? 1 : 0;\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my $last_char = substr($txt, length($txt)\
    \ - 1, 1);\n    my $is_letter = is_alpha($last_char);\n    my $is_word = ($txt\
    \ =~ /\\w/);\n    return $is_letter && !$is_word;\n}", "    return $txt =~ /^[a-z]$/i\
    \ && ! $txt =~ /\\w$/i;\n}", "    my $last_char = substr($txt, length($txt) -\
    \ 1, 1);\n    return $last_char =~ /^[A-Za-z]$/;\n}", "    return $txt =~ /\\\
    w/ and $txt !~ /\\w\\W/ and $txt !~ /\\w\\W\\w/;\n}", "    my $last_char = substr($txt,\
    \ length($txt)-1, 1);\n    return $last_char !~ /\\w/;\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, -1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, -1, 1);\n    my($is_letter) = !$is_word{$last_char};\n\
    \    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) -\
    \ 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my $last_char = substr($txt, length($txt)-1, 1);\n    return $last_char\
    \ =~ /[a-zA-Z]/ && ! is_word($txt);\n}", "    my($last_char) = substr($txt, length($txt)-1,\
    \ 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}",
  "    return $txt =~ /^[a-zA-Z]$/;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    return $txt =~ /^[^A-Za-z]$/;\n}", "    my $last_char = $txt->[-1];\n\
    \    my $is_letter = lc($last_char) =~ /[a-z]/i;\n    my $is_word = $last_char\
    \ =~ /[a-z]+/i;\n    return $is_letter && !$is_word;\n}", "    my($last_char)\
    \ = substr($txt, length($txt)-1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char =\
    \ $txt->[-1];\n    return $last_char =~ /[a-zA-Z]/ && ! $last_char =~ /\\w/;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char =\
    \ $txt->[-1];\n    my $is_letter = lc($last_char) =~ /[a-z]/i;\n    my $is_word\
    \ = !$is_letter;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n\
    \    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}", " \
    \   my $last_char = substr($txt, length($txt) - 1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = ($txt =~ /\\w/);\n    return $is_letter && !$is_word;\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    return $txt =~ /^[^A-Za-z]$/;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"
